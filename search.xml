<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1.数据库介绍和MySQL安装</title>
      <link href="/2020/04/15/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D%E5%92%8CMySQL%E5%AE%89%E8%A3%85/"/>
      <url>/2020/04/15/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D%E5%92%8CMySQL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="数据库介绍和MySQL安装"><a href="#数据库介绍和MySQL安装" class="headerlink" title="数据库介绍和MySQL安装"></a>数据库介绍和MySQL安装</h1><h2 id="第1章-数据库管理系统（DBMS）"><a href="#第1章-数据库管理系统（DBMS）" class="headerlink" title="第1章 数据库管理系统（DBMS）"></a>第1章 数据库管理系统（DBMS）</h2><h3 id="1-1-关系型数据库（RDBMS）"><a href="#1-1-关系型数据库（RDBMS）" class="headerlink" title="1.1 关系型数据库（RDBMS）"></a>1.1 关系型数据库（RDBMS）</h3><p>关系型数据库最典型的数据结构是表，由二维表及其之间的联系所组成的一个数据组织</p><p>代表：<code>ORACLE</code> 、<code>MySQL</code> 、<code>MSSQL</code> 、<code>PG</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/01.png"  alt=""></p><p><strong>优点：</strong></p><p>1、易于维护：都是使用表结构，格式一致；</p><p>2、使用方便：SQL语言通用，可用于复杂查询；</p><p>3、复杂操作：支持SQL，可用于一个表以及多个表之间非常复杂的查询。</p><p>缺点：</p><p>1、读写性能比较差，尤其是海量数据的高效率读写；</p><p>2、固定的表结构，灵活度稍欠；</p><p>3、高并发读写需求，传统关系型数据库来说，硬盘I/O是一个很大的瓶颈。</p><h3 id="1-2-非关系型数据库（NoSQL）"><a href="#1-2-非关系型数据库（NoSQL）" class="headerlink" title="1.2 非关系型数据库（NoSQL）"></a>1.2 非关系型数据库（NoSQL）</h3><p>非关系型数据库严格上不是一种数据库，应该是一种数据结构化存储方法的集合，可以是文档或者键值对等。五结构化 KV(Redis,memcache,Tair)  、  json(MongoDB,ES)</p><p>代表：<code>Redis</code> 、 <code>MongoDB</code>  、 <code>ES</code>  、<code>HBASE</code> 、<code>Hadoop</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/02.png"  alt=""></p><p><strong>优点：</strong></p><p>1、格式灵活：存储数据的格式可以是key,value形式、文档形式、图片形式等等，文档形式、图片形式等等，使用灵活，应用场景广泛，而关系型数据库则只支持基础类型。</p><p>2、速度快：nosql可以使用硬盘或者随机存储器作为载体，而关系型数据库只能使用硬盘；</p><p>3、高扩展性；</p><p>4、成本低：nosql数据库部署简单，基本都是开源软件。</p><p>缺点：</p><p>1、不提供sql支持，学习和使用成本较高；</p><p>2、无事务处理；</p><p>3、数据结构相对复杂，复杂查询方面稍欠。</p><h3 id="1-3-非关系型数据库的分类和比较："><a href="#1-3-非关系型数据库的分类和比较：" class="headerlink" title="1.3 非关系型数据库的分类和比较："></a>1.3 非关系型数据库的分类和比较：</h3><p>1、文档型</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/03.png"  alt=""></p><p>2、key-value型</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/04.png"  alt=""></p><p>3、列式数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/05.png"  alt=""></p><p>4、图形数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/06.png"  alt=""></p><h2 id="第2章-数据库架构演变"><a href="#第2章-数据库架构演变" class="headerlink" title="第2章 数据库架构演变"></a>第2章 数据库架构演变</h2><p><strong>数据库架构演变:</strong></p><p>第一代: RDBMS </p><p>第二代: RDBMS+NoSQL +分布式</p><p>第三代: NewSQL(分布式)</p><pre><code>AliSQL(网站) + OB(蚂蚁金服)+ openstack+ Docker + K8sRDS + PolarDB </code></pre><h2 id="第3章-MySQL简介及产品线"><a href="#第3章-MySQL简介及产品线" class="headerlink" title="第3章 MySQL简介及产品线"></a>第3章 MySQL简介及产品线</h2><h3 id="3-1-MySQL行业主流版本"><a href="#3-1-MySQL行业主流版本" class="headerlink" title="3.1 MySQL行业主流版本"></a>3.1 MySQL行业主流版本</h3><p>5.6  : 5.6.34,5.6.36,5.6.38,5.6.40</p><p>5.7  : 5.7.18,5.7.20,5.7.21,5.7.22,5.7.24 ,5.7.26<br>5.6.38,5.7.20 ====&gt; 2017-09-13</p><p>8.0  ：(现在开始研究新特性)<br>8.0.11 ,8.0.12 …..8.0.17</p><h3 id="3-2-企业版本选择-MySQL分支版本-笔试题"><a href="#3-2-企业版本选择-MySQL分支版本-笔试题" class="headerlink" title="3.2 企业版本选择(MySQL分支版本),笔试题"></a>3.2 企业版本选择(MySQL分支版本),笔试题</h3><p>Oracle:<br>      MySQL官方版</p><p>红帽  :<br>      MariaDB: 5.5 ,10.X</p><p>Percona:<br>      PerconaDB </p><h3 id="3-3-版本选择建议要上新环境"><a href="#3-3-版本选择建议要上新环境" class="headerlink" title="3.3 版本选择建议要上新环境"></a>3.3 版本选择建议要上新环境</h3><ol><li>一般选择官方主流版本:5.6,5.7 </li><li>GA（稳定发布版）</li><li>6-12月的产品版本</li></ol><p>面试题:</p><p>你们公司用什么版本数据库? 具体什么小版本号?</p><p>5.6.20 5.6.34 5.6.36  5.6.38  5.6.40<br>5.7.18  5.7.20  5.7.22</p><h2 id="第4章-MySQL二进制安装"><a href="#第4章-MySQL二进制安装" class="headerlink" title="第4章 MySQL二进制安装"></a>第4章 MySQL二进制安装</h2><h3 id="4-1-下载并上传解压MySQL软件"><a href="#4-1-下载并上传解压MySQL软件" class="headerlink" title="4.1 下载并上传解压MySQL软件"></a>4.1 下载并上传解压MySQL软件</h3><p>官网下载地址     <a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">tar xf mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz  <span class="comment">#解压软件</span></span><br><span class="line">mv mysql-5.7.26-linux-glibc2.12-x86_64 mysql</span><br></pre></td></tr></table></figure><h3 id="4-2-修改环境变量"><a href="#4-2-修改环境变量" class="headerlink" title="4.2 修改环境变量"></a>4.2 修改环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/mysql/bin:<span class="variable">$PATH</span>   <span class="comment">#添加到最后一行</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">mysql -V <span class="comment">#检验环境变量生效</span></span><br></pre></td></tr></table></figure><h3 id="4-3-创建用户"><a href="#4-3-创建用户" class="headerlink" title="4.3 创建用户"></a>4.3 创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove mariadb-libs -y</span><br><span class="line">useradd -s /sbin/nologin mysql</span><br></pre></td></tr></table></figure><h3 id="4-4-创建相关目录并授权"><a href="#4-4-创建相关目录并授权" class="headerlink" title="4.4 创建相关目录并授权"></a>4.4 创建相关目录并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/mysql/data   <span class="comment">#存放数据</span></span><br><span class="line">mkdir -p /data/binlog       <span class="comment">#存放二进制日志</span></span><br><span class="line">chown -R mysql.mysql /data /usr/<span class="built_in">local</span>/mysql</span><br></pre></td></tr></table></figure><h3 id="4-5-数据初始化（建库）"><a href="#4-5-数据初始化（建库）" class="headerlink" title="4.5 数据初始化（建库）"></a>4.5 数据初始化（建库）</h3><p>（1）5.7+版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libaio-devel</span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><p>说明：</p><p>(1) –initialize</p><pre><code>密码长度,至少12位.密码复杂度4种 密码过期时间180天 自动生成一个临时密码</code></pre><p>(2) –initialize-insecure</p><pre><code>没有限制</code></pre><p>（2）5.6+版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/mysql/scripts/mysql_install_db  --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><h3 id="4-6-准备启动脚本和配置文件"><a href="#4-6-准备启动脚本和配置文件" class="headerlink" title="4.6 准备启动脚本和配置文件"></a>4.6 准备启动脚本和配置文件</h3><h4 id="0-配置文件"><a href="#0-配置文件" class="headerlink" title="(0) 配置文件"></a>(0) 配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data</span><br><span class="line">socket&#x3D;&#x2F;tmp&#x2F;mysql.sock</span><br><span class="line">server_id&#x3D;51</span><br><span class="line">port&#x3D;3306</span><br><span class="line">secure-file-priv&#x3D;&#x2F;tmp</span><br><span class="line">autocommit&#x3D;0</span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;binlog&#x2F;mysql-bin</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line">gtid-mode&#x3D;on</span><br><span class="line">enforce-gtid-consistency&#x3D;true</span><br><span class="line">log-slave-updates&#x3D;1</span><br><span class="line">[mysql]</span><br><span class="line">prompt&#x3D;db01 [\\d]&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="1-sys-v-centos6"><a href="#1-sys-v-centos6" class="headerlink" title="(1) sys-v (centos6)"></a>(1) sys-v (centos6)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/support-files</span><br><span class="line">cp mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@db01 ~]<span class="comment"># cat /etc/my.cnf   #配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">server_id=51</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[root@db01 ~]<span class="comment"># service mysqld start  #启动服务</span></span><br></pre></td></tr></table></figure><h4 id="2-使用systemd管理mysql"><a href="#2-使用systemd管理mysql" class="headerlink" title="(2) 使用systemd管理mysql"></a>(2) 使用systemd管理mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># cat /etc/systemd/system/mysqld.service </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mysql/bin/mysqld --defaults-file=/etc/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line"></span><br><span class="line">注意：将原来模式启动mysqld先关闭，然后再用systemd管理。</span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start/stop/restart/status mysqld   #启动服务</span></span><br></pre></td></tr></table></figure><h4 id="如何确实MySQL数据库是否启动-至少两种"><a href="#如何确实MySQL数据库是否启动-至少两种" class="headerlink" title="如何确实MySQL数据库是否启动(至少两种)?"></a>如何确实MySQL数据库是否启动(至少两种)?</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql直接登录</span><br><span class="line">mysqladmin ping</span><br><span class="line">netstat -lntup|grep mysqld</span><br><span class="line">ps -ef|grep mysqld</span><br><span class="line">ss</span><br></pre></td></tr></table></figure><h3 id="4-7-设置管理员初始密码"><a href="#4-7-设置管理员初始密码" class="headerlink" title="4.7 设置管理员初始密码"></a>4.7 设置管理员初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqladmin -uroot -p password 123   #创建初始密码</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin -uroot -p123 password abcd #修改密码</span></span><br><span class="line"></span><br><span class="line">mysql&gt; alter user root@localhost identified by <span class="string">'456'</span>; <span class="comment">#登录到数据库改密码</span></span><br><span class="line">mysql&gt; desc mysql.user;   <span class="comment">#查看列信息</span></span><br><span class="line">mysql&gt; select user,host ,authentication_string from mysql.user; <span class="comment">#查询用户信息</span></span><br><span class="line">mysql&gt; select user,host ,password from mysql.user;  <span class="comment">#（5.6以前的）</span></span><br></pre></td></tr></table></figure><h3 id="4-8-本地管理员密码忘记处理"><a href="#4-8-本地管理员密码忘记处理" class="headerlink" title="4.8 本地管理员密码忘记处理"></a>4.8 本地管理员密码忘记处理</h3><p>(1) 关闭数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>(2) 启动到”安全模式”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqld --skip-grant-tables --skip-networking &amp;</span></span><br></pre></td></tr></table></figure><p>(3) 刷新授权表,改密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; alter user root@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><p>(4) 正常启动数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># pkill mysqld</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><h2 id="第5章-MySQL基础管理"><a href="#第5章-MySQL基础管理" class="headerlink" title="第5章 MySQL基础管理"></a>第5章 MySQL基础管理</h2><h3 id="5-1-用户管理"><a href="#5-1-用户管理" class="headerlink" title="5.1 用户管理"></a>5.1 用户管理</h3><h4 id="5-1-1-用户的定义"><a href="#5-1-1-用户的定义" class="headerlink" title="5.1.1 用户的定义"></a>5.1.1 用户的定义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Linux: 用户名字表示用户,例如oldguo等</span><br><span class="line">MySQL: 用户名@<span class="string">'白名单'</span>,例如:root@<span class="string">'localhost'</span></span><br><span class="line">白名单: 在白名单出现的IP,网段,主机名域名,才能登录数据库</span><br><span class="line">例子:</span><br><span class="line">oldguo@<span class="string">'localhost'</span>  <span class="comment">#本机</span></span><br><span class="line">oldguo@<span class="string">'%'</span>         <span class="comment">#所有主机</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.51'</span>  <span class="comment">#独立IP</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.%'</span>   <span class="comment">#10.0.1.x/24 网段</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.0/255.255.254.0'</span> <span class="comment">#10.0.1.0/255.255.254.0网段</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.5%'</span> <span class="comment">#10.0.1.50-59</span></span><br></pre></td></tr></table></figure><h4 id="5-1-2-用户的作用"><a href="#5-1-2-用户的作用" class="headerlink" title="5.1.2  用户的作用"></a>5.1.2  用户的作用</h4><p>Linux : </p><pre><code>登录系统管理系统对象(文件,目录.....)</code></pre><p>MySQL :</p><pre><code>登录数据库数据库对象(库,表,.....)</code></pre><h4 id="5-1-3-用户的管理命令"><a href="#5-1-3-用户的管理命令" class="headerlink" title="5.1.3 用户的管理命令"></a>5.1.3 用户的管理命令</h4><p>(1) 创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user oldguo@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; create user oldboy@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>(2) 查询用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host,authentication_string from mysql.user;</span><br></pre></td></tr></table></figure><p>(3) 修改用户 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user oldguo@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>(5) 删除用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user oldboy@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; drop user oldguo@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-权限管理"><a href="#5-2-权限管理" class="headerlink" title="5.2 权限管理"></a>5.2 权限管理</h3><h4 id="5-2-1-权限的定义"><a href="#5-2-1-权限的定义" class="headerlink" title="5.2.1 权限的定义"></a>5.2.1 权限的定义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Linux :  R   W   X</span><br><span class="line">MySQL :  </span><br><span class="line">ALL </span><br><span class="line">SELECT,INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE,</span><br><span class="line">REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES,</span><br><span class="line">LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT,</span><br><span class="line">CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, </span><br><span class="line">EVENT, TRIGGER, CREATE TABLESPACE</span><br><span class="line">with grant option</span><br><span class="line"></span><br><span class="line">说明:</span><br><span class="line">8.0新特性加入了role功能</span><br></pre></td></tr></table></figure><h4 id="5-2-2-权限的作用"><a href="#5-2-2-权限的作用" class="headerlink" title="5.2.2 权限的作用"></a>5.2.2 权限的作用</h4><p>权限的作用 : 控制用户,能够对数据库对象做哪些操作.</p><h4 id="5-2-3-授权"><a href="#5-2-3-授权" class="headerlink" title="5.2.3 授权"></a>5.2.3 授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式</span></span><br><span class="line">grant 权限 on 对象 to 用户 identified by <span class="string">'密码'</span>;</span><br><span class="line">grant all on *.* to wordpress@<span class="string">'%'</span> identified by <span class="string">'123'</span>;</span><br><span class="line"></span><br><span class="line">说明: </span><br><span class="line">以上命令只能8.0以前使用.</span><br><span class="line">如果用户不存在,会自动被创建出来,并且能够自动设置密码.</span><br><span class="line">8.0+版本,必须先见用户再授权.修改密码功能取消.</span><br><span class="line">8.0的用户,密码,权限的新特性,自己了解一下.</span><br><span class="line"></span><br><span class="line">*.*                /</span><br><span class="line">wordpress.*        /wordpress/*</span><br><span class="line">wordpress.t1       /wordpress/t1</span><br><span class="line"></span><br><span class="line">例子: </span><br><span class="line">(1) 创建和授权一个管理员用户admin,能够通过10.0.1.%网段管理数据库</span><br><span class="line">mysql&gt; grant all on *.* to admin@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span> with grant option;</span><br><span class="line">(2) 授权一个业务用户oldboy,能够通过10.0.1%网段访问oldguo库下的所有表</span><br><span class="line">mysql&gt; grant select,update,insert,delete on oldguo.* to oldboy@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-4-查询权限"><a href="#5-2-4-查询权限" class="headerlink" title="5.2.4 查询权限"></a>5.2.4 查询权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants <span class="keyword">for</span> oldboy@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> admin@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-5-回收权限"><a href="#5-2-5-回收权限" class="headerlink" title="5.2.5 回收权限"></a>5.2.5 回收权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke grant option on *.* from admin@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17.zabbix监控</title>
      <link href="/2020/04/13/17-zabbix%E7%9B%91%E6%8E%A7/"/>
      <url>/2020/04/13/17-zabbix%E7%9B%91%E6%8E%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="zabbix监控"><a href="#zabbix监控" class="headerlink" title="zabbix监控"></a>zabbix监控</h1><h2 id="第1章-监控知识基本概述"><a href="#第1章-监控知识基本概述" class="headerlink" title="第1章 监控知识基本概述"></a>第1章 监控知识基本概述</h2><h3 id="1-1-为什么要使用监控"><a href="#1-1-为什么要使用监控" class="headerlink" title="1.1 为什么要使用监控"></a>1.1 为什么要使用监控</h3><ol><li>对系统不间断实时监控</li><li>实时反馈系统当前状态</li><li>保证服务可靠性安全性</li><li>保证业务持续稳定运行</li></ol><h3 id="1-2-如何进行监控，比如我们需要监控磁盘的使用率"><a href="#1-2-如何进行监控，比如我们需要监控磁盘的使用率" class="headerlink" title="1.2 如何进行监控，比如我们需要监控磁盘的使用率"></a>1.2 如何进行监控，比如我们需要监控磁盘的使用率</h3><ol><li><p>如何查看磁盘使用率 df -h</p></li><li><p>监控磁盘的那些指标 block、 inode</p></li><li><p>如何获取具体的信息 df -h</p></li><li><p>获取的数值到达多少报警 80%</p></li></ol><h3 id="1-3-流行的监控工具"><a href="#1-3-流行的监控工具" class="headerlink" title="1.3 流行的监控工具"></a>1.3 流行的监控工具</h3><ol><li><p>Zabbix</p></li><li><p>Lepus(天兔)数据库监控系统</p></li><li><p>Open-Falcon 小米</p></li><li><p>Prometheus(普罗米修斯， Docker、 K8s)</p></li></ol><h3 id="1-4-如果去到一家新公司，如何入手监控"><a href="#1-4-如果去到一家新公司，如何入手监控" class="headerlink" title="1.4 如果去到一家新公司，如何入手监控"></a>1.4 如果去到一家新公司，如何入手监控</h3><ol><li><p>硬件监控 路由器、交换机、防火墙</p></li><li><p>系统监控 CPU、内存、磁盘、网络、进程、 TCP</p></li><li><p>服务监控 nginx、 php、 tomcat、 redis、 memcache、 mysql</p></li><li><p>Web 监控 请求时间、响应时间、加载时间、</p></li><li><p>日志监控 ELk（收集、存储、分析、展示） 日志易</p></li><li><p>安全监控 Firewalld、 WAF(Nginx+lua)、安全宝、牛盾云、安全狗</p></li><li><p>网络监控 smokeping 多机房</p></li><li><p>业务监控 活动引入多少流量、产生多少注册量、带来多大价值</p></li></ol><h2 id="第2章-单机时代如何监控"><a href="#第2章-单机时代如何监控" class="headerlink" title="第2章 单机时代如何监控"></a>第2章 单机时代如何监控</h2><p><code>CPU</code> 监控命令: w、 top、 htop、 glances</p><p>%Cpu(s): 0.3 us, 0.3 sy, 0.0 ni, 99.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st us 用户态: 跟用户的操作有关 35% sy 系统态: 跟内核的处理有关 60% id CPU 空闲:</p><p>内存监控命令: <code>free</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]*<span class="comment"># free -h*              total        used        free      shared  buff/cache   available Mem:           976M        396M        125M        7.4M        454M        392M Swap:            0B          0B          0B</span></span><br></pre></td></tr></table></figure><p>磁盘监控命令: <code>df</code>、<code>iotop</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn</span><br><span class="line">sda 0.80 25.32 33.36 221034 291193</span><br><span class="line">设备名 每秒传输次数 每秒读大小 每秒写大小 读的总大小 写的总大小</span><br></pre></td></tr></table></figure><p>网络监控命令: <code>ifconfig</code>、 <code>route</code>、 <code>glances</code>、 <code>iftop</code>、 <code>nethogs</code>、 <code>netstat</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单位换算</span><br><span class="line">Mbps 100Mbps/8</span><br><span class="line">MB 12MB</span><br><span class="line">iftop 中间的&lt;= =&gt;这两个左右箭头，表示的是流量的方向。</span><br><span class="line">TX：发送流量、 RX：接收流量、 TOTAL：总流量</span><br><span class="line"><span class="comment">#查看 TCP11 中状态</span></span><br><span class="line">netstat -an|grep ESTABLISHED</span><br><span class="line">netstat -rn <span class="comment"># 查看路由信息</span></span><br><span class="line">netstat -lntup</span><br></pre></td></tr></table></figure><p>2.随着时间的推移，用户不断的增多，服务随时可能扛不住会被 oom(out of memory)，当系统内存不足的时候，会 触发 oom</p><ol><li><p>当系统内存不足的时候就会大量使用 swap</p></li><li><p>当系统大量使用 swap 的时候，系统会特别卡</p></li></ol><p>注意: 有时可能内存还有剩余 300Mb-500Mb，但会发现 swap 依然被使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ZabbixServer ~]<span class="comment"># dd if=/dev/zero of=/dev/null bs=800M</span></span><br><span class="line">[root@ZabbixServer ~]<span class="comment"># tail -f /var/log/messages</span></span><br><span class="line">Out of memory: Kill process 2227 (dd) score 778 or sacrifice child</span><br><span class="line">Killed process 2227 (dd) total-vm:906724kB, anon-rss:798820kB, file-rss:0kB</span><br></pre></td></tr></table></figure><p>3.那单机时代，如何使用 shell 脚本来实现服务器的监控</p><p>需求: 每隔 1 分钟监控一次内存,当你的可用内存低于 100m,发邮件报警,要求显示剩余内存</p><ol><li><p>怎么获取内存可用的值 free -m|awk ‘/^Mem/{print $NF}’</p></li><li><p>获取到内存可用的值如何和设定的阈值进行比较</p></li><li><p>比较如果大于 100m 则不处理，如果小于 100 则报警</p></li><li><p>如何每隔 1 分钟执行一次</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ZabbixServer ~]<span class="comment"># cat free.sh</span></span><br><span class="line"><span class="meta">#!/usr/bin/bash</span></span><br><span class="line">HostName=$(hostname)_$(hostname -i)</span><br><span class="line">Date=$(date +%F)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">Free=$(free -m|awk <span class="string">'/^Mem/&#123;print $NF&#125;'</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Free</span> -le 100 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$Date</span>: <span class="variable">$HostName</span> Mem Is &lt; <span class="variable">$&#123;Free&#125;</span>MB"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sleep 5</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="第3章-zabbix-监控快速安装"><a href="#第3章-zabbix-监控快速安装" class="headerlink" title="第3章 zabbix 监控快速安装"></a>第3章 zabbix 监控快速安装</h2><h3 id="1-配置zabbix仓库"><a href="#1-配置zabbix仓库" class="headerlink" title="1.配置zabbix仓库"></a>1.配置zabbix仓库</h3><p>官方RHEL 7：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>阿里源：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="2-安装-Zabbix-程序包，以及MySQL、-Zabbix-agent"><a href="#2-安装-Zabbix-程序包，以及MySQL、-Zabbix-agent" class="headerlink" title="2.安装 Zabbix 程序包，以及MySQL、 Zabbix-agent"></a>2.安装 <code>Zabbix</code> 程序包，以及<code>MySQL</code>、 <code>Zabbix-agent</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb-server</span></span><br><span class="line">[root@m01 ~]<span class="comment"># systemctl start mariadb.service &amp;&amp; systemctl enable mariadb.service</span></span><br></pre></td></tr></table></figure><h3 id="3-创建-Zabbix-数据库以及用户"><a href="#3-创建-Zabbix-数据库以及用户" class="headerlink" title="3.创建 Zabbix 数据库以及用户"></a>3.创建 Zabbix 数据库以及用户</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># mysqladmin password 123456</span></span><br><span class="line">[root@m01 ~]<span class="comment"># mysql -uroot -p123456</span></span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">MariaDB [(none)]&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="4-导入-Zabbix-数据至数据库中"><a href="#4-导入-Zabbix-数据至数据库中" class="headerlink" title="4.导入 Zabbix 数据至数据库中"></a>4.导入 Zabbix 数据至数据库中</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cat /usr/share/doc/zabbix-server-mysql-4.0.11/create.sql.gz | mysql -uzabbix -pzabbix zabbix</span></span><br></pre></td></tr></table></figure><h3 id="5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置"><a href="#5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置" class="headerlink" title="5 编辑/etc/zabbix/zabbix_server.conf 文件，修改数据库配置"></a>5 编辑/etc/zabbix/zabbix_server.conf 文件，修改数据库配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "^DB" /etc/zabbix/zabbix_server.conf </span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h3 id="6-启动-Zabbix-服务进程，并加入开机自启"><a href="#6-启动-Zabbix-服务进程，并加入开机自启" class="headerlink" title="6.启动 Zabbix 服务进程，并加入开机自启"></a>6.启动 Zabbix 服务进程，并加入开机自启</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-server.service</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server.service</span><br></pre></td></tr></table></figure><h3 id="7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区"><a href="#7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区" class="headerlink" title="7.配置 Apache 的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区"></a>7.配置 Apache 的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "Shanghai" /etc/httpd/conf.d/zabbix.conf </span></span><br><span class="line">        php_value date.timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="8-重启-Apache-Web-服务器"><a href="#8-重启-Apache-Web-服务器" class="headerlink" title="8.重启 Apache Web 服务器"></a>8.重启 Apache Web 服务器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><h2 id="第4章-WEB界面安装步骤"><a href="#第4章-WEB界面安装步骤" class="headerlink" title="第4章 WEB界面安装步骤"></a>第4章 WEB界面安装步骤</h2><p>1.浏览器打开地址：<a href="http://10.0.1.61/zabbix/setup.php" target="_blank" rel="noopener">http://10.0.1.61/zabbix/setup.php</a></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-de0031ee7eba1dd9.png"  alt=""></p><p>2.检查依赖项是否存在异常</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-10ac1dccf1f446c9.png"  alt=""></p><p>3.配置zabbix连接数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/3-zabbix.png"  alt=""></p><p>4.配置 ZabbixServer 服务器的信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/4-zabbix.png"  alt=""></p><p>5.最终确认检查</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/5-zabbix.png"  alt=""></p><p>6.安装成功</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/6-zabbix.png"  alt=""></p><p>7.登陆zabbix</p><p>默认登陆 ZabbixWeb 的用户名 Admin，密码 zabbix</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/7-zabbix.png"  alt=""></p><p>8.调整字符集为中文</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/8-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/9-zabbix.png"  alt=""></p><p>9.修复中文乱码</p><p>打开图形之后会发现语言为乱码，原因是缺少字体</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/10-zabbix.png"  alt=""></p><p>解决方法:安装字体并替换现有字体</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install wqy-microhei-fonts -y</span><br><span class="line">cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/zabbix/assets/fonts/graphfont.ttf</span><br></pre></td></tr></table></figure><p>再次刷新发现已经变成中文了</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/11-zabbix.png"  alt=""></p><p><strong>第5章 Zabbix 监控基础架构</strong></p><p>zabbix-agent(数据采集)—&gt;zabbix-server(数据分析|报警)—&gt; 数据库(数据存储)&lt;—zabbix web(数据展示)</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/12-zabbix.png"  alt=""></p><h2 id="第6章-zabbix-快速监控主机"><a href="#第6章-zabbix-快速监控主机" class="headerlink" title="第6章 zabbix 快速监控主机"></a>第6章 zabbix 快速监控主机</h2><h3 id="6-1-安装zabbix-agent"><a href="#6-1-安装zabbix-agent" class="headerlink" title="6.1 安装zabbix-agent"></a>6.1 安装zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://mirror.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-agent-4.0.11-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="6-2-配置zabbix-agent"><a href="#6-2-配置zabbix-agent" class="headerlink" title="6.2 配置zabbix-agent"></a>6.2 配置zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.conf    </span></span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=10.01.61</span><br><span class="line">ServerActive=127.0.0.1</span><br><span class="line">Hostname=Zabbix server</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><h3 id="6-3-启动zabbix-agent并检查"><a href="#6-3-启动zabbix-agent并检查" class="headerlink" title="6.3 启动zabbix-agent并检查"></a>6.3 启动zabbix-agent并检查</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start zabbix-agent.service </span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable zabbix-agent.service</span></span><br><span class="line">[root@web01 ~]<span class="comment"># netstat -lntup|grep 10050</span></span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      10351/zabbix_agentd </span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      10351/zabbix_agentd</span><br></pre></td></tr></table></figure><h3 id="6-4-zabbix-web界面，添加主机"><a href="#6-4-zabbix-web界面，添加主机" class="headerlink" title="6.4 zabbix-web界面，添加主机"></a>6.4 zabbix-web界面，添加主机</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/13-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/15-zabbix.png"  alt=""></p><h2 id="第7章-自定义监控主机小试身手"><a href="#第7章-自定义监控主机小试身手" class="headerlink" title="第7章 自定义监控主机小试身手"></a>第7章 自定义监控主机小试身手</h2><h3 id="1-监控需求"><a href="#1-监控需求" class="headerlink" title="1.监控需求"></a>1.监控需求</h3><p>监控TCP11种状态集</p><h3 id="2-命令行实现"><a href="#2-命令行实现" class="headerlink" title="2.命令行实现"></a>2.命令行实现</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 ~]<span class="comment"># netstat -ant|grep -c TIME_WAIT</span></span><br><span class="line">31</span><br><span class="line">[root@web01-7 ~]<span class="comment"># netstat -ant|grep -c LISTEN</span></span><br><span class="line">19</span><br></pre></td></tr></table></figure><h3 id="3-编写zabbix监控文件-传参形式"><a href="#3-编写zabbix监控文件-传参形式" class="headerlink" title="3.编写zabbix监控文件(传参形式)"></a>3.编写zabbix监控文件(传参形式)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 ~]<span class="comment"># cd /etc/zabbix/zabbix_agentd.d/</span></span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat TCP.conf </span></span><br><span class="line">UserParameter=TIME_WAIT, netstat -ant|grep -c TIME_WAIT</span><br><span class="line">UserParameter=LISTEN, netstat -ant|grep -c LISTEN</span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><h3 id="4-server端进行测试"><a href="#4-server端进行测试" class="headerlink" title="4.server端进行测试"></a>4.server端进行测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-get-4.0.1-1.el7.x86_64.rpm</span></span><br><span class="line">[root@m01-61 ~]<span class="comment"># yum -y install zabbix-get.x86_64</span></span><br><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k TIME_WAIT</span></span><br><span class="line">34</span><br><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k LISTEN</span></span><br><span class="line">19</span><br></pre></td></tr></table></figure><h3 id="5-web端添加"><a href="#5-web端添加" class="headerlink" title="5.web端添加"></a>5.web端添加</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/16-zabbix.png"  alt=""></p><h3 id="6-克隆监控项"><a href="#6-克隆监控项" class="headerlink" title="6.克隆监控项"></a>6.克隆监控项</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/17-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/18-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/19-zabbix.png"  alt=""></p><h3 id="7-创建图形"><a href="#7-创建图形" class="headerlink" title="7.创建图形"></a>7.创建图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/21-zabbix.png"  alt=""></p><h3 id="8-查看图形"><a href="#8-查看图形" class="headerlink" title="8.查看图形"></a>8.查看图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/22-zabbix.png"  alt=""></p><h3 id="9-设置触发器"><a href="#9-设置触发器" class="headerlink" title="9.设置触发器"></a>9.设置触发器</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/23-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/24-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/25-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/26-zabbix.png"  alt=""></p><h2 id="第8章-邮件报警"><a href="#第8章-邮件报警" class="headerlink" title="第8章 邮件报警"></a>第8章 邮件报警</h2><h3 id="1-定义发件人"><a href="#1-定义发件人" class="headerlink" title="1.定义发件人"></a>1.定义发件人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/27-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/28-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/29-zabbix.png"  alt=""></p><h3 id="2-定义收件人"><a href="#2-定义收件人" class="headerlink" title="2.定义收件人"></a>2.定义收件人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/30-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="C:%5CUsers%5Cxinian%5CAppData%5CLocal%5CYNote%5Cdata%5Cwf3512638@126.com%5C2e6556d944e54e51812f355c997893cd%5Celftksuqmcc.jpeg"  alt="img"></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/31-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/32-zabbix.png"  alt=""></p><h3 id="3-自定义报警内容过"><a href="#3-自定义报警内容过" class="headerlink" title="3.自定义报警内容过"></a>3.自定义报警内容过</h3><p>定制报警内容：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.zabbix.com%2Fdocumentation%2F4.0%2Fzh%2Fmanual%2Fappendix%2Fmacros%2Fsupported_by_location" target="_blank" rel="noopener">https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location</a></p><p>参考博客：<a href="https://www.cnblogs.com/bixiaoyu/p/7302541.html" target="_blank" rel="noopener">https://www.cnblogs.com/bixiaoyu/p/7302541.html</a></p><p><code>发送警告</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">报警邮件标题可以使用默认信息，亦可使用如下中文报警内容</span><br><span class="line">名称：Action-Email</span><br><span class="line">默认标题：故障&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;发生: &#123;TRIGGER.NAME&#125;故障!</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><p><code>恢复警告</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">恢复标题：恢复&#123;TRIGGER.STATUS&#125;, 服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">恢复信息：</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><h2 id="第9章-微信报警"><a href="#第9章-微信报警" class="headerlink" title="第9章 微信报警"></a>第9章 微信报警</h2><h3 id="1-查看配置文件里的脚本目录路径"><a href="#1-查看配置文件里的脚本目录路径" class="headerlink" title="1.查看配置文件里的脚本目录路径"></a>1.查看配置文件里的脚本目录路径</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "^AlertScriptsPath" /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br></pre></td></tr></table></figure><h3 id="2-将weixin-py放在zabbix特定目录"><a href="#2-将weixin-py放在zabbix特定目录" class="headerlink" title="2.将weixin.py放在zabbix特定目录"></a>2.将weixin.py放在zabbix特定目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 /usr/lib/zabbix/alertscripts]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rwxr-xr-x 1 root root 1227 Aug  8 07:40 weixin.py</span><br></pre></td></tr></table></figure><h3 id="3-配置发信人"><a href="#3-配置发信人" class="headerlink" title="3.配置发信人"></a>3.配置发信人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/33-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/34-zabbix.png"  alt=""></p><h3 id="4-配置收信人"><a href="#4-配置收信人" class="headerlink" title="4.配置收信人"></a>4.配置收信人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/35-zabbix.png"  alt=""></p><h3 id="5-登陆企业微信公众号添加账户"><a href="#5-登陆企业微信公众号添加账户" class="headerlink" title="5.登陆企业微信公众号添加账户"></a>5.登陆企业微信公众号添加账户</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwork.weixin.qq.com%2Fwework_admin%2Floginpage_wx" target="_blank" rel="noopener">https://work.weixin.qq.com/wework_admin/loginpage_wx</a></p><p>1.登陆后在企业号上新建应用</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/36-zabbix.png"  alt=""></p><p>2.上传logo，填写应用名称 ，应用介绍等</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/37-zabbix.png"  alt=""></p><p>3.查看启动应用</p><p>同时会生成应用的AgentId以及Secret，这个在后面步骤会有用</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/38-zabbix.png"  alt=""></p><p>4.接口调用测试</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwork.weixin.qq.com%2Fapi%2Fdevtools%2Fdevtool.php" target="_blank" rel="noopener">http://work.weixin.qq.com/api/devtools/devtool.php</a></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/39-zabbix.png"  alt=""></p><p>这里的corpid为公司ID</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/40-zabbix.png"  alt=""></p><p>Corpsecret就是刚才创建应用生成的Secrt，确认没问题填写进去然后下一步</p><p>如果没问题会显示200状态码</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/41-zabbix.png"  alt=""></p><h3 id="6-添加成员"><a href="#6-添加成员" class="headerlink" title="6.添加成员"></a>6.添加成员</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/42-zabbix.png"  alt=""></p><h3 id="7-关注公众号"><a href="#7-关注公众号" class="headerlink" title="7.关注公众号"></a>7.关注公众号</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/43-zabbix.png"  alt=""></p><h3 id="8-查看自己的账号"><a href="#8-查看自己的账号" class="headerlink" title="8.查看自己的账号"></a>8.查看自己的账号</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/44-zabbix.png"  alt=""></p><h3 id="9-修改脚本里的信息"><a href="#9-修改脚本里的信息" class="headerlink" title="9.修改脚本里的信息"></a>9.修改脚本里的信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 /usr/lib/zabbix/alertscripts]<span class="comment"># cat weixin.py </span></span><br><span class="line">..............</span><br><span class="line">corpid=<span class="string">'微信企业号corpid'</span></span><br><span class="line">appsecret=<span class="string">'应用的Secret'</span></span><br><span class="line">agentid=应用的id</span><br><span class="line">..............</span><br></pre></td></tr></table></figure><h3 id="10-发信测试"><a href="#10-发信测试" class="headerlink" title="10.发信测试"></a>10.发信测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 /usr/lib/zabbix/alertscripts]<span class="comment"># python  weixin.py  你的账号  '发信测试'  ‘微信测试消息’</span></span><br></pre></td></tr></table></figure><h3 id="11-微信号上查看"><a href="#11-微信号上查看" class="headerlink" title="11.微信号上查看"></a>11.微信号上查看</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/45-zabbix.png"  alt=""></p><h2 id="第10章-自定义模版"><a href="#第10章-自定义模版" class="headerlink" title="第10章 自定义模版"></a>第10章 自定义模版</h2><h3 id="1-监控TCP11种状态"><a href="#1-监控TCP11种状态" class="headerlink" title="1.监控TCP11种状态"></a>1.监控TCP11种状态</h3><p>编写zabbix配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat tcp_status.conf</span></span><br><span class="line">UserParameter=ESTABLISHED,netstat -ant|grep  -c <span class="string">'ESTABLISHED'</span></span><br><span class="line">UserParameter=SYN_SENT,netstat -ant|grep  -c <span class="string">'SYN_SENT'</span></span><br><span class="line">UserParameter=SYN_RECV,netstat -ant|grep  -c <span class="string">'SYN_RECV'</span></span><br><span class="line">UserParameter=FIN_WAIT1,netstat -ant|grep  -c <span class="string">'FIN_WAIT1'</span></span><br><span class="line">UserParameter=FIN_WAIT2,netstat -ant|grep  -c <span class="string">'FIN_WAIT2'</span></span><br><span class="line">UserParameter=TIME_WAIT,netstat -ant|grep  -c <span class="string">'TIME_WAIT'</span></span><br><span class="line">UserParameter=CLOSE,netstat -ant|grep  -c <span class="string">'CLOSE'</span></span><br><span class="line">UserParameter=CLOSE_WAIT,netstat -ant|grep  -c <span class="string">'CLOSE_WAIT'</span></span><br><span class="line">UserParameter=LAST_ACK,netstat -ant|grep  -c <span class="string">'LAST_ACK'</span></span><br><span class="line">UserParameter=LISTEN,netstat -ant|grep  -c <span class="string">'LISTEN'</span></span><br><span class="line">UserParameter=CLOSING,netstat -ant|grep  -c <span class="string">'CLOSING'</span></span><br></pre></td></tr></table></figure><p>或者另一种写法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat tcp_status.conf </span></span><br><span class="line">UserParameter=tcp_status[*],netstat -ant|grep -c <span class="variable">$1</span></span><br></pre></td></tr></table></figure><h3 id="2-重启zabbix-agent"><a href="#2-重启zabbix-agent" class="headerlink" title="2.重启zabbix-agent"></a>2.重启zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-agent.service</span><br></pre></td></tr></table></figure><h3 id="3-测试监控项"><a href="#3-测试监控项" class="headerlink" title="3.测试监控项"></a>3.测试监控项</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k tcp_status[TIME_WAIT]</span></span><br><span class="line">147</span><br></pre></td></tr></table></figure><h3 id="4-导入模版文件"><a href="#4-导入模版文件" class="headerlink" title="4.导入模版文件"></a>4.导入模版文件</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/46-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/47-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/48-zabbix.png"  alt=""></p><h3 id="5-主机关联模版文件"><a href="#5-主机关联模版文件" class="headerlink" title="5.主机关联模版文件"></a>5.主机关联模版文件</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/49-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/50-zabbix.png"  alt=""></p><h3 id="6-查看最新数据"><a href="#6-查看最新数据" class="headerlink" title="6.查看最新数据"></a>6.查看最新数据</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/51-zabbix.png"  alt=""></p><h3 id="7-查看图形"><a href="#7-查看图形" class="headerlink" title="7.查看图形"></a>7.查看图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/52-zabbix.png"  alt=""></p><h2 id="第11章-自定义模版监控nginx状态"><a href="#第11章-自定义模版监控nginx状态" class="headerlink" title="第11章 自定义模版监控nginx状态"></a>第11章 自定义模版监控nginx状态</h2><h3 id="1-开启监控页面并访问测试"><a href="#1-开启监控页面并访问测试" class="headerlink" title="1.开启监控页面并访问测试"></a>1.开启监控页面并访问测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/nginx/conf.d]<span class="comment"># cat status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01-7 /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 95 95 111 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><h3 id="2-准备nginx监控状态脚本"><a href="#2-准备nginx监控状态脚本" class="headerlink" title="2.准备nginx监控状态脚本"></a>2.准备nginx监控状态脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat nginx_monitor.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">NGINX_COMMAND=<span class="variable">$1</span></span><br><span class="line">CACHEFILE=<span class="string">"/tmp/nginx_status.txt"</span></span><br><span class="line">CMD=<span class="string">"/usr/bin/curl curl status.oldboy.com"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CACHEFILE</span>  ];<span class="keyword">then</span></span><br><span class="line">   <span class="variable">$CMD</span> &gt;<span class="variable">$CACHEFILE</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Check and run the script</span></span><br><span class="line">TIMEFLM=`<span class="built_in">stat</span> -c %Y <span class="variable">$CACHEFILE</span>`</span><br><span class="line">TIMENOW=`date +%s`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ `expr <span class="variable">$TIMENOW</span> - <span class="variable">$TIMEFLM</span>` -gt 60 ]; <span class="keyword">then</span></span><br><span class="line">    rm -f <span class="variable">$CACHEFILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CACHEFILE</span>  ];<span class="keyword">then</span></span><br><span class="line">   <span class="variable">$CMD</span> &gt;<span class="variable">$CACHEFILE</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_active</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Active'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_reading</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Reading'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Writing'</span> <span class="variable">$CACHEFILE</span> | awk <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Waiting'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $6&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $1&#125;'</span> </span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $2&#125;'</span> </span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$NGINX_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">    active)</span><br><span class="line">        nginx_active;</span><br><span class="line">        ;;</span><br><span class="line">    reading)</span><br><span class="line">        nginx_reading;</span><br><span class="line">        ;;</span><br><span class="line">    writing)</span><br><span class="line">        nginx_writing;</span><br><span class="line">        ;;</span><br><span class="line">    waiting)</span><br><span class="line">        nginx_waiting;</span><br><span class="line">        ;;</span><br><span class="line">    accepts)</span><br><span class="line">        nginx_accepts;</span><br><span class="line">        ;;</span><br><span class="line">    handled)</span><br><span class="line">        nginx_handled;</span><br><span class="line">        ;;</span><br><span class="line">    requests)</span><br><span class="line">        nginx_requests;</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Invalid credentials'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 2;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="3-编写zabbix监控配置文件"><a href="#3-编写zabbix监控配置文件" class="headerlink" title="3.编写zabbix监控配置文件"></a>3.编写zabbix监控配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat nginx_status.conf </span></span><br><span class="line">UserParameter=nginx_status[*],/bin/bash /etc/zabbix/zabbix_agentd.d/nginx_monitor.sh <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><h3 id="4-使用zabbix-get取值"><a href="#4-使用zabbix-get取值" class="headerlink" title="4.使用zabbix_get取值"></a>4.使用zabbix_get取值</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k nginx_status[accepts]</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="5-导入模版"><a href="#5-导入模版" class="headerlink" title="5.导入模版"></a>5.导入模版</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/53-zabbix.png"  alt=""></p><h3 id="6-链接模版"><a href="#6-链接模版" class="headerlink" title="6.链接模版"></a>6.链接模版</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/54-zabbix.png"  alt=""></p><h3 id="7-查看数据"><a href="#7-查看数据" class="headerlink" title="7.查看数据"></a>7.查看数据</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/55-zabbix.png"  alt=""></p><h2 id="第12章-自定义模版监控php状态"><a href="#第12章-自定义模版监控php状态" class="headerlink" title="第12章 自定义模版监控php状态"></a>第12章 自定义模版监控php状态</h2><h3 id="1-开启监控页面"><a href="#1-开启监控页面" class="headerlink" title="1.开启监控页面"></a>1.开启监控页面</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -1 /etc/php-fpm.d/www.conf    </span></span><br><span class="line">pm.status_path = /php_status</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/conf.d/status.conf    </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name localhost;</span><br><span class="line">   location /nginx_status &#123;</span><br><span class="line">       stub_status on;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location /php_status &#123;</span><br><span class="line">       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">       fastcgi_index index.php;</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME html<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">       include fastcgi_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart nginx.service php-fpm.service</span></span><br></pre></td></tr></table></figure><h3 id="2-访问测试"><a href="#2-访问测试" class="headerlink" title="2.访问测试"></a>2.访问测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl 127.0.0.1/php_status</span></span><br><span class="line">pool:                 www</span><br><span class="line">process manager:      dynamic</span><br><span class="line">start time:           08/Aug/2019:22:31:27 +0800</span><br><span class="line">start since:          37</span><br><span class="line">accepted conn:        1</span><br><span class="line">listen queue:         0</span><br><span class="line">max listen queue:     0</span><br><span class="line">listen queue len:     128</span><br><span class="line">idle processes:       4</span><br><span class="line">active processes:     1</span><br><span class="line">total processes:      5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests:        0</span><br></pre></td></tr></table></figure><h3 id="3-准备访问脚本"><a href="#3-准备访问脚本" class="headerlink" title="3.准备访问脚本"></a>3.准备访问脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat fpm.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># Zabbix monitoring script</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># php-fpm:</span></span><br><span class="line"><span class="comment">#  - anything available via FPM status page</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># Contact:</span></span><br><span class="line"><span class="comment">#  vincent.viallet@gmail.com</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># ChangeLog:</span></span><br><span class="line"><span class="comment">#  20100922VVinitial creation</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Zabbix requested parameter</span></span><br><span class="line">ZBX_REQ_DATA=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">ZBX_REQ_DATA_URL=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx defaults</span></span><br><span class="line">NGINX_STATUS_DEFAULT_URL=<span class="string">"http://localhost/fpm/status"</span></span><br><span class="line">WGET_BIN=<span class="string">"/usr/bin/wget"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Error handling:</span></span><br><span class="line"><span class="comment">#  - need to be displayable in Zabbix (avoid NOT_SUPPORTED)</span></span><br><span class="line"><span class="comment">#  - items need to be of type "float" (allow negative + float)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">ERROR_NO_ACCESS_FILE=<span class="string">"-0.91"</span></span><br><span class="line">ERROR_NO_ACCESS=<span class="string">"-0.92"</span></span><br><span class="line">ERROR_WRONG_PARAM=<span class="string">"-0.93"</span></span><br><span class="line">ERROR_DATA=<span class="string">"-0.94"</span> <span class="comment"># either can not connect /bad host / bad port</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle host and port if non-default</span></span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ZBX_REQ_DATA_URL</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  URL=<span class="string">"<span class="variable">$ZBX_REQ_DATA_URL</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  URL=<span class="string">"<span class="variable">$NGINX_STATUS_DEFAULT_URL</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save the nginx stats in a variable for future parsing</span></span><br><span class="line">NGINX_STATS=$(<span class="variable">$WGET_BIN</span> -q <span class="variable">$URL</span> -O - 2&gt;/dev/null)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error during retrieve</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 -o -z <span class="string">"<span class="variable">$NGINX_STATS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$ERROR_DATA</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Extract data from nginx stats</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#RESULT=$(echo "$NGINX_STATS" | awk 'print $0;match($0, "^'"$ZBX_REQ_DATA"':[[:space:]]+(.*)", a) &#123; print a[1] &#125;')</span></span><br><span class="line"><span class="comment">#RESULT=$(echo "$NGINX_STATS" | grep "$ZBX_REQ_DATA" | awk -F : '&#123;print $2&#125;')</span></span><br><span class="line">RESULT=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$NGINX_STATS</span>"</span> | awk -F : <span class="string">"&#123;if(\$1==\"<span class="variable">$ZBX_REQ_DATA</span>\") print \$2&#125;"</span>)</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 -o -z <span class="string">"<span class="variable">$RESULT</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$ERROR_WRONG_PARAM</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$RESULT</span></span><br></pre></td></tr></table></figure><h3 id="4-准备zabbix配置文件"><a href="#4-准备zabbix配置文件" class="headerlink" title="4.准备zabbix配置文件"></a>4.准备zabbix配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat fpm.conf </span></span><br><span class="line">UserParameter=php-fpm[*],/etc/zabbix/zabbix_agentd.d/fpm.sh <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$2</span>"</span></span><br></pre></td></tr></table></figure><h3 id="5-使用zabbix-get取值"><a href="#5-使用zabbix-get取值" class="headerlink" title="5.使用zabbix_get取值"></a>5.使用zabbix_get取值</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k php-fpm["total processes",http://127.0.0.1/php_status]</span></span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="6-导入模版"><a href="#6-导入模版" class="headerlink" title="6.导入模版"></a>6.导入模版</h3><p>导入之后需要修改一下模版里的宏配置</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/56-zabbix.png"  alt=""></p><h2 id="第13章-WEB监控"><a href="#第13章-WEB监控" class="headerlink" title="第13章 WEB监控"></a>第13章 WEB监控</h2><p>需求，监控页面状态码</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/57-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/58-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/59-zabbix.png"  alt=""></p><h2 id="第14章-故障记录"><a href="#第14章-故障记录" class="headerlink" title="第14章 故障记录"></a>第14章 故障记录</h2><h3 id="故障1"><a href="#故障1" class="headerlink" title="故障1"></a>故障1</h3><p>故障现象：</p><p>提示<code>zabbix-server is not running</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/60-zabbix.png"  alt=""></p><p>报错日志：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">34983:20190807:202215.171 database is down: reconnecting <span class="keyword">in</span> 10 seconds</span><br><span class="line">34983:20190807:202225.172 [Z3001] connection to database <span class="string">'zabbix'</span> failed: [1045] Access denied <span class="keyword">for</span> user <span class="string">'zabbix'</span>@<span class="string">'localhost'</span> (using password: NO)</span><br></pre></td></tr></table></figure><p>故障原因：</p><blockquote><p>zabbix-server的配置文件里配有配置数据库密码</p></blockquote><p>故障解决：</p><blockquote><p>添加正确的数据库账号密码信息</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># grep "^DB" /etc/zabbix/zabbix_server.conf     </span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h3 id="故障2"><a href="#故障2" class="headerlink" title="故障2"></a>故障2</h3><blockquote><p>故障现象：微信报警失败</p></blockquote><p>报错日志：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># tail -f /var/log/zabbix/zabbix_server.log </span></span><br><span class="line">Problem name: TIME_WAIT过多</span><br><span class="line">Host: web01</span><br><span class="line">Severity: Average</span><br><span class="line"></span><br><span class="line">Original problem ID: 51</span><br><span class="line"><span class="string">'": Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File "/usr/lib/zabbix/alertscripts/weixin.py", line 7, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    import requests</span></span><br><span class="line"><span class="string">ImportError: No module named requests</span></span><br></pre></td></tr></table></figure><blockquote><p>问题原因：</p><p>缺少模块 requests</p></blockquote><p>问题解决：</p><p>安装缺失的依赖包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h3 id="故障3"><a href="#故障3" class="headerlink" title="故障3"></a>故障3</h3><blockquote><p>故障现象：</p></blockquote><p>在server端使用zabbix_get命令测试键值命令时提示警告</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k ESTABLISHED  </span></span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">2</span><br></pre></td></tr></table></figure><blockquote><p>问题原因：</p></blockquote><p>zabbix_agent是以普通用户<code>zabbix</code>运行的，而普通用户执行<code>netstat -antp</code>时会有警告，网上查找发现只要不是用p参数就可以以普通用户运行</p><blockquote><p>解决方案：</p></blockquote><p>监控脚本里的命令修改为<code>netstat -ant</code></p>]]></content>
      
      
      <categories>
          
          <category> 系统监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16.HTTPS域名证书</title>
      <link href="/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
      <url>/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTPS域名证书"><a href="#HTTPS域名证书" class="headerlink" title="HTTPS域名证书"></a>HTTPS域名证书</h1><h2 id="第1章-HTTPS-安全证书基本概述"><a href="#第1章-HTTPS-安全证书基本概述" class="headerlink" title="第1章 HTTPS 安全证书基本概述"></a>第1章 HTTPS 安全证书基本概述</h2><p>为什么需要使用HTTPS, 因为HTTP 不安全。当我们使用http 网站时，经常会遇到包遭到劫持和篡改，如果采用https 协议，那么数据在传输过程中是加密的，所以黑客无法窃取或者篡改数据报文信息。<br>https 主要解决了什么问题，避免网站传输时信息泄露，避免网站传输时内容不被劫持和篡改。<br>下面我们来了解一下HTTPS 证书类型</p><p>HTTPS 证书购买选择：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单个域名      www</span><br><span class="line">多个域名      www images cdn <span class="built_in">test</span> m</span><br><span class="line">通配符域名    *.oldboy.com    <span class="comment"># 只支持二级域名</span></span><br></pre></td></tr></table></figure><p>HTTPS 注意事项</p><p>Https 不支持续费,证书到期需重新申请新并进行替换.<br>Https 如果是通配符域名，二级域名和三级域名需要分别购买，如test.m.oldboy.com<br>Https 显示绿色, 说明整个网站的URL 都是https 的。<br>Https 显示黄色, 因为网站代码中包含http的不安全连接。<br>Https 显示红色, 要么证书是假的，要么证书过期</p><h2 id="第2章-Nginx-单台实现HTTPS-实战"><a href="#第2章-Nginx-单台实现HTTPS-实战" class="headerlink" title="第2章 Nginx 单台实现HTTPS 实战"></a>第2章 Nginx 单台实现HTTPS 实战</h2><p>1.环境准备:</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>web01-7</td><td>10.0.1.7</td><td>nginx+php+ssl</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nginx 必须有ssl 模块</span></span><br><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br><span class="line">--with-http_ssl_module</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建存放ssl 证书的路径</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/ssl_key</span></span><br><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>2.生成证书:</p><p>使用openssl 命令充当CA 权威机构创建证书(生产不使用此方式生成证书，因为不会被互联网认可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">... +++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line"></span><br><span class="line"><span class="comment">#记住配置密码, 我这里是1234</span></span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">Verifying - Enter pass phrase <span class="keyword">for</span> server.key:</span><br></pre></td></tr></table></figure><p>3.生成自签证书，同时去掉私钥的密码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># req --&gt;用于创建新的证书</span></span><br><span class="line"><span class="string"># new --&gt;表示创建的是新证书</span></span><br><span class="line"><span class="string"># x509 --&gt;表示定义证书的格式为标准格式</span></span><br><span class="line"><span class="string"># key --&gt;表示调用的私钥文件信息</span></span><br><span class="line"><span class="string"># out --&gt;表示输出证书文件信息</span></span><br><span class="line"><span class="string"># days --&gt;表示证书的有效期</span></span><br></pre></td></tr></table></figure><p>4.证书申请完成后需要了解Nginx 如何配置Https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否开始ssl 支持</span></span><br><span class="line">Syntax: ssl on | off;</span><br><span class="line">Default: ssl off;</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl crt 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl key 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate_key file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br></pre></td></tr></table></figure><p>5.配置Nginx 配置Https 实例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">nginx: [warn] the <span class="string">"ssl"</span> directive is deprecated, use the <span class="string">"listen ... ssl"</span> directive instead <span class="keyword">in</span> /etc/nginx/conf.d/ssl.conf:4</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"><span class="comment">#有个报警提示，告诉我们需要使用listen ... ssl这样的格式</span></span><br></pre></td></tr></table></figure><p>6.浏览器输入<a href="https://www.oldboy.com访问" target="_blank" rel="noopener">https://www.oldboy.com访问</a>, 由于该证书非第三方权威机构颁发，而是我们自己签发的，所以浏览器会警告</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565165285234.png"  alt=""></p><p>7.以上配置如果用户忘记在浏览器地址栏输入https:// 那么将不会跳转至https，建议配置将用户访问http 请求强制跳转https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx-集群实现HTTPS-实践"><a href="#第3章-Nginx-集群实现HTTPS-实践" class="headerlink" title="第3章 Nginx 集群实现HTTPS 实践"></a>第3章 Nginx 集群实现HTTPS 实践</h2><p>实战Nginx 负载均衡+Nginx WEB 配置HTTPS 安全</p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>外网IP</th><th>内网IP</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>eth0: 10.0.1.5 VIP: 10.0.1.3</td><td>eth1: 172.16.1.5</td><td>nginx-proxy-ssl</td></tr><tr><td>web01-7</td><td>eth0: 10.0.1.7</td><td>eth1: 172.16.1.7</td><td>nginx-web01</td></tr><tr><td>web02-8</td><td>eth0: 10.0.1.8</td><td>eth1: 172.16.1.8</td><td>nginx-web02</td></tr></tbody></table><p>2.配置后端两台web 节点监听80 端口, 如已配置则无需修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_param  HTTPS on;           <span class="comment">#wordpress的https生效</span></span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.启动两台后端web 节点Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web02 ~]<span class="comment"># systemctl start nginx</span></span><br></pre></td></tr></table></figure><p>4.lb01负载均衡先生成证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl/ssh_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># cd /etc/nginx/ssl_key/</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br></pre></td></tr></table></figure><p>5.lb01负载均衡配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line"><span class="comment"># 定义后端资源池</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line">upstream zh_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户http请求跳转至https</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  blog.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://server_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://zh_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  zh.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://zh_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.重启Nginx 负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>8.wordpress和wecenter配置https</p><p>wordpress后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565167178799.png"  alt=""></p><p>注意：wordpress要使用https生效，后台源wordpress配置文件必须增加一条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    ...</span><br><span class="line">    fastcgi_param  HTTPS on;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wecenter在后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565184511851.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15.keepalived高可用</title>
      <link href="/2020/04/13/15-keepalived/"/>
      <url>/2020/04/13/15-keepalived/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="keepalived高可用"><a href="#keepalived高可用" class="headerlink" title="keepalived高可用"></a>keepalived高可用</h1><h2 id="第1章-keepalived介绍"><a href="#第1章-keepalived介绍" class="headerlink" title="第1章 keepalived介绍"></a>第1章 keepalived介绍</h2><p><code>keepalived</code>软件起初是专为LVS负载均衡软件设计的,用来管理并监控LVS集群系统中各个服务节点状态,后来又加入了可以实现高可用的VRRP功能.此,keepalived除了能够管理LVS软件外,还可以作为其他服务(例如:Nginx,Haproxy,MySQL等)的高可用解决方案软件.</p><p><code>keepalived</code>软件主要是通过<code>VRRP</code>协议实现高可用功能的.<code>VRRP</code>是<code>Virtual Router Redundancy</code> Protocol(虚拟路由器冗余协议)的缩写,VRRP出现的目的就是为了解决静态路由单点故障问题的,他能够保证当个别节点宕机时,整个网络可以不间断地运行.Keepalived一方面具有配置管理LVS的功能,同时还具有对LVS下面节点进行健康检查的功能,另一方面也可实现系统网络服务的高可用功能,</p><h2 id="第2章-keepalived服务的重要功能"><a href="#第2章-keepalived服务的重要功能" class="headerlink" title="第2章 keepalived服务的重要功能"></a>第2章 keepalived服务的重要功能</h2><h3 id="2-1-作为系统网络服务的高可用功能-failover"><a href="#2-1-作为系统网络服务的高可用功能-failover" class="headerlink" title="2.1 作为系统网络服务的高可用功能(failover)"></a>2.1 作为系统网络服务的高可用功能(failover)</h3><p><code>keepalived</code>可以实现任意两台主机之间,例如Master和Backup主机之间的故障转移和自动切换,这个主机可以使普通的不能停机的业务服务器,也可以是LVS负载均衡,Nginx反向代理这样的服务器.</p><p><code>keepalived</code>高可用功能实现的基本原理为:<br> 两台主机同时安装好keepalived软件并启动服务,开始正常工作时<br> 角色为Master的主机获得所有资源并对用户提供服务<br> 角色为Backup的主机作为Master主机的热备;</p><p>当角色为Master的主机失效或出现故障时<br> 角色为Backup的主机将自动接管Master主机的所有工作,包括接管VIP资源及相应资源服务</p><p>而当角色为Master的主机故障修复后,又会自动接管回他原来处理的工作<br> 角色为Backup的主机则同时释放Master主机失效时他接管的工作<br> 此时,两台主机将恢复到启动时各自的原始角色及工作状态</p><h3 id="2-2-什么是VRRP"><a href="#2-2-什么是VRRP" class="headerlink" title="2.2 什么是VRRP"></a>2.2 什么是VRRP</h3><p><code>VRRP</code>,全称<code>Virtual Router Redundancy Protocol</code>,中文名为<code>虚拟路由冗余协议</code><br> <code>VRRP</code>的出现就是为了解决静态路由的单点故障问题<br> <code>VRRP</code>是通过一种竞选机制来将路由的任务交给某台VRRP路由器的.</p><p><code>VRRP</code>通过竞选机制来实现虚拟路由器的功能,所有的协议报文都是通过IP多播(Multicast)包(默认的多播地址<code>224.0.0.18</code>)形式发送的<br> 虚拟路由器由VRID(范围0-255)和一组IP地址组成,对外表现为一个周知的MAC地址,:00-00-5E-00-01-{VRID}.<br> 所以,在一个虚拟路由器中,不管谁是Master,对外都是相同的MAC和IP(称之为VIP).<br> 客户端主机并不需要因Master的改变修改自己的路由配置.对它们来说,这种切换是透明的.</p><p>在一组虚拟路由器中,只有作为Master的VRRP路由器会一直发送VRRP广播包,此时Backup不会抢占Master<br> 当Master不可用时,Backup就收不到来自Master的广播包了,此时多台Backup中优先级最高的路由器会抢占为Master.<br> 这种抢占是非常快速的(可能只有1秒甚至更少),以保证服务的连续性,处于安全性考虑,VRRP数据包使用了加密协议进行了加密.</p><h3 id="2-3-面试的时候怎么说"><a href="#2-3-面试的时候怎么说" class="headerlink" title="2.3 面试的时候怎么说"></a>2.3 面试的时候怎么说</h3><p><code>keepalived</code>高可用对之间是通过<code>VRRP</code>通信的,因此,我从VRRP开始给您讲起.</p><ul><li>1)VRRP,全称Virtual Router Reduancy Protocol,中文名为虚拟路由器冗余协议,VRRP的出现是为了解决静态路由的单点故障,</li><li>2)VRRP是通过一种竞选协议来将路由任务交给某台VRRP路由器的,</li><li>3)VRRP用IP多播的方式,(默认多播地址(<code>224.0.0.18</code>))实现高可用对之间通信.</li><li>4)工作时主节点发包,备节点接包,当备节点接收不到主节点发的包的时候,就启动接管程序接管主节点的资源.备节点可以有多个,通过优先级竞选,但一般keepalived系统运维工作中都是一对.</li><li>5)VRRP使用了加密协议加密数据,但keepalived官方目前还是推荐用明文的方式配置认证类型和密码.</li></ul><p>介绍完了VRRP,接下来我在介绍一下keepalived服务的工作原理;<br>keepalived高可用对之间是通过VRRP进行通信的,VRRP是通过竞选机制来确定主备的,主的优先级高于备,因此,工作时会优先获得所有的资源,备节点处于等待状态,当主挂了的时候,备节点就会接管主节点的资源,然后顶替主节点对外提供服务.</p><p>在keepalived服务对之间,只有作为主的服务器会一直发送VRRP广播包,告诉备他还活着,此时备不会抢占主,当主不可用时,即备监听不到主发送的广播包时,就会启动相关服务接管资源,保证业务的连续性,接管速度最快可以小于一秒</p><h2 id="第3章-keepalived高可用服务搭建准备"><a href="#第3章-keepalived高可用服务搭建准备" class="headerlink" title="第3章 keepalived高可用服务搭建准备"></a>第3章 keepalived高可用服务搭建准备</h2><h3 id="3-1-安装keepalived环境说明"><a href="#3-1-安装keepalived环境说明" class="headerlink" title="3.1 安装keepalived环境说明"></a>3.1 安装keepalived环境说明</h3><p>这里使用前面已经搭建完成的Nginx负载均衡的系统环境来安装Keepalived服务,因为后面的实战案例是实现Nginx负载均衡的高可用案例.<br>安装Keepalived的基础准备环境如下:<br>准备5台物理服务器两台做Keepalived服务,3台做测试的web节点</p><p>Keepalived高可用实验环境准备</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>Keepalived主服务器(Nginx主负载均衡器)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>Keepalived备服务器(Nginx备负载均衡器)</td></tr><tr><td>web01</td><td>10.0.1.7</td><td>web01服务器</td></tr><tr><td>web02</td><td>10.0.1.8</td><td>web02服务器</td></tr><tr><td>web03</td><td>10.0.1.9</td><td>web03服务器</td></tr></tbody></table><h3 id="3-2-安装keepalived软件"><a href="#3-2-安装keepalived软件" class="headerlink" title="3.2 安装keepalived软件"></a>3.2 安装keepalived软件</h3><p>注意:lb01和lb02都需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># yum install keepalived -y</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qa keepalived</span></span><br><span class="line">keepalived-1.3.5-8.el7_6.x86_64</span><br><span class="line">[root@lb02 ~]<span class="comment"># yum install keepalived -y</span></span><br></pre></td></tr></table></figure><h3 id="3-3-启动keepalived服务并检查"><a href="#3-3-启动keepalived服务并检查" class="headerlink" title="3.3 启动keepalived服务并检查"></a>3.3 启动keepalived服务并检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ps -ef |grep  keep</span></span><br><span class="line">root       1601      1  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1602   1601  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1603   1601  0 10:33 ?        00:00:03 /usr/sbin/keepalived -D</span><br><span class="line"><span class="comment">###提示:启动后有三个keepalived进程表示安装正确</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip a|grep 192.168</span></span><br><span class="line">    inet 192.168.200.16/32 scope global eth0</span><br><span class="line">    inet 192.168.200.17/32 scope global eth0</span><br><span class="line">    inet 192.168.200.18/32 scope global eth0</span><br><span class="line"><span class="comment">###提示:默认情况会启动三个VIP地址</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived</span></span><br><span class="line"><span class="comment">###提示: 测试完毕后关闭服务,上述测试需要在lb01和lb02两台服务器上进行</span></span><br></pre></td></tr></table></figure><h3 id="3-4-keepalived配置文件说明"><a href="#3-4-keepalived配置文件说明" class="headerlink" title="3.4 keepalived配置文件说明"></a>3.4 keepalived配置文件说明</h3><p>和其他yum安装的软件一样,keepalived软件的配置文件默认路径及配置文件名为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qc keepalived</span></span><br><span class="line">/etc/keepalived/keepalived.conf</span><br><span class="line">/etc/sysconfig/keepalived</span><br></pre></td></tr></table></figure><p>这里的具备高可用功能keepalived.conf配置文件包含了两个重要区块,下面分别说明:</p><p>(1)全局变量(Global Definitions)部分<br>这部分主要用来设置keepalived的故障通知机制和Router ID标识.示例配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf.bak -n</span></span><br><span class="line">     1! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">     2</span><br><span class="line">     3global_defs &#123;</span><br><span class="line">     4   notification_email &#123;</span><br><span class="line">     5     acassen@firewall.loc</span><br><span class="line">     6     failover@firewall.loc</span><br><span class="line">     7     sysadmin@firewall.loc</span><br><span class="line">     8   &#125;</span><br><span class="line">     9   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">    10   smtp_server 192.168.200.1</span><br><span class="line">    11   smtp_connect_timeout 30</span><br><span class="line">    12   router_id LVS_DEVEL</span><br><span class="line">    13   vrrp_skip_check_adv_addr</span><br><span class="line">    14   vrrp_strict</span><br><span class="line">    15   vrrp_garp_interval 0</span><br><span class="line">    16   vrrp_gna_interval 0</span><br><span class="line">    17&#125;</span><br></pre></td></tr></table></figure><p>基础参数说明:</p><ul><li>第1行是注释,!开头和#号开头一样,都是注释</li><li>第2行是空行</li><li>第3行~8行是定义故障服务报警的Email地址.作用是服务发生切换或RS节点等有故障时,需要发送的Email地址,可以有多个,每行一个.</li><li>第9行是制定发送邮件的发送人,即发送人地址,也是可选配置</li><li>第10行smtp_server指定发送邮件的smtp服务器,如果本机开启了sendmail或postfix.就可以使用上面默认配置实现邮件发送,也是可选配置.</li><li>第11行smtp_connect_timeout是连接smtp的超时时间,也是可选配置</li><li>第12行是Keepalived服务器的路由标识{route_id}.在一个局域网内,这个标识{route_id}应该是唯一的.</li><li>大括号{}.用来区分区块,要成对出现.如果楼写了半个大括号,keepalived运行时,不会报错,但是也不会得到预期的结果.另外,由于区块间存在多层嵌套关系,因此很容易遗漏区块结尾处的大括号,需要特别注意.</li></ul><p>(2)VRRP实例定义区域(VRRP instance(s))部分.<br> 这部分主要用来定义具体服务实例配置,包括Keepalived主备状态,接口,优先级,认证方式和IP信息等,配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">19vrrp_instance VI_1 &#123;</span><br><span class="line">    20    state MASTER</span><br><span class="line">    21    interface eth0</span><br><span class="line">    22    virtual_router_id 51</span><br><span class="line">    23    priority 100</span><br><span class="line">    24    advert_int 1</span><br><span class="line">    25    authentication &#123;</span><br><span class="line">    26        auth_type PASS</span><br><span class="line">    27        auth_pass 1111</span><br><span class="line">    28    &#125;</span><br><span class="line">    29    virtual_ipaddress &#123;</span><br><span class="line">    30        192.168.200.16</span><br><span class="line">    31        192.168.200.17</span><br><span class="line">    32        192.168.200.18</span><br><span class="line">    33    &#125;</span><br><span class="line">    34&#125;</span><br></pre></td></tr></table></figure><p>参数说明:</p><ul><li><p>第19行表示定义一个vrrp_instance实例,名字为VI_1,每个vrrp_instance实例可以认为是Keepalived服务的一个实例或者作为一个业务服务,在Keepalived服务配置中,这样的vrrp_instance实例可以有多个.注意,存在于主节点中的vrrp_isntance实例在备节点也要存在,这样才能实现故障切换接管.</p></li><li><p>第20行state MASTER表示当前示例VI_1的角色状态,当前角色为MASTER,这个状态只能有MASTER和BACKUP两种状态,并且需要大写这些字符.其中MASTER为正式工作的状态,BACKUP为备用的状态.当MASTER所在的服务器故障或失效时,BACKUP所在的服务器会接管故障的MASTER继续提供服务.</p></li><li><p>第21行interface为网路通信接口.为对外提供服务的网络接口,如eth0,eth1当前主流的服务器都有2~4个网络接口,在选择服务接口时,要搞清楚.</p></li><li><p>第22行virtual_router_id为虚拟路由ID标识,这个标识最好是一个数字</p></li><li><p>第23行priority为优先级,其后面的数值也是一个数字,数字越大,表示实例优先级越高.在同一个vrrp_instance实例里,MASTER的优先级配置要高于BACKUP的.若MASTER的priority值为150,那么BACKUP的priority必须小于150,一般建议隔50以上为佳.</p></li><li><p>第24行advent_int为同步通知间隔.MASTER与BACKUP之间通信检查的时间间隔,默认为1秒.</p></li><li><p>第25-27行authentication为权限认证配置.包含认证类型(auth_type)和认证密码(auth_pass)认证类型有PASS(simple passwd),AH(IPSEC)两种,官方推荐使用的类型为PASS.验证密码为明文方式,最好长度不能超过8个字符,建议四位数字,同一vrrp实例的MASTER与BACKUP使用相同的密码才能正常通信.</p></li><li><p>第29-32行virtual_ipaddress为虚拟IP地址.可以配置多个IP地址,每个地址占一行,配置时最好明确指定子网掩码以及虚拟IP绑定的网络接口.否则,子网掩码默认是32位,绑定的接口和前面的interface参数配置的一致.注意,这里的虚拟IP就是在工作中需要和域名绑定的IP,即和配置的高可用服务监听的IP要保持一致.</p></li></ul><h2 id="第4章-配置keepalived实现单IP自动漂移接管"><a href="#第4章-配置keepalived实现单IP自动漂移接管" class="headerlink" title="第4章 配置keepalived实现单IP自动漂移接管"></a>第4章 配置keepalived实现单IP自动漂移接管</h2><p>实际上可以将高可用对的两台机器应用服务同时开启,但是只让VIP一段的服务器提供服务,若主的服务器宕机,VIP会自动漂移到备用服务器,此时用户的请求直接发送到备用服务器上,而无须临时启动对应服务(事先开启应用服务).下面来讲解VIP自动漂移实战案例.</p><h3 id="4-1-实战配置keepalived主服务器lb01-MASTER"><a href="#4-1-实战配置keepalived主服务器lb01-MASTER" class="headerlink" title="4.1 实战配置keepalived主服务器lb01 MASTER"></a>4.1 实战配置keepalived主服务器lb01 MASTER</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后,启动keepalived服务,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>出现上述带有vip:10.0.0.3行的结果表示lb01的keepalived服务单实例配置成功.</p><h3 id="4-2-实战配置keepalived备服务器lb02-BACKUP"><a href="#4-2-实战配置keepalived备服务器lb02-BACKUP" class="headerlink" title="4.2 实战配置keepalived备服务器lb02 BACKUP"></a>4.2 实战配置keepalived备服务器lb02 BACKUP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕,启动keepalived服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|egrep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>这里没有返回任何结果就对了,因为lb02为BACKUP,当主节点活着的时候,他不会接管VIP 10.0.1.3</p><p>出现上述无任何结果的现象,表示lb02的keepailved服务单实例配置成功.如果lv02的配置过滤后有10.0.1.3的IP,则表示keepalived工作不正,同一个IP地址同一时刻应该只能出现在一台服务器上.</p><p>如果查看BACKUP备节点VIP有,说明高可用裂脑了,裂脑是两台服务器争抢统一资源导致的,例如:两边都配置了同一个VIP地址.</p><h3 id="4-3-出现裂脑后的排查"><a href="#4-3-出现裂脑后的排查" class="headerlink" title="4.3 出现裂脑后的排查"></a>4.3 出现裂脑后的排查</h3><p>出现上述两台服务器争抢同一IP资源问题,一般要先考虑排查两个地方:</p><p>(1)主备两台服务器之间是否通讯正常,如果不正常是否有iptables防火墙阻挡?</p><p>(2)主备两台服务器对应的keepalived.conf配置文件是否有错误?例如是否同一实例的virtual_router_id配置不一样.</p><h3 id="4-4-进行高可用主备服务器切换"><a href="#4-4-进行高可用主备服务器切换" class="headerlink" title="4.4 进行高可用主备服务器切换"></a>4.4 进行高可用主备服务器切换</h3><p>停掉主服务器上的keepalived服务或关闭主服务器,操作并检查步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>可以看到VIP 10.0.0.3消失了,此时查看BACKUP备服务器,看是否会有VIP 10.0.0.3出现,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>可以看到备节点lb02已经接管绑定了10.0.1.3这个VIP,这期间备节点还会发送ARP广播,让所有的客户端更新本地的ARP表,以便客户端访问接管VIP服务的节点.</p><p>此时如果再启动主服务器的keepalived服务,主服务器就会接管回VIP 10.0.1.3启动后可以观察下主备的IP漂移情况,备服务器是否释放了IP?主服务器是否又接管了IP ?</p><p>主节点启动keepalived服务后,发现很快就又接管了VIP 10.0.1.3,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>与此同时,备节点上的VIP 10.0.0.3则被释放了,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><h3 id="4-5-单实例主备模式keeplibed配置文件对比"><a href="#4-5-单实例主备模式keeplibed配置文件对比" class="headerlink" title="4.5 单实例主备模式keeplibed配置文件对比"></a>4.5 单实例主备模式keeplibed配置文件对比</h3><p>可以看到,上述keepalived单实例MASTER和BACKUP节点的配置差别项,只有3项是不同的</p><table><thead><tr><th>Keepalived配置参数</th><th>MASTER节点特殊参数</th><th>BACKUP节点特殊参数</th></tr></thead><tbody><tr><td>router_id(唯一标识)</td><td>router_id lb01</td><td>router_id lb02</td></tr><tr><td>state(角色状态)</td><td>state MASTER</td><td>state BACKUP</td></tr><tr><td>priority(竞选优先级)</td><td>priority 100</td><td>priority 50</td></tr></tbody></table><h2 id="第5章-keepalived高可用服务器的裂脑问题"><a href="#第5章-keepalived高可用服务器的裂脑问题" class="headerlink" title="第5章 keepalived高可用服务器的裂脑问题"></a>第5章 keepalived高可用服务器的裂脑问题</h2><h3 id="5-1-什么是裂脑"><a href="#5-1-什么是裂脑" class="headerlink" title="5.1 什么是裂脑"></a>5.1 什么是裂脑</h3><p>由于某些原因,导致两台高可用服务器对在指定时间内,无法检测到对方的心跳消息,各自取得资源及服务</p><p>的所有权,而此时的两台高可用服务器都还活着并在正常运行,这样就会导致同一个IP或服务在两端同时</p><p>存在而发生冲突,最严重的是两台服务器占用同一个VIP地址,当用户写入数据时可能会分别写入到两端,</p><p>这可能会导致服务器两端的数据不一致或造成数据丢失,这种情况就被成为裂脑.</p><h3 id="5-2-导致裂脑发生的原因"><a href="#5-2-导致裂脑发生的原因" class="headerlink" title="5.2 导致裂脑发生的原因"></a>5.2 导致裂脑发生的原因</h3><p>一般来说,裂脑的发生,有以下几种原因<br>   高可用服务器对之间心跳线链路发生故障,导致无法正常通信<br>   心跳线坏了(包括断了,老化)<br>   网卡及相关驱动坏了,IP配置及冲突问题(网卡直连)<br>   心跳线之间连接的设备故障(网卡及交换机)<br>   仲裁的机器出问题了(采用总裁的方案)<br>   高可用服务器上开启了iptables防火墙阻挠了心跳信息传输<br>   高可用服务器上心跳网卡地址等信息配置不正确,导致发送心跳失败<br>   其他服务配置不当等原因,如心跳方式不同,心跳广播冲突,软件bug等.</p><h3 id="5-3-解决裂脑的常见方法"><a href="#5-3-解决裂脑的常见方法" class="headerlink" title="5.3 解决裂脑的常见方法"></a>5.3 解决裂脑的常见方法</h3><p>在实际成产环境中,我们可以从以下几个方面来防止裂脑问题发生:</p><p>同时使用串行电缆和以太网电缆连接,同时用两条心跳线,这样一条线路坏了,另一个还是好的,依然能传送心跳信息.</p><p>当检测到裂脑时强行关闭一个心跳节点(这个功能需要特殊设备支持,如stonith,fence)相当于备节点接收不到心跳信息,通过单独的线路发送命令关闭主节点的电源.</p><p>做好对裂脑的监控报警(如邮件及手机短信等或值班),在问题发生时人为第一时间介入仲裁,降低损失.</p><h3 id="5-4-解决keepalived裂脑的常见方案"><a href="#5-4-解决keepalived裂脑的常见方案" class="headerlink" title="5.4 解决keepalived裂脑的常见方案"></a>5.4 解决keepalived裂脑的常见方案</h3><p>作为互联网应用服务器的高可用,特别是前端web负载均衡器的高可用,裂脑的问题对普遍业务的影响是可容忍的,如果是数据库或者存储的业务,一般出现裂脑问题就非常严重了.因此,通过增加冗余心跳线来避免裂脑问题发生,同时加强了对系统的监控.</p><p>如果开启防火墙,一定要让心跳消息通过.一般通过允许IP段的形式解决<br> 可以拉一条以太网网线或者串口线作为主备节点心跳线路的冗余<br> 开发检测程序通过监控软件检测裂脑,如zabbix检测如果主备都有VIP就报警.<br> 比较严谨的判断,备节点出现对应VIP,并且主节点及对应服务(如果能远程连接主节点看是否有VIP就更好了)还活着,就说明发生裂脑了.</p><p>具体监控系统裂脑的脚本见文章结尾”开发检测keepalived裂脑的脚本”</p><h3 id="5-5-模拟keepalived裂脑场景"><a href="#5-5-模拟keepalived裂脑场景" class="headerlink" title="5.5 模拟keepalived裂脑场景"></a>5.5 模拟keepalived裂脑场景</h3><p>抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><p>开启防火墙 firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface eth0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span></span><br></pre></td></tr></table></figure><p>iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -i eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br><span class="line">iptables -I OUTPUT -o eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br></pre></td></tr></table></figure><p>再次抓包查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx负载均衡配合keepalived双主模式实战"><a href="#第6章-Nginx负载均衡配合keepalived双主模式实战" class="headerlink" title="第6章 Nginx负载均衡配合keepalived双主模式实战"></a>第6章 Nginx负载均衡配合keepalived双主模式实战</h2><p>结合前面介绍的Nginx负载均衡的环境,调整好住负载均衡器lb01,备用负载均衡器lb02服务器上Nginx负载均衡环境,两台服务器的安装基础环境一模一样.</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>VIP:10.0.1.2(用于绑定A服务<a href="http://www.oldboy.com域名" target="_blank" rel="noopener">www.oldboy.com域名</a>)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>VIP:10.0.1.3(用于绑定B服务zh.oldboy.com域名)</td></tr><tr><td>web01-7</td><td>10.0.1.7</td><td>Nginx web服务器1</td></tr><tr><td>web02-8</td><td>10.0.1.8</td><td>Nginx web 服务器2</td></tr></tbody></table><h3 id="6-1-配置keepalived双主"><a href="#6-1-配置keepalived双主" class="headerlink" title="6.1 配置keepalived双主"></a>6.1 配置keepalived双主</h3><p>lb01配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><p>lb02配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Nginx负载均衡"><a href="#6-2-Nginx负载均衡" class="headerlink" title="6.2 Nginx负载均衡"></a>6.2 Nginx负载均衡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 10.0.1.7;</span><br><span class="line">        server 10.0.1.8;</span><br><span class="line">        server 10.0.1.9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.3:80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.2:80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-重启nginx和keepalived"><a href="#6-3-重启nginx和keepalived" class="headerlink" title="6.3 重启nginx和keepalived"></a>6.3 重启nginx和keepalived</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart keepalived</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="6-4-配置windows解析"><a href="#6-4-配置windows解析" class="headerlink" title="6.4 配置windows解析"></a>6.4 配置windows解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.3 blog.oldboy.com</span><br><span class="line">10.0.1.2 zh.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="6-5-访问测试"><a href="#6-5-访问测试" class="headerlink" title="6.5 访问测试"></a>6.5 访问测试</h3><h3 id="6-6-模拟keepalived故障"><a href="#6-6-模拟keepalived故障" class="headerlink" title="6.6 模拟keepalived故障"></a>6.6 模拟keepalived故障</h3><p>此时停掉lb01服务器或停止keepalived服务器，观察结果是否正常<br>然后观察lb02备点是否接管了VIP 10.0.1.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><h3 id="6-7-恢复lb01的keelived服务"><a href="#6-7-恢复lb01的keelived服务" class="headerlink" title="6.7 恢复lb01的keelived服务"></a>6.7 恢复lb01的keelived服务</h3><p>查看是否恢复正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.5/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br></pre></td></tr></table></figure><h2 id="第7章-开发监控keepalived裂脑的脚本"><a href="#第7章-开发监控keepalived裂脑的脚本" class="headerlink" title="第7章  开发监控keepalived裂脑的脚本"></a>第7章  开发监控keepalived裂脑的脚本</h2><p>检测思路,VIP什么时候 什么条件 才会飘走<br>由于某些原因，导致两台 keepalived 高可用服务器在指定时间内，无法检测到对方的心跳消息，各自取得资源及服务的所有权，而此时的两台高可用服务器又都还活着。<br>服务器网线松动等网络故障<br>服务器硬件故障发生损坏现象而崩溃<br>主备都开启 firewalld 防火墙<br>Nginx 服务死掉等</p><h3 id="7-1-lb01检查web脚本"><a href="#7-1-lb01检查web脚本" class="headerlink" title="7.1 lb01检查web脚本"></a>7.1 lb01检查web脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># mkdir /server/scripts -p</span></span><br><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat check_web.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line"><span class="comment">#1.判断 Nginx 是否存活,如果不存活则尝试启动 Nginx</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    systemctl start nginx</span><br><span class="line">    sleep 3</span><br><span class="line">    <span class="comment">#2.等待 3 秒后再次获取一次 Nginx 状态</span></span><br><span class="line">    nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line">    <span class="comment">#3.再次进行判断, 如 Nginx 还不存活则停止 Keepalived,让地址进行漂移,并退出脚本</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_web &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_web.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">      track_script &#123;</span><br><span class="line">        check_web</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-lb02脚本"><a href="#7-2-lb02脚本" class="headerlink" title="7.2 lb02脚本"></a>7.2 lb02脚本</h3><p>检查vip脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment">#  mkdir /server/scripts -p</span></span><br><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat check_backup_keep.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">lb01_vip=10.0.1.3</span><br><span class="line">lb01_nginx=$(curl -x 10.0.1.5:80 -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  blog.oldzhang.com)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ping -c 1 -W 1 $&#123;lb01_ip&#125; &amp;&gt;/dev/null</span></span><br><span class="line"><span class="comment">#如果lb01的IP能ping通,但是我自己也存在VIP,我就认为发生裂脑了,我就把自己的keep干掉</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;lb01_nginx&#125;</span> -eq 200 -a `ip add|grep <span class="string">"<span class="variable">$lb01_vip</span>"</span>|wc -l` -eq 1 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is bad"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line">    systemctl stop keepalived</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is ok"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_backup_keep &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_backup_keep.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">     track_script &#123;</span><br><span class="line">     check_backup_keep</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14.反向代理负载均衡</title>
      <link href="/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="反向代理负载均衡"><a href="#反向代理负载均衡" class="headerlink" title="反向代理负载均衡"></a>反向代理负载均衡</h1><h2 id="第1章-反向代理"><a href="#第1章-反向代理" class="headerlink" title="第1章 反向代理"></a>第1章 反向代理</h2><h3 id="Nginx代理服务基本概述"><a href="#Nginx代理服务基本概述" class="headerlink" title="Nginx代理服务基本概述"></a>Nginx代理服务基本概述</h3><p>说到代理，首先我们要明确一个概念，所谓代理就是一个代表、一个渠道；</p><p>此时就设计到两个角色，一个是被代理角色，一个是目标角色，被代理角色通过这个代理访问目标角色完成一些任务的过程称为代理操作过程；如同生活中的专卖店~客人到adidas专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是adidas厂家，目标角色就是用户</p><p>1.代理一词往往并不陌生, 该服务我们常常用到如(代理理财、代理租房、代理收货等等)，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.png"  alt=""></p><p>2.在没有代理模式的情况下，客户端和 Nginx 服务端，都是客户端直接请求服务端，服务端直接响应客户端。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.png"  alt=""></p><p>3.那么在互联网请求里面, 客户端往往无法直接向服务端发起请求, 那么就需要用到代理服务, 来实现客户端和服务通信，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/03.png"  alt=""></p><h3 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h3><p>以访问Goo为例，客户端连接到VPN相当于正向代理<br>VPN代理请求访问后端服务器并返回属于反向代理</p><h3 id="Nginx代理服务支持的协议"><a href="#Nginx代理服务支持的协议" class="headerlink" title="Nginx代理服务支持的协议"></a>Nginx代理服务支持的协议</h3><p>1.Nginx 作为代理服务，可支持的代理协议非常的多，具体如下图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_01.png"  alt=""></p><p>2.如果将 Nginx 作为反向代理服务，常常会用到如下几种代理协议，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_02.png"  alt=""></p><p>3.反向代理模式与 Nginx 代理模块总结如表格所示</p><table><thead><tr><th>反向代理模式</th><th>nginx配置模块</th></tr></thead><tbody><tr><td>http、websocket、https</td><td>ngx_http_proxy_module</td></tr><tr><td>fastcgi</td><td>ngx_http_fastcgi_module</td></tr><tr><td>uwsgi</td><td>ngx_http_uwsgi_module</td></tr><tr><td>grpc</td><td>ngx_http_v2_module</td></tr></tbody></table><h3 id="Nginx反向代理配置语法"><a href="#Nginx反向代理配置语法" class="headerlink" title="Nginx反向代理配置语法"></a>Nginx反向代理配置语法</h3><p>1.Nginx代理配置语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_pass URL;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location, limit_except</span><br><span class="line">http://localhost:8000/uri/</span><br><span class="line">http://192.168.56.11:8000/uri/</span><br><span class="line">http://unix:/tmp/backend.socket:/uri/</span><br></pre></td></tr></table></figure><p>2.添加传递给后端服务器的请求头信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_set_header field value;</span><br><span class="line">Default: proxy_set_header Host <span class="variable">$proxy_host</span>;</span><br><span class="line">proxy_set_header Connection close;</span><br><span class="line">Context: http, server, location</span><br><span class="line"><span class="comment"># 用户请求的时候 HOST 的值是 www.oldboy.com, 那么代理服务会像后端传递请求的还是 www.oldboy.com</span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"><span class="comment"># 将$remote_addr 的值放进变量 X-Real-IP 中， $remote_addr 的值为客户端的 ip</span></span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="comment"># 客户端通过代理服务访问后端服务, 后端服务通过该变量会记录真实客户端地址</span></span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br></pre></td></tr></table></figure><p>3.代理到后端的TCP连接数，响应，返回等超时时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nginx 代理与后端服务器连接超时时间(代理连接超时)</span><br><span class="line">Syntax: proxy_connect_timeout time;</span><br><span class="line">Default: proxy_connect_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//nginx 代理等待后端服务器的响应时间</span><br><span class="line">Syntax: proxy_read_timeout time;</span><br><span class="line">Default: proxy_read_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//后端服务器数据回传给 nginx 代理超时时间</span><br><span class="line">Syntax: proxy_send_timeout time;</span><br><span class="line">Default: proxy_send_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>4.代理缓冲区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nignx 会把后端返回的内容先放到缓冲区当中，然后再返回给客户端,边收边传, 不是全部接收完再传给客户端</span><br><span class="line">Syntax: proxy_buffering on | off;</span><br><span class="line">Default: proxy_buffering on;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//设置 nginx 代理保存用户头信息的缓冲区大小</span><br><span class="line">Syntax: proxy_buffer_size size;</span><br><span class="line">Default: proxy_buffer_size 4k|8k;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//proxy_buffers 缓冲区</span><br><span class="line">Syntax: proxy_buffers number size;</span><br><span class="line">Default: proxy_buffers 8 4k|8k;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>5.proxy代理网站常用配置<br>将配置写入新文件，调用时使用include引用即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># cat /etc/nginx/proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br></pre></td></tr></table></figure><p>6.代理配置location时调用，方便后面多个location重复使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nginx反向代理实战"><a href="#Nginx反向代理实战" class="headerlink" title="Nginx反向代理实战"></a>Nginx反向代理实战</h3><p>配置关系图：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_03.png"  alt=""></p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>IP</th><th>服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>web服务器</td></tr><tr><td>lb01</td><td>10.0.1.5</td><td>代理服务器</td></tr></tbody></table><p>2.web01服务器配置<br>配置一个网站，监听在 8080，此时网站仅 172 网段的用户能访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/conf.d/</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.0/24;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 conf.d]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 conf.d]<span class="comment"># echo "web01-7" &gt;/code/index.html</span></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>3.配置lb01代理服务器<br>配置监听 eth0 的 80 端口，使 10.0.1.0 网段的用户，能够通过代理服务器访问到后端的172.16.1.7 的 8080 端口站点内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx]<span class="comment"># cat proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat www.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://172.16.1.7:8080;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h2 id="第2章-负载均衡"><a href="#第2章-负载均衡" class="headerlink" title="第2章 负载均衡"></a>第2章 负载均衡</h2><h3 id="Nginx负载均衡概述"><a href="#Nginx负载均衡概述" class="headerlink" title="Nginx负载均衡概述"></a>Nginx负载均衡概述</h3><h3 id="2-1-为什么需要负载均衡"><a href="#2-1-为什么需要负载均衡" class="headerlink" title="2.1 为什么需要负载均衡"></a>2.1 为什么需要负载均衡</h3><p>我们的 Web 服务器直接面向用户，往往要承载大量并发请求，单台服务器难以负荷，我使用多台 WEB 服务器组成集群，前端使用 Nginx 负载均衡，将请求分散的打到我们的后端服务器集群中，实现负载的分发。那么会大大提升系统的吞吐率、请求性能、高容灾</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai.png"  alt=""></p><p>往往我们接触的最多的是 SLB(Server Load Balance)负载均衡，实现最多的也是 SLB、那么 SLB 它的调度节点和服务节点通常是在一个地域里面。那么它在这个小的逻辑地域里面决定了他对部分服务的实时性、响应性是非常好的。<br>所以说当海量用户请求过来以后，它同样是请求调度节点，调度节点将用户的请求转发给后端对应的服务节点，服务节点处理完请求后在转发给调度节点，调度节点最后响应给用户节点。这样也能实现一个均衡的作用，那么Nginx 则是一个典型的 SLB</p><h3 id="2-2-Nginx负载均衡配置场景"><a href="#2-2-Nginx负载均衡配置场景" class="headerlink" title="2.2 Nginx负载均衡配置场景"></a>2.2 Nginx负载均衡配置场景</h3><h4 id="2-2-1-四层负载均衡"><a href="#2-2-1-四层负载均衡" class="headerlink" title="2.2.1 四层负载均衡"></a>2.2.1 四层负载均衡</h4><p>所谓四层负载均衡指的是 OSI 七层模型中的传输层，那么传输层 Nginx 已经能支持 TCP/IP 的控制，所以只需要对客户端的请求进行 TCP/IP 协议的包转发就可以实现负载均衡，那么它的好处是性能非常快、只需要底层进行应用处理，而不需要进行一些复杂的逻辑</p><h4 id="2-2-2-七层负载均衡"><a href="#2-2-2-七层负载均衡" class="headerlink" title="2.2.2 七层负载均衡"></a>2.2.2 七层负载均衡</h4><p>七层负载均衡它是在应用层，那么它可以完成很多应用方面的协议请求，比如我们说的 http 应用的负载均衡，它可以实现 http 信息的改写、头信息的改写、安全应用规则控制、 URL 匹配规则控制、以及转发、 rewrite 等等的规则，所以在应用层的服务里面，我们可以做的内容就更多，那么 Nginx 则是一个典型的七层负载均衡 SLB</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai02.png"  alt=""></p><h4 id="2-2-3-四层负载均衡与七层负载均衡区别"><a href="#2-2-3-四层负载均衡与七层负载均衡区别" class="headerlink" title="2.2.3 四层负载均衡与七层负载均衡区别"></a>2.2.3 四层负载均衡与七层负载均衡区别</h4><p>四层负载均衡数据包在底层就进行了分发，而七层负载均衡数据包则是在最顶层进行分发、由此可以看出，七层负载均衡效率没有四负载均衡高。<br> 但七层负载均衡更贴近于服务，如:http 协议就是七层协议，我们可以用 Nginx 可以作会话保持， URL 路径规则匹配、 head 头改写等等，这些是四层负载均衡无法实现的</p><h4 id="Nginx负载均衡调度算法"><a href="#Nginx负载均衡调度算法" class="headerlink" title="Nginx负载均衡调度算法"></a>Nginx负载均衡调度算法</h4><table><thead><tr><th>调度算法</th><th>概述</th></tr></thead><tbody><tr><td>轮询</td><td>按时间顺序逐一分配到不同的后端服务器（默认）</td></tr><tr><td>weight</td><td>加权轮询，weight值越大，分配到的访问几率越高</td></tr><tr><td>ip_hash</td><td>每个请求按访问IP的hash结果分配，这样来自同一IP的固定访问一个后端服务器</td></tr><tr><td>url_hash</td><td>按照访问URL的hash结果来分配请求，是每个URL定向到同一个后端服务器</td></tr><tr><td>least_conn</td><td>z最少链接数，那个机器链接数少就分发</td></tr></tbody></table><h4 id="Nginx负载均衡配置参数"><a href="#Nginx负载均衡配置参数" class="headerlink" title="Nginx负载均衡配置参数"></a>Nginx负载均衡配置参数</h4><table><thead><tr><th>状态</th><th>概述</th></tr></thead><tbody><tr><td>down</td><td>当前的server暂时不参与负载均衡</td></tr><tr><td>backup</td><td>预留的备份服务器</td></tr><tr><td>max_fails</td><td>允许请求失败的次数</td></tr><tr><td>fail_timeout</td><td>经过max_fails失败后，服务暂停时间</td></tr><tr><td>max_conns</td><td>限制最大的接受链接数</td></tr></tbody></table><h3 id="2-3-Nginx负载均衡实战"><a href="#2-3-Nginx负载均衡实战" class="headerlink" title="2.3 Nginx负载均衡实战"></a>2.3 Nginx负载均衡实战</h3><p>1.部署准备    </p><table><thead><tr><th>/static</th><th>10.0.1.7:8080</th><th>static静态服务器</th></tr></thead><tbody><tr><td>/upload</td><td>10.0.1.8:8080</td><td>upload服务器</td></tr><tr><td>/</td><td>10.0.1.9:8080</td><td>默认服务器</td></tr></tbody></table><p>2.创建地址池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream upload_pools&#123;</span><br><span class="line">    server 10.0.0.8:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static_pools&#123;</span><br><span class="line">    server 10.0.0.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream defaule_pools&#123;</span><br><span class="line">    server 10.0.0.9:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.匹配条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location /static/ &#123; </span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###将符合upload的请求交给上传服务器池upload_pools,配置如下</span></span><br><span class="line">location /upload/ &#123; </span><br><span class="line">    proxy_pass http://upload_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###不符合上述规则的请求,默认全交给动态服务器池default_pools,配置如下:</span></span><br><span class="line">location / &#123; </span><br><span class="line">    proxy_pass http://default_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.组合在一起</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>5.创建代码环境</p><p>每个虚拟机存放的网页路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.oldboy.com/index.html</span><br><span class="line">www.oldboy.com/upload/index.html</span><br><span class="line">www.oldboy.com/static/index.html</span><br></pre></td></tr></table></figure><p>创建目录及测试页面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /code/www/&#123;upload,static&#125;</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> default"</span> &gt;/code/www//index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> upload"</span> &gt;/code/www/upload/index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> static"</span> &gt;/code/www/static/index.html </span><br><span class="line">chown -R www.www /code</span><br></pre></td></tr></table></figure><p>6.进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/index.html</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/static/</span></span><br><span class="line">web01 static</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/upload/</span></span><br><span class="line">web02-8 upload</span><br></pre></td></tr></table></figure><h2 id="第3章-根据条件转发实战"><a href="#第3章-根据条件转发实战" class="headerlink" title="第3章 根据条件转发实战"></a>第3章 根据条件转发实战</h2><h3 id="3-1-根据文件类型转发"><a href="#3-1-根据文件类型转发" class="headerlink" title="3.1 根据文件类型转发"></a>3.1 根据文件类型转发</h3><p>转发需求</p><p>只需修改nginx.conf的配置文件中的loaction区块代码即可</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*.(gif|jpg|jpeg|png|bmp|swf|css|js)$ &#123;</span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">    upstream server_pools &#123;</span><br><span class="line">        server 10.0.0.7 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.8 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.9 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-动静分离"><a href="#3-2-动静分离" class="headerlink" title="3.2 动静分离"></a>3.2 动静分离</h3><p>转发需求</p><p>动态资源转发到php服务器<br>静态资源转发到静态服务器</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-3-根据客户端转发"><a href="#3-3-根据客户端转发" class="headerlink" title="3.3 根据客户端转发"></a>3.3 根据客户端转发</h3><p>转发需求</p><p>手机和电脑 访问相同的网站—-结果不同</p><p>lb01代理服务器配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream iphone_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream android_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Iphone"</span>) &#123;</span><br><span class="line">            proxy_pass http://iphone_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Android"</span>)&#123;</span><br><span class="line">            proxy_pass http://android_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"msie"</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>访问测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/www]<span class="comment"># echo "web01 iphone" &gt; index.html </span></span><br><span class="line">[root@web02-8 /code/www]<span class="comment"># echo "web02 android" &gt; index.html</span></span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "chrome" www.oldboy.com</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "iphone" www.oldboy.com</span></span><br><span class="line">web01 iphone</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "android" www.oldboy.com</span></span><br><span class="line">web02 android</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
            <tag> upstream </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13.LNPM数据库拆分</title>
      <link href="/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/"/>
      <url>/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNPM数据库拆分"><a href="#LNPM数据库拆分" class="headerlink" title="LNPM数据库拆分"></a>LNPM数据库拆分</h1><h2 id="第1章-环境搭建准备"><a href="#第1章-环境搭建准备" class="headerlink" title="第1章 环境搭建准备"></a>第1章 环境搭建准备</h2><table><thead><tr><th>主机名</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>nginx+php</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>mysql</td></tr></tbody></table><h2 id="第2章-数据库拆分详细步骤"><a href="#第2章-数据库拆分详细步骤" class="headerlink" title="第2章 数据库拆分详细步骤"></a>第2章 数据库拆分详细步骤</h2><h3 id="2-1-web01上备份数据库并拷贝到db01上"><a href="#2-1-web01上备份数据库并拷贝到db01上" class="headerlink" title="2.1 web01上备份数据库并拷贝到db01上"></a>2.1 web01上备份数据库并拷贝到db01上</h3><p>备份 web01 上的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqldump -uroot -p'oldboy' -A --single-transaction &gt; /tmp/web01.sql</span></span><br></pre></td></tr></table></figure><p>将 web01 上备份的数据库拷贝至 db01 服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># scp /tmp/web01.sql 172.16.1.51:/tmp</span></span><br></pre></td></tr></table></figure><h3 id="2-2-db01服务器恢复数据库"><a href="#2-2-db01服务器恢复数据库" class="headerlink" title="2.2 db01服务器恢复数据库"></a>2.2 db01服务器恢复数据库</h3><p>安装数据库，并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># yum install mariadb mariadb-server -y</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl enable mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br></pre></td></tr></table></figure><p>将web01.sql导入到db01的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysql -uroot -p'oldboy' &lt; /tmp/web01.sql</span></span><br><span class="line"></span><br><span class="line">[root@db01-51 /tmp]<span class="comment"># mysql -uroot -p'oldboy' -e "show databases;"</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="2-3-db01数据库进行授权"><a href="#2-3-db01数据库进行授权" class="headerlink" title="2.3 db01数据库进行授权"></a>2.3 db01数据库进行授权</h3><p>在新数据库上授权, 允许所有网段, 通过 all 账户连接并操作该数据库<br>授权所有权限 grant all privileges<br>授权所有库所有表 <em>.</em><br>将授权赋予给哪个用户，这个用户只能通过哪个网段过来(%所有) ‘all’@’%’<br>授权该用户登录的密码 identified by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01-51 ~]<span class="comment"># mysql -uroot -p'oldboy'</span></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on *.* to <span class="string">'all'</span>@<span class="string">'%'</span> identified by <span class="string">'oldboy'</span>;</span><br><span class="line">&gt; flush privileges; </span><br><span class="line">&gt;<span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-测试使用IP地址能不能登陆"><a href="#2-4-测试使用IP地址能不能登陆" class="headerlink" title="2.4 测试使用IP地址能不能登陆"></a>2.4 测试使用IP地址能不能登陆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uall -poldboy -h 172.16.1.51</span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="2-5-web01修改PHP代码连接到新数据库"><a href="#2-5-web01修改PHP代码连接到新数据库" class="headerlink" title="2.5 web01修改PHP代码连接到新数据库"></a>2.5 web01修改PHP代码连接到新数据库</h3><p>修改wordpress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/ </span></span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># find . -type f|xargs grep oldboy   #查找密码所在文件</span></span><br><span class="line">./wp-config.php:define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># vim wp-config.php </span></span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'all'</span>);</span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'172.16.1.51'</span>);</span><br></pre></td></tr></table></figure><p>修改wecenter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh/</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># find . -type f|xargs grep oldboy</span></span><br><span class="line">./system/config/database.php:  <span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br><span class="line">[root@web01 /code/zh]<span class="comment"># vim system/config/database.php</span></span><br><span class="line"><span class="string">'host'</span> =&gt; <span class="string">'172.16.1.51'</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; <span class="string">'all'</span>,</span><br><span class="line"><span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br></pre></td></tr></table></figure><h3 id="2-6-停止web01上的数据库，测试网页是否正常"><a href="#2-6-停止web01上的数据库，测试网页是否正常" class="headerlink" title="2.6 停止web01上的数据库，测试网页是否正常"></a>2.6 停止web01上的数据库，测试网页是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/zh]<span class="comment"># systemctl stop mariadb.service</span></span><br></pre></td></tr></table></figure><p>此时如果打开网页没有问题则表明数据库拆分完成</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第3章-拓展WEB服务器"><a href="#第3章-拓展WEB服务器" class="headerlink" title="第3章 拓展WEB服务器"></a>第3章 拓展WEB服务器</h2><h3 id="3-1-为什么要拓展多台web节点"><a href="#3-1-为什么要拓展多台web节点" class="headerlink" title="3.1 为什么要拓展多台web节点"></a>3.1 为什么要拓展多台web节点</h3><p>单台 web 服务器能抗住的访问量是有限的，配置多台 web 服务器能提升更高的访问速度</p><h3 id="3-2-拓展多台web解决了什么问题"><a href="#3-2-拓展多台web解决了什么问题" class="headerlink" title="3.2 拓展多台web解决了什么问题"></a>3.2 拓展多台web解决了什么问题</h3><p>1.单台 web 节点如果故障，会导致业务 down 机<br>2.多台 web 节点能保证业务的持续稳定，扩展性高<br>3.多台 web 节点能有效的提升用户访问网站的速度</p><h3 id="3-3-多台web服务器架构组成"><a href="#3-3-多台web服务器架构组成" class="headerlink" title="3.3 多台web服务器架构组成"></a>3.3 多台web服务器架构组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145927.png"  alt=""></p><h3 id="3-4-多台web服务器思路"><a href="#3-4-多台web服务器思路" class="headerlink" title="3.4 多台web服务器思路"></a>3.4 多台web服务器思路</h3><p>1.可以使用ansible批量部署多台web服务器<br>2.配置内网私有yum仓库<br>3 按照web01的步骤安装好nginx和php，然后远程拷贝代码到新机器</p><h3 id="3-5-部署步骤"><a href="#3-5-部署步骤" class="headerlink" title="3.5 部署步骤"></a>3.5 部署步骤</h3><h4 id="3-5-1-web02-创建用户名密码"><a href="#3-5-1-web02-创建用户名密码" class="headerlink" title="3.5.1 web02 创建用户名密码"></a>3.5.1 web02 创建用户名密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br></pre></td></tr></table></figure><h4 id="2-5-2-web02安装Nginx-PHP"><a href="#2-5-2-web02安装Nginx-PHP" class="headerlink" title="2.5.2 web02安装Nginx+PHP"></a>2.5.2 web02安装Nginx+PHP</h4><p>可以直接从web01上拷贝yum源到本机yum目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/yum.repos.d/* /etc/yum.repos.d/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/pki/rpm-gpg/* /etc/pki/rpm-gpg/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install nginx</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-拷贝web01的nginx和php配置文件到web02"><a href="#3-2-3-拷贝web01的nginx和php配置文件到web02" class="headerlink" title="3.2.3 拷贝web01的nginx和php配置文件到web02"></a>3.2.3 拷贝web01的nginx和php配置文件到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/nginx /etc/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/php-fpm.d /etc/</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-拷贝代码目录到web02"><a href="#3-2-4-拷贝代码目录到web02" class="headerlink" title="3.2.4 拷贝代码目录到web02"></a>3.2.4 拷贝代码目录到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tar zcf code.tar.gz /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># scp code.tar.gz root@172.16.1.8:/tmp</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-web02上将代码解压到相应目录"><a href="#3-2-5-web02上将代码解压到相应目录" class="headerlink" title="3.2.5 web02上将代码解压到相应目录"></a>3.2.5 web02上将代码解压到相应目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tar xf /tmp/code.tar.gz -C /</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># ll -d /code/</span></span><br><span class="line">drwxr-xr-x 4 www www 112 Aug  1 17:02 /code/</span><br></pre></td></tr></table></figure><h4 id="3-2-6-web02上启动nginx和php-fpm并加入开机自启动"><a href="#3-2-6-web02上启动nginx和php-fpm并加入开机自启动" class="headerlink" title="3.2.6 web02上启动nginx和php-fpm并加入开机自启动"></a>3.2.6 web02上启动nginx和php-fpm并加入开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># systemctl start nginx php-fpm.service </span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable nginx php-fpm.service</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-web访问测试"><a href="#3-2-7-web访问测试" class="headerlink" title="3.2.7 web访问测试"></a>3.2.7 web访问测试</h4><p>修改windows的hosts为web02的地址，然后浏览器访问测试</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第4章-将静态资源挂载到共享存储"><a href="#第4章-将静态资源挂载到共享存储" class="headerlink" title="第4章 将静态资源挂载到共享存储"></a>第4章 将静态资源挂载到共享存储</h2><h3 id="4-1-为什么要拆分静态资源到独立服务器"><a href="#4-1-为什么要拆分静态资源到独立服务器" class="headerlink" title="4.1 为什么要拆分静态资源到独立服务器"></a>4.1 为什么要拆分静态资源到独立服务器</h3><p>当后端的 web 节点出现多台时，会导致用户上传的图片、视频附件等内容仅上传至一台 web 服务器，那么其他的web 服务器则无法访问到该图片</p><h3 id="4-2-新增一台nfs存储解决了什么问题"><a href="#4-2-新增一台nfs存储解决了什么问题" class="headerlink" title="4.2 新增一台nfs存储解决了什么问题"></a>4.2 新增一台nfs存储解决了什么问题</h3><p>1.保证了多台 web 节点静态资源一致。<br>2.有效节省多台 web 节点的存储空间。<br>3.统一管理静态资源，便于后期推送至 CDN 进行静态资源加速</p><h3 id="4-3-多台web节点架构环境准备"><a href="#4-3-多台web节点架构环境准备" class="headerlink" title="4.3 多台web节点架构环境准备"></a>4.3 多台web节点架构环境准备</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150124.png"  alt=""></p><table><thead><tr><th>服务器</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>Nginx+PHP</td></tr><tr><td>web02</td><td>172.16.1.8</td><td>Nginx+PHP</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>MySQL</td></tr><tr><td>nfs</td><td>172.16.1.31</td><td>NFS</td></tr></tbody></table><h3 id="4-4-NFS服务器端配置"><a href="#4-4-NFS服务器端配置" class="headerlink" title="4.4 NFS服务器端配置"></a>4.4 NFS服务器端配置</h3><h4 id="4-4-1安装配置NFS"><a href="#4-4-1安装配置NFS" class="headerlink" title="4.4.1安装配置NFS"></a>4.4.1安装配置NFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum -y install nfs-utils</span></span><br><span class="line">[root@nfs ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data/blog 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/data/zh 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="4-4-2-创建共享目录并进行授权"><a href="#4-4-2-创建共享目录并进行授权" class="headerlink" title="4.4.2 创建共享目录并进行授权"></a>4.4.2 创建共享目录并进行授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># mkdir /data/&#123;blog,zh&#125;</span></span><br><span class="line">[root@nfs ~]<span class="comment"># chown -R www.www /data/</span></span><br></pre></td></tr></table></figure><h4 id="4-4-3-启动nfs服务并加入开机自启"><a href="#4-4-3-启动nfs服务并加入开机自启" class="headerlink" title="4.4.3 启动nfs服务并加入开机自启"></a>4.4.3 启动nfs服务并加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># systemctl start nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl restart rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># showmount -e</span></span><br><span class="line">Export list <span class="keyword">for</span> nfs:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h3 id="4-5-web01端操作步骤如下"><a href="#4-5-web01端操作步骤如下" class="headerlink" title="4.5 web01端操作步骤如下"></a>4.5 web01端操作步骤如下</h3><h4 id="4-5-1-web01安装nfs"><a href="#4-5-1-web01安装nfs" class="headerlink" title="4.5.1 web01安装nfs"></a>4.5.1 web01安装nfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nfs-utils rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web01 ~]<span class="comment"># showmount -e 172.16.1.31   #查看nfs共享信息</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h4 id="4-5-2-查找Wordpress-静态资源存放的位置"><a href="#4-5-2-查找Wordpress-静态资源存放的位置" class="headerlink" title="4.5.2 查找Wordpress 静态资源存放的位置"></a>4.5.2 查找Wordpress 静态资源存放的位置</h4><p>在wordpress的文章里添加一张图片，然后查看图片URL资源</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150201.png"  alt=""></p><p>或者</p><p>复制图片地址打开，查看静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-04-40.png"  alt=""></p><h4 id="4-5-3-备份web01服务器上Wordpress-的静态资源"><a href="#4-5-3-备份web01服务器上Wordpress-的静态资源" class="headerlink" title="4.5.3 备份web01服务器上Wordpress 的静态资源"></a>4.5.3 备份web01服务器上Wordpress 的静态资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/wp-content</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 www www   28 Jan  9  2012 index.php</span><br><span class="line">drwxr-xr-x 4 www www 4096 Feb  8  2018 languages</span><br><span class="line">drwxr-xr-x 3 www www   55 Aug  2 10:59 plugins</span><br><span class="line">drwxr-xr-x 5 www www   88 Aug  2 10:59 themes</span><br><span class="line">drwxr-xr-x 2 www www    6 Aug  1 16:32 upgrade</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads.bak</span><br></pre></td></tr></table></figure><h4 id="4-5-4-备份web01服务器上zh的静态资源"><a href="#4-5-4-备份web01服务器上zh的静态资源" class="headerlink" title="4.5.4 备份web01服务器上zh的静态资源"></a>4.5.4 备份web01服务器上zh的静态资源</h4><p>复制图片地址，找到静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-06-29.png"  alt=""></p><p>备份静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><h4 id="4-5-5-web01客户端执行挂载操作"><a href="#4-5-5-web01客户端执行挂载操作" class="headerlink" title="4.5.5 web01客户端执行挂载操作"></a>4.5.5 web01客户端执行挂载操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><h4 id="4-5-6-将挂载信息加入开机自启"><a href="#4-5-6-将挂载信息加入开机自启" class="headerlink" title="4.5.6 将挂载信息加入开机自启"></a>4.5.6 将挂载信息加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web01 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure><h3 id="4-6-web02端操作与web01一样"><a href="#4-6-web02端操作与web01一样" class="headerlink" title="4.6 web02端操作与web01一样"></a>4.6 web02端操作与web01一样</h3><p>安装配置NFS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install rpcbind nfs-utils</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>备份web02服务器上Wordpress 的静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web02-8 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><p>web02客户端执行挂载操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data/blog   39G  1.8G   38G   5% /code/wordpress/wp-content/uploads</span><br><span class="line">172.16.1.31:/data/zh     39G  1.8G   38G   5% /code/zh/uploads</span><br></pre></td></tr></table></figure><p>拷贝备份的静态资源数据到挂载点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><p>将挂载信息加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web02-8 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lnmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12.LNMP架构</title>
      <link href="/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/"/>
      <url>/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNMP架构"><a href="#LNMP架构" class="headerlink" title="LNMP架构"></a>LNMP架构</h1><h2 id="第1章-LNMP架构概述"><a href="#第1章-LNMP架构概述" class="headerlink" title="第1章 LNMP架构概述"></a>第1章 LNMP架构概述</h2><h3 id="1-1-什么是LNMP"><a href="#1-1-什么是LNMP" class="headerlink" title="1.1 什么是LNMP"></a>1.1 什么是LNMP</h3><p><code>LNMP</code> 是一套技术的组合， L=Linux、 N=Nginx、 M<del>=MySQL、 P</del>=PHP</p><h3 id="1-2-LNMP架构是如何工作的"><a href="#1-2-LNMP架构是如何工作的" class="headerlink" title="1.2 LNMP架构是如何工作的"></a>1.2 LNMP架构是如何工作的</h3><p>首先 Nginx 服务是不能处理动态请求，那么当用户发起动态请求时, Nginx 又是如何进行处理的。<br>当用户发起 http 请求，请求会被 Nginx 处理，如果是静态资源请求 Nginx 则直接返回，如果是动态请求 Nginx 则通过 fastcgi 协议转交给后端的 PHP 程序处理，具体如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/lnmp.png"  alt=""></p><h3 id="1-3-Nginx与Fast-CGI工作流程"><a href="#1-3-Nginx与Fast-CGI工作流程" class="headerlink" title="1.3 Nginx与Fast-CGI工作流程"></a>1.3 Nginx与Fast-CGI工作流程</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx-fast-cgi.png"  alt=""></p><ul><li>1.用户通过 http 协议发起请求，请求会先抵达 LNMP 架构中的 Nginx</li><li>2.Nginx 会根据用户的请求进行判断，这个判断是有 Location 进行完成</li><li>3.判断用户请求的是静态页面， Nginx 直接进行处理</li><li>4.判断用户请求的是动态页面， Nginx 会将该请求交给 fastcgi 协议下发</li><li>5.fastgi 会将请求交给 php-fpm 管理进程, php-fpm 管理进程接收到后会调用具体的工作进程 warrap</li><li>6.warrap 进程会调用 php 程序进行解析,如果只是解析代码 php 直接返回</li><li>7.如果有查询数据库操作，则由 php 连接数据库(用户 密码 IP)发起查询的操作</li><li>8.最终数据由 mysql-&gt;php-&gt;php-fpm-&gt;fastcgi-&gt;nginx-&gt;http-&gt;user</li></ul><h2 id="第2章-LNMP安装部署"><a href="#第2章-LNMP安装部署" class="headerlink" title="第2章 LNMP安装部署"></a>第2章 LNMP安装部署</h2><h3 id="2-1-创建www统一用户"><a href="#2-1-创建www统一用户" class="headerlink" title="2.1 创建www统一用户"></a>2.1 创建www统一用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h3 id="2-2-使用官方仓库安装nginx"><a href="#2-2-使用官方仓库安装nginx" class="headerlink" title="2.2 使用官方仓库安装nginx"></a>2.2 使用官方仓库安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># ps -ef|grep nginx   #更改nginx工作用户为www</span></span><br><span class="line">root       1291      1  0 15:05 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">www        1292   1291  0 15:05 ?        00:00:00 nginx: worker process</span><br><span class="line">root       1697   1517  0 15:20 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure><h3 id="2-3-启动Nginx并加入开机自启动"><a href="#2-3-启动Nginx并加入开机自启动" class="headerlink" title="2.3 启动Nginx并加入开机自启动"></a>2.3 启动Nginx并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h3 id="2-4-使用第三方拓展源安装php7-1"><a href="#2-4-使用第三方拓展源安装php7-1" class="headerlink" title="2.4  使用第三方拓展源安装php7.1"></a>2.4  使用第三方拓展源安装php7.1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum remove php-mysql-5.4 php php-fpm php-common</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h3 id="2-5-配置php-fpm用户与nginx用户保持一致"><a href="#2-5-配置php-fpm用户与nginx用户保持一致" class="headerlink" title="2.5 配置php-fpm用户与nginx用户保持一致"></a>2.5 配置php-fpm用户与nginx用户保持一致</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^user/c user = www' /etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^group/c group = www' /etc/php-fpm.d/www.conf</span></span><br></pre></td></tr></table></figure><h3 id="2-6-启动php-fpm并加入开机自启动"><a href="#2-6-启动php-fpm并加入开机自启动" class="headerlink" title="2.6 启动php-fpm并加入开机自启动"></a>2.6 启动php-fpm并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start php-fpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable php-fpm</span></span><br></pre></td></tr></table></figure><h3 id="2-7-安装Mariadb数据库"><a href="#2-7-安装Mariadb数据库" class="headerlink" title="2.7 安装Mariadb数据库"></a>2.7 安装Mariadb数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install mariadb-server mariadb -y</span></span><br></pre></td></tr></table></figure><h3 id="2-8-启动Mariadb数据库并加入开机自启动"><a href="#2-8-启动Mariadb数据库并加入开机自启动" class="headerlink" title="2.8 启动Mariadb数据库并加入开机自启动"></a>2.8 启动Mariadb数据库并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable mariadb</span></span><br></pre></td></tr></table></figure><h3 id="2-9-配置Mariadb账号密码"><a href="#2-9-配置Mariadb账号密码" class="headerlink" title="2.9 配置Mariadb账号密码"></a>2.9 配置Mariadb账号密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><h3 id="2-10-mysql基础命令"><a href="#2-10-mysql基础命令" class="headerlink" title="2.10 mysql基础命令"></a>2.10 mysql基础命令</h3><p>#登录mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><p>#查看当前mysql有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">|      | localhost |</span><br><span class="line">| root | localhost |</span><br><span class="line">|      | web01     |</span><br><span class="line">| root | web01     |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><p>#使用指定IP登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy -h127.0.0.1</span></span><br></pre></td></tr></table></figure><p>#查看当前有哪些数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.10 sec)</span><br></pre></td></tr></table></figure><p>#查看库里面有哪些表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show tables from mysql;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>#退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="第3章-LNMP环境配置"><a href="#第3章-LNMP环境配置" class="headerlink" title="第3章 LNMP环境配置"></a>第3章 LNMP环境配置</h2><h3 id="3-1-Fastcgi语法"><a href="#3-1-Fastcgi语法" class="headerlink" title="3.1 Fastcgi语法"></a>3.1 Fastcgi语法</h3><p>设置 fastcgi 服务器的地址，该地址可以指定为域名或 IP 地址，以及端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_pass address;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_pass localhost:9000;</span><br><span class="line">fastcgi_pass unix:/tmp/fastcgi.socket;</span><br></pre></td></tr></table></figure><p>设置 fastcgi 默认的首页文件，需要结合 fastcgi_param 一起设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_index name;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>通过 fastcgi_param 设置变量，并将设置的变量传递到后端的 fastcgi 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_param parameter value [if_not_empty];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /code<span class="variable">$fastcgi_script_name</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-最终Nginx连接FastCGI服务器配置如下"><a href="#3-2-最终Nginx连接FastCGI服务器配置如下" class="headerlink" title="3.2 最终Nginx连接FastCGI服务器配置如下"></a>3.2 最终Nginx连接FastCGI服务器配置如下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/conf.d/php.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    server_name php.oldboy.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    root /code;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/php.access.log  main;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-在-code目录下创建index-php文件并访问测试"><a href="#3-3-在-code目录下创建index-php文件并访问测试" class="headerlink" title="3.3 在/code目录下创建index.php文件并访问测试"></a>3.3 在/code目录下创建index.php文件并访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># chown -R www:www /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># cat index.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-检查nginx语法并重加载"><a href="#3-4-检查nginx语法并重加载" class="headerlink" title="3.4 检查nginx语法并重加载"></a>3.4 检查nginx语法并重加载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /code]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-5-绑定hosts然后在浏览器访问"><a href="#3-5-绑定hosts然后在浏览器访问" class="headerlink" title="3.5 绑定hosts然后在浏览器访问"></a>3.5 绑定hosts然后在浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647768645.png"  alt=""></p><h3 id="3-6-测试php和数据库访问是否正常"><a href="#3-6-测试php和数据库访问是否正常" class="headerlink" title="3.6 测试php和数据库访问是否正常"></a>3.6 测试php和数据库访问是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># cat mysql.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">"localhost"</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">"root"</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">"oldboy"</span>;</span><br><span class="line"></span><br><span class="line">    // 创建连接</span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">    // // 检测连接</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">        die(<span class="string">"Connection failed: "</span> . mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"php 连接 MySQL 数据库成功"</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-通过浏览器访问数据库页面"><a href="#3-7-通过浏览器访问数据库页面" class="headerlink" title="3.7 通过浏览器访问数据库页面"></a>3.7 通过浏览器访问数据库页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647969919.png"  alt=""></p><h2 id="第4章-部署博客Wordpress"><a href="#第4章-部署博客Wordpress" class="headerlink" title="第4章 部署博客Wordpress"></a>第4章 部署博客Wordpress</h2><h3 id="4-1-配置Nginx虚拟主机站点"><a href="#4-1-配置Nginx虚拟主机站点" class="headerlink" title="4.1 配置Nginx虚拟主机站点"></a>4.1 配置Nginx虚拟主机站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-重启nginx"><a href="#4-2-重启nginx" class="headerlink" title="4.2 重启nginx"></a>4.2 重启nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="4-3-下载解压wordpress到代码目录"><a href="#4-3-下载解压wordpress到代码目录" class="headerlink" title="4.3 下载解压wordpress到代码目录"></a>4.3 下载解压wordpress到代码目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span></span><br><span class="line">[root@web01 /code]<span class="comment"># tar xf wordpress-4.9.4-zh_CN.tar.gz </span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www:www /code/wordpress</span></span><br></pre></td></tr></table></figure><h3 id="4-4-创建wordpress数据库"><a href="#4-4-创建wordpress数据库" class="headerlink" title="4.4 创建wordpress数据库"></a>4.4 创建wordpress数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database wordpress CHARSET utf8mb4;</span><br><span class="line">&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="4-5-浏览器访问wordpress并部署"><a href="#4-5-浏览器访问wordpress并部署" class="headerlink" title="4.5 浏览器访问wordpress并部署"></a>4.5 浏览器访问wordpress并部署</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649445731.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649478708.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649527536.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649576779.png"  alt=""></p><h2 id="第5章-部署问答网站Wecenter"><a href="#第5章-部署问答网站Wecenter" class="headerlink" title="第5章 部署问答网站Wecenter"></a>第5章 部署问答网站Wecenter</h2><h3 id="5-1-配置Nginx虚拟站点"><a href="#5-1-配置Nginx虚拟站点" class="headerlink" title="5.1 配置Nginx虚拟站点"></a>5.1 配置Nginx虚拟站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wecenter.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    root /code/zh;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;   </span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/zh;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-2-下载解压wecenter并授权"><a href="#5-2-下载解压wecenter并授权" class="headerlink" title="5.2 下载解压wecenter并授权"></a>5.2 下载解压wecenter并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mkdir zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 10393660 Aug  1 11:57 WeCenter_3-3-2.zip</span><br><span class="line">[root@web01 /code]<span class="comment"># unzip WeCenter_3-3-2.zip -d /code/zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www.www /code/</span></span><br></pre></td></tr></table></figure><h3 id="5-3-创建zh数据库"><a href="#5-3-创建zh数据库" class="headerlink" title="5.3 创建zh数据库"></a>5.3 创建zh数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database zh;</span><br><span class="line">&gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="5-4-浏览器访问"><a href="#5-4-浏览器访问" class="headerlink" title="5.4 浏览器访问"></a>5.4 浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650838149.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650873995.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650919599.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650968909.png"  alt=""></p><h3 id="5-5-清除首页安装文件"><a href="#5-5-清除首页安装文件" class="headerlink" title="5.5 清除首页安装文件"></a>5.5 清除首页安装文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rm -rf /code/zh/install</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lnmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11.Nginx常用模块</title>
      <link href="/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
      <url>/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx常用模块"><a href="#Nginx常用模块" class="headerlink" title="Nginx常用模块"></a>Nginx常用模块</h1><h2 id="第1章-目录索引"><a href="#第1章-目录索引" class="headerlink" title="第1章 目录索引"></a>第1章 目录索引</h2><h3 id="1-1-应用场景"><a href="#1-1-应用场景" class="headerlink" title="1.1 应用场景"></a>1.1 应用场景</h3><p>可以使用nginx作为简易的文件下载服务器</p><h3 id="1-2-参数说明"><a href="#1-2-参数说明" class="headerlink" title="1.2 参数说明"></a>1.2 参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Syntax: autoindex on | off;</span><br><span class="line">Default: autoindex off;</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment"># autoindex 常用参数</span></span><br><span class="line">autoindex_exact_size off;</span><br><span class="line">默认为 on， 显示出文件的确切大小，单位是 bytes。</span><br><span class="line">修改为 off，显示出文件的大概大小，单位是 kB 或者 MB 或者 GB。</span><br><span class="line"></span><br><span class="line">autoindex_localtime on;</span><br><span class="line">默认为 off，显示的文件时间为 GMT 时间。</span><br><span class="line">修改为 on， 显示的文件时间为文件的服务器时间。</span><br><span class="line"></span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">默认中文目录乱码，添加上解决乱码</span><br></pre></td></tr></table></figure><h3 id="1-3-配置文件"><a href="#1-3-配置文件" class="headerlink" title="1.3 配置文件"></a>1.3 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat download.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name download.wufei.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/download;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        autoindex on;</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="1-4-创建测试数据"><a href="#1-4-创建测试数据" class="headerlink" title="1.4 创建测试数据"></a>1.4 创建测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /usr/share/nginx/html/download]<span class="comment"># ll</span></span><br><span class="line">total 948</span><br><span class="line">-rw-r--r-- 1 root root 763172 Jun  4 11:07 01.jpg</span><br><span class="line">-rw-r--r-- 1 root root 200027 Jun  4 00:29 02.jpg</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 10.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 1.txt</span><br><span class="line">-rw-r--r-- 1 root root     13 Jul 31 12:07 2.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 3.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 4.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 5.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 6.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 7.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 8.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 9.txt</span><br><span class="line">drwxr-xr-x 2 root root     24 Jul 31 11:50 mdeia</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 11:56 天天.txt</span><br></pre></td></tr></table></figure><h3 id="1-5-访问页面"><a href="#1-5-访问页面" class="headerlink" title="1.5 访问页面"></a>1.5 访问页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564563327944.png"  alt=""></p><h2 id="第2章-状态监控"><a href="#第2章-状态监控" class="headerlink" title="第2章 状态监控"></a>第2章 状态监控</h2><h3 id="2-1-状态字段解释"><a href="#2-1-状态字段解释" class="headerlink" title="2.1 状态字段解释"></a>2.1 状态字段解释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Active connections <span class="comment"># 当前活动的连接数</span></span><br><span class="line">accepts <span class="comment"># 当前的总连接数 TCP</span></span><br><span class="line">handled <span class="comment"># 成功的连接数 TCP</span></span><br><span class="line">requests <span class="comment"># 总的 http 请求数</span></span><br><span class="line">Reading <span class="comment"># 请求</span></span><br><span class="line">Writing <span class="comment"># 响应</span></span><br><span class="line">Waiting <span class="comment"># 等待的请求数，开启了 keepalive</span></span><br><span class="line"><span class="comment"># 注意, 一次 TCP 的连接，可以发起多次 http 的请求, 如下参数可配置进行验证</span></span><br><span class="line">keepalive_timeout 0; <span class="comment"># 类似于关闭长连接</span></span><br><span class="line">keepalive_timeout 65; <span class="comment"># 65s 没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h3 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat /etc/nginx/conf.d/status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-访问测试"><a href="#2-3-访问测试" class="headerlink" title="2.3 访问测试"></a>2.3 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 32 32 31 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><h2 id="第3章-访问控制"><a href="#第3章-访问控制" class="headerlink" title="第3章 访问控制"></a>第3章 访问控制</h2><h3 id="3-1-基于IP的访问控制"><a href="#3-1-基于IP的访问控制" class="headerlink" title="3.1 基于IP的访问控制"></a>3.1 基于IP的访问控制</h3><h4 id="3-1-1-配置语法"><a href="#3-1-1-配置语法" class="headerlink" title="3.1.1 配置语法"></a>3.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许配置语法</span></span><br><span class="line">Syntax: allow address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝配置语法</span></span><br><span class="line">Syntax: deny address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-1-2-案例一：拒绝windwos访问www域名"><a href="#3-1-2-案例一：拒绝windwos访问www域名" class="headerlink" title="3.1.2 案例一：拒绝windwos访问www域名"></a>3.1.2 案例一：拒绝windwos访问www域名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.1;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-windows访问测试403"><a href="#3-1-3-windows访问测试403" class="headerlink" title="3.1.3 windows访问测试403"></a>3.1.3 windows访问测试403</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559603770.png"  alt=""></p><h4 id="3-1-4-使用curl访问测试ok"><a href="#3-1-4-使用curl访问测试ok" class="headerlink" title="3.1.4 使用curl访问测试ok"></a>3.1.4 使用curl访问测试ok</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br></pre></td></tr></table></figure><h4 id="3-1-5-案例二：只允许windows访问，其他全部拒绝"><a href="#3-1-5-案例二：只允许windows访问，其他全部拒绝" class="headerlink" title="3.1.5 案例二：只允许windows访问，其他全部拒绝"></a>3.1.5 案例二：只允许windows访问，其他全部拒绝</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        allow 10.0.1.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-6-windows访问测试ok"><a href="#3-1-6-windows访问测试ok" class="headerlink" title="3.1.6 windows访问测试ok"></a>3.1.6 windows访问测试ok</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559807100.png"  alt=""></p><h4 id="3-1-7-curl访问测试403"><a href="#3-1-7-curl访问测试403" class="headerlink" title="3.1.7 curl访问测试403"></a>3.1.7 curl访问测试403</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.16.0&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-基于用户认证的访问控制"><a href="#3-2-基于用户认证的访问控制" class="headerlink" title="3.2 基于用户认证的访问控制"></a>3.2 基于用户认证的访问控制</h3><h4 id="3-2-1-配置语法"><a href="#3-2-1-配置语法" class="headerlink" title="3.2.1 配置语法"></a>3.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问提示字符串</span></span><br><span class="line">Syntax: auth_basic string| off;</span><br><span class="line">Default: auth_basic off;</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#账户密码文件</span></span><br><span class="line">Syntax: auth_basic_user_file file;</span><br><span class="line">Default: -</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-2-2-配置文件"><a href="#3-2-2-配置文件" class="headerlink" title="3.2.2 配置文件"></a>3.2.2 配置文件</h4><p>安装httpd-tools,该包中携带了 htpasswd 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install httpd-tools</span></span><br></pre></td></tr></table></figure><p>创建新的密码文件, -c 创建新文件 -b 允许命令行输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># htpasswd -b -c /etc/nginx/auth_conf wufei 123456 </span></span><br><span class="line">Adding password <span class="keyword">for</span> user wufei</span><br></pre></td></tr></table></figure><p>nginx 配置调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        auth_basic <span class="string">"Auth access Blog Input your Passwd!"</span>;</span><br><span class="line">        auth_basic_user_file auth_conf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx3.2.3 访问测试</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-访问测试"><a href="#3-2-3-访问测试" class="headerlink" title="3.2.3 访问测试"></a>3.2.3 访问测试</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564560409082.png"  alt=""></p><h2 id="第4章-访问限制"><a href="#第4章-访问限制" class="headerlink" title="第4章 访问限制"></a>第4章 访问限制</h2><p>经常会遇到这种情况，服务器流量异常，负载过大等等。对于大流量恶意的攻击访问， 会带来带宽的浪费，服务器压力，影响业务，往往考虑对同一个 ip 的连接数，请求数、进行限制。<br>ngx_http_limit_conn_module 模块可以根据定义的 key 来限制每个键值的连接数，如同一个 IP 来源的连接数。<br>limit_conn_module 连接频率限制<br>limit_req_module 请求频率限制</p><h3 id="4-1-连接限制"><a href="#4-1-连接限制" class="headerlink" title="4.1 连接限制"></a>4.1 连接限制</h3><h4 id="4-1-1-配置语法"><a href="#4-1-1-配置语法" class="headerlink" title="4.1.1 配置语法"></a>4.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_conn_module</span></span><br><span class="line">Syntax: limit_conn_zone key zone=name:size;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-1-2-配置文件"><a href="#4-1-2-配置文件" class="headerlink" title="4.1.2 配置文件"></a>4.1.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http 标签段定义连接限制</span></span><br><span class="line">http&#123;</span><br><span class="line">      limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># server标签里引用条件</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    limit_conn conn_zone 1;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-1-3-访问测试"><a href="#4-1-3-访问测试" class="headerlink" title="4.1.3 访问测试"></a>4.1.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-1-4-查看日志"><a href="#4-1-4-查看日志" class="headerlink" title="4.1.4 查看日志"></a>4.1.4 查看日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:15:55 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h3 id="4-2请求限制"><a href="#4-2请求限制" class="headerlink" title="4.2请求限制"></a>4.2请求限制</h3><h4 id="4-2-1-配置语法"><a href="#4-2-1-配置语法" class="headerlink" title="4.2.1 配置语法"></a>4.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_req_module</span></span><br><span class="line">Syntax: limit_req_zone key zone=name:size rate=rate;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number [burst=number] [nodelay];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-2-2-配置文件"><a href="#4-2-2-配置文件" class="headerlink" title="4.2.2 配置文件"></a>4.2.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=req_zone:10m rate=1r/s;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    <span class="comment">#limit_conn conn_zone 1;</span></span><br><span class="line"></span><br><span class="line">    limit_req zone=req_zone burst=3 nodelay;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-2-3-访问测试"><a href="#4-2-3-访问测试" class="headerlink" title="4.2.3 访问测试"></a>4.2.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-2-4-查看访问日志"><a href="#4-2-4-查看访问日志" class="headerlink" title="4.2.4 查看访问日志"></a>4.2.4 查看访问日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h5 id="4-2-5-查看错误日志"><a href="#4-2-5-查看错误日志" class="headerlink" title="4.2.5 查看错误日志"></a>4.2.5 查看错误日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -5 /var/log/nginx/error.log</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *191 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *192 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *193 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *194 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *195 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-为什么限制请求的效果更好"><a href="#4-3-为什么限制请求的效果更好" class="headerlink" title="4.3 为什么限制请求的效果更好"></a>4.3 为什么限制请求的效果更好</h3><p>我们先来回顾一下 http 协议的连接与请求</p><p>首先 HTTP 是建立在 TCP 基础之上, 在完成 HTTP 请求需要先建立TCP 三次握手（称为 TCP 连接） ,在连接的基础上在完成 HTTP 的请求。<br>所以多个 HTTP 请求可以建立在一次 TCP 连接之上, 那么我们对请求的精度限制，当然比对一个连接的限制会更加的有效，因为同一时刻只允许一个 TCP 连接进入, 但是同一时刻多个 HTTP 请求可以通过一个 TCP 连接进入。所以针对 HTTP 的请求限制才是比较优的解决方案。</p><h2 id="第5章-location"><a href="#第5章-location" class="headerlink" title="第5章 location"></a>第5章 location</h2><p>使用 Nginx Location 可以控制访问网站的路径, 但一个 server 可以有多个 location 配置, 多个 location 的优先级该如何区分</p><h3 id="5-1-location语法介绍"><a href="#5-1-location语法介绍" class="headerlink" title="5.1 location语法介绍"></a>5.1 location语法介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">location [=|^~|~|~*|!~|!~*|/] /uri/ &#123; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-location语法优先级"><a href="#5-2-location语法优先级" class="headerlink" title="5.2 location语法优先级"></a>5.2 location语法优先级</h3><table><thead><tr><th>匹配符</th><th>匹配规则</th><th>优先级</th></tr></thead><tbody><tr><td>=</td><td>精确匹配</td><td>1</td></tr><tr><td>^~</td><td>以某个字符串开头</td><td>2</td></tr><tr><td>~</td><td>区分大小写的正则匹配</td><td>3</td></tr><tr><td>~*</td><td>不区分大小写的正则匹配</td><td>4</td></tr><tr><td>!~</td><td>区分大小写不匹配的正则</td><td>5</td></tr><tr><td>!~*</td><td>不区分大小写不匹配的正则</td><td>6</td></tr><tr><td>/</td><td>通用匹配，任何请求都会匹配到</td><td>7</td></tr></tbody></table><h3 id="5-3-配置location匹配规则实战"><a href="#5-3-配置location匹配规则实战" class="headerlink" title="5.3 配置location匹配规则实战"></a>5.3 配置location匹配规则实战</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf</span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">           <span class="built_in">return</span> 200  <span class="string">"location / \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location = / &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location = \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /documents/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location /documents/ \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ /images/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ^~ /images/ \n"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ~* \.(gif|jpg|jpeg) \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-4-测试location匹配规则"><a href="#5-4-测试location匹配规则" class="headerlink" title="5.4 测试location匹配规则"></a>5.4 测试location匹配规则</h3><p>#精确匹配=/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">location =</span><br></pre></td></tr></table></figure><p>#没有满足的请求，所以匹配了/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#匹配了/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.html</span></span><br><span class="line">location /documents/</span><br></pre></td></tr></table></figure><p>#没有满足的条件，匹配/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy/documents/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#正则匹配了jpg文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#~*匹配正则不区分大小写优先于/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#^<del>优先匹配于</del>*</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/images/oldboy.jpg</span></span><br><span class="line">location ^~ /images/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10.Nginx服务一</title>
      <link href="/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/"/>
      <url>/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx服务一"><a href="#Nginx服务一" class="headerlink" title="Nginx服务一"></a>Nginx服务一</h1><h2 id="第1章-Nginx介绍"><a href="#第1章-Nginx介绍" class="headerlink" title="第1章 Nginx介绍"></a>第1章 Nginx介绍</h2><h3 id="1-1-什么是Nginx？"><a href="#1-1-什么是Nginx？" class="headerlink" title="1.1 什么是Nginx？"></a>1.1 什么是Nginx？</h3><p>Nginx 是一个开源且高性能、可靠的 Http Web 服务、代理服务。<br>开源: 直接获取源代码<br>高性能: 支持海量并发<br>可靠: 服务稳定</p><h3 id="1-2-为什么选择-Nginx-服务"><a href="#1-2-为什么选择-Nginx-服务" class="headerlink" title="1.2 为什么选择 Nginx 服务"></a>1.2 为什么选择 Nginx 服务</h3><p>Nginx 非常轻量<br>功能模块少 (源代码仅保留 http 与核心模块代码,其余不够核心代码会作为插件来安装)<br>代码模块化 (易读，便于二次开发，对于开发人员非常友好)<br>互联网公司都选择 Nginx</p><ul><li>1.Nginx 技术成熟，具备的功能是企业最常使用而且最需要的</li><li>2.适合当前主流架构趋势, 微服务、云架构、中间层</li><li>3.统一技术栈, 降低维护成本, 降低技术更新成本。</li></ul><h3 id="1-3-Nginx重要特性"><a href="#1-3-Nginx重要特性" class="headerlink" title="1.3 Nginx重要特性"></a>1.3 Nginx重要特性</h3><p>Nginx 采用 Epool 网络模型， Apache 采用 Select 模型<br>Select: 当用户发起一次请求， select 模型就会进行一次遍历扫描，从而导致性能低下。<br>Epool: 当用户发起请求， epool 模型会直接进行处理，效率高效，并无连接限制</p><h3 id="1-4-Nginx应用场景"><a href="#1-4-Nginx应用场景" class="headerlink" title="1.4 Nginx应用场景"></a>1.4 Nginx应用场景</h3><p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx.webp.jpg"  alt=""></p><h2 id="第2章-Nginx安装部署"><a href="#第2章-Nginx安装部署" class="headerlink" title="第2章 Nginx安装部署"></a>第2章 Nginx安装部署</h2><p>Nginx分为几种</p><ul><li>1.源码编译(1.版本随意 2.安装复杂 3.升级繁琐)</li><li>2.epel仓库(1.版本较低 2.安装简单 3.配置不易读)</li><li>3.官方仓库(1.版本较新 2.安装简单 3.配置易读，(推荐)</li></ul><p>下面分别介绍编译安装和yum安装方法</p><h3 id="2-1-编译安装方法"><a href="#2-1-编译安装方法" class="headerlink" title="2.1 编译安装方法"></a>2.1 编译安装方法</h3><h4 id="创建www用户"><a href="#创建www用户" class="headerlink" title="创建www用户"></a>创建www用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel gcc gcc+ -y</span></span><br></pre></td></tr></table></figure><h4 id="下载解压软件包"><a href="#下载解压软件包" class="headerlink" title="下载解压软件包"></a>下载解压软件包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /data/soft -p</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># wget http://nginx.org/download/nginx-1.16.0.tar.gz</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># tar zxvf nginx-1.16.0.tar.gz</span></span><br></pre></td></tr></table></figure><h4 id="配置编译参数"><a href="#配置编译参数" class="headerlink" title="配置编译参数"></a>配置编译参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/nginx-1.16.0/</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --help</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --user=www --group=www --prefix=/opt/nginx-1.16.0/ --with-http_stub_status_module --with-http_ssl_module --with-pcre</span></span><br></pre></td></tr></table></figure><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h4 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ln -s /opt/nginx-1.16.0/ /opt/nginx</span></span><br><span class="line">[root@web01 /opt]<span class="comment"># ll</span></span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx  1 root root  12 Jul 30 10:13 nginx -&gt; nginx-1.16.0</span><br><span class="line">drwxr-xr-x 11 root root 151 Jul 30 10:14 nginx-1.16.0</span><br></pre></td></tr></table></figure><h4 id="检查语法"><a href="#检查语法" class="headerlink" title="检查语法"></a>检查语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx -t</span></span><br><span class="line">nginx: the configuration file /opt/nginx-1.16.0//conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /opt/nginx-1.16.0//conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure><h4 id="检查测试"><a href="#检查测试" class="headerlink" title="检查测试"></a>检查测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># netstat -lntup|grep nginx</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      12828/nginx: master </span><br><span class="line">[root@web01 /opt/nginx]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h3 id="2-2-YUM安装方法"><a href="#2-2-YUM安装方法" class="headerlink" title="2.2 YUM安装方法"></a>2.2 YUM安装方法</h3><h4 id="安装依赖包-1"><a href="#安装依赖包-1" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel -y</span></span><br></pre></td></tr></table></figure><h4 id="配置官方yum源"><a href="#配置官方yum源" class="headerlink" title="配置官方yum源"></a>配置官方yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><h4 id="安装nginx服务"><a href="#安装nginx服务" class="headerlink" title="安装nginx服务"></a>安装nginx服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nginx</span></span><br></pre></td></tr></table></figure><h4 id="启动服务并配置开机自启动"><a href="#启动服务并配置开机自启动" class="headerlink" title="启动服务并配置开机自启动"></a>启动服务并配置开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h4 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h4 id="Nginx启动方式说明"><a href="#Nginx启动方式说明" class="headerlink" title="Nginx启动方式说明"></a>Nginx启动方式说明</h4><p>编译安装启动管理方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -t  <span class="comment">#检查语法</span></span><br><span class="line">nginx     <span class="comment">#启动服务</span></span><br><span class="line">nginx -s reload  <span class="comment">#重新加载服务</span></span><br><span class="line">nginx -s stop    <span class="comment">#关闭服务</span></span><br></pre></td></tr></table></figure><p>yum安装启动管理方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx -t                  <span class="comment">#检查语法</span></span><br><span class="line">systemctl start nginx     <span class="comment">#启动服务</span></span><br><span class="line">systemctl reload nginx    <span class="comment">#重新加载服务</span></span><br><span class="line">systemctl restart nginx   <span class="comment">#重启服务</span></span><br><span class="line">systemctl stop  nginx     <span class="comment">#停止服务</span></span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx重要配置文件说明"><a href="#第3章-Nginx重要配置文件说明" class="headerlink" title="第3章 Nginx重要配置文件说明"></a>第3章 Nginx重要配置文件说明</h2><h3 id="3-1-查看配置文件"><a href="#3-1-查看配置文件" class="headerlink" title="3.1 查看配置文件"></a>3.1 查看配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rpm -ql nginx </span></span><br><span class="line">...................................................                     </span><br><span class="line">/etc/logrotate.d/nginx                     <span class="comment">#nginx日志切割的配置文件</span></span><br><span class="line">/etc/nginx/nginx.conf                      <span class="comment">#nginx主配置文件 </span></span><br><span class="line">/etc/nginx/conf.d                          <span class="comment">#子配置文件</span></span><br><span class="line">/etc/nginx/conf.d/default.conf             <span class="comment">#默认展示的页面一样 </span></span><br><span class="line">/etc/nginx/mime.types                      <span class="comment">#媒体类型 （http协议中的文件类型）</span></span><br><span class="line">/etc/sysconfig/nginx                       <span class="comment">#systemctl 管理 nginx的使用的文件</span></span><br><span class="line">/usr/lib/systemd/system/nginx.service      <span class="comment">#systemctl 管理nginx（开 关 重启 reload)配置文件       </span></span><br><span class="line">/usr/sbin/nginx                            <span class="comment">#nginx命令</span></span><br><span class="line">/usr/share/nginx/html                      <span class="comment">#站点目录 网站的根目录 </span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx                             <span class="comment">#nginx日志 access.log 访问日志</span></span><br><span class="line">...................................................</span><br></pre></td></tr></table></figure><h3 id="3-2-查看已经编译的模块"><a href="#3-2-查看已经编译的模块" class="headerlink" title="3.2 查看已经编译的模块"></a>3.2 查看已经编译的模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br></pre></td></tr></table></figure><h3 id="3-3-配置文件注解"><a href="#3-3-配置文件注解" class="headerlink" title="3.3 配置文件注解"></a>3.3 配置文件注解</h3><p>Nginx 主配置文件/etc/nginx/nginx.conf 是一个纯文本类型的文件，整个配置文件是以区块的形式组织的。一般，每个区块以一对大括号{}来表示开始与结束。<br>Nginx 主配置文件整体分为三块进行学习，分别是<br>CoreModule(核心模块)<br>EventModule(事件驱动模块)<br>HttpCoreModule(http 内核模块)</p><h4 id="3-3-1-第一部分：配置文件主区域配置"><a href="#3-3-1-第一部分：配置文件主区域配置" class="headerlink" title="3.3.1 第一部分：配置文件主区域配置"></a>3.3.1 第一部分：配置文件主区域配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;                    <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  1;            <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;             <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;                        <span class="comment">#nginx运行pid</span></span><br></pre></td></tr></table></figure><h4 id="3-3-2-第二部分：配置文件事件区域"><a href="#3-3-2-第二部分：配置文件事件区域" class="headerlink" title="3.3.2 第二部分：配置文件事件区域"></a>3.3.2 第二部分：配置文件事件区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;  <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-第三部分：配置http区域"><a href="#3-3-3-第三部分：配置http区域" class="headerlink" title="3.3.3 第三部分：配置http区域"></a>3.3.3 第三部分：配置http区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;          <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;                             <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;                       </span></span><br><span class="line">    keepalive_timeout  65;                          <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="comment">#gzip  on;                                      #开启压缩</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;               <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-4-第四部分：子配置文件内容"><a href="#3-3-4-第四部分：子配置文件内容" class="headerlink" title="3.3.4 第四部分：子配置文件内容"></a>3.3.4 第四部分：子配置文件内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># egrep -v "#|^$" /etc/nginx/conf.d/default.conf     </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;             <span class="comment">#指定监听端口</span></span><br><span class="line">    server_name  localhost;      <span class="comment">#指定监听的域名</span></span><br><span class="line">    location / &#123;              </span><br><span class="line">        root   /usr/share/nginx/html;     <span class="comment">#定义站点的目录</span></span><br><span class="line">        index  index.html index.htm;      <span class="comment">#定义首页文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;    <span class="comment">#优雅显示页面信息</span></span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http server location 扩展了解项<br>http{}层下允许有多个 Server{}层，一个 Server{}层下又允许有多个 Location<br>http{} 标签主要用来解决用户的请求与响应。<br>server{} 标签主要用来响应具体的某一个网站。<br>location{} 标签主要用于匹配网站具体 URL 路径</p><h2 id="第4章-Nginx虚拟主机配置实战"><a href="#第4章-Nginx虚拟主机配置实战" class="headerlink" title="第4章 Nginx虚拟主机配置实战"></a>第4章 Nginx虚拟主机配置实战</h2><h3 id="4-1-基于域名的虚拟主机"><a href="#4-1-基于域名的虚拟主机" class="headerlink" title="4.1 基于域名的虚拟主机"></a>4.1 基于域名的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-基于端口的虚拟主机"><a href="#4-2-基于端口的虚拟主机" class="headerlink" title="4.2 基于端口的虚拟主机"></a>4.2 基于端口的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       82;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-基于IP的虚拟主机"><a href="#4-3-基于IP的虚拟主机" class="headerlink" title="4.3 基于IP的虚拟主机"></a>4.3 基于IP的虚拟主机</h3><p>添加第二IP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.1.11/24 dev eth0</span><br></pre></td></tr></table></figure><p>配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/nginx.conf    </span></span><br><span class="line"></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.7:81;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.11:82;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第5章-Nginx虚拟主机配置优化"><a href="#第5章-Nginx虚拟主机配置优化" class="headerlink" title="第5章 Nginx虚拟主机配置优化"></a>第5章 Nginx虚拟主机配置优化</h2><p>所有配置都写入一个配置文件维护起来比较麻烦，如果修改错了，影响整个服务起不来，所以我们应该拆分nginx的配置文件为各个子配置</p><h3 id="5-1-Nginx主配置文件"><a href="#5-1-Nginx主配置文件" class="headerlink" title="5.1 Nginx主配置文件"></a>5.1 Nginx主配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;    <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-编辑子配置文件www、blog、bbs"><a href="#5-2-编辑子配置文件www、blog、bbs" class="headerlink" title="5.2 编辑子配置文件www、blog、bbs"></a>5.2 编辑子配置文件www、blog、bbs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 02-blog.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/blog;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-创建代码目录及首页"><a href="#5-3-创建代码目录及首页" class="headerlink" title="5.3 创建代码目录及首页"></a>5.3 创建代码目录及首页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># mkdir /usr/share/nginx/html/&#123;www,blog,bbs&#125;</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "www" &gt; /usr/share/nginx/html/www/index.html</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "blog" &gt; /usr/share/nginx/html/blog/index.html </span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "bbs" &gt; /usr/share/nginx/html/bbs/index.html</span></span><br></pre></td></tr></table></figure><h3 id="5-4-检查语法重启服务"><a href="#5-4-检查语法重启服务" class="headerlink" title="5.4 检查语法重启服务"></a>5.4 检查语法重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-5-配置-etc-hosts文件"><a href="#5-5-配置-etc-hosts文件" class="headerlink" title="5.5 配置/etc/hosts文件"></a>5.5 配置/etc/hosts文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="5-6-访问测试"><a href="#5-6-访问测试" class="headerlink" title="5.6 访问测试"></a>5.6 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br><span class="line">[root@web01 ~]<span class="comment"># curl blog.oldboy.com</span></span><br><span class="line">blog</span><br><span class="line">[root@web01 ~]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">bbs</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx状态模块"><a href="#第6章-Nginx状态模块" class="headerlink" title="第6章 Nginx状态模块"></a>第6章 Nginx状态模块</h2><p>nginx状态模块： –with-http_stub_status_module</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># tail -1 /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com  status.oldboy.com</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 25 25 22 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><p>nginx状态信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Active connections  <span class="comment">#当前活动的连接数</span></span><br><span class="line">accepts             <span class="comment">#当前连接总数TCP</span></span><br><span class="line">handled             <span class="comment">#成功的连接数TCP</span></span><br><span class="line">requests            <span class="comment">#总的HTTP请求数</span></span><br><span class="line"></span><br><span class="line">Reading             <span class="comment">#请求</span></span><br><span class="line">Writing             <span class="comment">#响应</span></span><br><span class="line">Waiting             <span class="comment">#等待的请求数，开启了keepalive</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：一次TCP的连接，可以发起多次的http请求，如下参数可配置验证</span></span><br><span class="line">keepalive——timeout 0;   <span class="comment">#类似与关闭长连接</span></span><br><span class="line">keepalive——timeout 65;  <span class="comment">#65s没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h2 id="第7章-Nginx日志"><a href="#第7章-Nginx日志" class="headerlink" title="第7章 Nginx日志"></a>第7章 Nginx日志</h2><p>日志字段解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$remote_addr</span> <span class="comment"># 记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$remote_user</span> <span class="comment"># 记录客户端用户名</span></span><br><span class="line"><span class="variable">$time_local</span> <span class="comment"># 记录通用的本地时间</span></span><br><span class="line"><span class="variable">$time_iso8601</span> <span class="comment"># 记录 ISO8601 标准格式下的本地时间</span></span><br><span class="line"><span class="variable">$request</span> <span class="comment"># 记录请求的方法以及请求的 http 协议</span></span><br><span class="line"><span class="variable">$status</span> <span class="comment"># 记录请求状态码(用于定位错误信息)</span></span><br><span class="line"><span class="variable">$body_bytes_sent</span> <span class="comment"># 发送给客户端的资源字节数，不包括响应头的大小</span></span><br><span class="line"><span class="variable">$bytes_sent</span> <span class="comment"># 发送给客户端的总字节数</span></span><br><span class="line"><span class="variable">$msec</span> <span class="comment"># 日志写入时间。单位为秒，精度是毫秒。</span></span><br><span class="line"><span class="variable">$http_referer</span> <span class="comment"># 记录从哪个页面链接访问过来的</span></span><br><span class="line"><span class="variable">$http_user_agent</span> <span class="comment"># 记录客户端浏览器相关信息</span></span><br><span class="line"><span class="variable">$http_x_forwarded_for</span> <span class="comment">#记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$request_length</span> <span class="comment"># 请求的长度（包括请求行， 请求头和请求正文）。</span></span><br><span class="line"><span class="variable">$request_time</span> <span class="comment"># 请求花费的时间，单位为秒，精度毫秒</span></span><br><span class="line"><span class="comment"># 注:如果 Nginx 位于负载均衡器， nginx 反向代理之后， web 服务器无法直接获取到客 户端真实的 IP 地址。</span></span><br><span class="line"><span class="comment"># $remote_addr 获取的是反向代理的 IP 地址。 反向代理服务器在转发请求的 http 头信息中，</span></span><br><span class="line"><span class="comment"># 增加 X-Forwarded-For 信息，用来记录客户端 IP 地址和客户端请求的服务器地址。</span></span><br></pre></td></tr></table></figure><p>nginx不停服务进行切割日志：</p><ol><li><p>编辑切割日志脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># cat nginx_log.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#01.设置日志文件存放目录</span></span><br><span class="line">log_path=/var/<span class="built_in">log</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.设置日志命令变量</span></span><br><span class="line">YESTERDAY=`date -d <span class="string">"yesterday"</span> +%Y-%m-%d_%S`</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.日志命令变量</span></span><br><span class="line">nginx_cmd=<span class="string">"/usr/sbin/nginx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#04.重命令日志文件</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/access.log <span class="variable">$&#123;log_path&#125;</span>/access.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/error.log  <span class="variable">$&#123;log_path&#125;</span>/error.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#05.重新打开一个新的日志文件</span></span><br><span class="line"><span class="variable">$&#123;nginx_cmd&#125;</span> -s reopen</span><br></pre></td></tr></table></figure></li><li><p>设置定时任务，每天晚12点切割</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#定时切割nginx日志文件</span></span><br><span class="line">0 0 * * * /bin/bash /server/scripts/nginx_log.sh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9.HTTP服务</title>
      <link href="/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTP服务"><a href="#HTTP服务" class="headerlink" title="HTTP服务"></a>HTTP服务</h1><h2 id="第1章-用户访问流程"><a href="#第1章-用户访问流程" class="headerlink" title="第1章 用户访问流程"></a>第1章 用户访问流程</h2><p>在浏览器输入想要访问的<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名</a>之后，浏览器会进行<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名解析</a>获得IP地址，在经过TCP的连接，实现数据的传输就会有两种报文，及请求报文和响应报文。最终才能实现通信。因此想要实现通信，就得先弄懂DNS的解析原理以及TCP连接通道的流程。</p><p>访问网站流程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">00. 客户端  浏览器输入网址信息点击回车(www.oldboyedu.com)</span><br><span class="line">01. 客户端  完成域名的解析过程(DNS) </span><br><span class="line">02. 客户端  直接访问相应网站服务器  建立TCP三次握手过程</span><br><span class="line">03. 客户端  访问网站服务器         发送HTTP请求报文  多次</span><br><span class="line">04. 服务端  响应客户端请求         回复HTTP响应报文  多次</span><br><span class="line">05. 客户端  浏览器看到网站页面</span><br><span class="line">06. 客户端  结束访问网站过程       完成TCP四次挥手过程</span><br></pre></td></tr></table></figure><p>关键名词</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.域名</span><br><span class="line">2.DNS域名解析</span><br><span class="line">3.TCP三次握手</span><br><span class="line">4.TCP四次挥手</span><br><span class="line">5.HTTP请求报文</span><br><span class="line">6.HTTP响应报文</span><br></pre></td></tr></table></figure><h2 id="第2章-DNS域名解析"><a href="#第2章-DNS域名解析" class="headerlink" title="第2章 DNS域名解析"></a>第2章 DNS域名解析</h2><h3 id="2-1-DNS-介绍"><a href="#2-1-DNS-介绍" class="headerlink" title="2.1 DNS 介绍"></a>2.1 DNS 介绍</h3><p><code>域名系统 (Domain Name Server)</code>。在Internet上域名与IP地址之间是一一对应的，域名虽然便于人们记忆，但机器之间只能互相认识IP地址，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，DNS就是进行域名解析的服务器。</p><p>它的主要作用是负责把网站域名解析为对应的IP地址<br>例如:把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a>解析为对应的IP地址记录如1.1.1.1,这个从域名到IP的解析过程称为A记录,即Address Record<br>DNS常用记录类型主要有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@记录</span><br><span class="line">A记录</span><br><span class="line">CNAME记录</span><br></pre></td></tr></table></figure><p>阿里云的DNS解析界面</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-445161470b1607f5.webp.jpg"  alt=""></p><p>DNS解析流程图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/DNS.webp.jpg"  alt=""></p><p>使用dig命令追踪DNS解析过程</p><p>安装dig命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="built_in">bind</span>-utils -y</span><br></pre></td></tr></table></figure><p>使用dig命令追踪：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei ~]<span class="comment"># dig www.baidu.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-74.el7_6.1 &lt;&lt;&gt;&gt; www.baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 61542</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 5, ADDITIONAL: 5</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.baidu.com.5INCNAMEwww.a.shifen.com.</span><br><span class="line">www.a.shifen.com.5INA14.215.177.38</span><br><span class="line">www.a.shifen.com.5INA14.215.177.39</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">a.shifen.com.5INNSns3.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns4.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns2.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns5.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns1.a.shifen.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns1.a.shifen.com.5INA61.135.165.224</span><br><span class="line">ns2.a.shifen.com.5INA220.181.33.32</span><br><span class="line">ns3.a.shifen.com.5INA112.80.255.253</span><br><span class="line">ns4.a.shifen.com.5INA14.215.177.229</span><br><span class="line">ns5.a.shifen.com.5INA180.76.76.95</span><br><span class="line"></span><br><span class="line">;; Query time: 2 msec</span><br><span class="line">;; SERVER: 10.0.1.254<span class="comment">#53(10.0.1.254)</span></span><br><span class="line">;; WHEN: Tue Jul 30 15:01:32 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 260</span><br></pre></td></tr></table></figure><h3 id="2-2-DNS-解析流程"><a href="#2-2-DNS-解析流程" class="headerlink" title="2.2 DNS 解析流程"></a>2.2 DNS 解析流程</h3><p>1) 第一步:</p><p>客户端用户在浏览器里输入<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>网址后回车,系统首先会查找系统本地的DNS缓存及host文件信息,确定是否存在<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的IP解析记录,如果有就直接获取到IP地址,然后去访问这个IP地址对应的<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的服务器.一般第一次请求时,DNS缓存是没有解析记录的,而hosts多为内部临时测试使用.</p><p>2) 第二步:</p><p>如果客户端本地DNS缓存及本地hosts文件没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,那么,系统会把浏览器的解析请求发送给在客户端本地设置的DNS服务器地址解析,通常称次DNS为LDNS即local DNS,如果LDNS服务器的本地缓存存有对应的解析记录就会直接返回给IP地址给客户端:如果没有,则LDNS会负责继续请求其他的DNS服务器.</p><p>3) 第三步:</p><p>LDNS从DNS系统的(“.”)根开始请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,根DNS服务器在全球一共有13台,根服务器下面是没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名解析记录的,但是根下面有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的顶级域名.com的解析记录,因此,根会把.com对应的DNS服务器地址返回给LDNS.</p><p>4) 第四步:</p><p>LDNS获取到.com对应的DNS服务器地址后,就会去.com服务器请求<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,.而com服务器下面也没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,但是有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名的解析记录,因此.com服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址返回给DNS.</p><p>5) 第五步:</p><p>同理,LDNS获取到<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址后,就会去<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>服务器请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名对应的DNS服务器是该域名的授权DNS服务器,这个DNS服务器正是企业购买域名时用于管理解析的服务器,这个服务器会有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的解析记录,如果此时没有,就表示企业还没有对这个域名做解析,即网站服务器还没有架设好.</p><p>6) 第六步:</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名DNS服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给LDNS.</p><p>7) 第七步:</p><p>LDNS把来自授权DNS服务器的与<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给客户端浏览器,并且LDNS会在本地把域名和IP对应解析记录缓存起来,以便下一次更快的返回相同解析请求的记录.至此,整个DNS的解析流程就完成了.</p><h2 id="第3章-TCP-IP-协议"><a href="#第3章-TCP-IP-协议" class="headerlink" title="第3章 TCP/IP 协议"></a>第3章 TCP/IP 协议</h2><h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IP7.webp.jpg"  alt=""></p><h3 id="TCP-IP四层模型"><a href="#TCP-IP四层模型" class="headerlink" title="TCP/IP四层模型"></a>TCP/IP四层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564471603972.png"  alt=""></p><h3 id="TCP-IP每层包含的协议"><a href="#TCP-IP每层包含的协议" class="headerlink" title="TCP/IP每层包含的协议"></a>TCP/IP每层包含的协议</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IPxieyi.webp.jpg"  alt=""></p><h3 id="TCP报文格式"><a href="#TCP报文格式" class="headerlink" title="TCP报文格式"></a>TCP报文格式</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCPbaowen.webp.jpg"  alt=""></p><h3 id="TCP-IP三次握手"><a href="#TCP-IP三次握手" class="headerlink" title="TCP/IP三次握手"></a>TCP/IP三次握手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_3woshou.webp.jpg"  alt=""></p><h3 id="TCP-IP四次挥手"><a href="#TCP-IP四次挥手" class="headerlink" title="TCP/IP四次挥手"></a>TCP/IP四次挥手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_4huishou.webp.jpg"  alt=""></p><h2 id="第4章-HTTP协议"><a href="#第4章-HTTP协议" class="headerlink" title="第4章 HTTP协议"></a>第4章 HTTP协议</h2><p>URL：全称为Uniform Resource Location，中文翻译为统一资源定位符</p><p>URI：全称为Uniform Resource Identifier，中文翻译为统一资源标识符</p><p>URL和URI关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docs.ansible.com   / ansible/latest/user_guide/playbooks_reuse_roles.html</span><br><span class="line">URL                  URI</span><br></pre></td></tr></table></figure><h3 id="4-1-静态资源"><a href="#4-1-静态资源" class="headerlink" title="4.1 静态资源"></a>4.1 静态资源</h3><p>特点说明:</p><p>1)  网页内容是固定不变的，因此，容易被搜索引擎收录（容易被用户找到）（优点）。<br>2)  因为网页没有数据库的支持，所以在网站制作和维护方面的工作量较大，当网站信息量很大时，<br>完全依靠静态网页比较困难（缺点）。<br>3)  网页的交互性较差，在程序的功能实现方面有较大的限制（缺点）。<br>4)  当客户端向服务器请求数据时，服务器会直接从磁盘文件系统上返回数据（不做任何解析）。</p><h3 id="4-2-动态资源"><a href="#4-2-动态资源" class="headerlink" title="4.2 动态资源"></a>4.2 动态资源</h3><p>要什么信息,需要进行查询数据库进行解析后发送给客户端<br>查看班级人员信息表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">班级   人名   年龄   学历</span><br><span class="line">sz-01  张三   18     高中   ---&gt; 数据库中 oldboy=123  &lt;--- post </span><br><span class="line">sz-01  李四   20     大专   </span><br><span class="line"></span><br><span class="line">班级   人员   年龄   学历</span><br><span class="line">代码信息直接调用数据库的内容</span><br><span class="line">1) 采用动态网页技术的网站可以实现更多的功能，如用户注册、用户登录、在线调查、</span><br><span class="line">   投票、用户管理、订单处理、发博文等。</span><br><span class="line">2) 动态资源页面会出现 <span class="string">"?"</span> <span class="string">"&amp;"</span>, 不便于被搜索引擎收录</span><br><span class="line">3) 接收到用户请求,需要让动态服务和数据库服务进行处理</span><br></pre></td></tr></table></figure><h3 id="4-3-伪静态资源-动态页面"><a href="#4-3-伪静态资源-动态页面" class="headerlink" title="4.3 伪静态资源(动态页面)"></a>4.3 伪静态资源(动态页面)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 可以便于搜索引擎进行收录</span><br><span class="line">2. 有数据库服务支持,实现网页交互功能</span><br></pre></td></tr></table></figure><h2 id="第5章-HTTP请求方法"><a href="#第5章-HTTP请求方法" class="headerlink" title="第5章 HTTP请求方法"></a>第5章 HTTP请求方法</h2><table><thead><tr><th>HTTP 方法</th><th>作用描述</th></tr></thead><tbody><tr><td>GET</td><td>客户端请制定资源信息，服务器返回指定资源</td></tr><tr><td>HEAD</td><td>只请求响应报文中的HTTP首部</td></tr><tr><td>POST</td><td>将客户端的数据提交到服务器，例如：注册表单</td></tr><tr><td>PUT</td><td>用从客户端向服务器传送的数据取代指定的文档内容</td></tr><tr><td>DELETE</td><td>请求服务器删除Request-URL 所标识的资源</td></tr><tr><td>MOVE</td><td>请求服务器将指定的页面移至另一个网络地址</td></tr></tbody></table><h2 id="第6章HTTP响应状态码"><a href="#第6章HTTP响应状态码" class="headerlink" title="第6章HTTP响应状态码"></a>第6章HTTP响应状态码</h2><h3 id="6-1-响应状态码分类"><a href="#6-1-响应状态码分类" class="headerlink" title="6.1 响应状态码分类"></a>6.1 响应状态码分类</h3><table><thead><tr><th>状态码范围</th><th>作用描述</th></tr></thead><tbody><tr><td>100-199</td><td>用于指定客户端相应的某些动作</td></tr><tr><td>200-299</td><td>用于表示请求成功</td></tr><tr><td>300-399</td><td>用于已经移动的文件，并且常被包含在定位头信息中指定新的地址信息</td></tr><tr><td>400-499</td><td>用于指定客户端的错误</td></tr><tr><td>500-599</td><td>用于指定服务器的错误</td></tr></tbody></table><h3 id="6-2-常见响应状态码解释"><a href="#6-2-常见响应状态码解释" class="headerlink" title="6.2 常见响应状态码解释"></a>6.2 常见响应状态码解释</h3><table><thead><tr><th>状态代码</th><th>详细描述</th></tr></thead><tbody><tr><td>200-OK</td><td>服务器成功返回网页，这是成功的HTTP请求返回的标注状态码</td></tr><tr><td>301-Moved Permanently</td><td>永久跳转，请求的页面已永久移动到新位置。服务器返回此响应（对GET和HEAD请求的响应）时，会自动将请求者转到新位置</td></tr><tr><td>403-Forbidden</td><td>（禁止）服务器拒绝请求，一般为服务器或服务权限不足所致</td></tr><tr><td>404-Not Found</td><td>（未找到）服务器找不到请求的网页,可能是客户端了服务器上不存在的资源所致</td></tr><tr><td>500-Internal Server Error</td><td>（服务器内部错误）服务器遇到错误，无法完成请求</td></tr><tr><td>502-Bad Gateway</td><td>（错误网关）服务器作为网关和代理，从上游服务器收到无效响应</td></tr><tr><td>503-Server Unavailable</td><td>（服务器不可用）服务器目前无法使用（由于超载或者停机维护）。通常，这只是暂时状态</td></tr></tbody></table><p>使用curl查看状态码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="第7章-HTTP请求报文"><a href="#第7章-HTTP请求报文" class="headerlink" title="第7章 HTTP请求报文"></a>第7章 HTTP请求报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>请求行</td><td>请求方法 URL 协议版本</td></tr><tr><td>请求头</td><td>字段名 1：值 1<br />字段名 2：值 2<br />例如：<br />Accept:image/gif image/jpeg<br />Accept-Language:zh-cn</td></tr><tr><td>空行</td><td>空白无内容</td></tr><tr><td>请求报文主体</td><td>GET 方法没有请求报文主体，POST方法才有</td></tr></tbody></table><h3 id="7-1-请求行"><a href="#7-1-请求行" class="headerlink" title="7.1 请求行"></a>7.1 请求行</h3><table><thead><tr><th>请求方法字段示例</th><th>URL 字段示例</th><th>HTTP 协议版本</th></tr></thead><tbody><tr><td>GET</td><td>/index.html</td><td>HTTP/1.1</td></tr></tbody></table><h3 id="7-2-请求头"><a href="#7-2-请求头" class="headerlink" title="7.2 请求头"></a>7.2 请求头</h3><table><thead><tr><th>请求头部信息</th><th>说明</th></tr></thead><tbody><tr><td>Accpet:image/gif,image/jpeg</td><td>媒体类型</td></tr><tr><td>Accpet-Language:zh-ch</td><td>语言类型</td></tr><tr><td>Accpet-Encoding:gzip,deflate</td><td>支持压缩</td></tr><tr><td>User-Agent:Mozilla/4.0(comatible;MSIE6.0;Window NT)</td><td>客户端类型</td></tr><tr><td>Host:<a href="http://www.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a></td><td>主机名</td></tr></tbody></table><h3 id="7-3-空行"><a href="#7-3-空行" class="headerlink" title="7.3 空行"></a>7.3 空行</h3><p>无内容</p><h3 id="7-4-请求主体"><a href="#7-4-请求主体" class="headerlink" title="7.4 请求主体"></a>7.4 请求主体</h3><h2 id="第8章-HTTP响应报文"><a href="#第8章-HTTP响应报文" class="headerlink" title="第8章 HTTP响应报文"></a>第8章 HTTP响应报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>起始行</td><td>协议及版本号，数字状态码，状态信息</td></tr><tr><td>响应头部</td><td>字段名 1：值 1<br />字段名 2：值 2</td></tr><tr><td>空行</td><td>无内容</td></tr><tr><td>响应报文主体</td><td><html><br />……<br /></html></td></tr></tbody></table><h3 id="8-1-起始行"><a href="#8-1-起始行" class="headerlink" title="8.1 起始行"></a>8.1 起始行</h3><p>响应报文的起始行也叫状态行,用来说明服务器相应客户端请求的状态,一般为协议及版本号,数字状态码,状态情况,例如:HTTP/1.1 200 OK</p><h3 id="8-2-响应头部"><a href="#8-2-响应头部" class="headerlink" title="8.2 响应头部"></a>8.2 响应头部</h3><p>和请求报文类似,起始行的后面一般有若干个头部字段,每隔头部字段都包含一个名字和一个值,两者之间用冒号分隔.头部结尾也是以空行结束.常见的头部信息有</p><h3 id="8-3-空行"><a href="#8-3-空行" class="headerlink" title="8.3 空行"></a>8.3 空行</h3><p>无内容</p><h3 id="8-4-响应主体"><a href="#8-4-响应主体" class="headerlink" title="8.4 响应主体"></a>8.4 响应主体</h3><p>响应报文主体装载了要返回给客户端的数据,这些数据可以是文本,也可以使二进制的图片视频,下面是响应报文主体的html格式文本</p><h2 id="第9章-用户访问网站流程总结"><a href="#第9章-用户访问网站流程总结" class="headerlink" title="第9章 用户访问网站流程总结"></a>第9章 用户访问网站流程总结</h2><ol><li>用户输入域名-&gt;浏览器跳转-&gt;浏览器缓存-&gt;Hosts 文件-&gt;DNS 解析( 递归查询 | 迭代查询 )<br>客户端向服务端发起查询-&gt;递归查询<br>服务端向服务端发起查询-&gt;迭代查询</li><li>由浏览器向服务端发起 TCP 连接（三次握手）</li></ol><ul><li>客户端 –&gt;请求包连接-syn=1 seq=x 服务端</li><li>服务端 –&gt;向应客户端 syn=1 ack=x+1 seq=y 客户端</li><li>客户端 –&gt;建立连接 ack=y+1 seq=x+1 服务端</li></ul><ol start="3"><li>客户端发起 http 请求：</li></ol><ul><li>1）请求的方法是什么： Get 获取</li><li>2）请求的 Host 主机是： <a href="http://www.oldboyedu.com" target="_blank" rel="noopener">www.oldboyedu.com</a></li><li>3）请求的资源是什么： /index.html</li><li>4）请求的端口是什么： 默认 http 是 80 https 443</li><li>5）请求携带的参数是： 属性（请求的类型、压缩、认证、浏览器信息、等等）</li><li>6）请求最后的空行</li></ul><ol start="4"><li>服务端响应的内容是：</li></ol><ul><li>1）服务端响应使用的 WEB 服务软件</li><li>2）服务端响应请求文件的类型</li><li>3）服务端响应请求的文件是否进行压缩</li><li>4）服务端响应请求的主机是否进行长连接</li><li>5）客户端向服务端发起 TCP 断开（四次挥手）</li></ul><ol start="5"><li>客户端向服务端发起 TCP 断开（四次挥手）</li></ol><ul><li>客户端 –&gt; 断开请求 fin=1 seq=x –&gt; 服务端</li><li>服务端 –&gt; 响应断开 fin=1 ack=x+1 seq=y –&gt; 客户端</li><li>服务端 –&gt; 断开连接 fin=1 ack=x+1 seq=z –&gt; 客户端</li><li>客户端 –&gt; 确认断开 fin=1 ack=z+1 seq=sj –&gt; 服务端</li></ul>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.Ansible roles 角色</title>
      <link href="/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/"/>
      <url>/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="第9课-Ansible-roles-角色（7-25）"><a href="#第9课-Ansible-roles-角色（7-25）" class="headerlink" title="第9课 Ansible roles 角色（7/25）"></a>第9课 Ansible roles 角色（7/25）</h1><h2 id="第1章-ansible-roles-介绍"><a href="#第1章-ansible-roles-介绍" class="headerlink" title="第1章 ansible roles 介绍"></a>第1章 ansible roles 介绍</h2><p>官方地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html</a></p><h2 id="第2章-角色目录结构"><a href="#第2章-角色目录结构" class="headerlink" title="第2章 角色目录结构"></a>第2章 角色目录结构</h2><h3 id="2-1-目录说明"><a href="#2-1-目录说明" class="headerlink" title="2.1 目录说明"></a>2.1 目录说明</h3><p>官方的目录结构定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment">#  cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── nfs                   <span class="comment">#角色名称</span></span><br><span class="line">│   ├── files             <span class="comment">#存放需要copy的文件</span></span><br><span class="line">│   ├── handlers          <span class="comment">#触发任务剧本</span></span><br><span class="line">│   ├── tasks             <span class="comment">#具体任务剧本</span></span><br><span class="line">│   ├── templates         <span class="comment">#模版文件</span></span><br><span class="line">│   └── vars              <span class="comment">#存放变量文件</span></span><br></pre></td></tr></table></figure><h3 id="2-2-创建项目目录"><a href="#2-2-创建项目目录" class="headerlink" title="2.2 创建项目目录"></a>2.2 创建项目目录</h3><p>因为每台服务器都需要创建用户组，用户，安装服务等，所以我们可以将这些相同的任务单独创建一个init初始化角色。</p><p>角色规划：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.init      <span class="comment">#初始化任务</span></span><br><span class="line">2.rsync     <span class="comment">#rsync服务</span></span><br><span class="line">3.nfs       <span class="comment">#nfs服务</span></span><br><span class="line">4.lsyncd    <span class="comment">#lsyncd服务</span></span><br></pre></td></tr></table></figure><p>创建角色目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># mkdir &#123;init,nfs,rsync,lsyncd&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p </span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── lsyncd</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── nfs</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">└── rsync</span><br><span class="line">    ├── files</span><br><span class="line">    ├── handlers</span><br><span class="line">    ├── tasks</span><br><span class="line">    ├── templates</span><br><span class="line">    └── vars</span><br><span class="line"></span><br><span class="line">24 directories, 0 files</span><br></pre></td></tr></table></figure><h2 id="第3章-编写init角色剧本"><a href="#第3章-编写init角色剧本" class="headerlink" title="第3章 编写init角色剧本"></a>第3章 编写init角色剧本</h2><h3 id="3-1-创建项目目录"><a href="#3-1-创建项目目录" class="headerlink" title="3.1 创建项目目录"></a>3.1 创建项目目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br></pre></td></tr></table></figure><h3 id="3-2-编写tasks任务剧本"><a href="#3-2-编写tasks任务剧本" class="headerlink" title="3.2 编写tasks任务剧本"></a>3.2 编写tasks任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.关闭SElinux</span></span><br><span class="line">- name: 01_disabled_selinux</span><br><span class="line">  selinux:</span><br><span class="line">    state: disabled</span><br><span class="line">  tags: 01_disabled_selinux</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.关闭防火墙</span></span><br><span class="line">- name: 02_disabled_firewalld</span><br><span class="line">  service: </span><br><span class="line">    name: firewalld</span><br><span class="line">    enabled: no</span><br><span class="line">  tags: 02_disabled_firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.优化yum源</span></span><br><span class="line">- name: 03_configure_yum</span><br><span class="line">  get_url:  </span><br><span class="line">    url: <span class="string">"&#123;&#123; item.url &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/Centos-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/CentOS-Base.repo'</span> &#125;</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/epel-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/epel.repo'</span> &#125;</span><br><span class="line"></span><br><span class="line">  tags: 03_configure_yum</span><br><span class="line">  </span><br><span class="line"><span class="comment">#04.安装常用软件</span></span><br><span class="line">- name: 04_install_service</span><br><span class="line">  yum: </span><br><span class="line">    name: <span class="string">"&#123;&#123; packages &#125;&#125;"</span></span><br><span class="line">  vars:</span><br><span class="line">    packages:</span><br><span class="line">    - wget</span><br><span class="line">    - tree</span><br><span class="line">    - ntpdate</span><br><span class="line">    - vim</span><br><span class="line">    - bash-completion</span><br><span class="line">    - bash-completion-extras</span><br><span class="line">    - lrzsz</span><br><span class="line">    - net-tools</span><br><span class="line">    - sysstat</span><br><span class="line">    - iotop</span><br><span class="line">    - iftop</span><br><span class="line">    - htop</span><br><span class="line">    - unzip</span><br><span class="line">    - telnet</span><br><span class="line">  tags: 04_install_service</span><br><span class="line"></span><br><span class="line"><span class="comment">#05.创建用户组</span></span><br><span class="line">- name: 05_create_group</span><br><span class="line">  group: </span><br><span class="line">    name: www</span><br><span class="line">    gid: 666</span><br><span class="line">  tags: 05_create_group</span><br><span class="line"></span><br><span class="line"><span class="comment">#06.创建用户</span></span><br><span class="line">- name: 06_create_user</span><br><span class="line">  user: </span><br><span class="line">    name: www</span><br><span class="line">    uid: 666</span><br><span class="line">    group: www</span><br><span class="line">    shell: /sbin/nologin</span><br><span class="line">    create_home: no</span><br><span class="line">  tags: 06_create_user</span><br><span class="line"></span><br><span class="line"><span class="comment">#07.创建目录</span></span><br><span class="line">- name: 07_create_dir</span><br><span class="line">  file:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    state: directory</span><br><span class="line">    mode: 0755</span><br><span class="line">    owner: www</span><br><span class="line">    group: www</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span> &#125;</span><br><span class="line">  tags: 07_create_dir</span><br><span class="line"></span><br><span class="line"><span class="comment">#08.创建时间同步任务</span></span><br><span class="line">- name: 08_cron_ntpdate</span><br><span class="line">  cron: </span><br><span class="line">    name: Time_Update</span><br><span class="line">    minute: <span class="string">"*/5"</span></span><br><span class="line">    job: <span class="string">'/sbin/ntpdate ntp1.aliyun.com &gt;/dev/null 2&gt;&amp;1'</span></span><br><span class="line">  tags: 08_cron_ntpdate    </span><br><span class="line"></span><br><span class="line"><span class="comment">#09.优化ssh</span></span><br><span class="line">- name: 09_copy_ssh</span><br><span class="line">  template: </span><br><span class="line">    src: sshd_config.j2</span><br><span class="line">    dest: /etc/ssh/sshd_config </span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart sshd</span><br><span class="line">  tags: 09_copy_ssh</span><br></pre></td></tr></table></figure><h3 id="3-3-编写jinja模版文件"><a href="#3-3-编写jinja模版文件" class="headerlink" title="3.3 编写jinja模版文件"></a>3.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">└── sshd_config.j2</span><br></pre></td></tr></table></figure><h3 id="3-4-编写handlers文件"><a href="#3-4-编写handlers文件" class="headerlink" title="3.4 编写handlers文件"></a>3.4 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart sshd </span><br><span class="line">  service: </span><br><span class="line">    name: sshd </span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="3-5-写主任务文件"><a href="#3-5-写主任务文件" class="headerlink" title="3.5 写主任务文件"></a>3.5 写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat init.yml </span></span><br><span class="line">- hosts: webserver </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br></pre></td></tr></table></figure><h3 id="3-6-最终目录"><a href="#3-6-最终目录" class="headerlink" title="3.6 最终目录"></a>3.6 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree init</span></span><br><span class="line">init</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── sshd_config.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 43 Jul 25 22:06 init.yml</span><br></pre></td></tr></table></figure><h2 id="第4章-编写rsync角色剧本"><a href="#第4章-编写rsync角色剧本" class="headerlink" title="第4章 编写rsync角色剧本"></a>第4章 编写rsync角色剧本</h2><h3 id="4-1-创建对应目录"><a href="#4-1-创建对应目录" class="headerlink" title="4.1 创建对应目录"></a>4.1 创建对应目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/rsync_server/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><p>服务器端</p><h3 id="4-2-编写任务剧本"><a href="#4-2-编写任务剧本" class="headerlink" title="4.2 编写任务剧本"></a>4.2 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.拷贝rsync配置文件和密码文件</span></span><br><span class="line">- name: 01_backup &amp; copy</span><br><span class="line">  template:</span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"/etc/&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">    mode: <span class="string">"&#123;&#123; item.mode &#125;&#125;"</span></span><br><span class="line">    backup: yes</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; src: <span class="string">'rsyncd.conf.j2'</span>,  dest: <span class="string">'rsyncd.conf'</span>,  mode: <span class="string">'0644'</span> &#125;</span><br><span class="line">    - &#123; src: <span class="string">'rsync.passwd.j2'</span>, dest: <span class="string">'rsync.passwd'</span>, mode: <span class="string">'0600'</span> &#125;</span><br><span class="line">  notify: </span><br><span class="line">    - restart rsyncd</span><br><span class="line">  tags: 01_copy_rsync.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rsyncd服务</span></span><br><span class="line">- name: 02_start_rsyncd</span><br><span class="line">  service:</span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rsyncd</span><br></pre></td></tr></table></figure><h3 id="4-3-编写jinja模版文件"><a href="#4-3-编写jinja模版文件" class="headerlink" title="4.3 编写jinja模版文件"></a>4.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── rsyncd.conf.j2</span><br><span class="line">└── rsync.passwd.j2</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsyncd.conf.j2 </span></span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsync.passwd.j2 </span></span><br><span class="line">&#123;&#123; rsync_user &#125;&#125;:&#123;&#123; rsync_passwd &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-编写变量文件"><a href="#4-4-编写变量文件" class="headerlink" title="4.4 编写变量文件"></a>4.4 编写变量文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/vars]<span class="comment"># cat main.yml </span></span><br><span class="line">rsync_user: rsync_backup</span><br><span class="line">rsync_passwd: oldboy</span><br></pre></td></tr></table></figure><h3 id="4-5-编写handlers文件"><a href="#4-5-编写handlers文件" class="headerlink" title="4.5 编写handlers文件"></a>4.5 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/handlers]<span class="comment"># cat main.yml</span></span><br><span class="line">- name: restart rsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-6-编写主任务文件"><a href="#4-6-编写主任务文件" class="headerlink" title="4.6 编写主任务文件"></a>4.6 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat rsync_server.yml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - rsync_server</span><br></pre></td></tr></table></figure><h3 id="4-7-最终目录"><a href="#4-7-最终目录" class="headerlink" title="4.7 最终目录"></a>4.7 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 rsync_server</span></span><br><span class="line">rsync_server</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   ├── rsyncd.conf.j2</span><br><span class="line">│   └── rsync.passwd.j2</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 61 Jul 25 23:08 rsync_server.yml</span><br></pre></td></tr></table></figure><h2 id="第5章-编写nfs角色剧本"><a href="#第5章-编写nfs角色剧本" class="headerlink" title="第5章 编写nfs角色剧本"></a>第5章 编写nfs角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/&#123;nfs_server,nfs_client&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="5-1-nfs服务器端"><a href="#5-1-nfs服务器端" class="headerlink" title="5.1 nfs服务器端"></a>5.1 nfs服务器端</h3><h4 id="5-1-1-编写任务剧本"><a href="#5-1-1-编写任务剧本" class="headerlink" title="5.1.1 编写任务剧本"></a>5.1.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs服务</span></span><br><span class="line">- name: 01_install_nfs_utils</span><br><span class="line">  yum: </span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs_utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02. copy conf</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: exports.j2</span><br><span class="line">    dest: /etc/exports</span><br><span class="line">    mode: 0600</span><br><span class="line">  notify:</span><br><span class="line">    - reloaded nfs</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动rpc nfs服务</span></span><br><span class="line">- name: 03_start_rpc_nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  loop:</span><br><span class="line">    - rpcbind</span><br><span class="line">    - nfs-server</span><br><span class="line">  tags: 03_start_rpc_nfs</span><br></pre></td></tr></table></figure><h4 id="5-1-2-编写jinja模版文件"><a href="#5-1-2-编写jinja模版文件" class="headerlink" title="5.1.2 编写jinja模版文件"></a>5.1.2 编写jinja模版文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/templates]<span class="comment"># cat exports.j2 </span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/backup 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="5-1-3-编写handlers文件"><a href="#5-1-3-编写handlers文件" class="headerlink" title="5.1.3 编写handlers文件"></a>5.1.3 编写handlers文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: reloaded nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item.name &#125;&#125;"</span></span><br><span class="line">    state: <span class="string">"&#123;&#123; item.state &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; name: <span class="string">'rpcbind'</span>, state: <span class="string">'restarted'</span> &#125;</span><br><span class="line">    - &#123; name: <span class="string">'nfs-server'</span>, state: <span class="string">'reloaded'</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-编写主任务文件"><a href="#5-1-4-编写主任务文件" class="headerlink" title="5.1.4 编写主任务文件"></a>5.1.4 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_server.yml</span></span><br><span class="line">- hosts: nfs_server </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - nfs_server</span><br></pre></td></tr></table></figure><h4 id="5-1-5-最终目录"><a href="#5-1-5-最终目录" class="headerlink" title="5.1.5 最终目录"></a>5.1.5 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_server/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_server/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">│   └── exports.j2</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 59 Jul 25 23:53 nfs_server.yml</span><br></pre></td></tr></table></figure><h3 id="5-2-nfs客户端"><a href="#5-2-nfs客户端" class="headerlink" title="5.2 nfs客户端"></a>5.2 nfs客户端</h3><h4 id="5-2-1-编写任务剧本"><a href="#5-2-1-编写任务剧本" class="headerlink" title="5.2.1 编写任务剧本"></a>5.2.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_client/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs</span></span><br><span class="line">- name: 01_install_nfs-utils</span><br><span class="line">  yum:</span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rpc服务</span></span><br><span class="line">- name: 02_start_rpc</span><br><span class="line">  service: </span><br><span class="line">    name: rpcbind</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rpc</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">- name: 03_mount_dir</span><br><span class="line">  mount:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    fstype: nfs</span><br><span class="line">    opts: defaults</span><br><span class="line">    state: mounted</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span>,   src: <span class="string">'172.16.1.31:/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span>, src: <span class="string">'172.16.1.31:/backup'</span> &#125;</span><br><span class="line">  tags: 03_mount_dir</span><br></pre></td></tr></table></figure><h4 id="5-2-2-编写主任务文件"><a href="#5-2-2-编写主任务文件" class="headerlink" title="5.2.2 编写主任务文件"></a>5.2.2 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_client.yml</span></span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  roles:</span><br><span class="line">   <span class="comment"># - init</span></span><br><span class="line">    - nfs_client</span><br></pre></td></tr></table></figure><h4 id="5-2-3-最终目录"><a href="#5-2-3-最终目录" class="headerlink" title="5.2.3 最终目录"></a>5.2.3 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_client/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_client/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 58 Jul 26 00:33 nfs_client.yml</span><br></pre></td></tr></table></figure><h2 id="第6章-编写lsyncd角色剧本"><a href="#第6章-编写lsyncd角色剧本" class="headerlink" title="第6章 编写lsyncd角色剧本"></a>第6章 编写lsyncd角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/lsyncd/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="6-1-编写任务剧本"><a href="#6-1-编写任务剧本" class="headerlink" title="6.1 编写任务剧本"></a>6.1 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装lsyncd服务</span></span><br><span class="line">- name: 01_install_lsyncd</span><br><span class="line">  yum:</span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_lsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.copy lsyncd的配置文件</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: lsyncd.conf.j2</span><br><span class="line">    dest: /etc/lsyncd.conf</span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart lsyncd</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动lsyncd服务</span></span><br><span class="line">- name: 03_start_lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: started</span><br><span class="line">  tags: 03_start_lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-2-编写jinja模版文件"><a href="#6-2-编写jinja模版文件" class="headerlink" title="6.2 编写jinja模版文件"></a>6.2 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd]<span class="comment"># tree templates/</span></span><br><span class="line">templates/</span><br><span class="line">└── lsyncd.conf.j2</span><br><span class="line"></span><br><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/templates]<span class="comment"># cat lsyncd.conf.j2 </span></span><br><span class="line">settings &#123;</span><br><span class="line">  logfile = <span class="string">"/var/log/lsyncd/lsyncd.log"</span>,</span><br><span class="line">  statusFile = <span class="string">"/var/log/lsyncd/lsyncd.status"</span>,</span><br><span class="line">  inotifyMode = <span class="string">"CloseWrite"</span>,</span><br><span class="line">  maxProcesses = 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/data"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::data"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/backup"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::backup"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-编写handlers文件"><a href="#6-3-编写handlers文件" class="headerlink" title="6.3 编写handlers文件"></a>6.3 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="6-4-编写主任务文件"><a href="#6-4-编写主任务文件" class="headerlink" title="6.4 编写主任务文件"></a>6.4 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat lsyncd.yml </span></span><br><span class="line">- hosts: lsyncd_server</span><br><span class="line">  roles:</span><br><span class="line">    <span class="comment">#- init</span></span><br><span class="line">    - lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-5-最终目录"><a href="#6-5-最终目录" class="headerlink" title="6.5 最终目录"></a>6.5 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 lsyncd</span></span><br><span class="line">lsyncd</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── lsyncd.conf.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 56 Jul 26 01:20 lsyncd.yml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> ansible roles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7.Ansible playbook 剧本</title>
      <link href="/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/"/>
      <url>/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Ansible-playbook-剧本"><a href="#Ansible-playbook-剧本" class="headerlink" title="Ansible playbook 剧本"></a>Ansible playbook 剧本</h1><h2 id="第1章-playbook剧本简介"><a href="#第1章-playbook剧本简介" class="headerlink" title="第1章 playbook剧本简介"></a>第1章 playbook剧本简介</h2><h3 id="1-1-什么是playbook剧本？"><a href="#1-1-什么是playbook剧本？" class="headerlink" title="1.1 什么是playbook剧本？"></a>1.1 什么是playbook剧本？</h3><p> <code>Playbooks</code>与Ad-Hoc相比，是一种完全不同的运用Ansible的方式，而且是非常之强大的；也是系统ansible命令的集合，其利用yaml语言编写，运行过程，<code>ansbile-playbook</code>命令根据自上而下的顺序依次执行。<br>简单来说，Playbooks 是一种简单的配置管理系统与多机器部署系统的基础。与现有的其他系统有不同之处，且非常适合于复杂应用的部署。</p><p><code>playbook</code>翻译过来就是“剧本”， 那 <code>playbook</code> 组成如下</p><ul><li>play: 定义的是主机的角色</li><li>task: 定义的是具体执行的任务</li><li>playbook: 由一个或多个 play 组成，一个 play 可以包含多个 task 任务。简单理解为: 使用不同的模块完成一件事情</li></ul><h3 id="1-2-playbook的优势"><a href="#1-2-playbook的优势" class="headerlink" title="1.2 playbook的优势"></a>1.2 playbook的优势</h3><ol><li>功能比ansible命令更强大</li><li>能很好的控制先后执行顺序, 以及依赖关系</li><li>语法展现更加的直观</li><li>ansible命令无法持久使用， playbook 可以持久使用</li></ol><h2 id="第2章-playbook剧本的书写格式"><a href="#第2章-playbook剧本的书写格式" class="headerlink" title="第2章 playbook剧本的书写格式"></a>第2章 playbook剧本的书写格式</h2><h3 id="2-1-剧本的组成"><a href="#2-1-剧本的组成" class="headerlink" title="2.1 剧本的组成"></a>2.1 剧本的组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-86ef95f63d01ed09.webp"  alt=""></p><h3 id="2-2-注意缩进"><a href="#2-2-注意缩进" class="headerlink" title="2.2 注意缩进"></a>2.2 注意缩进</h3><ol><li>合理的信息缩进，两个空格表示一个缩进关系</li><li>一定不要使用tab</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题一</span><br><span class="line">_ _ 标题二</span><br><span class="line">_ _ _ _ 标题三</span><br></pre></td></tr></table></figure><h3 id="2-3-冒号"><a href="#2-3-冒号" class="headerlink" title="2.3 冒号"></a>2.3 冒号</h3><p>所有冒号后面都要加上空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name=www gid=666</span><br></pre></td></tr></table></figure><h3 id="2-4-短横线-列表功能"><a href="#2-4-短横线-列表功能" class="headerlink" title="2.4 短横线 - 列表功能"></a>2.4 短横线 - 列表功能</h3><p>使用短横线构成列表信息,短横线后面需要有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 老张</span><br><span class="line">  男</span><br><span class="line">- 爱好</span><br><span class="line">  游泳</span><br></pre></td></tr></table></figure><h2 id="第3章-剧本书写"><a href="#第3章-剧本书写" class="headerlink" title="第3章 剧本书写"></a>第3章 剧本书写</h2><h3 id="3-1-剧本文件名格式"><a href="#3-1-剧本文件名格式" class="headerlink" title="3.1 剧本文件名格式"></a>3.1 剧本文件名格式</h3><p>剧本文件拓展名为xxx.yaml<br>1.方便识别文件是一个剧本文件<br>2.文件编写时会有颜色提示</p><h3 id="3-2-创建剧本"><a href="#3-2-创建剧本" class="headerlink" title="3.2 创建剧本"></a>3.2 创建剧本</h3><p>练习: 写一个剧本，使用yum/copy/service等模块安装部署启动rsync服务</p><h4 id="3-2-1-服务端操作步骤"><a href="#3-2-1-服务端操作步骤" class="headerlink" title="3.2.1 服务端操作步骤"></a>3.2.1 服务端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.备份/etc/rsyncd.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes"</span></span><br></pre></td></tr></table></figure><p>3.copy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"src=/server/scripts/rsyncd.conf dest=/etc/"</span></span><br></pre></td></tr></table></figure><p>4.创建www组和www用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.41 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>5.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><p>6.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"content='rsync_backup:oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>7.启动服务，加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m service -a <span class="string">"name=rsyncd state=started enabled=yes"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-客户端操作步骤"><a href="#3-2-2-客户端操作步骤" class="headerlink" title="3.2.2 客户端操作步骤"></a>3.2.2 客户端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m copy -a <span class="string">"content='oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>3.创建用户和组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.31 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>4.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-rsync剧本"><a href="#3-2-3-rsync剧本" class="headerlink" title="3.2.3 rsync剧本"></a>3.2.3 rsync剧本</h4><p>服务端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br></pre></td></tr></table></figure><p>客户端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinet.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-create passwd</span><br><span class="line">    copy: content=<span class="string">'oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 06-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br></pre></td></tr></table></figure><h4 id="3-2-4-NFS剧本"><a href="#3-2-4-NFS剧本" class="headerlink" title="3.2.4 NFS剧本"></a>3.2.4 NFS剧本</h4><p>NFS服务器端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-copy nfs exports</span><br><span class="line">    copy: src=/server/scripts/playbook/exports dest=/etc/</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=<span class="string">'666'</span></span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 06-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started</span><br><span class="line">  - name: 07-start nfs</span><br><span class="line">    service: name=nfs state=started</span><br><span class="line">  - name: 08-enable rpcbind                                                                                                                                      </span><br><span class="line">    systemd: name=rpcbind enabled=yes</span><br><span class="line">  - name: 09-enable nfs </span><br><span class="line">    systemd: name=nfs enabled=yes</span><br></pre></td></tr></table></figure><p>NFS客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_client.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 03-add user</span><br><span class="line">    user: name=www create_home=no shell=/sbin/nologin group=www uid=666</span><br><span class="line">  - name: 04-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 05-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started enabled=yes</span><br><span class="line">  - name: 06-mount data</span><br><span class="line">    mount: path=/data src=172.16.1.31:/data fstype=nfs opts=defaults state=mounted</span><br></pre></td></tr></table></figure><h3 id="3-3-检查剧本语法"><a href="#3-3-检查剧本语法" class="headerlink" title="3.3 检查剧本语法"></a>3.3 检查剧本语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-4-模拟执行剧本（常用）"><a href="#3-4-模拟执行剧本（常用）" class="headerlink" title="3.4 模拟执行剧本（常用）"></a>3.4 模拟执行剧本（常用）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-5-执行剧本"><a href="#3-5-执行剧本" class="headerlink" title="3.5 执行剧本"></a>3.5 执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook nfs_client.yaml</span><br></pre></td></tr></table></figure><h2 id="第4章-剧本高级-特性"><a href="#第4章-剧本高级-特性" class="headerlink" title="第4章 剧本高级 特性"></a>第4章 剧本高级 特性</h2><p>我们已经体验了使用剧本来安装服务，但是上述的简单ansible剧本存在一定的局限性<br>1.全部写成一行虽然看起来整洁，但是有一些特性没办法使用<br>2.比如同时需要创建多个目录，启动多个服务，需要重复写多条语句<br>3.参数不直观，不好修改<br>4.剧本里写的是启动服务，如果配置文件发生变化，重复执行不会重启服务</p><p>不过没有关系，等学习了下面的高级特性，然后我们可以换一种写法</p><h3 id="4-1-循环"><a href="#4-1-循环" class="headerlink" title="4.1 循环"></a>4.1 循环</h3><p>官方网址: </p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html</a></p><p>使用情景：<br>1.需要创建多个目录<br>2.需要启动多个服务<br>具体实现：</p><p>1.同时创建2个目录/data和/backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat loops.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-create dir data and backuo</span><br><span class="line">    file:</span><br><span class="line">      path: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop: </span><br><span class="line">    - /data</span><br><span class="line">    - /backup</span><br></pre></td></tr></table></figure><p>2.同时启动2个服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat service.yaml </span></span><br><span class="line">- hosts: 172.16.1.31</span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-start rpcbind nfs service</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs</span><br></pre></td></tr></table></figure><h3 id="4-2-变量"><a href="#4-2-变量" class="headerlink" title="4.2 变量"></a>4.2 变量</h3><p>官方网址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html</a></p><p>使用情景：<br>1.自定义某个名称，在任务中会多次引用<br>2.从主机收集的系统信息中提取某个变量并引用，例如网卡信息</p><p>具体实现：</p><p>1.自定义一个文件名变量，创建文件时引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat vars.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  vars:</span><br><span class="line">    file_name: oldboy</span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-use vars create dir</span><br><span class="line">    file: </span><br><span class="line">      path: <span class="string">"/root/&#123;&#123; file_name &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br></pre></td></tr></table></figure><p>2.使用变量获取主机的eth1地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat ip.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-get ip address</span><br><span class="line">    shell: <span class="string">"echo &#123;&#123; ansible_facts.eth1.ipv4.address &#125;&#125; &gt; /root/ip_eth1.txt"</span></span><br></pre></td></tr></table></figure><p>3.在主机hosts中指定变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br><span class="line"></span><br><span class="line">[backup:vars]</span><br><span class="line">file_name=<span class="string">"oldzhang"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-注册变量"><a href="#4-3-注册变量" class="headerlink" title="4.3 注册变量"></a>4.3 注册变量</h3><p>使用情景：将配置文件的状态注册成一个变量，方便其他任务引用</p><p>具体实现：<br>1.将配置文件的状态注册成一个服务变量并打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat register.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-register rsync status</span><br><span class="line">    shell: netstat -lntp|grep rsync</span><br><span class="line">    register: rsync_port</span><br><span class="line"></span><br><span class="line">  - name: 02-out rsync status</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; rsync_port.stdout_lines &#125;&#125;"</span></span><br></pre></td></tr></table></figure><p>2.打印多个信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- hosts: nfs</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-echo hostname</span><br><span class="line">    shell: <span class="built_in">echo</span> $(hostname)</span><br><span class="line">    register: nfs_hostname    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">  - name: debug nfs_hostname</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; item &#125;&#125;"</span>      <span class="comment">#</span></span><br><span class="line">    loop:</span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.stdout &#125;&#125;"</span></span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.cmd &#125;&#125;"</span></span><br></pre></td></tr></table></figure><h3 id="4-4-服务管理"><a href="#4-4-服务管理" class="headerlink" title="4.4 服务管理"></a>4.4 服务管理</h3><p>官网地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change</a></p><p>使用情景：如果配置文件发生了变化，就重启服务，否则什么都不操作<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># </span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-5-标签"><a href="#4-5-标签" class="headerlink" title="4.5 标签"></a>4.5 标签</h3><p>使用情景：从我们指定的任务开始执行，而不是从头到尾执行一遍<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">    tags: 01-install-rsync</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">    tags: 02-backup-rsyncd.conf</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">    tags: 03-copy-rsyncd.conf</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">    tags: 04-create-passwd</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">    tags: 05-add-group</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">    tags: 06-add-user</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">    tags: 07-create-backup-dir</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">    tags: 08-create-data-dir</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br><span class="line">    tags: 09-start-rsyncd</span><br></pre></td></tr></table></figure><p>调用标签：<br>1.打印出playbook里要执行的所有标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --list-tags rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>2.指定运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>3.指定运行多个标签，使用逗号隔开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd,07-create-backup-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>4.指定不运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --skip-tags=08-create-data-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><h2 id="第5章-运行检查规范"><a href="#第5章-运行检查规范" class="headerlink" title="第5章 运行检查规范"></a>第5章 运行检查规范</h2><h3 id="5-1-检查剧本拼写规范"><a href="#5-1-检查剧本拼写规范" class="headerlink" title="5.1 检查剧本拼写规范"></a>5.1 检查剧本拼写规范</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check check.yam</span><br></pre></td></tr></table></figure><h3 id="5-2-检查这个任务执行的主机对象"><a href="#5-2-检查这个任务执行的主机对象" class="headerlink" title="5.2 检查这个任务执行的主机对象"></a>5.2 检查这个任务执行的主机对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-host check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-3-检查这个剧本需要执行哪些任务"><a href="#5-3-检查这个剧本需要执行哪些任务" class="headerlink" title="5.3 检查这个剧本需要执行哪些任务"></a>5.3 检查这个剧本需要执行哪些任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tasks check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-4-检查这个剧本执行哪些tag"><a href="#5-4-检查这个剧本执行哪些tag" class="headerlink" title="5.4 检查这个剧本执行哪些tag"></a>5.4 检查这个剧本执行哪些tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tags check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-5-模拟执行剧本"><a href="#5-5-模拟执行剧本" class="headerlink" title="5.5 模拟执行剧本"></a>5.5 模拟执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C check.yaml</span><br></pre></td></tr></table></figure><h2 id="第6章-实战剧本部署rsync-nfs-lsyncd"><a href="#第6章-实战剧本部署rsync-nfs-lsyncd" class="headerlink" title="第6章 实战剧本部署rsync/nfs/lsyncd"></a>第6章 实战剧本部署rsync/nfs/lsyncd</h2><h3 id="6-1-rsync-脚本"><a href="#6-1-rsync-脚本" class="headerlink" title="6.1 rsync 脚本"></a>6.1 rsync 脚本</h3><p>rsync 服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  vars:</span><br><span class="line">    rsync_conf_path: <span class="string">'/server/scripts/playbook/rsyncd.conf'</span></span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">    tags: 02-copy</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line">      </span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-create-passwd</span><br><span class="line">    copy: </span><br><span class="line">      content: <span class="string">'rsync_backup:oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 06-create-passwd</span><br><span class="line">  </span><br><span class="line">  - name: 07-start-rsynd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd </span><br><span class="line">      state: started </span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 07-start-rsynd</span><br><span class="line"></span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>rsync 客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinetV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-create-passwd</span><br><span class="line">    copy:</span><br><span class="line">      content: <span class="string">'oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 02-create-passwd</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br></pre></td></tr></table></figure><h3 id="6-2-NFS-脚本"><a href="#6-2-NFS-脚本" class="headerlink" title="6.2 NFS 脚本"></a>6.2 NFS 脚本</h3><p>NFS服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  vars:</span><br><span class="line">    exports_path: <span class="string">'/server/scripts/playbook/exports'</span></span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum: </span><br><span class="line">      name: nfs-utils </span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-yum-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-nfs-exports</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; exports_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">    notify:</span><br><span class="line">      - restart rpcbind</span><br><span class="line">      - restart nfs-server</span><br><span class="line">    tags: 02-copy-nfs-exports</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file:</span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-start-rpc &amp; nfs</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs-server</span><br><span class="line">    tags: 06-start-rpc-nfs</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart rpcbind</span><br><span class="line">    service:</span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: restarted</span><br><span class="line">  - name: restart nfs-server</span><br><span class="line">    service:</span><br><span class="line">      name: nfs-server</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>NFS客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_clientV2.yaml</span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum:</span><br><span class="line">      name: nfs-utils</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 02-create-group</span><br><span class="line">  </span><br><span class="line">  - name: 03-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 03-create-user</span><br><span class="line"></span><br><span class="line">  - name: 04-create-dir</span><br><span class="line">    file: </span><br><span class="line">      path: /data</span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    tags: 04-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 05-start-rpcbind</span><br><span class="line">    service: </span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 05-start-rpcbind</span><br><span class="line"></span><br><span class="line">  - name: 06-mount-data</span><br><span class="line">    mount:</span><br><span class="line">      path: /data</span><br><span class="line">      src: 172.16.1.31:/data</span><br><span class="line">      fstype: nfs</span><br><span class="line">      opts: defaults</span><br><span class="line">      state: mounted</span><br><span class="line">    tags: 06-mount-data</span><br></pre></td></tr></table></figure><h3 id="6-3-lsync-脚本"><a href="#6-3-lsync-脚本" class="headerlink" title="6.3 lsync 脚本"></a>6.3 lsync 脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat lsyncd.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs</span><br><span class="line">  vars: </span><br><span class="line">    lsyncd_conf_path: <span class="string">'/server/scripts/playbook/lsyncd.conf'</span></span><br><span class="line">  tasks:</span><br><span class="line"></span><br><span class="line">  - name: 01-install-lsyncd</span><br><span class="line">    yum:</span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-lsyncd</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-lsyncd.conf</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; lsyncd_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart lsyncd</span><br><span class="line">    tags: 02-copy-lsyncd.conf</span><br><span class="line"></span><br><span class="line">  - name: 03-start-lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 03-start-lsyncd</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> ansible playbook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.ansible服务</title>
      <link href="/2020/04/13/6-ansible%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/04/13/6-ansible%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Ansible服务"><a href="#Ansible服务" class="headerlink" title="Ansible服务"></a>Ansible服务</h1><h2 id="第1章-Ansible介绍"><a href="#第1章-Ansible介绍" class="headerlink" title="第1章 Ansible介绍"></a>第1章 Ansible介绍</h2><h3 id="1-1-什么是Ansible？"><a href="#1-1-什么是Ansible？" class="headerlink" title="1.1 什么是Ansible？"></a>1.1 什么是Ansible？</h3><p><code>ansible</code>是一种自动化运维工具，基于Python开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能，默认通过SSH协议管理机器。 </p><p>ansible是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架，不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。</p><h3 id="1-2-为什么需要Ansible？"><a href="#1-2-为什么需要Ansible？" class="headerlink" title="1.2 为什么需要Ansible？"></a>1.2 为什么需要Ansible？</h3><p><strong>批量管理功能：</strong></p><p>1）可以实现批量系统操作配置</p><p>2）可以实现批量软件服务部署</p><p>3）可以实现批量文件数据分发</p><p>4）可以实现批量系统信息收集</p><p><strong>管理服务意义：</strong></p><p>1）提高工作的效率（部署综合架构） </p><p>2）提高工作准确度</p><p>3）减少维护的成本</p><p>4）减少重复性工作 </p><p><strong>ansible 安装部署简单：</strong></p><p>1）没有配置文件（不需要配置）</p><p>2）不需要启动服务</p><p>3）客户端没有需要部署任务</p><h2 id="第2章-ansible-安装部署"><a href="#第2章-ansible-安装部署" class="headerlink" title="第2章 ansible 安装部署"></a>第2章 ansible 安装部署</h2><p>Ansible的安装部署十分简单，只需要在管理机yum安装就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># yum -y install ansible</span></span><br></pre></td></tr></table></figure><h2 id="第3章-ansible-主机清单"><a href="#第3章-ansible-主机清单" class="headerlink" title="第3章 ansible 主机清单"></a>第3章 ansible 主机清单</h2><p>主机资产清单 <code>/etc/ansible/hosts</code> 文件，用于定义被管理主机的认证信息， 例如 ssh 登录用户名、密码以及 key相关信息。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.主机支持主机名通配以及正则表达式，例如 web[1:3].oldboy.com 代表三台主机</span><br><span class="line">2.主机支持基于非标准的 ssh 端口，例如 web1.oldboy.com:6666</span><br><span class="line">3.主机支持指定变量，可对个别主机的特殊配置，如登陆用户，密码</span><br><span class="line">4.主机组支持指定变量[group_name:vars]，同时支持嵌套[game:children]</span><br></pre></td></tr></table></figure><h3 id="3-1-指定主机组相关配置"><a href="#3-1-指定主机组相关配置" class="headerlink" title="3.1 指定主机组相关配置"></a>3.1 指定主机组相关配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主机组 第一种方式 (已经配置好ssh)</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.31 </span><br><span class="line">172.16.1.41</span><br><span class="line"><span class="comment">#主机+端口+密码 第二种方式（ssh未分发公钥）</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.31 ansible_ssh_port=9999 ansible_ssh_user=root ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line">172.16.1.41 ansible_ssh_port=9999 ansible_ssh_user=root ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line"><span class="comment">#对整个主机组都生效的变量 </span></span><br><span class="line">[webserver:vars]</span><br><span class="line">ansible_ssh_pass=<span class="string">'123456'</span></span><br></pre></td></tr></table></figure><p>我们一般使用，先配置好<code>ssh</code>服务，分发公钥后，再指定主机组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.41 </span><br><span class="line">172.16.1.31 </span><br><span class="line"></span><br><span class="line">[webserver:vars]</span><br><span class="line">ansible_ssh_port=9999</span><br><span class="line">ansible_ssh_user=root</span><br><span class="line">ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line"></span><br><span class="line">[nfs]</span><br><span class="line">172.16.1.31</span><br><span class="line"></span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br></pre></td></tr></table></figure><h2 id="第4章-ansible-常用模块"><a href="#第4章-ansible-常用模块" class="headerlink" title="第4章 ansible 常用模块"></a>第4章 ansible 常用模块</h2><p>ansible 官方网站 ： <a href="https://docs.ansible.com" target="_blank" rel="noopener">https://docs.ansible.com</a></p><p>模块的应用语法格式:<br>ansible 主机名称/主机组名称/主机地址信息/all -m(指定应用的模块信息) 模块名称 -a(指定动作信息) “执行什么动作”</p><h3 id="4-1-ping"><a href="#4-1-ping" class="headerlink" title="4.1 ping"></a>4.1 ping</h3><p>应用场景：测试主机和ansible之间的连通性<br>举例：对webserver主机组测试是否连通</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m ping</span></span><br><span class="line">172.16.1.41 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br><span class="line">172.16.1.31 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-command-简单模块"><a href="#4-2-command-简单模块" class="headerlink" title="4.2 command 简单模块"></a>4.2 command 简单模块</h3><p>应用场景：<br>类似shell,但是只能执行简单的命令，复杂的命令和有些符号并不能识别，用的比较少<br>01.查看主机名，可以执行成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m command -a "hostname"</span></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">backup</span><br><span class="line"></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">nfs</span><br></pre></td></tr></table></figure><p>02.使用awk拼接查看主机IP执行失败</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m command -a "ifconfig eth1|awk 'NR==2&#123;print $2&#125;'"</span></span><br><span class="line">172.16.1.41 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">NR==2&#123;<span class="built_in">print</span> &#125;: Unknown host</span><br><span class="line">ifconfig: `--<span class="built_in">help</span><span class="string">' gives usage information.non-zero return code</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">172.16.1.31 | FAILED | rc=1 &gt;&gt;</span></span><br><span class="line"><span class="string">NR==2&#123;print &#125;: Unknown host</span></span><br><span class="line"><span class="string">ifconfig: `--help'</span> gives usage information.non-zero <span class="built_in">return</span> code</span><br></pre></td></tr></table></figure><h3 id="4-3-shell-万能模块"><a href="#4-3-shell-万能模块" class="headerlink" title="4.3 shell 万能模块"></a>4.3 shell 万能模块</h3><p>万能模块，所有命令都可以执行，和本地执行效果一样</p><h4 id="4-3-1-使用管道查询IP地址"><a href="#4-3-1-使用管道查询IP地址" class="headerlink" title="4.3.1 使用管道查询IP地址"></a>4.3.1 使用管道查询IP地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m shell -a "ifconfig eth1|awk 'NR==2'"</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">        inet 172.16.1.31  netmask 255.255.255.0  broadcast 172.16.1.255</span><br><span class="line"></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">        inet 172.16.1.41  netmask 255.255.255.0  broadcast 172.16.1.255</span><br></pre></td></tr></table></figure><h4 id="4-3-2-批量执行脚本"><a href="#4-3-2-批量执行脚本" class="headerlink" title="4.3.2 批量执行脚本"></a>4.3.2 批量执行脚本</h4><p>在其他主机上创建一个脚本，内容为打印主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; echo.sh &lt;&lt; EOF </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(hostname)</span>"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>然后使用ansible的shell模块批量执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m shell -a "/bin/bash /root/echo.sh"</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">nfs</span><br><span class="line"></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">backup</span><br></pre></td></tr></table></figure><h3 id="4-4-copy-拷贝文件"><a href="#4-4-copy-拷贝文件" class="headerlink" title="4.4 copy 拷贝文件"></a>4.4 copy 拷贝文件</h3><p>1.拷贝ssh-61的/etc/hostname文件到其他主机的/tmp目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"md5sum"</span>: <span class="string">"d61060d5859d1e67541238e8c296938e"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/.ansible/tmp/ansible-tmp-1563897217.78-184562543546238/source"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在copy 文件时修改文件属主和属组信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp owner=oldboy group=oldboy"</span></span><br><span class="line">172.16.1.31 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在copy文件时修改文件的权限信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp mode=0666"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0666"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll /tmp/hostname </span></span><br><span class="line">-rw-rw-rw- 1 oldboy oldboy 7 Jul 23 23:53 /tmp/hostname</span><br></pre></td></tr></table></figure><p>4.创建文件并直接写入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "content='oldboy' dest=/root/oldboy.txt"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"da3a7ab3551120059810d0c7156a8150a0bc245a"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/root/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"md5sum"</span>: <span class="string">"890b185727556f1be31d7fe5ee5ce4dc"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 6, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/.ansible/tmp/ansible-tmp-1563897755.59-265719354438343/source"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># cat oldboy.txt </span></span><br><span class="line">oldboy</span><br></pre></td></tr></table></figure><p>5.复制目录</p><p>src后面目录没有/: 将目录本身以及目录下面的内容都进行远程传输复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m copy -a <span class="string">"src=/data dest=/data"</span></span><br></pre></td></tr></table></figure><p>src后面目录有/: 只将目录下面的内容都进行远程传输复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m copy -a <span class="string">"src=/data/ dest=/data"</span></span><br></pre></td></tr></table></figure><h4 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src <span class="comment">#推送数据的源文件信息</span></span><br><span class="line">dest <span class="comment">#推送数据的目标路径</span></span><br><span class="line">backup <span class="comment">#对推送传输过去的文件，进行备份</span></span><br><span class="line">content <span class="comment">#直接批量在被管理端文件中添加内容</span></span><br><span class="line">group <span class="comment">#将本地文件推送到远端，指定文件属组信息</span></span><br><span class="line">owner <span class="comment">#将本地文件推送到远端，指定文件属主信息</span></span><br><span class="line">mode <span class="comment">#将本地文件推送到远端，指定文件权限信息</span></span><br></pre></td></tr></table></figure><h3 id="4-5-file-设置文件属性"><a href="#4-5-file-设置文件属性" class="headerlink" title="4.5 file 设置文件属性"></a>4.5 file 设置文件属性</h3><h4 id="4-5-1-创建文件夹"><a href="#4-5-1-创建文件夹" class="headerlink" title="4.5.1 创建文件夹"></a>4.5.1 创建文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "path=/root/oldboy state=directory"</span></span><br><span class="line">172.16.1.31 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0755"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/root/oldboy"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 6, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"directory"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@nfs ~]<span class="comment"># ll -d oldboy</span></span><br><span class="line">drwxr-xr-x 2 root root 6 Jul 24 00:10 oldboy</span><br></pre></td></tr></table></figure><h4 id="4-5-2-创建文件并更改属性"><a href="#4-5-2-创建文件并更改属性" class="headerlink" title="4.5.2 创建文件并更改属性"></a>4.5.2 创建文件并更改属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "path=/tmp/oldboy.txt state=touch mode=666 owner=oldboy group=oldboy"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0666"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 0, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll /tmp/oldboy.txt </span></span><br><span class="line">-rw-rw-rw- 1 oldboy oldboy 0 Jul 24 00:12 /tmp/oldboy.txt</span><br></pre></td></tr></table></figure><h4 id="4-5-3-创建软链接"><a href="#4-5-3-创建软链接" class="headerlink" title="4.5.3 创建软链接"></a>4.5.3 创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "src=/root/oldboy.txt path=/root/oldboy.txt_link state=link"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/root/oldboy.txt_link"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0777"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 16, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"link"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll</span></span><br><span class="line">lrwxrwxrwx  1 root root   16 Jul 24 00:19 oldboy.txt_link -&gt; /root/oldboy.txt</span><br></pre></td></tr></table></figure><h4 id="4-5-4-参数说明"><a href="#4-5-4-参数说明" class="headerlink" title="4.5.4 参数说明"></a>4.5.4 参数说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">path <span class="comment">#指定远程主机目录或文件信息</span></span><br><span class="line">recurse <span class="comment">#递归授权</span></span><br><span class="line">state</span><br><span class="line">directory <span class="comment">#在远端创建目录</span></span><br><span class="line">touch <span class="comment">#在远端创建文件</span></span><br><span class="line">link <span class="comment">#link 或 hard 表示创建链接文件</span></span><br><span class="line">absent <span class="comment">#表示删除文件或目录</span></span><br><span class="line">mode <span class="comment">#设置文件或目录权限</span></span><br><span class="line">owner <span class="comment">#设置文件或目录属主信息</span></span><br><span class="line">group <span class="comment">#设置文件或目录属组信息</span></span><br></pre></td></tr></table></figure><h3 id="4-6-script模块"><a href="#4-6-script模块" class="headerlink" title="4.6 script模块"></a>4.6 script模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编写脚本</span></span><br><span class="line">[root@m01 ~]<span class="comment"># mkdir -p /server/scripts</span></span><br><span class="line">[root@m01 ~]<span class="comment"># cat /server/scripts/echo.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/bin/<span class="built_in">echo</span> <span class="string">"<span class="variable">$(hostname)</span>"</span></span><br><span class="line"><span class="comment">#在本地运行模块，等同于在远程执行，不需要将脚本文件进行推送目标主机执行</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m script -a "/server/scripts/echo.sh"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"rc"</span>: 0, </span><br><span class="line">    <span class="string">"stderr"</span>: <span class="string">"Shared connection to 172.16.1.41 closed.\r\n"</span>, </span><br><span class="line">    <span class="string">"stderr_lines"</span>: [</span><br><span class="line">        <span class="string">"Shared connection to 172.16.1.41 closed."</span></span><br><span class="line">    ], </span><br><span class="line">    <span class="string">"stdout"</span>: <span class="string">"backup\r\n"</span>, </span><br><span class="line">    <span class="string">"stdout_lines"</span>: [</span><br><span class="line">        <span class="string">"backup"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-7-cron定时任务模块"><a href="#4-7-cron定时任务模块" class="headerlink" title="4.7 cron定时任务模块"></a>4.7 cron定时任务模块</h3><p>1.创建一条定时任务，添加定时任务时注释信息，防止重复，方便修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' job='/bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1'"</span></span><br><span class="line"></span><br><span class="line">[root@backup ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#Ansible: 主机名</span></span><br><span class="line">* * * * * /bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>2.删除相应定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' state=absent"</span></span><br></pre></td></tr></table></figure><p>3.注释相应定时任务，使定时任务失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' job='/bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1' disabled=yes"</span></span><br><span class="line"></span><br><span class="line">[root@backup ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#Ansible: 主机名</span></span><br><span class="line"><span class="comment">#* * * * * /bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1</span></span><br></pre></td></tr></table></figure><h3 id="4-8-user-和group"><a href="#4-8-user-和group" class="headerlink" title="4.8 user 和group"></a>4.8 user 和group</h3><p>创建用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m group -a "name=BBB gid=777 state=present"</span></span><br></pre></td></tr></table></figure><p>创建用户，并属于组BBB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m user -a "name=BBB uid=777 group=777 shell=/sbin/nologin create_home=no"</span></span><br><span class="line">[root@backup ~]<span class="comment"># id BBB</span></span><br><span class="line">uid=777(BBB) gid=777(BBB) groups=777(BBB)</span><br></pre></td></tr></table></figure><p>user参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uid <span class="comment">#指定用户的 uid</span></span><br><span class="line">group <span class="comment">#指定用户组名称</span></span><br><span class="line">groups <span class="comment">#指定附加组名称</span></span><br><span class="line">password <span class="comment">#给用户添加密码</span></span><br><span class="line">shell <span class="comment">#指定用户登录 shell</span></span><br><span class="line">create_home <span class="comment">#是否创建家目录</span></span><br></pre></td></tr></table></figure><p>group参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name <span class="comment">#指定创建的组名</span></span><br><span class="line">gid <span class="comment">#指定组的 gid</span></span><br><span class="line">state</span><br><span class="line">absent <span class="comment">#移除远端主机的组</span></span><br><span class="line">present <span class="comment">#创建远端主机的组（默认）</span></span><br></pre></td></tr></table></figure><h3 id="4-9-yum"><a href="#4-9-yum" class="headerlink" title="4.9 yum"></a>4.9 yum</h3><p>yum安装ntpdate服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m yum -a "name=ntpdate state=installed"</span></span><br><span class="line">[root@backup ~]<span class="comment"># rpm -qa |grep ntpdate</span></span><br><span class="line">ntpdate-4.2.6p5-28.el7.centos.x86_64</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name       <span class="comment">#指定要安装的软件包名称</span></span><br><span class="line">state      <span class="comment">#指定使用 yum 的方法</span></span><br><span class="line">installed， present <span class="comment">#安装软件包</span></span><br><span class="line">removed， absent <span class="comment">#移除软件包</span></span><br><span class="line">latest     <span class="comment">#安装最新软件包</span></span><br></pre></td></tr></table></figure><h3 id="4-10-service"><a href="#4-10-service" class="headerlink" title="4.10 service"></a>4.10 service</h3><p>启动或关闭服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m  service -a "name=nfs state=restarted enabled=yes"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name <span class="comment"># 定义要启动服务的名称</span></span><br><span class="line">state <span class="comment"># 指定服务状态</span></span><br><span class="line">started <span class="comment">#启动服务</span></span><br><span class="line">stopped <span class="comment">#停止服务</span></span><br><span class="line">restarted <span class="comment">#重启服务</span></span><br><span class="line">reloaded <span class="comment">#重载服务</span></span><br><span class="line">enabled <span class="comment">#开机自启</span></span><br></pre></td></tr></table></figure><h3 id="4-11-mount"><a href="#4-11-mount" class="headerlink" title="4.11 mount"></a>4.11 mount</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=present"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=mounted"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=unmounted"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=absent"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">present <span class="comment"># 开机挂载，仅将挂载配置写入/etc/fstab</span></span><br><span class="line">mounted <span class="comment"># 挂载设备，并将配置写入/etc/fstab</span></span><br><span class="line">unmounted <span class="comment"># 卸载设备，不会清除/etc/fstab 写入的配置</span></span><br><span class="line">absent <span class="comment"># 卸载设备，会清理/etc/fstab 写入的配置</span></span><br></pre></td></tr></table></figure><h3 id="4-12-unarchive-解压"><a href="#4-12-unarchive-解压" class="headerlink" title="4.12 unarchive 解压"></a>4.12 unarchive 解压</h3><p>1.解压远程服务器的压缩包到指定目录</p><p>远程backup服务器创建压缩包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd / &amp;&amp; tar zcf /root/sys.tar.gz etc/fstab etc/hosts</span></span><br><span class="line">[root@ssh-61 /]<span class="comment"># cd </span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r--  1 root root  561 Jul 24 01:24 sys.tar.gz</span><br></pre></td></tr></table></figure><p>ansible本地执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible backup -m unarchive -a "src=/root/sys.tar.gz dest=/tmp/ remote_src=yes"</span></span><br><span class="line">[root@backup /tmp/etc]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 595 Jul 18 17:33 fstab</span><br><span class="line">-rw-r--r-- 1 root root 423 Jul 16 04:43 hosts</span><br></pre></td></tr></table></figure><p>2.把本地文件解压到目标机器指定目录<br>创建命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd / &amp;&amp; tar zcf /root/sys.tar.gz etc/fstab etc/hosts</span></span><br></pre></td></tr></table></figure><p>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible nfs -m unarchive -a "src=/root/sys.tar.gz dest=/backup/"</span></span><br><span class="line">[root@nfs /backup]<span class="comment"># tree etc/</span></span><br><span class="line">etc/</span><br><span class="line">├── fstab</span><br><span class="line">└── hosts</span><br></pre></td></tr></table></figure><h3 id="4-13-archive-压缩"><a href="#4-13-archive-压缩" class="headerlink" title="4.13 archive 压缩"></a>4.13 archive 压缩</h3><p>压缩单个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible nfs -m archive -a "path=/root/1.txt dest=/tmp/1.tar.gz format=gz force_archive=true"</span></span><br><span class="line">[root@nfs /tmp]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r--  1 root   root       56 Jul 24 01:51 1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="4-14-setup"><a href="#4-14-setup" class="headerlink" title="4.14 setup"></a>4.14 setup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m setup</span></span><br></pre></td></tr></table></figure><h2 id="第5章-查看帮助"><a href="#第5章-查看帮助" class="headerlink" title="第5章 查看帮助"></a>第5章 查看帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l  <span class="comment">#查看所有模块说明信息</span></span><br><span class="line">ansible-doc copy  <span class="comment">#查看copy模块信息</span></span><br></pre></td></tr></table></figure><h2 id="第6章-ansible输出信息颜色解释"><a href="#第6章-ansible输出信息颜色解释" class="headerlink" title="第6章 ansible输出信息颜色解释"></a>第6章 ansible输出信息颜色解释</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01. 绿色信息:  查看主机信息/对主机未做改动</span><br><span class="line">02. 黄色信息:  对主机数据信息做了修改</span><br><span class="line">03. 红色信息:  命令执行出错了</span><br><span class="line">04. 粉色信息:  忠告信息</span><br><span class="line">05. 蓝色信息:  显示ansible命令执行的过程</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.SSH服务</title>
      <link href="/2020/04/13/5-SSH%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/04/13/5-SSH%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="SSH服务"><a href="#SSH服务" class="headerlink" title="SSH服务"></a>SSH服务</h1><h2 id="第1章-什么是ssh"><a href="#第1章-什么是ssh" class="headerlink" title="第1章 什么是ssh"></a>第1章 什么是ssh</h2><p>`SSH 为 Secure Shell 的缩写，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。<br>SSH是标准的网络协议，可用于大多数UNIX操作系统，能够实现字符界面的远程登录管理，它默认使用22号端口，采用密文的形式在网络中传输数据，相对于通过明文传输的Telnet，具有更高的安全性。<br>SSH提供了口令和密钥两种用户验证方式，这两者都是通过密文传输数据的。</p><p>SSH与Telnet的区别：</p><p>SSH: 系统默认配置 22 默认可以使用root用户进行登录 数据信息进行加密<br>telnet：网络设备默认开启 23 默认只能使用普通用户进行登录 数据信息显示明文</p><p>SSH的作用</p><p>1）对用户身份信息进行认证</p><p>2）利用公钥和私钥对数据信息进行加密处理</p><h2 id="第2章-ssh服务登录验证"><a href="#第2章-ssh服务登录验证" class="headerlink" title="第2章 ssh服务登录验证"></a>第2章 ssh服务登录验证</h2><h3 id="2-1-ssh服务登录验证方式："><a href="#2-1-ssh服务登录验证方式：" class="headerlink" title="2.1. ssh服务登录验证方式："></a>2.1. ssh服务登录验证方式：</h3><ul><li>用户/口令</li><li>基于密钥对</li></ul><h3 id="2-2-基于用户和口令登录验证"><a href="#2-2-基于用户和口令登录验证" class="headerlink" title="2.2 基于用户和口令登录验证"></a>2.2 基于用户和口令登录验证</h3><ul><li>1、客户端发起ssh请求，服务器会把自己的公钥发送给用户</li><li>2、用户会根据服务器发来的公钥对密码进行加密</li><li>3、加密后的信息回传给服务器，服务器用自己的私钥解密，如果密码正确，则用户登录成功</li></ul><h3 id="2-3-基于密钥的登录方式"><a href="#2-3-基于密钥的登录方式" class="headerlink" title="2.3 基于密钥的登录方式"></a>2.3 基于密钥的登录方式</h3><p>基于密钥的登录方式</p><ul><li>1、首先在客户端生成一对密钥（ssh-keygen）</li><li>2、并将客户端的公钥ssh-copy-id 拷贝到服务端</li><li>3、当客户端再次发送一个连接请求，包括ip、用户名</li><li>4、服务端得到客户端的请求后，会到authorized_keys中查找，如果有响应的IP和用户，就会随机生成一个字符串，例如：acdf</li><li>5、服务端将使用客户端拷贝过来的公钥进行加密，然后发送给客户端</li><li>6、得到服务端发来的消息后，客户端会使用私钥进行解密，然后将解密后的字符串发送给服务端</li><li>7、服务端接收到客户端发来的字符串后，跟之前的字符串进行对比，如果一致，就允许免密码登录</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-af025c4191bb5a68.webp.jpg"  alt=""></p><p>原理总结：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">01. 客户端 - 服务端   请求建立ssh远程连接 </span><br><span class="line">02. 服务端 - 客户端   请求确认公钥信息</span><br><span class="line">03. 客户端 - 服务端   确认接收公钥信息，保存~/.ssh/authorized_keys     文件中  </span><br><span class="line">04. 服务端 - 客户端   询问用户密码信息</span><br><span class="line">05. 客户端 - 服务端   用户密码信息</span><br><span class="line">06. 服务端 - 客户端   确认密码信息正确 远程连接建立</span><br><span class="line">01 之后：不用反复确认公钥信息</span><br><span class="line">06 之后：所有传输的数据信息会进行加密处理</span><br></pre></td></tr></table></figure><h2 id="第3章-基于密钥方式实现远程连接步骤"><a href="#第3章-基于密钥方式实现远程连接步骤" class="headerlink" title="第3章 基于密钥方式实现远程连接步骤"></a>第3章 基于密钥方式实现远程连接步骤</h2><h3 id="3-1-管理端服务器"><a href="#3-1-管理端服务器" class="headerlink" title="3.1 管理端服务器"></a>3.1 管理端服务器</h3><h4 id="3-1-1创建密钥对信息"><a href="#3-1-1创建密钥对信息" class="headerlink" title="3.1.1创建密钥对信息"></a>3.1.1创建密钥对信息</h4><p>第一种方式：默认参数，一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~/.ssh]<span class="comment"># ssh-keygen</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:x+Xoxb/z59g68vS2DwPieixVCC01yXc83aJ6p/pYR+Y root@ssh-61</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|         +o. . ..|</span></span><br><span class="line"><span class="string">|        o +.. = o|</span></span><br><span class="line"><span class="string">|         o o.o o |</span></span><br><span class="line"><span class="string">|         ..=o    |</span></span><br><span class="line"><span class="string">|        S =o= o  |</span></span><br><span class="line"><span class="string">|         +oo.*.  |</span></span><br><span class="line"><span class="string">|         oo..oE  |</span></span><br><span class="line"><span class="string">|        ..oooooBo|</span></span><br><span class="line"><span class="string">|        .ooo.o=OX|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>第二种方式：指定加密算法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-keygen -t dsa</span></span><br><span class="line">Generating public/private dsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_dsa): </span><br><span class="line">Created directory <span class="string">'/root/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_dsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_dsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:fW5GHPjirQZoiZhX1tXwnvwWxdjRWgFnsAiLTsyo1Is root@ssh-61</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[DSA 1024]----+</span></span><br><span class="line"><span class="string">|         ..o oo=o|</span></span><br><span class="line"><span class="string">|    . + . +oo +++|</span></span><br><span class="line"><span class="string">|   . o * o..o..o+|</span></span><br><span class="line"><span class="string">|  . o * .. = o.. |</span></span><br><span class="line"><span class="string">|   E = +S o O .  |</span></span><br><span class="line"><span class="string">|  o o + .. * . . |</span></span><br><span class="line"><span class="string">|   . .   .. = o  |</span></span><br><span class="line"><span class="string">|          .+ .   |</span></span><br><span class="line"><span class="string">|         ..      |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-分发公钥"><a href="#3-1-2-分发公钥" class="headerlink" title="3.1.2 分发公钥"></a>3.1.2 分发公钥</h4><p>第一种方式：默认参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id 172.16.1.41</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/root/.ssh/id_rsa.pub"</span></span><br><span class="line">The authenticity of host <span class="string">'172.16.1.41 (172.16.1.41)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:wpba7z96j3rm+efG7Ior294sbdQ/qlFFdt+/WNuH3N0.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:66:39:31:20:fc:85:40:2d:d2:83:9c:eb:0b:ca:d2:5b.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class="line"><span class="string">root@172.16.1.41'</span>s password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">"ssh '172.16.1.41'"</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p>第二种方式：指定传输的公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.41</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-测试远程连接"><a href="#3-1-3-测试远程连接" class="headerlink" title="3.1.3 测试远程连接"></a>3.1.3 测试远程连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41</span></span><br><span class="line">Last login: Mon Jul 22 23:35:45 2019 from 10.0.1.1</span><br><span class="line">[root@backup ~]<span class="comment"># logout</span></span><br><span class="line">Connection to 172.16.1.41 closed.</span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41 hostname</span></span><br><span class="line">backup</span><br></pre></td></tr></table></figure><h3 id="3-2-被管理服务器"><a href="#3-2-被管理服务器" class="headerlink" title="3.2 被管理服务器"></a>3.2 被管理服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~/.ssh]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rw------- 1 root root 601 Jul 22 23:33 authorized_keys</span><br></pre></td></tr></table></figure><h2 id="第4章-免交互分发密钥"><a href="#第4章-免交互分发密钥" class="headerlink" title="第4章 免交互分发密钥"></a>第4章 免交互分发密钥</h2><p>当被管理服务器有多台时，如何批量进行分发密钥</p><p>如何解决面交互问题：</p><h4 id="1）首次连接提示yes-no"><a href="#1）首次连接提示yes-no" class="headerlink" title="1）首次连接提示yes/no"></a>1）首次连接提示yes/no</h4><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id 10.0.1.31 -o StrictHostKeyChecking=no</span></span><br></pre></td></tr></table></figure><h4 id="2）首次连接需要输入密码确认"><a href="#2）首次连接需要输入密码确认" class="headerlink" title="2）首次连接需要输入密码确认"></a>2）首次连接需要输入密码确认</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># yum -y install sshpass  #安装sshpass服务</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># sshpass -p123456 ssh-copy-id -i .ssh/id_dsa.pub 172.16.1.31 -o StrictHostKeyChecking=no</span></span><br></pre></td></tr></table></figure><h4 id="3）写成脚本"><a href="#3）写成脚本" class="headerlink" title="3）写成脚本"></a>3）写成脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> &#123;31,41&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  sshpass -p123456 ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.<span class="variable">$ip</span> -o StrictHostKeyChecking=no &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">"===============pub_key fenfa ok with 172.16.1.<span class="variable">$ip</span>========================="</span></span><br><span class="line">     ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> hostname</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">"===============pub_key fenfa failed with 172.16.1.<span class="variable">$ip</span>========================="</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">  <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="第5章-ssh安全优化"><a href="#第5章-ssh安全优化" class="headerlink" title="第5章 ssh安全优化"></a>第5章 ssh安全优化</h2><h3 id="5-1-windows："><a href="#5-1-windows：" class="headerlink" title="5.1 windows："></a>5.1 windows：</h3><p>1）xshell生成密钥对</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201033.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201119.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201149.png"  alt=""></p><p>2）将xshell公钥上传到管理机ssh-61</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.使用rz命令上传公钥文件到管理机ssh-61</span><br><span class="line">2.[root@ssh-61 ~/.ssh]<span class="comment"># mv id_dsa_1024.pub authorized_keys</span></span><br><span class="line">3.[root@ssh-61 ~/.ssh]<span class="comment"># chmod 600 authorized_keys #更改公钥权限</span></span><br><span class="line">4.[root@ssh-61 ~/.ssh]<span class="comment"># ll</span></span><br><span class="line">-rw------- 1 root root  588 Jul 22 16:14 authorized_keys</span><br></pre></td></tr></table></figure><p>xshell测试</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201342.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201408.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201432.png"  alt=""></p><h3 id="5-2-管理机"><a href="#5-2-管理机" class="headerlink" title="5.2 管理机"></a>5.2 管理机</h3><p>1）更改ssh默认端口号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">Port 9999</span><br></pre></td></tr></table></figure><p>2）关闭用户名密码登陆方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>3）开启通过密钥对方式连接</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_210756.png"  alt=""></p><h3 id="5-3-被管理机"><a href="#5-3-被管理机" class="headerlink" title="5.3 被管理机"></a>5.3 被管理机</h3><p>1）更改ssh默认端口号</p><p>2）关闭用户名密码登录方式</p><p>3）开启通过密钥对方式连接</p><p>4）指定监听内网地址</p><p>更改ssh相关配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">17 Port 9999</span><br><span class="line">19 ListenAddress 172.16.1.41</span><br><span class="line">65 PasswordAuthentication no</span><br><span class="line">[root@ssh-61 ~]<span class="comment"># systemctl restart sshd</span></span><br></pre></td></tr></table></figure><p>管理机ssh登录被管理机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41 -p9999</span></span><br></pre></td></tr></table></figure><h2 id="第6章-作业"><a href="#第6章-作业" class="headerlink" title="第6章 作业"></a>第6章 作业</h2><p>一个脚本完成以下所有任务：</p><ul><li>1.管理机自动创建密钥对</li><li>2.管理机自动将公钥发送到被管理机</li><li>3.修改被管理机的SSH连接端口为9999</li><li>4.修改被管理机的SSH监听地址为172.16.1.X</li><li>5.修改被管理机不允许使用账号密码方式登陆，只允许使用密钥方式连接</li><li>6.修改完之后验证是否生效，验证方法为使用9999端口连接被管理机并打印出主机  信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ -f /root/.ssh/id_dsa ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"密钥已存在,将发送现有文件"</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    ssh-keygen -t dsa -P <span class="string">""</span> -f /root/.ssh/id_dsa &amp;&amp; <span class="built_in">echo</span> <span class="string">"密钥生成成功"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> &#123;31,41&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    sshpass -p123456 ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.<span class="variable">$&#123;ip&#125;</span> -o StrictHostKeyChecking=no &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $?==0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> key sent successful"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's/#Port 22/Port 9999/g' /etc/ssh/sshd_config &amp;&amp; echo 'port ok'"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 172.16.1.<span class="variable">$&#123;ip&#125;</span>/g' /etc/ssh/sshd_config &amp;&amp; echo 'ListenAddress ok'"</span></span><br><span class="line">ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's#^PasswordAuthentication yes#PasswordAuthentication no#g' /etc/ssh/sshd_config &amp;&amp; echo 'Password ok'"</span></span><br><span class="line">ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"systemctl restart sshd"</span></span><br><span class="line">sleep 3</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"------------------"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> hostname is :<span class="variable">$(ssh -p 9999 172.16.1.$&#123;ip&#125; hostname)</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"------------------"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> key sent faild"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.NFS服务实时备份</title>
      <link href="/2020/04/13/4-NFS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E5%A4%87%E4%BB%BD/"/>
      <url>/2020/04/13/4-NFS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="NFS服务实时备份"><a href="#NFS服务实时备份" class="headerlink" title="NFS服务实时备份"></a>NFS服务实时备份</h1><h2 id="第一章-NFS单点问题"><a href="#第一章-NFS单点问题" class="headerlink" title="第一章 NFS单点问题"></a>第一章 NFS单点问题</h2><h3 id="1-为什么需要解决NFS单点问题"><a href="#1-为什么需要解决NFS单点问题" class="headerlink" title="1.为什么需要解决NFS单点问题"></a>1.为什么需要解决NFS单点问题</h3><p>只有一个NFS服务器时，当出现故障时，数据没办法再实现共享，既不安全也不稳定</p><h3 id="2-解决思路"><a href="#2-解决思路" class="headerlink" title="2. 解决思路"></a>2. 解决思路</h3><p>1).监控文件是否发生变化</p><p>2)如果发生变化,就通过rsync传输到备份服务器,并且数据保持完全一致</p><p>3)备份服务器也需要提供NFS服务,以便NFS服务器故障的时候可以顶替,继续提供NFS服务</p><p>4)假如发生了故障,客户端需要先卸载原有已经挂载的目录,然后重新挂载到备份服务器的NFS共享目录</p><h3 id="3-需要用到的软件"><a href="#3-需要用到的软件" class="headerlink" title="3. 需要用到的软件"></a>3. 需要用到的软件</h3><p>1).监控文件是否发生变化    inotify-tools</p><p>2).实时备份  rsync+inotify-tools / sersync / lsyncd</p><p>3).提供NFS服务  NFS+RPC</p><h3 id="4-环境准备"><a href="#4-环境准备" class="headerlink" title="4. 环境准备"></a>4. 环境准备</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><h2 id="第二章-Inotify简介"><a href="#第二章-Inotify简介" class="headerlink" title="第二章 Inotify简介"></a>第二章 Inotify简介</h2><p>Inotify是一种强大的,细粒度的,异步的文件系统事件监视机制,Linux2.6.13起加入了inotify支持,通过inotify可以监控文件系统中添加,删除,修改,移动等各种事件,利用这个内核接口,第三方软件就可以监控文件系统下文件的各种变化情况,而inotify-tools正是实施这样监控的软件,另外一个这样效果的软件是中国人周洋在金山公司开发的sersync,还有一个配置更简单的软件叫lsyncd</p><h3 id="2-1-查看系统内核"><a href="#2-1-查看系统内核" class="headerlink" title="2.1 查看系统内核"></a>2.1 查看系统内核</h3><p>查看当前系统内核是否支持inotify</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="2-2-安装Inotify"><a href="#2-2-安装Inotify" class="headerlink" title="2.2 安装Inotify"></a>2.2 安装Inotify</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum search inotify  #查找inotify包名</span></span><br><span class="line">[root@nfs ~]<span class="comment"># yum -y install inotify-tools</span></span><br></pre></td></tr></table></figure><h3 id="2-3-关键参数说明"><a href="#2-3-关键参数说明" class="headerlink" title="2.3 关键参数说明:"></a>2.3 关键参数说明:</h3><p>1)在/proc/sys/fs/inotify目录下有三个文件,对inotify机制有一定限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># ls -l /proc/sys/fs/inotify/</span></span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 11:37 max_queued_events</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 09:52 max_user_instances</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 11:37 max_user_watches</span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line">max_queued_events   =====&gt;设置inotify设置inotify实例事件(event)队列可容纳的事件数量</span><br><span class="line">max_user_instances  =====&gt;设置每个用户可以运行的inotify或者inotifywatch命令的进程数</span><br><span class="line">max_user_watches    =====&gt;设置inotifywait或者inotifywatch命令可以监视的文件数量(单进程)</span><br></pre></td></tr></table></figure><h3 id="2-4-inotifywait详细参数"><a href="#2-4-inotifywait详细参数" class="headerlink" title="2.4 inotifywait详细参数"></a>2.4 inotifywait详细参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># inotifywait --help</span></span><br><span class="line">inotifywait 3.14</span><br><span class="line">Wait <span class="keyword">for</span> a particular event on a file or <span class="built_in">set</span> of files.</span><br><span class="line">Usage: inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]</span><br><span class="line">Options:</span><br><span class="line">    -h|--<span class="built_in">help</span>       Show this <span class="built_in">help</span> text.</span><br><span class="line">    @&lt;file&gt;         Exclude the specified file from being watched.</span><br><span class="line">    --exclude &lt;pattern&gt;</span><br><span class="line">                    Exclude all events on files matching the</span><br><span class="line">                    extended regular expression &lt;pattern&gt;.</span><br><span class="line">    --excludei &lt;pattern&gt;</span><br><span class="line">                    Like --exclude but <span class="keyword">case</span> insensitive.</span><br><span class="line">                    <span class="comment">###排除文件或目录,不区分大小写</span></span><br><span class="line">    -m|--monitor    Keep listening <span class="keyword">for</span> events forever.  Without</span><br><span class="line">                    this option, inotifywait will <span class="built_in">exit</span> after one</span><br><span class="line">                    event is received.</span><br><span class="line">    -d|--daemon     Same as --monitor, except run <span class="keyword">in</span> the background</span><br><span class="line">                    logging events to a file specified by --outfile.</span><br><span class="line">                    Implies --syslog.</span><br><span class="line">    -r|--recursive  Watch directories recursively. </span><br><span class="line">    <span class="comment">###递归查询目录</span></span><br><span class="line">    --fromfile &lt;file&gt;</span><br><span class="line">                    Read files to watch from &lt;file&gt; or `-<span class="string">' for stdin.</span></span><br><span class="line"><span class="string">    -o|--outfile &lt;file&gt;</span></span><br><span class="line"><span class="string">                    Print events to &lt;file&gt; rather than stdout.</span></span><br><span class="line"><span class="string">    -s|--syslog     Send errors to syslog rather than stderr.</span></span><br><span class="line"><span class="string">    -q|--quiet      Print less (only print events). </span></span><br><span class="line"><span class="string">    ###打印很少的信息,仅仅打印监控事件的信息,安静的</span></span><br><span class="line"><span class="string">    -qq             Print nothing (not even events).</span></span><br><span class="line"><span class="string">    --format &lt;fmt&gt;  Print using a specified printf-like format ###打印指定输出类似格式字符串</span></span><br><span class="line"><span class="string">                    string; read the man page for more details.</span></span><br><span class="line"><span class="string">    --timefmt &lt;fmt&gt; strftime-compatible format string for use with</span></span><br><span class="line"><span class="string">                    %T in --format string.  ###指定时间输出的格式</span></span><br><span class="line"><span class="string">    -c|--csv        Print events in CSV format.</span></span><br><span class="line"><span class="string">    -t|--timeout &lt;seconds&gt;</span></span><br><span class="line"><span class="string">                    When listening for a single event, time out after</span></span><br><span class="line"><span class="string">                    waiting for an event for &lt;seconds&gt; seconds.</span></span><br><span class="line"><span class="string">                    If &lt;seconds&gt; is 0, inotifywait will never time out.</span></span><br><span class="line"><span class="string">    -e|--event &lt;event1&gt; [ -e|--event &lt;event2&gt; ... ]</span></span><br><span class="line"><span class="string">        Listen for specific event(s).  If omitted, all events are </span></span><br><span class="line"><span class="string">        listened for. ###通过次参数可以指定需要监控的事件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Exit status:</span></span><br><span class="line"><span class="string">    0  -  An event you asked to watch for was received.</span></span><br><span class="line"><span class="string">    1  -  An event you did not ask to watch for was received</span></span><br><span class="line"><span class="string">          (usually delete_self or unmount), or some error occurred.</span></span><br><span class="line"><span class="string">    2  -  The --timeout option was given and no events occurred</span></span><br><span class="line"><span class="string">          in the specified interval of time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Events:</span></span><br><span class="line"><span class="string">    access      file or directory contents were read </span></span><br><span class="line"><span class="string">    ###文件或目录被读取</span></span><br><span class="line"><span class="string">    modify      file or directory contents were written </span></span><br><span class="line"><span class="string">    ###文件或目录被修改</span></span><br><span class="line"><span class="string">    attrib      file or directory attributes changed </span></span><br><span class="line"><span class="string">    ###文件或目录属性被改变</span></span><br><span class="line"><span class="string">    close_write file or directory closed, after being opened in </span></span><br><span class="line"><span class="string">                writeable mode ###文件或目录封闭,无论读/写模式</span></span><br><span class="line"><span class="string">    close_nowrite   file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                read-only mode</span></span><br><span class="line"><span class="string">    close       file or directory closed, regardless of read/write mode</span></span><br><span class="line"><span class="string">    open        file or directory opened ###文件目录被打开</span></span><br><span class="line"><span class="string">    moved_to    file or directory moved to watched directory ###文件或目录被移动到另一个目录</span></span><br><span class="line"><span class="string">    moved_from  file or directory moved from watched directory</span></span><br><span class="line"><span class="string">    move        file or directory moved to or from watched directory</span></span><br><span class="line"><span class="string">    create      file or directory created within watched directory ###文件或目录被创建在当前目录</span></span><br><span class="line"><span class="string">    delete      file or directory deleted within watched directory ###文件或目录被删除</span></span><br><span class="line"><span class="string">    delete_self file or directory was deleted</span></span><br><span class="line"><span class="string">    unmount     file system containing file or directory unmounted ###文件系统被卸载</span></span><br></pre></td></tr></table></figure><h3 id="2-5-参数说明"><a href="#2-5-参数说明" class="headerlink" title="2.5 参数说明"></a>2.5 参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">inotifywait参数说明</span><br><span class="line">参数名称            参数说明</span><br><span class="line">-m ,-monitor       始终保持事件监听状态</span><br><span class="line">-r,-recursive      递归查询目录</span><br><span class="line">-q,-quiet          只打印监控事件的信息</span><br><span class="line">-exclude           排除文件或目录时,不区分大小写</span><br><span class="line">-t,-timeout        超时时间</span><br><span class="line">-timefmt           指定时间输出格式</span><br><span class="line">-format            指定时间输出格式</span><br><span class="line">-e,event           后面指定增,删,改等事件</span><br><span class="line">inotifywait events 事件说明</span><br><span class="line">access             读取文件或目录内容</span><br><span class="line">modify             修改文件或目录内容</span><br><span class="line">attrib             文件或目录的属性改变</span><br><span class="line">close_write        修改真实文件内容</span><br><span class="line">close_nowrite   </span><br><span class="line">close   </span><br><span class="line">open               文件或目录被打开</span><br><span class="line">moved_to           文件或目录移动到</span><br><span class="line">moved_from         文件或目录从...移动到</span><br><span class="line">move               移动文件或目录移动到监视目录</span><br><span class="line">create             在监视目录下创建文件或目录</span><br><span class="line">delete             删除监视目录下的文件或目录</span><br><span class="line">delete_self </span><br><span class="line">umount             卸载文件系统</span><br></pre></td></tr></table></figure><h3 id="2-6-查看inotify默认参数"><a href="#2-6-查看inotify默认参数" class="headerlink" title="2.6 查看inotify默认参数"></a>2.6 查看inotify默认参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># sysctl -a|grep max_queued_events</span></span><br><span class="line">fs.inotify.max_queued_events = 327679</span><br><span class="line">[root@nfs ~]<span class="comment"># sysctl -a |egrep max_user_watches</span></span><br><span class="line">fs.epoll.max_user_watches = 412098</span><br><span class="line">fs.inotify.max_user_watches = 50000000</span><br><span class="line">[root@nfs ~]<span class="comment"># sysctl -a |egrep max_user_instances</span></span><br><span class="line">fs.inotify.max_user_instances = 128</span><br></pre></td></tr></table></figure><h3 id="2-7-测试"><a href="#2-7-测试" class="headerlink" title="2.7 测试"></a>2.7 测试</h3><p>测试inotify-tools监控文件发生变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --timefmt <span class="string">'%d/%m/%y %H:%M'</span> --format <span class="string">'%T %w%f'</span> -e delete,create /backup</span><br><span class="line">inotifywait -mrq --timefmt <span class="string">'%d/%m/%y %H:%M'</span> --format <span class="string">'%T %w%f'</span> -e close_write /backup</span><br></pre></td></tr></table></figure><p>监控脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat inotify_push.sh </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">Path=/data</span><br><span class="line">backup_Server=172.16.1.41</span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line"></span><br><span class="line">/usr/bin/inotifywait -mrq --format <span class="string">'%w%f'</span> -e create,close_write,delete /data | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;line&#125;</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$line</span> ];<span class="keyword">then</span></span><br><span class="line">    rsync -azvP <span class="variable">$line</span> --delete rsync_backup@<span class="variable">$backup_Server</span>::data</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$Path</span> &amp;&amp;\</span><br><span class="line">    rsync -azvP ./ --delete rsync_backup@<span class="variable">$backup_Server</span>::data</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="2-8-inotify优缺点"><a href="#2-8-inotify优缺点" class="headerlink" title="2.8 inotify优缺点"></a>2.8 inotify优缺点</h3><p>inotify优点<br>1)监控文件系统事件变化,通过同步工具实现实时数据同步<br>inotify缺点<br>1)并发如果大于200个文(10-100k),同步就会由延迟<br>2)我们前面的脚本,每次都是全部推送一次,但是确实是增量的,也可以只同步变化的文件<br>3)监控到事件后,调用rsync同步是单进程(加&amp;并发)sersync多进程同步<br>既然有了inotify-tools,为什么还需要sersync呢?</p><p>sersync功能多:(inotify+rsync命令)</p><p>1)支持通过配置文件管理<br>2)真正的守护进程socket<br>3)可以对失败文件定时重传(定时任务功能)<br>4)第三方的HTTP接口(例如:更新cdn缓存)<br>5)默认多线程rsync同步</p><h2 id="第三章sersync安装部署"><a href="#第三章sersync安装部署" class="headerlink" title="第三章sersync安装部署"></a>第三章sersync安装部署</h2><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><h3 id="3-1-下载sersync"><a href="#3-1-下载sersync" class="headerlink" title="3.1 下载sersync"></a>3.1 下载sersync</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># wget https://github.com/wsgzao/sersync/blob/master/sersync2.5.4_64bit_binary_stable_final.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="3-2-解压"><a href="#3-2-解压" class="headerlink" title="3.2 解压"></a>3.2 解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt]<span class="comment"># tree server/</span></span><br><span class="line">server/</span><br><span class="line">├── confxml.xml</span><br><span class="line">├── confxml.xml.bak</span><br><span class="line">└── sersync2</span><br></pre></td></tr></table></figure><h3 id="3-3修改配置文件"><a href="#3-3修改配置文件" class="headerlink" title="3.3修改配置文件"></a>3.3修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;sersync&gt;</span><br><span class="line">   24&lt;localpath watch=<span class="string">"/data"</span>&gt;</span><br><span class="line">   25    &lt;remote ip=<span class="string">"172.16.1.42"</span> name=<span class="string">"/data"</span>/&gt;</span><br><span class="line">   26    &lt;!--&lt;remote ip=<span class="string">"192.168.8.39"</span> name=<span class="string">"tongbu"</span>/&gt;--&gt;</span><br><span class="line">   27    &lt;!--&lt;remote ip=<span class="string">"192.168.8.40"</span> name=<span class="string">"tongbu"</span>/&gt;--&gt;</span><br><span class="line">   28&lt;/localpath&gt;</span><br><span class="line">   29&lt;rsync&gt;</span><br><span class="line">   30    &lt;commonParams params=<span class="string">"-az"</span>/&gt;</span><br><span class="line">   31    &lt;auth start=<span class="string">"true"</span> users=<span class="string">"rsynd_backup"</span> passwordfile=<span class="string">"/etc/rsyncd.conf"</span>/&gt;</span><br><span class="line">   32    &lt;userDefinedPort start=<span class="string">"false"</span> port=<span class="string">"874"</span>/&gt;&lt;!-- port=874 --&gt;</span><br><span class="line">   33    &lt;timeout start=<span class="string">"true"</span> time=<span class="string">"100"</span>/&gt;&lt;!-- timeout=100 --&gt;</span><br><span class="line">   34    &lt;ssh start=<span class="string">"false"</span>/&gt;</span><br><span class="line">   35&lt;/rsync&gt;</span><br><span class="line">   36&lt;failLog path=<span class="string">"/tmp/rsync_fail_log.sh"</span> timeToExecute=<span class="string">"60"</span>/&gt;&lt;!--default every 60mins execute once--&gt;</span><br><span class="line">   37&lt;crontab start=<span class="string">"false"</span> schedule=<span class="string">"600"</span>&gt;&lt;!--600mins--&gt;</span><br><span class="line">   38    &lt;crontabfilter start=<span class="string">"false"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-查看帮助说明"><a href="#3-4-查看帮助说明" class="headerlink" title="3.4 查看帮助说明"></a>3.4 查看帮助说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt/server]<span class="comment">#  ./sersync2 -h</span></span><br><span class="line"><span class="built_in">set</span> the system param</span><br><span class="line">execute：<span class="built_in">echo</span> 50000000 &gt; /proc/sys/fs/inotify/max_user_watches</span><br><span class="line">execute：<span class="built_in">echo</span> 327679 &gt; /proc/sys/fs/inotify/max_queued_events</span><br><span class="line">parse the <span class="built_in">command</span> param</span><br><span class="line">_______________________________________________________</span><br><span class="line">参数-d:启用守护进程模式</span><br><span class="line">参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍</span><br><span class="line">c参数-n: 指定开启守护线程的数量，默认为10个</span><br><span class="line">参数-o:指定配置文件，默认使用confxml.xml文件</span><br><span class="line">参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m socket 开启socket模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m http 开启http模块</span><br><span class="line">不加-m参数，则默认执行同步程序</span><br></pre></td></tr></table></figure><h3 id="3-5-启动服务"><a href="#3-5-启动服务" class="headerlink" title="3.5 启动服务"></a>3.5 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt/server]<span class="comment"># ./sersync2 -n 20 -dro confxml.xml</span></span><br><span class="line"><span class="built_in">set</span> the system param</span><br><span class="line">execute：<span class="built_in">echo</span> 50000000 &gt; /proc/sys/fs/inotify/max_user_watches</span><br><span class="line">execute：<span class="built_in">echo</span> 327679 &gt; /proc/sys/fs/inotify/max_queued_events</span><br><span class="line">parse the <span class="built_in">command</span> param</span><br><span class="line">option: -n thread num is：  20</span><br><span class="line">option: -d run as a daemon</span><br><span class="line">option: -r rsync all the <span class="built_in">local</span> files to the remote servers before the sersync work</span><br><span class="line">option: -o config xml name：  confxml.xml</span><br><span class="line">parse xml config file</span><br><span class="line">host ip : localhosthost port: 8008</span><br><span class="line">daemon start，sersync run behind the console </span><br><span class="line">use rsync password-file :</span><br><span class="line">user isrsynd_backup</span><br><span class="line">passwordfile is /etc/rsyncd.conf</span><br><span class="line">config xml parse success</span><br><span class="line">please <span class="built_in">set</span> /etc/rsyncd.conf max connections=0 Manually</span><br><span class="line">sersync working thread 22  = 1(primary thread) + 1(fail retry thread) + 20(daemon sub threads) </span><br><span class="line">Max threads numbers is: 42 = 22(Thread pool nums) + 20(Sub threads)</span><br><span class="line">please according your cpu ，use -n param to adjust the cpu rate</span><br><span class="line">------------------------------------------</span><br><span class="line">rsync the directory recursivly to the remote servers once</span><br><span class="line">working please <span class="built_in">wait</span>...</span><br><span class="line">execute <span class="built_in">command</span>: <span class="built_in">cd</span> /data &amp;&amp; rsync -az -R --delete ./  --timeout=100 rsynd_backup@172.16.1.42::/data --password-file=/etc/rsyncd.conf &gt;/dev/null 2&gt;&amp;1 </span><br><span class="line">run the sersync: </span><br><span class="line">watch path is: /data</span><br></pre></td></tr></table></figure><h3 id="3-6-测试数据同步传输"><a href="#3-6-测试数据同步传输" class="headerlink" title="3.6 测试数据同步传输"></a>3.6 测试数据同步传输</h3><p>nfs服务器生成数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@nfs /data]<span class="comment"># for i in &#123;1..1000&#125;;do echo "$&#123;i&#125;"; echo "$&#123;i&#125;" &gt; $&#123;i&#125;.txt;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><p>backup备份服务器查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@backup /data]<span class="comment"># while true ;do ls |wc -l;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><h2 id="第四章-lsyncd-服务"><a href="#第四章-lsyncd-服务" class="headerlink" title="第四章 lsyncd 服务"></a>第四章 lsyncd 服务</h2><p>官网地址：<a href="https://github.com/axkibe/lsyncd" target="_blank" rel="noopener">https://github.com/axkibe/lsyncd</a></p><p>Lysncd 实际上是lua语言封装了 inotify 和 rsync 工具，采用了 Linux 内核（2.6.13 及以后）里的 inotify 触发机制，然后通过rsync去差异同步，达到实时的效果。我认为它最令人称道的特性是，完美解决了 <code>inotify + rsync</code>海量文件同步带来的文件频繁发送文件列表的问题 —— 通过时间延迟或累计触发事件次数实现。另外，它的配置方式很简单，lua本身就是一种配置语言，可读性非常强。lsyncd也有多种工作模式可以选择，本地目录cp，本地目录rsync，远程目录rsyncssh。实现简单高效的本地目录同步备份（网络存储挂载也当作本地目录），一个命令搞定。</p><h3 id="4-1-安装lsyncd"><a href="#4-1-安装lsyncd" class="headerlink" title="4.1 安装lsyncd"></a>4.1 安装lsyncd</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><p>查看包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum provides lsyncd</span></span><br><span class="line">lsyncd-2.2.2-1.el7.x86_64 : File change monitoring and synchronization daemon</span><br><span class="line">Repo        : epel</span><br></pre></td></tr></table></figure><p>安装lsyncd服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum -y install lsyncd</span></span><br></pre></td></tr></table></figure><h3 id="4-2-创建配置文件"><a href="#4-2-创建配置文件" class="headerlink" title="4.2 创建配置文件"></a>4.2 创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># rpm -qc lsyncd</span></span><br><span class="line">/etc/lsyncd.conf</span><br><span class="line">[root@nfs /data]<span class="comment"># cat /etc/lsyncd.conf</span></span><br><span class="line">settings &#123;</span><br><span class="line">  logfile = <span class="string">"/var/log/lsyncd/lsyncd.log"</span>,</span><br><span class="line">  statusFile = <span class="string">"/var/log/lsyncd/lsyncd.status"</span>,</span><br><span class="line">  inotifyMode = <span class="string">"CloseWrite"</span>,</span><br><span class="line">  maxProcesses = 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/data"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::data"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/backup"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::backup"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-配置文件说明"><a href="#4-3-配置文件说明" class="headerlink" title="4.3 配置文件说明"></a>4.3 配置文件说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">settings</span><br><span class="line"></span><br><span class="line">里面是全局设置，--开头表示注释，下面是几个常用选项说明：</span><br><span class="line"></span><br><span class="line">logfile <span class="comment">#定义日志文件</span></span><br><span class="line">stausFile <span class="comment">#定义状态文件</span></span><br><span class="line">nodaemon=<span class="literal">true</span> <span class="comment">#表示不启用守护模式，默认</span></span><br><span class="line">statusInterval <span class="comment">#将lsyncd的状态写入上面的statusFile的间隔，默认10秒</span></span><br><span class="line">inotifyMode <span class="comment">#指定inotify监控的事件，默认是CloseWrite，还可以是Modify或CloseWrite or Modify</span></span><br><span class="line">maxProcesses <span class="comment">#同步进程的最大个数。假如同时有20个文件需要同步，而maxProcesses = 8，则最大能看到有8个rysnc进程</span></span><br><span class="line">maxDelays <span class="comment">#累计到多少所监控的事件激活一次同步，即使后面的delay延迟时间还未到</span></span><br><span class="line">sync</span><br><span class="line"></span><br><span class="line">里面是定义同步参数，可以继续使用maxDelays来重写settings的全局变量。一般第一个参数指定lsyncd以什么模式运行：rsync、rsyncssh、direct三种模式：</span><br><span class="line"></span><br><span class="line">default.rsync <span class="comment">#本地目录间同步，使用rsync，也可以达到使用ssh形式的远程rsync效果，或daemon方式连接远程rsyncd进程；</span></span><br><span class="line">default.direct <span class="comment">#本地目录间同步，使用cp、rm等命令完成差异文件备份；</span></span><br><span class="line">default.rsyncssh <span class="comment">#同步到远程主机目录，rsync的ssh模式，需要使用key来认证</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> 同步的源目录，使用绝对路径。</span><br><span class="line"></span><br><span class="line">target 定义目的地址.对应不同的模式有几种写法：</span><br><span class="line">/tmp/dest <span class="comment">#本地目录同步，可用于direct和rsync模式</span></span><br><span class="line">172.16.1.41:/data <span class="comment">#同步到远程服务器目录，可用于rsync和rsyncssh模式，拼接的命令类似于/usr/bin/rsync -ltsd --delete --include-from=- --exclude=* SOURCE TARGET，剩下的就是rsync的内容了，比如指定username，免密码同步</span></span><br><span class="line">172.16.1.41::data <span class="comment">#同步到远程服务器目录，用于rsync模式</span></span><br><span class="line">三种模式的示例会在后面给出。</span><br><span class="line"></span><br><span class="line">init 这是一个优化选项，当init = <span class="literal">false</span>，只同步进程启动以后发生改动事件的文件，原有的目录即使有差异也不会同步。默认是<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">delay 累计事件，等待rsync同步延时时间，默认15秒（最大累计到1000个不可合并的事件）。也就是15s内监控目录下发生的改动，会累积到一次rsync同步，避免过于频繁的同步。（可合并的意思是，15s内两次修改了同一文件，最后只同步最新的文件）</span><br><span class="line"></span><br><span class="line">excludeFrom 排除选项，后面指定排除的列表文件，如excludeFrom = <span class="string">"/etc/lsyncd.exclude"</span>，如果是简单的排除，可以使用exclude = LIST。</span><br><span class="line">这里的排除规则写法与原生rsync有点不同，更为简单：</span><br><span class="line">监控路径里的任何部分匹配到一个文本，都会被排除，例如/bin/foo/bar可以匹配规则foo</span><br><span class="line">如果规则以斜线/开头，则从头开始要匹配全部</span><br><span class="line">如果规则以/结尾，则要匹配监控路径的末尾</span><br><span class="line">?匹配任何字符，但不包括/</span><br><span class="line">*匹配0或多个字符，但不包括/</span><br><span class="line">**匹配0或多个字符，可以是/</span><br><span class="line">delete 为了保持target与souce完全同步，Lsyncd默认会delete = <span class="literal">true</span>来允许同步删除。它除了<span class="literal">false</span>，还有startup、running值，请参考 Lsyncd 2.1.x ‖ Layer 4 Config ‖ Default Behavior。</span><br></pre></td></tr></table></figure><h3 id="4-4-启动服务"><a href="#4-4-启动服务" class="headerlink" title="4.4 启动服务"></a>4.4 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># systemctl start lsyncd.service</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl status lsyncd.service</span></span><br></pre></td></tr></table></figure><h3 id="4-5-查看日志"><a href="#4-5-查看日志" class="headerlink" title="4.5 查看日志"></a>4.5 查看日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># tail -f /var/log/lsyncd/lsyncd.log </span></span><br><span class="line">[root@nfs /data]<span class="comment"># tail -f /var/log/lsyncd/lsyncd.status</span></span><br></pre></td></tr></table></figure><h3 id="4-6-测试数据"><a href="#4-6-测试数据" class="headerlink" title="4.6 测试数据"></a>4.6 测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># for i in &#123;1..1000&#125;;do echo "$&#123;i&#125;"; echo "$&#123;i&#125;" &gt; $&#123;i&#125;.txt;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><p>backup备份服务器查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@backup /data]<span class="comment"># while true ;do ls |wc -l;sleep 0.1;done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nfs </tag>
            
            <tag> backup </tag>
            
            <tag> lsyncd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.NFS文件系统</title>
      <link href="/2020/04/13/3-NFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/04/13/3-NFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="NFS文件系统"><a href="#NFS文件系统" class="headerlink" title="NFS文件系统"></a>NFS文件系统</h1><h2 id="第1章-NFS简介"><a href="#第1章-NFS简介" class="headerlink" title="第1章 NFS简介"></a>第1章 NFS简介</h2><p><code>NFS</code> 是Network File System的缩写，中文称为网络文件系统，它的主要功能是通过网络（一个局域网）让不同的主机系统之间可以共享文件或目录，NFS的客户端（一般为应用服务器，例如web）可以通过挂载（mount）的方式将NFS服务器共享的数据目录挂载到NFS客户端本地系统中（就是某一个关在点下），从客户端本地看，NFS服务器端共享目录就好像是客户端自己的磁盘分区或者目录一样，而实际上却是远端的NFS服务器的目录。<br>NFS网络文件系统很像Windows系统的网络共享、安全功能、网络驱动器映射，这也和linux的samba服务类似，只不过一般情况下，Windows网络共享服务或samba服务用户办公局域网共享，而互联网中小型网站集群架构后端常用NFS进行数据共享，若是大型网站，那么有可能还会用到更复杂的分布式文件系统FastDFS,glusterfs,HDFS</p><p>缺点：</p><p>1：nfs属于本地文件系统，在高并发场景和大存储量下，需要使用分布式存储FastDFS,glusterfs,HDFS等。</p><p>2：客户端的数据都是通过明文传送。客户端没有用户认证机制，安全性能一般，所以建议一般在局域网内使用。</p><p>3：容易发生单点故障，即server服务器宕机所有的客户端都不能访问。</p><h3 id="1-1-NFS应用场景"><a href="#1-1-NFS应用场景" class="headerlink" title="1.1 NFS应用场景"></a>1.1 NFS应用场景</h3><p>使用场景：web集群中NFS服务器主要用于存储用户上传的信息，方便集群中机器获取用户数据。如图片 附件 头像 视频 音频。</p><p>下面我将通过图解给大家展示集群需要共享存储服务的理由。</p><p> 1.A 用户上传图片经过负载均衡，负载均衡将上传请求调度至 WEB1 服务器上。</p><p> 2.B 用户访问 A 用户上传的图片，此时 B 用户被负载均衡调度至 WEB2 上，因为 WEB2 上没有这张图片，所以 B用户无法看到 A 用户传的图片</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.webp.jpg"  alt=""></p><p>如果有共享存储的情况</p><p>1.A 用户上传图片无论被负载均衡调度至 WEB1 还是 WEB2, 最终数据都被写入至共享存储</p><p>2.B 用户访问 A 用户上传图片时，无论调度至 WEB1 还是 WEB2，最终都会上共享存储访问对应的文件，这样就可以访问到资源了</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.webp.jpg"  alt=""></p><h3 id="1-2-nfs存储工作原理实现"><a href="#1-2-nfs存储工作原理实现" class="headerlink" title="1.2 nfs存储工作原理实现"></a>1.2 nfs存储工作原理实现</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nfs.png"  alt=""></p><p>NFS工作原理</p><p>1.用户进程访问 NFS 客户端，使用不同的函数对数据进行处理</p><p>2.NFS 客户端通过 TCP/IP 的方式传递给 NFS 服务端</p><p>3.NFS 服务端接收到请求后，会先调用 portmap 进程进行端口映射。</p><p>4.nfsd 进程用于判断 NFS 客户端是否拥有权限连接 NFS 服务端。</p><p>5.Rpc.mount 进程判断客户端是否有对应的权限进行验证。</p><p>6.idmap 进程实现用户映射和压缩</p><p>7.最后 NFS 服务端会将对应请求的函数转换为本地能识别的命令，传递至内核，由内核驱动硬件。</p><p>注意: rpc 是一个远程过程调用，那么使用 nfs 必须有 rpc 服务</p><p>前提条件</p><p>1.nfs依赖于RPC服务来传递消息</p><p>2.NFS服务启动的端口号是随机的,启动之后会向本地的RCP注册</p><p>3.先启动RPC服务,再启动NFS服务</p><p>4.NFS和RPC之间的通讯是他们自己内部完成的,对于用户来说无感知</p><p>5.NFS客户端和服务端不会直接沟通,必须通过RPC服务传递消息</p><p>6.防火墙要开放RPC服务的端口</p><h2 id="第2章-NFS服务的搭建"><a href="#第2章-NFS服务的搭建" class="headerlink" title="第2章 NFS服务的搭建"></a>第2章 NFS服务的搭建</h2><h3 id="2-1部署前准备"><a href="#2-1部署前准备" class="headerlink" title="2.1部署前准备"></a>2.1部署前准备</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>内网：172.16.1.31/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client1）</td><td>内网：172.16.1.41/24</td></tr></tbody></table><h3 id="2-2-NFS服务端部署"><a href="#2-2-NFS服务端部署" class="headerlink" title="2.2 NFS服务端部署"></a>2.2 NFS服务端部署</h3><h4 id="2-2-1-服务端安装NFS"><a href="#2-2-1-服务端安装NFS" class="headerlink" title="2.2.1 服务端安装NFS"></a>2.2.1 服务端安装NFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum search nfs  <span class="comment">#查看nfs服务的包名</span></span><br><span class="line">yum -y install nfs-utils  <span class="comment">#安装nfs服务</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-配置参数"><a href="#2-2-2-配置参数" class="headerlink" title="2.2.2 配置参数"></a>2.2.2 配置参数</h4><p>​     <code>nfs</code> 服务程序的配置文件为/etc/exports，需要严格按照共享目录的路径 允许访问的 NFS 客户端（共享权限参数）格式书写，定义要共享的目录与相应的权限，具体书写方式如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/canshu.webp.jpg"  alt=""></p><p>配置文件参数解释：<br>执行 man exports 命令，然后切换到文件结尾，可以快速查看如下样例格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nfs共享参数 参数作用</span><br><span class="line">rw         <span class="comment">#读写权限</span></span><br><span class="line">ro         <span class="comment">#只读权限</span></span><br><span class="line">root_squash   <span class="comment">#当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的匿名用户(不常用)</span></span><br><span class="line">no_root_squash   <span class="comment">#当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的 root 管理员(不常用)</span></span><br><span class="line">all_squash   <span class="comment">#无论 NFS 客户端使用什么账户访问，均映射为 NFS 服务器的匿名用户(常用)</span></span><br><span class="line">no_all_squash   <span class="comment">#无论 NFS 客户端使用什么账户访问，都不进行压缩</span></span><br><span class="line">sync   <span class="comment">#同时将数据写入到内存与硬盘中，保证不丢失数据</span></span><br><span class="line">async  <span class="comment">#优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据</span></span><br><span class="line">anonuid   <span class="comment">#配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span></span><br><span class="line">anongid   <span class="comment">#配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-配置NFS服务端"><a href="#2-2-3-配置NFS服务端" class="headerlink" title="2.2.3 配置NFS服务端"></a>2.2.3 配置NFS服务端</h4><p>写入配置文件：注意！IP地址和后面的小括号没有空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/exports &lt;&lt;EOF</span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash)  <span class="comment">#这里是172.16.1.0网段</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建要共享的数据目录，并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">chown -R nfsnobody:nfsnobody /data/</span><br></pre></td></tr></table></figure><h4 id="2-2-4-启动NFS服务"><a href="#2-2-4-启动NFS服务" class="headerlink" title="2.2.4 启动NFS服务"></a>2.2.4 启动NFS服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rpcbind nfs-server <span class="comment">#注意先启动rpc服务</span></span><br><span class="line">systemctl status rpcbind nfs-server <span class="comment">#查看服务</span></span><br></pre></td></tr></table></figure><h4 id="2-2-5-检查nfs命令"><a href="#2-2-5-检查nfs命令" class="headerlink" title="2.2.5 检查nfs命令"></a>2.2.5 检查nfs命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><h4 id="2-2-6-加入开机自启动"><a href="#2-2-6-加入开机自启动" class="headerlink" title="2.2.6 加入开机自启动"></a>2.2.6 加入开机自启动</h4><p>​        在使用 NFS 服务进行文件共享之前，需要使用 RPC（Remote Procedure Call 远程过程调用服务将 NFS 服务器的IP 地址和端口号信息发送给客户端。因此，在启动 NFS 服务之前，需要先重启并启用 rpcbind 服务程序,同时都加入开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rpcbind nfs-server</span><br><span class="line">systemctl restart rpcbind nfs-server</span><br></pre></td></tr></table></figure><h3 id="2-3-客户端挂载"><a href="#2-3-客户端挂载" class="headerlink" title="2.3 客户端挂载"></a>2.3 客户端挂载</h3><p>客户端安装nfs服务十分简单，只需要安装nfs软件包即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils rpcbind</span><br></pre></td></tr></table></figure><p>客户端安装完成后只需要启动rpcbind，不需要启动nfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br></pre></td></tr></table></figure><p>客户端使用命令查看nfs共享信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>客户端挂载 ： 创建挂载目录<br>        在 NFS 客户端创建一个挂载目录, 使用 mount 命令并结合-t 参数, 指定要挂载的文件系统的类型, 并在命令后面写上服务器的 IP 地址, 以及服务器上的共享目录, 最后需要写上要挂载到本地系统(客户端)的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">mount -t nfs 172.16.1.31:/data /data/</span><br></pre></td></tr></table></figure><p>挂载完成后查看是否挂载成功？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>卸载命令：注意!卸载的时候如果提示”umount.nfs: /nfsdir: device is busy”先切换到其他目录再卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umount /data/</span></span><br><span class="line"><span class="comment"># umount -rl /data/  #强制卸载</span></span><br></pre></td></tr></table></figure><h3 id="2-4-测试NFS"><a href="#2-4-测试NFS" class="headerlink" title="2.4 测试NFS"></a>2.4 测试NFS</h3><p>客户端41在挂载目录创建文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch oldboy.txt &amp;&amp; echo 123 &gt;oldboy.txt </span></span><br><span class="line"><span class="comment"># cat oldboy.txt </span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>NFS服务器端查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># ls -l</span></span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody 4 Jul 18 16:56 oldboy.txt</span><br></pre></td></tr></table></figure><p>客户端41写入开机自动挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/fstab</span></span><br><span class="line"><span class="comment"># tail -1 /etc/fstab </span></span><br><span class="line">  172.16.1.31:/data    /data     nfs     defaults   0 0</span><br><span class="line"><span class="comment"># mount -a</span></span><br></pre></td></tr></table></figure><h3 id="2-5-NFS-权限验证"><a href="#2-5-NFS-权限验证" class="headerlink" title="2.5 NFS 权限验证"></a>2.5 NFS 权限验证</h3><h4 id="2-5-1-验证ro权限"><a href="#2-5-1-验证ro权限" class="headerlink" title="2.5.1 验证ro权限"></a>2.5.1 验证ro权限</h4><p>服务器端配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(ro,sync,all_squash)</span><br><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server</span></span><br><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>客户端挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>客户端测试读取权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /data/oldboy.txt </span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>客户端测试写入权限：(没有权限)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 456 &gt;&gt; /data/oldboy.txt </span></span><br><span class="line">-bash: /data/oldboy.txt: Read-only file system</span><br></pre></td></tr></table></figure><h4 id="2-5-2-验证all-squash、-anonuid、-anongid-权限"><a href="#2-5-2-验证all-squash、-anonuid、-anongid-权限" class="headerlink" title="2.5.2 验证all_squash、 anonuid、 anongid 权限"></a>2.5.2 验证all_squash、 anonuid、 anongid 权限</h4><p>服务器端配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><p>服务端创建用户及授权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>重启NFS服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server</span></span><br></pre></td></tr></table></figure><p>服务器端更改目录属主、属组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 24 Jul 18 11:52 /data/</span><br></pre></td></tr></table></figure><p>客户端创建用户www</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>客户端挂载测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># ll -d /data</span></span><br><span class="line">drwxr-xr-x 2 www www 24 Jul 18 11:52 /data</span><br></pre></td></tr></table></figure><p>注意：创建用户前，先创建组（666），然后再创建用户www（666），否则会出现属主、属组不同的情况</p><h2 id="第3章查看nfs端口"><a href="#第3章查看nfs端口" class="headerlink" title="第3章查看nfs端口"></a>第3章查看nfs端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpcinfo -p</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100005    1   udp  20048  mountd</span><br><span class="line">    100005    1   tcp  20048  mountd</span><br><span class="line">    100005    2   udp  20048  mountd</span><br><span class="line">    100005    2   tcp  20048  mountd</span><br><span class="line">    100005    3   udp  20048  mountd</span><br><span class="line">    100005    3   tcp  20048  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  37349  nlockmgr</span><br><span class="line">    100021    3   udp  37349  nlockmgr</span><br><span class="line">    100021    4   udp  37349  nlockmgr</span><br><span class="line">    100021    1   tcp  39255  nlockmgr</span><br><span class="line">    100021    3   tcp  39255  nlockmgr</span><br><span class="line">    100021    4   tcp  39255  nlockmgr</span><br></pre></td></tr></table></figure><h3 id="工作中防火墙配置"><a href="#工作中防火墙配置" class="headerlink" title="工作中防火墙配置"></a>工作中防火墙配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=nfs --permanent</span><br><span class="line">firewall-cmd --add-service=mountd --permanent</span><br><span class="line">firewall-cmd --add-service=rpc-bind --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="NFS故障案例"><a href="#NFS故障案例" class="headerlink" title="NFS故障案例"></a>NFS故障案例</h3><p>​        在生产环境中，对于共享的NFS目录，一般不会配置到/etc/fstab里。因为在客户端主机重启时如果由于网络等原因连接不上nfs server时，就会导致客户机无法启动的厄运发生。一般是通过把mount -t nfs 172.16.1.31:/data /data命令放到rc.local中来实现开机自动挂载NFS。</p><p>如果设置了开机自启动，但是系统启动的时候NFS并没有提供服务，就会导致开机自检的时候卡在挂在那一步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开机启动时添加rd.break</span><br><span class="line">ctrl+x</span><br><span class="line">mount -o remount,rw /sysroot/</span><br><span class="line">chroot /sysroot/</span><br></pre></td></tr></table></figure><h2 id="第4章-NFS小结"><a href="#第4章-NFS小结" class="headerlink" title="第4章 NFS小结"></a>第4章 NFS小结</h2><p>NFS 存储优点<br>1.NFS 文件系统简单易用、方便部署、数据可靠、服务稳定、满足中小企业需求。<br>2.NFS 文件系统内存放的数据都在文件系统之上，所有数据都是能看得见<br>NFS 存储局限<br>1.存在单点故障, 如果构建高可用维护麻烦 web-&gt;nfs()-&gt;backup<br>2.NFS 数据明文, 并不对数据做任何校验。<br>3.客户端挂载 NFS 服务没有密码验证, 安全性一般(内网使用)<br>NFS 应用建议<br>1.生产场景应将静态数据尽可能往前端推, 减少后端存储压力<br>2.必须将存储里的静态资源通过 CDN 缓存 jpg\png\mp4\avi\css\js<br>3.如果没有缓存或架构本身历史遗留问题太大, 在多存储也无用</p><h2 id="第5章-项目实战"><a href="#第5章-项目实战" class="headerlink" title="第5章 项目实战"></a>第5章 项目实战</h2><h3 id="5-1-项目需求"><a href="#5-1-项目需求" class="headerlink" title="5.1 项目需求"></a>5.1 项目需求</h3><p>准备 3 台虚拟机服务器，并且请按照要求搭建配置 NFS 服务。<br> NFS 服务端（A nfs-31）<br> NFS 客户端（B backup-41）<br> NFS 客户端（C nfs-42）<br> 1.在 NFS 服务端(A)上共享/data/rw(读写)给客户端B及/data/r(只读)给客户端C<br> 2.在 NFS 客户端(B/C)上进行挂载测试</p><p>环境准备</p><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>内网：172.16.1.31/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client1）</td><td>内网：172.16.1.41/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client2）</td><td>内网：172.16.1.42/24</td></tr></tbody></table><h3 id="5-2-服务端配置"><a href="#5-2-服务端配置" class="headerlink" title="5.2 服务端配置"></a>5.2 服务端配置</h3><p>服务器端创建www用户和组，并指定/data目录的属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 24 Jul 18 11:52 /data/</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash) <span class="comment">#注意：这里不指定用户uid和gid，否则权限会失效</span></span><br><span class="line">/data 172.16.1.41/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/data 172.16.1.42/24(ro,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><p>重启服务及查看nfs信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server  #重启服务</span></span><br><span class="line"><span class="comment"># showmount -e 172.16.1.31  #查看nfs共享信息</span></span><br><span class="line">  Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">  /data 172.16.1.42/24,172.16.1.41/24,172.16.1.0/24</span><br></pre></td></tr></table></figure><h3 id="5-3-客户端挂载测试"><a href="#5-3-客户端挂载测试" class="headerlink" title="5.3 客户端挂载测试"></a>5.3 客户端挂载测试</h3><h4 id="5-3-1-客户端B-（backup-41）"><a href="#5-3-1-客户端B-（backup-41）" class="headerlink" title="5.3.1 客户端B （backup-41）"></a>5.3.1 客户端B （backup-41）</h4><p>重启rpc服务，并写入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br></pre></td></tr></table></figure><p>创建挂载目录，并挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>测试读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 123456 &gt;test.txt   #客户端B写入文件，并读取</span></span><br><span class="line"><span class="comment"># cat test.txt </span></span><br><span class="line">123456</span><br><span class="line"><span class="comment"># ll /data/   #服务器端可以看到文件</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 www www 4 Jul 18 16:56 oldboy.txt</span><br><span class="line">-rw-r--r-- 1 www www 7 Jul 18 18:29 test.txt</span><br></pre></td></tr></table></figure><h4 id="5-3-2-客户端B（nfs-42）"><a href="#5-3-2-客户端B（nfs-42）" class="headerlink" title="5.3.2 客户端B（nfs-42）"></a>5.3.2 客户端B（nfs-42）</h4><p>安装nfs服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install nfs-utils</span></span><br></pre></td></tr></table></figure><p>重启rpc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind</span></span><br><span class="line"><span class="comment"># systemctl enable rpcbind  #写入开机自启</span></span><br></pre></td></tr></table></figure><p>创建用户www和组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>创建挂载目录，并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 6 Jul 19 02:41 /data/</span><br></pre></td></tr></table></figure><p>挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line"> 172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>测试只读权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat test.txt  #可以查看文件内容</span></span><br><span class="line"> 123456</span><br><span class="line"><span class="comment"># echo abc &gt;&gt;test.txt  #不能写入内容到文件</span></span><br><span class="line"> -bash: test.txt: Permission denied</span><br><span class="line"><span class="comment"># touch nfs.txt  #不能创建文件</span></span><br><span class="line"> touch: cannot touch ‘nfs.txt’: Permission denied</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2.Rsync备份服务器</title>
      <link href="/2020/04/13/2-Rsync%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/04/13/2-Rsync%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Rsync-备份服务器"><a href="#Rsync-备份服务器" class="headerlink" title="Rsync 备份服务器"></a>Rsync 备份服务器</h1><h2 id="第一章-Rsync基本概述"><a href="#第一章-Rsync基本概述" class="headerlink" title="第一章 Rsync基本概述"></a>第一章 Rsync基本概述</h2><p>rsync 是一款开源的备份工具，可以在不同主机之间进行同步，可实现全量备份与增量备份，因此非常适合用于架构集中式备份或异地备份等应用。<br> rsync 官方地址： 传送门 <a href="https://links.jianshu.com/go?to=http%3A%2F%2Frsync.samba.org" target="_blank" rel="noopener">http://rsync.samba.org</a><br> rsync 监听端口： 873<br> rsync 运行模式： C/S（Client/Server）</p><p>安装rsync服务命令：本地与远程均需安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h2 id="第二章-Rsync应用场景"><a href="#第二章-Rsync应用场景" class="headerlink" title="第二章 Rsync应用场景"></a>第二章 Rsync应用场景</h2><h3 id="2-1-备份方式："><a href="#2-1-备份方式：" class="headerlink" title="2.1 备份方式："></a>2.1 备份方式：</h3><p>既然需要备份，那么我们应该了解备份的方式<br> 完全备份<br> 增量备份<br>假设客户端上有 file1 file2 file3 文件，服务端上有 file1 文件，现要将客户端上的数据备份至服务端<br> 完全备份方式：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/wqbf.webp.jpg"  alt=""></p><p>增量备份方式：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/zlbf.webp.jpg"  alt=""></p><h3 id="2-2-备份架构："><a href="#2-2-备份架构：" class="headerlink" title="2.2 备份架构："></a>2.2 备份架构：</h3><p>1推（上传）    </p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1tui.png"  alt=""></p><p>2拉 （下载）</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2la.webp.jpg"  alt=""></p><p>3.大量服务器备份</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/3duo-backup.webp.jpg"  alt=""></p><p>4.异地备份</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/4yidi.webp.jpg"  alt=""></p><h2 id="第三章-Rsync三种模式"><a href="#第三章-Rsync三种模式" class="headerlink" title="第三章 Rsync三种模式"></a>第三章 Rsync三种模式</h2><h3 id="3-1-本地模式"><a href="#3-1-本地模式" class="headerlink" title="3.1 本地模式"></a>3.1 本地模式</h3><p>相当于cp</p><p>创建测试目录及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.mkdir /data</span><br><span class="line">  <span class="built_in">cd</span> /data/</span><br><span class="line">2.dd <span class="keyword">if</span>=/dev/zero of=/data/500M.txt bs=10M count=50<span class="comment">#创建大文件</span></span><br><span class="line">  50+0 records <span class="keyword">in</span></span><br><span class="line">  50+0 records out</span><br><span class="line">  524288000 bytes (524 MB) copied, 18.1737 s, 28.8 MB/s</span><br><span class="line">3.ll -h</span><br><span class="line">  total 500M</span><br><span class="line">  -rw-r--r-- 1 root root 500M Jul 16 21:58 500M.txt</span><br></pre></td></tr></table></figure><p>测试本地模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.mkdir /tmp/<span class="built_in">test</span></span><br><span class="line">2.rsync -avz /data/500M.txt /tmp/<span class="built_in">test</span>/</span><br><span class="line">  sending incremental file list</span><br><span class="line">  500M.txt</span><br><span class="line"></span><br><span class="line">  sent 509,968 bytes  received 35 bytes  27,567.73 bytes/sec</span><br><span class="line">  total size is 524,288,000  speedup is 1,028.01</span><br><span class="line">3.ll /tmp/<span class="built_in">test</span>/</span><br><span class="line">  total 512000</span><br><span class="line">  -rw-r--r-- 1 root root 524288000 Jul 16 21:58 500M.txt</span><br></pre></td></tr></table></figure><h3 id="3-2-远程模式"><a href="#3-2-远程模式" class="headerlink" title="3.2 远程模式"></a>3.2 远程模式</h3><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz root@172.16.1.31:/tmp/data/ /data/  </span><br><span class="line"><span class="comment">#拉取远程服务器目录下所有文件到本地</span></span><br><span class="line">rsync -avz root@172.16.1.31:/tmp/data /data/    </span><br><span class="line"><span class="comment">#拉取远程服务器目录到本地</span></span><br></pre></td></tr></table></figure><p>上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz 1G.txt  root@172.16.1.31:/tmp/data</span><br></pre></td></tr></table></figure><h3 id="3-3-后台服务模式"><a href="#3-3-后台服务模式" class="headerlink" title="3.3 后台服务模式"></a>3.3 后台服务模式</h3><p>Rsync 借助 SSH 协议同步数据存在的缺陷</p><p>1.使用系统用户（不安全）,需要知道root密码</p><p>2.使用普通用户（会导致权限不足情况）需要修改用户属主、属组信息（uid gid）</p><p>3.守护进程传输方式: rsync 自身非常重要的功能(不使用系统用户，更加安全)</p><h3 id="3-4-命令参数解释"><a href="#3-4-命令参数解释" class="headerlink" title="3.4 命令参数解释"></a>3.4 命令参数解释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">rsync <span class="comment">#命令</span></span><br><span class="line">[OPTION...] <span class="comment">#选项</span></span><br><span class="line">SRC... <span class="comment">#远程主机模块(不是目录)</span></span><br><span class="line">[USER@] <span class="comment">#远程主机用户(虚拟用户)</span></span><br><span class="line">HOST:: <span class="comment">#远程主机地址</span></span><br><span class="line">[DEST] <span class="comment">#将远程主机模块备份至本地什么位置</span></span><br><span class="line">-a <span class="comment">#归档模式传输, 等于-tropgDl</span></span><br><span class="line">-v <span class="comment">#详细模式输出, 打印速率, 文件数量等</span></span><br><span class="line">-z <span class="comment">#传输时进行压缩以提高效率</span></span><br><span class="line">-r <span class="comment">#递归传输目录及子目录，即目录下得所有目录都同样传输。</span></span><br><span class="line">-t <span class="comment">#保持文件时间信息</span></span><br><span class="line">-o <span class="comment">#保持文件属主信息</span></span><br><span class="line">-p <span class="comment">#保持文件权限</span></span><br><span class="line">-g <span class="comment">#保持文件属组信息</span></span><br><span class="line">-l <span class="comment">#保留软连接</span></span><br><span class="line">-P <span class="comment">#显示同步的过程及传输时的进度等信息</span></span><br><span class="line">-D <span class="comment">#保持设备文件信息</span></span><br><span class="line">-L <span class="comment">#保留软连接指向的目标文件</span></span><br><span class="line">-e <span class="comment">#使用的信道协议,指定替代 rsh 的 shell 程序</span></span><br><span class="line">--exclude=PATTERN <span class="comment">#指定排除不需要传输的文件模式</span></span><br><span class="line">--exclude-from=file <span class="comment">#文件名所在的目录文件</span></span><br><span class="line">--bwlimit=100 <span class="comment">#限速传输</span></span><br><span class="line">--partial <span class="comment">#断点续传</span></span><br><span class="line">--delete <span class="comment">#让目标目录和源目录数据保持一致</span></span><br></pre></td></tr></table></figure><p>我们一般使用： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz 本地上传文件 目标地址(IP):/路径    <span class="comment">#上传数据</span></span><br><span class="line">rsync -avz 目标地址(IP):/路径/目录(文件) 本地路径   <span class="comment">#下载数据</span></span><br></pre></td></tr></table></figure><h2 id="第四章-后台服务模式-服务端配置"><a href="#第四章-后台服务模式-服务端配置" class="headerlink" title="第四章 后台服务模式-服务端配置"></a>第四章 后台服务模式-服务端配置</h2><h3 id="4-1-安装rsync服务"><a href="#4-1-安装rsync服务" class="headerlink" title="4.1 安装rsync服务"></a>4.1 安装rsync服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h3 id="4-2-修改配置文件"><a href="#4-2-修改配置文件" class="headerlink" title="4.2 修改配置文件"></a>4.2 修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@backup /backup]<span class="comment"># cat /etc/rsyncd.conf</span></span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br></pre></td></tr></table></figure><h3 id="4-3-配置文件解释"><a href="#4-3-配置文件解释" class="headerlink" title="4.3 配置文件解释"></a>4.3 配置文件解释</h3><p>注意！以下配置只是为了理解rsync配置参数，配置文件中不要带有#或者中文，不然启动会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">uid = www <span class="comment"># 运行进程的用户</span></span><br><span class="line">gid = www <span class="comment"># 运行进程的用户组</span></span><br><span class="line">port = 873 <span class="comment"># 监听端口</span></span><br><span class="line">fake super = yes <span class="comment"># 无需让 rsync 以 root 身份运行，允许接收文件的完整属性</span></span><br><span class="line">use chroot = no <span class="comment"># 禁锢推送的数据至某个目录, 不允许跳出该目录</span></span><br><span class="line">max connections = 200 <span class="comment"># 最大连接数</span></span><br><span class="line">timeout = 600 <span class="comment"># 超时时间</span></span><br><span class="line">ignore errors <span class="comment"># 忽略错误信息</span></span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span> <span class="comment"># 对备份数据可读写</span></span><br><span class="line">list = <span class="literal">false</span> <span class="comment"># 不允许查看模块信息</span></span><br><span class="line">auth users = rsync_backup <span class="comment"># 定义虚拟用户，作为连接认证用户</span></span><br><span class="line">secrets file = /etc/rsync.passwd <span class="comment"># 定义 rsync 服务用户连接认证密码文件路径</span></span><br><span class="line">[backup] <span class="comment"># 定义模块信息</span></span><br><span class="line">comment = commit <span class="comment"># 模块注释信息</span></span><br><span class="line">path = /backup <span class="comment"># 定义接收备份数据目录</span></span><br></pre></td></tr></table></figure><h3 id="4-4-创建用户以及数据目录-并更改属主"><a href="#4-4-创建用户以及数据目录-并更改属主" class="headerlink" title="4.4 创建用户以及数据目录 并更改属主"></a>4.4 创建用户以及数据目录 并更改属主</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin -u 666 www </span><br><span class="line">mkdir /backup /data</span><br><span class="line">chown -R www.www /backup</span><br><span class="line">chown -R www.www /data</span><br></pre></td></tr></table></figure><h3 id="4-5-创建虚拟用户密码文件并授权"><a href="#4-5-创建虚拟用户密码文件并授权" class="headerlink" title="4.5 创建虚拟用户密码文件并授权"></a>4.5 创建虚拟用户密码文件并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"rsync_backup:oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br></pre></td></tr></table></figure><h3 id="4-6-加入开机启动"><a href="#4-6-加入开机启动" class="headerlink" title="4.6 加入开机启动"></a>4.6 加入开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rsyncd  <span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd <span class="comment">#开机自启动</span></span><br></pre></td></tr></table></figure><h3 id="4-7-检查端口和服务"><a href="#4-7-检查端口和服务" class="headerlink" title="4.7 检查端口和服务"></a>4.7 检查端口和服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntup|grep 873 <span class="comment">#查看端口</span></span><br><span class="line">systemctl status rsyncd <span class="comment">#查看服务</span></span><br></pre></td></tr></table></figure><h2 id="第五章-后台服务模式-客户端配置"><a href="#第五章-后台服务模式-客户端配置" class="headerlink" title="第五章 后台服务模式-客户端配置"></a>第五章 后台服务模式-客户端配置</h2><h3 id="5-1-安装rsync服务"><a href="#5-1-安装rsync服务" class="headerlink" title="5.1 安装rsync服务"></a>5.1 安装rsync服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h3 id="5-2-配置密码文件及授权"><a href="#5-2-配置密码文件及授权" class="headerlink" title="5.2 配置密码文件及授权"></a>5.2 配置密码文件及授权</h3><p>两种方式：<br>1.使用密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br><span class="line">rsync -avzP linux2NB.txt rsync_backup@172.16.1.41::backup --passwordfile=/etc/rsync.passwd</span><br></pre></td></tr></table></figure><p>2.使用rsync变量-脚本中使用-推荐这种</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br></pre></td></tr></table></figure><h2 id="第六章-实战内容"><a href="#第六章-实战内容" class="headerlink" title="第六章 实战内容"></a>第六章 实战内容</h2><h3 id="6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端"><a href="#6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端" class="headerlink" title="6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端"></a>6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP /backup/ rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h3 id="6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录"><a href="#6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录" class="headerlink" title="6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录"></a>6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP rsync_backup@172.16.1.41::backup /backup/</span><br></pre></td></tr></table></figure><h3 id="6-3-Rsync-实现数据无差异同步"><a href="#6-3-Rsync-实现数据无差异同步" class="headerlink" title="6.3 Rsync 实现数据无差异同步"></a>6.3 Rsync 实现数据无差异同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取远端数据：远端与本地保持一致,远端没有本地有会被删除, 造成客户端数据丢失</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP --delete rsync_backup@172.16.1.41::backup /data/</span><br><span class="line"><span class="comment">#推送数据至远端：本地与远端保持一致, 本地没有远端会被删除, 造成服务器端数据丢失</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP --delete /data/ rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h3 id="6-4-Rsync-的-Limit-限速"><a href="#6-4-Rsync-的-Limit-限速" class="headerlink" title="6.4 Rsync 的 Limit 限速"></a>6.4 Rsync 的 Limit 限速</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#企业案例：防止备份时带宽不够用，影响其他业务</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avz --bwlimit=10 rsync_backup@172.16.1.41::backup /data/  <span class="comment">#限制为10M/S传输数据</span></span><br></pre></td></tr></table></figure><h2 id="第七章-全网备份案例"><a href="#第七章-全网备份案例" class="headerlink" title="第七章 全网备份案例"></a>第七章 全网备份案例</h2><h3 id="7-1-客户端需求："><a href="#7-1-客户端需求：" class="headerlink" title="7.1 客户端需求："></a>7.1 客户端需求：</h3><p>1.客户端 每天凌晨1点在服务器本地打包备份(系统配置文件\日志文件\其他目录\应用配置等文件)<br>2.客户端备份的数据必须存放至以主机名<em>ip地址</em>当前时间命名的目录中<br>3.客户端最后通过rsync推送本地已经打包好的备份文件至backup服务器<br>4.客户端服务器本地保留最近7天的数据，避免浪费磁盘空间</p><h3 id="7-2-客户端实现步骤："><a href="#7-2-客户端实现步骤：" class="headerlink" title="7.2 客户端实现步骤："></a>7.2 客户端实现步骤：</h3><h4 id="7-2-1-创建脚本目录"><a href="#7-2-1-创建脚本目录" class="headerlink" title="7.2.1.创建脚本目录"></a>7.2.1.创建脚本目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /server/scripts</span><br></pre></td></tr></table></figure><h4 id="7-2-2-取主机名"><a href="#7-2-2-取主机名" class="headerlink" title="7.2.2. 取主机名"></a>7.2.2. 取主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><h4 id="7-2-3-取IP地址"><a href="#7-2-3-取IP地址" class="headerlink" title="7.2.3 取IP地址"></a>7.2.3 取IP地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure><h4 id="7-2-4-取时间"><a href="#7-2-4-取时间" class="headerlink" title="7.2.4 取时间"></a>7.2.4 取时间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date +%F</span><br></pre></td></tr></table></figure><h4 id="7-2-5-拼接在一起"><a href="#7-2-5-拼接在一起" class="headerlink" title="7.2.5 拼接在一起"></a>7.2.5 拼接在一起</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)</span><br></pre></td></tr></table></figure><h4 id="7-2-6-创建测试"><a href="#7-2-6-创建测试" class="headerlink" title="7.2.6 创建测试"></a>7.2.6 创建测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /backup/$(hostname)_$(ifconfig eth1|awk<span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)</span><br></pre></td></tr></table></figure><h4 id="7-2-7-打包并查看压缩包内容"><a href="#7-2-7-打包并查看压缩包内容" class="headerlink" title="7.2.7 打包并查看压缩包内容"></a>7.2.7 打包并查看压缩包内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcvf sys.tar.gz etc/fstab etc/passwd </span><br><span class="line">tar tf sys.tar.gz</span><br></pre></td></tr></table></figure><h4 id="7-2-8-拼接命令"><a href="#7-2-8-拼接命令" class="headerlink" title="7.2.8 拼接命令"></a>7.2.8 拼接命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/sys.tar.gz etc/fstab etc/passwd</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br></pre></td></tr></table></figure><h4 id="7-2-9-创建数据"><a href="#7-2-9-创建数据" class="headerlink" title="7.2.9 创建数据"></a>7.2.9 创建数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat date.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#生成1-31天的系统和日志压缩包</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..31&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">backup=<span class="string">"/backup/<span class="variable">$(hostname)</span>_<span class="variable">$(ifconfig eth1|awk 'NR==2&#123;print $2&#125;')</span>_<span class="variable">$(date +%F)</span>"</span></span><br><span class="line">date -s 2017/07/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;backup&#125;</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf <span class="variable">$&#123;backup&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf <span class="variable">$&#123;backup&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="7-2-10-客户端给压缩文件打上指纹"><a href="#7-2-10-客户端给压缩文件打上指纹" class="headerlink" title="7.2.10 客户端给压缩文件打上指纹"></a>7.2.10 客户端给压缩文件打上指纹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/*.tar.gz &gt;/backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/$(date +%F)_md5.txt</span><br></pre></td></tr></table></figure><h4 id="7-2-11-删除7天的前文件"><a href="#7-2-11-删除7天的前文件" class="headerlink" title="7.2.11 删除7天的前文件"></a>7.2.11 删除7天的前文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /backup/ -<span class="built_in">type</span> d -mtime +7|xargs rm -rf</span><br></pre></td></tr></table></figure><h4 id="7-2-12-将路径、IP地址、时间命令替换成变量"><a href="#7-2-12-将路径、IP地址、时间命令替换成变量" class="headerlink" title="7.2.12 将路径、IP地址、时间命令替换成变量"></a>7.2.12 将路径、IP地址、时间命令替换成变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br></pre></td></tr></table></figure><h4 id="7-2-13-注意要点："><a href="#7-2-13-注意要点：" class="headerlink" title="7.2.13 注意要点："></a>7.2.13 注意要点：</h4><p>注意踩坑<br>我们的备份脚本最终会以定时任务的形式实现，而定时任务能识别的PATH变量有限，所以最好在脚本里添加PATH变量，或者脚本里命令写绝对路径。</p><h3 id="7-3-服务端需求："><a href="#7-3-服务端需求：" class="headerlink" title="7.3 服务端需求："></a>7.3 服务端需求：</h3><p>1.服务端部署 rsync，用于接收客户端推送过来的备份数据<br>2.服务端需要每天校验客户端推送过来的数据是否完整<br>3.服务端需要每天校验的结果通知给管理员<br>4.服务端仅保留 6 个月的备份数据,其余的全部删除<br>注意：所有服务器的备份目录必须都为/backup</p><h3 id="7-4-服务端实现步骤"><a href="#7-4-服务端实现步骤" class="headerlink" title="7.4 服务端实现步骤"></a>7.4 服务端实现步骤</h3><h4 id="7-4-1-校验客户端发送来的数据文件"><a href="#7-4-1-校验客户端发送来的数据文件" class="headerlink" title="7.4.1 校验客户端发送来的数据文件"></a>7.4.1 校验客户端发送来的数据文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -name <span class="string">"md5.txt"</span> -<span class="built_in">type</span> f|xargs md5sum -c &gt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br></pre></td></tr></table></figure><h4 id="7-4-2-发送邮件cd"><a href="#7-4-2-发送邮件cd" class="headerlink" title="7.4.2 发送邮件cd"></a>7.4.2 发送邮件cd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail -s <span class="string">"rsync_check_<span class="variable">$&#123;DATE&#125;</span>"</span> wufei008@qq.com &lt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br></pre></td></tr></table></figure><h4 id="7-4-3-删除文件"><a href="#7-4-3-删除文件" class="headerlink" title="7.4.3 删除文件"></a>7.4.3 删除文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除超过 7 天的校验结果文件, 删除超过 180 天的备份数据文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> f -name <span class="string">"check*"</span> -mtime +7|xargs rm -rf</span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +180|xargs rm -rf</span><br></pre></td></tr></table></figure><h4 id="7-4-4-安装配置mailx"><a href="#7-4-4-安装配置mailx" class="headerlink" title="7.4.4  安装配置mailx"></a>7.4.4  安装配置mailx</h4><p>安装mailx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mailx</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/mail.rc</span></span><br><span class="line"><span class="built_in">set</span> from=xxxxxx  <span class="comment">#邮箱地址</span></span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.qq.com:465</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=xxxxxx  <span class="comment">#邮箱地址</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=xxxxxx  <span class="comment">#邮箱授权码</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb/</span><br></pre></td></tr></table></figure><h2 id="第八章-配置文件汇总"><a href="#第八章-配置文件汇总" class="headerlink" title="第八章 配置文件汇总"></a>第八章 配置文件汇总</h2><h3 id="8-1-客户端生成数据脚本"><a href="#8-1-客户端生成数据脚本" class="headerlink" title="8.1 客户端生成数据脚本"></a>8.1 客户端生成数据脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat date.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成1-31天的系统和日志压缩包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..31&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">backup=<span class="string">"/backup/<span class="variable">$(hostname)</span>_<span class="variable">$(ifconfig eth1|awk 'NR==2&#123;print $2&#125;')</span>_<span class="variable">$(date +%F)</span>"</span></span><br><span class="line">date -s 2017/07/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;backup&#125;</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;backup&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;backup&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="8-2-客户端上传脚本"><a href="#8-2-客户端上传脚本" class="headerlink" title="8.2 客户端上传脚本"></a>8.2 客户端上传脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat push_rsync.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.创建目录</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.打包数据</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line">md5sum <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/*.tar.gz &gt;<span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/<span class="variable">$&#123;DATE&#125;</span>_md5.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.推送</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP <span class="variable">$&#123;BACKUP&#125;</span>/ rsync_backup@172.16.1.41::backup</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.删除7天以前的文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +7 |xargs rm -rf</span><br></pre></td></tr></table></figure><h3 id="8-3-服务器端校验并发送到邮箱脚本"><a href="#8-3-服务器端校验并发送到邮箱脚本" class="headerlink" title="8.3 服务器端校验并发送到邮箱脚本"></a>8.3 服务器端校验并发送到邮箱脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat check_rsync.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.检验客户端发送过来的数据</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -name <span class="string">"md5.txt"</span> -<span class="built_in">type</span> f|xargs md5sum -c &gt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.邮件发送</span></span><br><span class="line">mail -s <span class="string">"rsync_check_<span class="variable">$&#123;DATE&#125;</span>"</span> wufei008@qq.com &lt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.删除超过 7 天的校验结果文件, 删除超过 180 天的备份数据文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> f -name <span class="string">"check*"</span> -mtime +7|xargs rm -rf</span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +180|xargs rm -rf</span><br></pre></td></tr></table></figure><h3 id="8-4-服务器rsync安装配置脚本"><a href="#8-4-服务器rsync安装配置脚本" class="headerlink" title="8.4 服务器rsync安装配置脚本"></a>8.4 服务器rsync安装配置脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat rsync_install.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装rsync</span></span><br><span class="line">yum install rsync -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建用户</span></span><br><span class="line">useradd -s /sbin/nologin -M -u 666 www</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.配置文件</span></span><br><span class="line">cat &gt; /etc/rsyncd.conf &lt;&lt;EOF</span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">ignore errors</span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.创建密码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rsync_backup:oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.创建目录</span></span><br><span class="line">mkdir -p /&#123;data,backup&#125;  </span><br><span class="line">chown -R www:www /&#123;data,backup&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.启动</span></span><br><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.检查</span></span><br><span class="line">ps -ef|grep rsync</span><br><span class="line">ss -lntup|grep 873</span><br><span class="line">netstat -lntup|grep rsync</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.综合架构环境准备</title>
      <link href="/2020/04/13/1-%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
      <url>/2020/04/13/1-%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="综合架构环境准备"><a href="#综合架构环境准备" class="headerlink" title="综合架构环境准备"></a>综合架构环境准备</h1><h2 id="1-创建一台全新虚拟机做模板机"><a href="#1-创建一台全新虚拟机做模板机" class="headerlink" title="1.创建一台全新虚拟机做模板机"></a>1.创建一台全新虚拟机做模板机</h2><p>系统：CentOS 7</p><p>内存：2G</p><p>网卡eth0：NAT模式 10.0.1.200   — 外网</p><p>网卡eth1：LAN局域网 172.16.1.200</p><p>硬盘：40G </p><h2 id="2-安装CentOS-7-系统"><a href="#2-安装CentOS-7-系统" class="headerlink" title="2.安装CentOS 7 系统"></a>2.安装CentOS 7 系统</h2><p>添加网卡eth1:</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.jpg"  alt=""></p><p>修改网卡名称:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ifnames=0 biosdevname=0</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.jpg"  alt=""></p><h2 id="3-优化模板机"><a href="#3-优化模板机" class="headerlink" title="3.优化模板机"></a>3.优化模板机</h2><h3 id="3-1精简网卡配置文件"><a href="#3-1精简网卡配置文件" class="headerlink" title="3.1精简网卡配置文件"></a>3.1精简网卡配置文件</h3><p>如果不删除，重新克隆虚拟机会导致上不了网<br>删除网卡里面包含UUID 的行（centos7），删除UUID和HWADDR（CentOS5和6）<br>清空/etc/udev/rules.d/70-persistent-net.rules(centos 5 和6)</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/03.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/04.jpg"  alt=""></p><h3 id="3-2关闭防火墙和Selinux"><a href="#3-2关闭防火墙和Selinux" class="headerlink" title="3.2关闭防火墙和Selinux"></a>3.2关闭防火墙和Selinux</h3><p>关闭防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>关闭selinux：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h3 id="3-3优化SSH连接速度慢"><a href="#3-3优化SSH连接速度慢" class="headerlink" title="3.3优化SSH连接速度慢"></a>3.3优化SSH连接速度慢</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">79 GSSAPIAuthentication no</span><br><span class="line">115 UseDNS no</span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h3 id="3-4优化命令行显示"><a href="#3-4优化命令行显示" class="headerlink" title="3.4优化命令行显示"></a>3.4优化命令行显示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">"[\[\e[34;1m\]\u@\[\e[0m\]\[\e[32;1m\]\H\[\e[0m\] \[\e[31;1m\]\w\[\e[0m\]]\\$ "</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="3-5优化yum源为阿里源"><a href="#3-5优化yum源为阿里源" class="headerlink" title="3.5优化yum源为阿里源"></a>3.5优化yum源为阿里源</h3><p>查看yum 库信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>打开阿里源网址<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a></p><p>选择对应版本，帮助：</p><h4 id="1、备份"><a href="#1、备份" class="headerlink" title="1、备份"></a>1、备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><h4 id="2、下载新的CentOS-Base-repo-到-etc-yum-repos-d"><a href="#2、下载新的CentOS-Base-repo-到-etc-yum-repos-d" class="headerlink" title="2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/"></a>2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br></pre></td></tr></table></figure><h4 id="3、之后运行yum-makecache-fast生成缓存"><a href="#3、之后运行yum-makecache-fast生成缓存" class="headerlink" title="3、之后运行yum makecache fast生成缓存"></a>3、之后运行yum makecache fast生成缓存</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/05.jpg"  alt=""></p><h4 id="4-安装额外包epel-，选择帮助："><a href="#4-安装额外包epel-，选择帮助：" class="headerlink" title="4.安装额外包epel ，选择帮助："></a>4.安装额外包epel ，选择帮助：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br></pre></td></tr></table></figure><h3 id="3-6安装常用软件"><a href="#3-6安装常用软件" class="headerlink" title="3.6安装常用软件"></a>3.6安装常用软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tree vim wget bash-completion bash-completion-extras lrzsz net-tools sysstat iotop iftop htop unzip telnet ntpdate</span><br></pre></td></tr></table></figure><h3 id="3-7配置普通用户sudo权限"><a href="#3-7配置普通用户sudo权限" class="headerlink" title="3.7配置普通用户sudo权限"></a>3.7配置普通用户sudo权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># grep oldboy &#x2F;etc&#x2F;sudoers</span><br><span class="line">oldboy  ALL&#x3D;(ALL)       NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h3 id="3-8配置-etc-hosts解析"><a href="#3-8配置-etc-hosts解析" class="headerlink" title="3.8配置/etc/hosts解析"></a>3.8配置/etc/hosts解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.1.5 172.16.1.5 lb01</span><br><span class="line">10.0.1.6 172.16.1.6 lb02</span><br><span class="line">10.0.1.7 172.16.1.7 web01</span><br><span class="line">10.0.1.8 172.16.1.8 web02</span><br><span class="line">10.0.1.9 172.16.1.9 web03</span><br><span class="line">10.0.1.31 172.16.1.31 nfs</span><br><span class="line">10.0.1.41 172.16.1.41 backup</span><br><span class="line">10.0.1.51 172.16.1.51 db01</span><br><span class="line">10.0.1.61 172.16.1.61 m01</span><br><span class="line">10.0.1.71 172.16.1.71 zabbix</span><br></pre></td></tr></table></figure><h2 id="4-修改模板机IP、主机名，拍摄快照"><a href="#4-修改模板机IP、主机名，拍摄快照" class="headerlink" title="4.修改模板机IP、主机名，拍摄快照"></a>4.修改模板机IP、主机名，拍摄快照</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/06.jpg"  alt=""></p><h2 id="5-克隆backup服务器"><a href="#5-克隆backup服务器" class="headerlink" title="5.克隆backup服务器"></a>5.克隆backup服务器</h2><h4 id="5-1-backup-41备份服务器"><a href="#5-1-backup-41备份服务器" class="headerlink" title="5.1. backup 41备份服务器"></a>5.1. backup 41备份服务器</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/07.jpg"  alt=""></p><p>设置backup-41</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/08.jpg"  alt=""></p><p>修改backup-41的网卡信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/09.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/10.jpg"  alt=""></p><p>重启网卡服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>修改主机名为backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname backup</span><br></pre></td></tr></table></figure><h4 id="5-2-NFS-31-服务器克隆"><a href="#5-2-NFS-31-服务器克隆" class="headerlink" title="5.2 NFS 31 服务器克隆"></a>5.2 NFS 31 服务器克隆</h4><p>安装nfs -31服务器</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/11.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/12.jpg"  alt=""></p><p>修改nfs -31网卡信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/13.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14.jpg"  alt=""></p><p>重启网卡服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>修改主机名为nfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname nfs</span><br></pre></td></tr></table></figure><h2 id="6-部署完成给backup和nfs做好快照"><a href="#6-部署完成给backup和nfs做好快照" class="headerlink" title="6.部署完成给backup和nfs做好快照"></a>6.部署完成给backup和nfs做好快照</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/15.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/16.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/17.jpg"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> LNMP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lnmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-tag-dplayer 视频插件</title>
      <link href="/2020/04/11/hexo-tag-dplayer-%E8%A7%86%E9%A2%91%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/04/11/hexo-tag-dplayer-%E8%A7%86%E9%A2%91%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 是 <a href="https://github.com/MoePlayer/DPlayer" target="_blank" rel="noopener">APlayer</a> 播放器的 Hexo 标签插件，可以十分方便地在文章内插入视频播放器。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 hexo-tag-dplayer 插件十分简单，只需要在博客目录执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><p>修改 Hexo 的站点配置文件 <code>_config.yml</code> ，增加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo-tag-dplayer:</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css</span></span><br><span class="line">  <span class="attr">default:</span> </span><br><span class="line">    <span class="attr">api:</span> <span class="string">https://api.prprpr.me/dplayer/</span></span><br><span class="line">    <span class="attr">loop:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">screenshot:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="comment"># 后面还可以接着写其他默认配置</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用 hexo-tag-dplayer 非常简单，只需要在 MarkDown 文件中插入正确的标记就可以了。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer "url=视频地址" %&#125;</span><br></pre></td></tr></table></figure><p>如果还需要其他配置，尽管在上面写就好，详情可以看 [这里] (<a href="https://github.com/MoePlayer/hexo-tag-dplayer)，下面有一个简单的示例可以看一下：" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-dplayer)，下面有一个简单的示例可以看一下：</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer "url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4" "addition=https://dplayer.daoapp.io/bilibili?aid=4157142" "api=https://api.prprpr.me/dplayer/" "pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg" "id=9E2E3368B56CDBB4" "loop=yes" "theme=#FADFA3" "autoplay=false" "token=tokendemo" %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% dplayer 'url=some.mp4' "id=someid" "api=https://api.prprpr.me/dplayer/" "addition=/some.json" 'code=player.on("loadstart",function()&#123;console.log("loadstart")&#125;)' "autoplay" %&#125;</span><br></pre></td></tr></table></figure><p>附 Dplayer 一些简单的参数列表，注意， Dplayer 的参数仅作为参考，具体请以 <a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 为准</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>DPlayer 有丰富的参数可以自定义你的播放器实例</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>container</td><td>document.querySelector(‘.dplayer’)</td><td>播放器容器元素</td></tr><tr><td>live</td><td>false</td><td>开启直播模式, 见<a href="http://dplayer.js.org/zh/guide.html#直播" target="_blank" rel="noopener">#直播</a></td></tr><tr><td>autoplay</td><td>false</td><td>视频自动播放</td></tr><tr><td>theme</td><td>‘#b7daff’</td><td>主题色</td></tr><tr><td>loop</td><td>false</td><td>视频循环播放</td></tr><tr><td>lang</td><td>navigator.language.toLowerCase()</td><td>可选值: ‘en’, ‘zh-cn’, ‘zh-tw’</td></tr><tr><td>screenshot</td><td>false</td><td>开启截图，如果开启，视频和视频封面需要允许跨域</td></tr><tr><td>hotkey</td><td>true</td><td>开启热键，支持快进、快退、音量控制、播放暂停</td></tr><tr><td>preload</td><td>‘auto’</td><td>视频预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>volume</td><td>0.7</td><td>默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td>logo</td><td>-</td><td>在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置</td></tr><tr><td>apiBackend</td><td>-</td><td>自定义获取和发送弹幕行为，见<a href="http://dplayer.js.org/zh/guide.html#直播" target="_blank" rel="noopener">#直播</a></td></tr><tr><td>video</td><td>-</td><td>视频信息</td></tr><tr><td>video.quality</td><td>-</td><td>见<a href="http://dplayer.js.org/zh/guide.html#清晰度切换" target="_blank" rel="noopener">#清晰度切换</a></td></tr><tr><td>video.defaultQuality</td><td>-</td><td>见<a href="http://dplayer.js.org/zh/guide.html#清晰度切换" target="_blank" rel="noopener">#清晰度切换</a></td></tr><tr><td>video.url</td><td>-</td><td>视频链接</td></tr><tr><td>video.pic</td><td>-</td><td>视频封面</td></tr><tr><td>video.thumbnails</td><td>-</td><td>视频缩略图，可以使用 <a href="https://github.com/MoePlayer/DPlayer-thumbnails" target="_blank" rel="noopener">DPlayer-thumbnails</a> 生成</td></tr><tr><td>video.type</td><td>‘auto’</td><td>可选值: ‘auto’, ‘hls’, ‘flv’, ‘dash’, ‘webtorrent’, ‘normal’ 或其他自定义类型, 见<a href="http://dplayer.js.org/zh/guide.html#mse-支持" target="_blank" rel="noopener">#MSE 支持</a></td></tr><tr><td>video.customType</td><td>-</td><td>自定义类型, 见<a href="http://dplayer.js.org/zh/guide.html#mse-支持" target="_blank" rel="noopener">#MSE 支持</a></td></tr><tr><td>subtitle</td><td>-</td><td>外挂字幕</td></tr><tr><td>subtitle.url</td><td><code>required</code></td><td>字幕链接</td></tr><tr><td>subtitle.type</td><td>‘webvtt’</td><td>字幕类型，可选值: ‘webvtt’, ‘ass’，目前只支持 webvtt</td></tr><tr><td>subtitle.fontSize</td><td>‘20px’</td><td>字幕字号</td></tr><tr><td>subtitle.bottom</td><td>‘40px’</td><td>字幕距离播放器底部的距离，取值形如: ‘10px’ ‘10%’</td></tr><tr><td>subtitle.color</td><td>‘#fff’</td><td>字幕颜色</td></tr><tr><td>danmaku</td><td>-</td><td>显示弹幕</td></tr><tr><td>danmaku.id</td><td><code>required</code></td><td>弹幕池 id，必须唯一</td></tr><tr><td>danmaku.api</td><td><code>required</code></td><td>见<a href="http://dplayer.js.org/zh/guide.html#弹幕接口" target="_blank" rel="noopener">#弹幕接口</a></td></tr><tr><td>danmaku.token</td><td>-</td><td>弹幕后端验证 token</td></tr><tr><td>danmaku.maximum</td><td>-</td><td>弹幕最大数量</td></tr><tr><td>danmaku.addition</td><td>-</td><td>额外外挂弹幕，见<a href="http://dplayer.js.org/zh/guide.html#bilibili-弹幕" target="_blank" rel="noopener">#bilibili 弹幕</a></td></tr><tr><td>danmaku.user</td><td>‘DIYgod’</td><td>弹幕用户名</td></tr><tr><td>danmaku.bottom</td><td>-</td><td>弹幕距离播放器底部的距离，防止遮挡字幕，取值形如: ‘10px’ ‘10%’</td></tr><tr><td>danmaku.unlimited</td><td>false</td><td>海量弹幕模式，即使重叠也展示全部弹幕，请注意播放器会记忆用户设置，用户手动设置后即失效</td></tr><tr><td>contextmenu</td><td>[]</td><td>自定义右键菜单</td></tr><tr><td>highlight</td><td>[]</td><td>自定义进度条提示点</td></tr><tr><td>mutex</td><td>true</td><td>互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td></tr></tbody></table><h2 id="使用弹幕"><a href="#使用弹幕" class="headerlink" title="使用弹幕"></a>使用弹幕</h2><p>上面的示例中已经写了怎么使用弹幕了，使用弹幕首先需要有一个 ID ，建议使用视频的哈希值作为 ID，这样可以尽可能保证 ID 唯一，防止重复，接下来要配置弹幕接口，官方免费的弹幕接口能用，但是不稳定，如果有特殊需求，推荐个人自己搭建弹幕服务器。</p><p>解析 BiliBiLi 弹幕，这个上面的示例也已经有了，同样，免费的服务不一定稳定，有特殊需求的请自己搭建弹幕服务器。</p><p>增加外部弹幕列表，同解析 BiliBiLi 弹幕一样，只要将外部弹幕的地址写进 <code>addition</code> 就可以了。</p><h3 id="bilibili-弹幕"><a href="#bilibili-弹幕" class="headerlink" title="bilibili 弹幕"></a>bilibili 弹幕</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">danmaku.addition</span><br></pre></td></tr></table></figure><p>API: <a href="https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]" target="_blank" rel="noopener">https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const option = &#123;</span><br><span class="line">    danmaku: &#123;</span><br><span class="line">        // ...</span><br><span class="line">        addition: [<span class="string">'https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]'</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="使用字幕"><a href="#使用字幕" class="headerlink" title="使用字幕"></a>使用字幕</h2><p>增加参数 <code>&quot;subtitle=字幕文件地址&quot;</code> 就可以了，如需修改字幕颜色或者字体大小，仿照其他参数写就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Trojan一键安装脚本</title>
      <link href="/2020/04/10/rojan%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/04/10/rojan%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最简单的 Trojan 一键脚本，效率高/速度快/延迟低，系统支持 centos7 /debian9 /ubuntu16 ，完美支持 tls1.3，个人体验速度和延迟都优于 v2ray ws tls1.3，本次的 trojan 一键脚本使用了官方编译的二进制文件，搭建非常快速和简单。脚本中集成了 Trojan 的 Windows 客户端，自动配置证书及启动脚本，安装完成直接下载客户端即可。</p><p><strong>Trojan 面板（Panel）的一键安装脚本已经发布，详情请访问 ：<a href="https://www.v2rayssr.com/trojan-panel-aoto.html" target="_blank" rel="noopener">https://www.v2rayssr.com/trojan-panel-aoto.html</a></strong></p><h2 id="脚本准备及功能"><a href="#脚本准备及功能" class="headerlink" title="脚本准备及功能"></a>脚本准备及功能</h2><ol><li>系统支持 centos7 /debian9 /ubuntu16</li><li>域名解析到 VPS 并生效。</li><li>脚本自动续签 SSL 证书</li><li>自动配置伪装网站，位于/usr/share/nginx/html/目录下，可自行替换其中内容</li><li>请不要在任何<strong>生产环境</strong>使用一键脚本，此条适用于本站所有脚本，专门用来科学上网的 VPS 可以随意使用。</li></ol><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135451.png"  alt=""></p><h2 id="Trojan-和-v2ray-ws-tls-对比"><a href="#Trojan-和-v2ray-ws-tls-对比" class="headerlink" title="Trojan 和 v2ray ws tls 对比"></a>Trojan 和 v2ray ws tls 对比</h2><p>下面有两张图，可以看出 Trojan 和 v2ray ws tls 还有有一些区别的。但是，由于 Trojan 还算是新兴产物，一些客户端的匹配还没有那么完善，所以，选择哪种方式，就萝卜青菜了。</p><p>下面的图片来源 YouTube 洋葱</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135527.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135548.png"  alt=""></p><h2 id="一键脚本代码"><a href="#一键脚本代码" class="headerlink" title="一键脚本代码"></a>一键脚本代码</h2><p>此脚本感谢 atrandys</p><p>Github 项目地址：<a href="https://www.v2rayssr.com/go?url=https://github.com/atrandys/trojan" target="_blank" rel="noopener">点击访问</a></p><p>波仔在 atrandys 的基础之上，合成了 4 IN 1 的一个 BBRPLUS 加速脚本，方便大家使用</p><p>安装好 curl，若是有此环境，请跳过</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y    <span class="comment">##Ubuntu/Debian 系统安装 Curl 方法</span></span><br><span class="line">yum update -y &amp;&amp; yum install curl -y            <span class="comment">##Centos 系统安装 Curl 方法</span></span><br></pre></td></tr></table></figure><p>有些 VPS 需要安装 <code>XZ</code> 压缩工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install xz-utils   <span class="comment">#Debian/Ubuntu 安装 XZ 压缩工具命令</span></span><br><span class="line">yum install xz    <span class="comment">#CentOS 安装 XZ 压缩工具</span></span><br></pre></td></tr></table></figure><p>Trojan 一键脚本代码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://github.com/V2RaySSR/Trojan/raw/master/Trojan.sh)</span><br></pre></td></tr></table></figure><h2 id="下载-Trojan-Windows-Mac-客户端"><a href="#下载-Trojan-Windows-Mac-客户端" class="headerlink" title="下载 Trojan Windows/Mac 客户端"></a>下载 Trojan Windows/Mac 客户端</h2><p>安装完成后，会展示一条下载地址，复制地址，并下载下来即可。</p><p>Trojan Windows 客户端：<a href="https://www.v2rayssr.com/go?url=https://github.com/V2RaySSR/Trojan/raw/master/trojan-client.zip" target="_blank" rel="noopener">点击下载</a></p><h2 id="搭配-Chrome-浏览器插件使用"><a href="#搭配-Chrome-浏览器插件使用" class="headerlink" title="搭配 Chrome 浏览器插件使用"></a>搭配 Chrome 浏览器插件使用</h2><blockquote><p>chrome socks5 插件：<a href="https://www.v2rayssr.com/go?url=https://github.com/V2RaySSR/Trojan/raw/master/SwitchyOmega_Chromium.zip" target="_blank" rel="noopener">SwitchyOmega_Chromium</a> 不要解压 直接拖放这个插件到 chrome 扩展程序页面</p></blockquote><p>安装插件，打开 chrome，打开扩展程序，将下载的插件拖动到扩展程序页面，添加到扩展。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135748.png"  alt=""></p><p>完成添加，会跳转到 switchyomega 页面，点跳过教程，然后点击 proxy，如图填写，最后点击应用选项。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135828.png"  alt=""></p><p>然后进入 auto switch，删除最上方两条规则，然后点击添加规则列表。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135907.png"  alt=""></p><p>然后，在规则列表规则中，情景模式改为 proxy，规则列表网站复制下面的网址，然后点击立即更新情景模式，保存即可。</p><blockquote><p><a href="https://www.v2rayssr.com/go?url=http://$" target="_blank" rel="noopener">http://$</a>{your_domain}/trojan.txt  服务器为你生成的网络地址</p></blockquote><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135941.png"  alt=""></p><p>点击 chrome 右上角 switchyomega 图标，选择 auto switch 模式即可。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410140029.png"  alt=""></p><p>之后你便可以自由上网，教程到此结束。</p><h2 id="电脑上其他软件如何使用-Trojan"><a href="#电脑上其他软件如何使用-Trojan" class="headerlink" title="电脑上其他软件如何使用 Trojan"></a><strong>电脑上其他软件如何使用 Trojan</strong></h2><blockquote><p>1、如果软件支持配置 socks5，直接指向 <code>127.0.0.1：1080</code> 即可。</p><p>2、如果软件不支持配置 socks5，可选择 <code>sstap/sockscap64/supercap</code>等软件，曲线实现代理。</p></blockquote><h2 id="服务端怎么修改密码"><a href="#服务端怎么修改密码" class="headerlink" title="服务端怎么修改密码"></a>服务端怎么修改密码</h2><p><code>trojan</code> 服务端配置文件路径如下，如需修改内容，修改以下文件即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/src/trojan/server.conf</span><br></pre></td></tr></table></figure><p>修改完成后，重启 trojan 服务端即可，同时客户端的密码也要同步修改哦。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart trojan</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vpn </tag>
            
            <tag> trojan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BBR PLUS一键安装实现Shadowsocks暴力加速</title>
      <link href="/2020/04/10/BBR-PLUS%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%AE%9E%E7%8E%B0Shadowsocks%E6%9A%B4%E5%8A%9B%E5%8A%A0%E9%80%9F/"/>
      <url>/2020/04/10/BBR-PLUS%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%AE%9E%E7%8E%B0Shadowsocks%E6%9A%B4%E5%8A%9B%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>魔改版BBR可以使VPS实现加速，但是原版(v1.1.7)偶尔会出现高丢包率下易失速以及bbr收敛慢的问题。最新版BBR PLUS修正版可以更好的实现加速效果。下面就是魔改BBR PLUS修正版一键安装步骤。</p><p>安装环境：</p><ul><li>CentOS 7.5 x64</li><li>网络：联通、电信环境测试；</li></ul><h2 id="安装Shadowsocks"><a href="#安装Shadowsocks" class="headerlink" title="安装Shadowsocks"></a>安装Shadowsocks</h2><p>在部署BBR之前，我们先安装一下Shadowsocks，安装过程请参考之前的文章：<a href="https://www.gz1903.club/2019/11/09/Linux科学上网搭建/" target="_blank" rel="noopener">在CENTOS 7上搭建Shadowsocks图文教程</a>；</p><h2 id="一键安装BBR-PLUS修正版"><a href="#一键安装BBR-PLUS修正版" class="headerlink" title="一键安装BBR PLUS修正版"></a>一键安装BBR PLUS修正版</h2><p>依次执行下面的命令：</p><h3 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a>安装wget</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure><h3 id="执行BBR-PLUS修正版一键脚本"><a href="#执行BBR-PLUS修正版一键脚本" class="headerlink" title="执行BBR PLUS修正版一键脚本"></a>执行BBR PLUS修正版一键脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>如下图所示，先输入<code>2</code>，安装 BBRplus版内核，安装完之后重启系统，再运行脚本，输入<code>7</code>，使用BBRplus版加速，一键安装：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134529.png"  alt=""></p><p>安装之后的效果：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134619.png"  alt=""></p><blockquote><p>Openvz 的机子装不了锐速</p></blockquote><h2 id="确定虚拟化技术"><a href="#确定虚拟化技术" class="headerlink" title="确定虚拟化技术"></a>确定虚拟化技术</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh &amp;&amp; bash vm_check.sh</span><br></pre></td></tr></table></figure><p>代码运行结束就会在最后一行显示虚拟化技术： kvm 还是 openv 或者是 xen 一目了然。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134743.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bbr加速 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo  一款免费高效的图床管理工具</title>
      <link href="/2020/04/10/PicGo-%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E9%AB%98%E6%95%88%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/04/10/PicGo-%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E9%AB%98%E6%95%88%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="PicGo介绍"><a href="#PicGo介绍" class="headerlink" title="PicGo介绍"></a>PicGo介绍</h1><h2 id="应用概述"><a href="#应用概述" class="headerlink" title="#应用概述"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#应用概述" target="_blank" rel="noopener">#</a>应用概述</h2><p><strong>PicGo: 一个用于快速上传图片并获取图片URL链接的工具</strong></p><p>PicGo 本体支持如下图床：</p><ul><li><code>微博图床</code> v1.0 <strong>微博图床从 2019 年 4 月开始进行防盗链，不建议继续使用</strong></li><li><code>七牛图床</code> v1.0</li><li><code>腾讯云 COS v4\v5版本</code> v1.1 &amp; v1.5.0</li><li><code>又拍云</code> v1.2.0</li><li><code>GitHub</code> v1.5.0</li><li><code>SM.MS</code> v1.5.1 <strong>由于官方不再支持V1版本，暂时请使用<a href="https://github.com/xlzy520/picgo-plugin-smms-user" target="_blank" rel="noopener">smms-user</a>插件</strong></li><li><code>阿里云 OSS</code> v1.6.0</li><li><code>Imgur</code> v1.6.0</li></ul><p><strong>本体不再增加默认的图床支持。你可以自行开发第三方图床插件。详见 <a href="https://picgo.github.io/PicGo-Core-Doc/" target="_blank" rel="noopener">PicGo-Core</a></strong>。</p><h2 id="特色功能"><a href="#特色功能" class="headerlink" title="#特色功能"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#特色功能" target="_blank" rel="noopener">#</a>特色功能</h2><ul><li>支持拖拽图片上传</li><li>支持快捷键上传剪贴板里第一张图片</li><li>Windows和macOS支持右键图片文件通过菜单上传 (v2.1.0+)</li><li>上传图片后自动复制链接到剪贴板</li><li>支持自定义复制到剪贴板的链接格式</li><li>支持修改快捷键，默认快速上传快捷键：<code>command+shift+p</code>（macOS）| <code>control+shift+p</code>（Windows\Linux)</li><li>支持插件系统，已有插件支持Gitee、青云等第三方图床<ul><li>更多第三方插件以及使用了 PicGo 底层的应用可以在 <a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">Awesome-PicGo</a> 找到。欢迎贡献！</li></ul></li><li>支持通过发送HTTP请求调用 PicGo 上传（v2.2.0+)</li><li>更多功能等你自己去发现，同时也会不断开发新功能<ul><li>开发进度可以查看 <a href="https://github.com/Molunerfinn/PicGo/projects" target="_blank" rel="noopener">Projects</a>，会同步更新开发进度</li><li>欢迎加入<a href="https://gitter.im/picgo-all/PicGo?utm_source=share-link&utm_medium=link&utm_campaign=share-link" target="_blank" rel="noopener">官方Gitter频道</a>与我交流</li></ul></li></ul><p><strong>如果第一次使用，请参考应用<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html" target="_blank" rel="noopener">使用文档</a>。遇到问题了还可以看看 <a href="https://github.com/Molunerfinn/PicGo/blob/dev/FAQ.md" target="_blank" rel="noopener">FAQ</a> 以及被关闭的 <a href="https://github.com/Molunerfinn/PicGo/issues?q=is%3Aissue+is%3Aclosed" target="_blank" rel="noopener">issues</a>。</strong></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="#下载安装"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#下载安装" target="_blank" rel="noopener">#</a>下载安装</h2><p>点击此处下载<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">应用</a>。</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="#Windows"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#windows" target="_blank" rel="noopener">#</a>Windows</h3><p>Windows 用户请下载最新版本的 <code>exe</code> 文件。</p><p><strong>还可以使用 <a href="https://scoop.sh/" target="_blank" rel="noopener">Scoop</a> 来安装 PicGo: <code>scoop bucket add helbing https://github.com/helbing/scoop-bucket</code> &amp; <code>scoop install picgo</code>。 感谢 @helbing 的贡献！</strong></p><p><strong>还可以使用 <a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a> 来安装 PicGo: <code>choco install picgo</code>。 感谢 @iYato 的贡献！</strong></p><h3 id="macOS"><a href="#macOS" class="headerlink" title="#macOS"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#macos" target="_blank" rel="noopener">#</a>macOS</h3><p>macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p><p><strong>还可以使用 <code>brew cask</code> 来安装 PicGo: <code>brew cask install picgo</code>。感谢 @womeimingzi11 的贡献！</strong></p><h3 id="Linux"><a href="#Linux" class="headerlink" title="#Linux"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#linux" target="_blank" rel="noopener">#</a>Linux</h3><p>Linux用户请下载 <code>AppImage</code> 文件。</p><p><strong>如果你是 Arch 类的 Linux 用户，可以直接通过 <code>aurman -S picgo-appimage</code> 来安装 PicGo。感谢 @houbaron 的贡献！</strong></p><h2 id="应用截图"><a href="#应用截图" class="headerlink" title="#应用截图"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#应用截图" target="_blank" rel="noopener">#</a>应用截图</h2><p><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/Molunerfinn/test/master/picgo/picgo-2.0.gif"  alt="img"></p><p><img src="/" class="lazyload" data-src="https://user-images.githubusercontent.com/12621342/34242310-b5056510-e655-11e7-8568-60ffd4f71910.gif"  alt="picgo-menubar"></p><h1 id="七牛图床"><a href="#七牛图床" class="headerlink" title="七牛图床"></a>七牛图床</h1><p>官网地址：<a href="https://link.zhihu.com/?target=https%3A//portal.qiniu.com/signup%3Fcode%3D1h9fi8kw6w0nm">https://portal.qiniu.com</a></p><p>简介：注册认证后有10G永久免费空间，每月10G国内和10G国外流量，速度相当快，七牛云是国内专业CDN服务商，插件支持比较多，有免费ssl证书，但https流量收费</p><p><strong>注意：七牛云30天后会回收测试域名，因此你必须要绑定自己的已备案的域名</strong></p><p>图片上传限制：无</p><h4 id="注册七牛"><a href="#注册七牛" class="headerlink" title="注册七牛"></a>注册七牛</h4><ul><li>打开七牛首页，点击右上角“注册有礼”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410094652881.png"  alt=""></p><ul><li>选择“申请个人认证”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410094841789.png"  alt=""></p><ul><li>填写基本信息（注意：个人网站可以填你的域名，没有就随便填一个；请填写真实姓名，因为后面要实名认证）</li><li>按要求完成实名认证（这里我选择支付宝）</li></ul><h2 id="新建图床Bucket"><a href="#新建图床Bucket" class="headerlink" title="新建图床Bucket"></a>新建图床Bucket</h2><ul><li>新建图床：点击“资源主页”，在对象存储下点“立即添加”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410095411823.png"  alt=""></p><ul><li>设置存储空间名，存储服务器（选一个离你最近的），访问控制设置为公开</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410100009396.png"  alt=""></p><ul><li>添加自己的域名</li></ul><p>默认有个七牛云CDN加速域名，我这里就使用了自己的域名，也可以使用七牛云给的CDN测试域名，不过就是一个月的时间，到期了会回收的，所以这里还是建议使用自己的，以免用了以后图片啥的地址就没了。</p><p>步骤：也是在自己的域名厂商解析个CNAME，根据七牛给的记录来解析即可。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410131513.png"  alt=""></p><ul><li>登陆自己的服务器厂商，添加对应的CNAME解析记录</li></ul><h1 id="使用PicGo添加图片"><a href="#使用PicGo添加图片" class="headerlink" title="使用PicGo添加图片"></a>使用PicGo添加图片</h1><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410131649.png"  alt=""></p><p>其中<code>accesskey</code>和<code>secretkey</code>可以从“个人中心”-“密钥管理”里面找到</p><p>在配置文件里，存储区域对应的键是<code>area</code>，值是下图所示（如果你是用PicGo-Core或者其他非electron版本的PicGo请注意此项），比如华东的话就是<code>z0</code>。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410103456888.png"  alt=""></p><p>在配置文件里，存储空间需要</p><p>设定上传地址是指七牛云 自动分配给你的网址，或者 是你自己绑定的域名（<strong>注意要加<code>http://</code>或者<code>https://</code></strong>）：</p><p>网址后缀通常是你用到了七牛的图片处理工具的时候会用到的一些处理参数，比如图片瘦身。</p><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><p>图片上传前可以先使用在线压缩工具 <a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a> 进行压缩大小</p><p>这里我选择<code>markdown</code>模式</p><p>拖拽上传图片：点开上传区，拖进来就可以上传了（可以批量上传），上传完后自动生成markdown格式的网址到剪切板，可以直接粘贴到博文：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410105706598.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> picgo </tag>
            
            <tag> 七牛云图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray搭建详细图文教程</title>
      <link href="/2020/04/10/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/"/>
      <url>/2020/04/10/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>搭建 V2Ray 看这篇文章就够了！这是完完全全为小白准备的 V2Ray 搭建教程，详细的图文教程确保你可以百分百成功搭建 V2Ray 使用。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此 V2Ray 教程完完全全是为小白准备的，从购买 VPS 到使用 SSH 登录并使用 V2Ray 一键安装脚本配置 V2Ray，详细的图文教程确保你可以百分百成功搭建 V2Ray 使用，哪怕你只是一个小白。<br>由于 V2Ray 的配置对于小白来说是非常不友好的，所以此 V2Ray 教程的 V2Ray 服务器端配置将会使用我本人撰写的 <a href="https://github.com/233boy/v2ray/wiki/V2Ray一键安装脚本" target="_blank" rel="noopener">V2Ray 一键安装脚本</a>，这是一个对小白友好的 V2Ray 一键脚本，简化 V2Ray 安装和部署，并且自动开启 BBR 优化，当然你也可以手动打开 BBR 来优化 V2Ray，也可以选择使用锐速来 优化 V2Ray。</p><h2 id="V2Ray-简介"><a href="#V2Ray-简介" class="headerlink" title="V2Ray 简介"></a>V2Ray 简介</h2><p>官网：<a href="https://www.v2ray.com/" target="_blank" rel="noopener">https://www.v2ray.com</a></p><p><a href="https://www.v2ray.com/" target="_blank" rel="noopener">V2Ray(Project V)</a> 相对于 Shadowsocks，V2Ray 更像全能选手，拥有更多可选择的协议 / 传输载体 (Socks、HTTP、TLS、TCP、mKCP、WebSocket )，还有强大的路由功能，不仅仅于此，它亦包含 Shadowsocks 组件，你只需要安装 V2Ray，你就可以使用所有的 V2Ray 相关的特性包括使用 Shadowsocks，由于 V2Ray 是使用 GO 语言所撰写的，天生的平台部署优势，下载即可使用，当然啦，由于 V2Ray 的配置相对来说是很繁琐的，毫无夸张的说，但是有了本人所写的 <a href="https://github.com/233boy/v2ray/wiki/V2Ray一键安装脚本" target="_blank" rel="noopener">V2Ray 一键安装脚本</a> 加持下，使用 V2Ray 便会显得轻松多了。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>总结一下此文章的大致流程，此 V2Ray 教程可百分百帮助你搭建 V2Ray 使用。哪怕你只是一个小白。</p><ul><li>购买一个 VPS<br>想要搭建 V2Ray，就必须要拥有一台 VPS。</li><li>获取 VPS 信息<br>我们必须要知道 VPS IP 地址，root 用户密码，SSH 端口</li><li>安装 Xshell<br>Xshell 是一个 SSH 客户端，要登录 VPS，当然需要 SSH 客户端</li><li>登录 VPS<br>使用 Xshell 配置 VPS SSH 信息，然后登录</li><li>安装 V2Ray<br>安装过程你可以随意选择你喜欢的传输协议或者配置 Shadowsocks</li><li>V2Ray 安装完成<br>此时你可以使用客户端配置 V2Ray 使用了</li><li>V2Ray 高级玩法<br>配置 WebSocket + TLS ， HTTP/2 ， mKCP 等</li></ul><h2 id="购买一个云主机"><a href="#购买一个云主机" class="headerlink" title="购买一个云主机"></a>购买一个云主机</h2><p>想要搭建 V2Ray， 拥有一个 VPS 是必需的。<br>我们推荐使用：<a href="https://on.affpass.com/go/bwg" target="_blank" rel="noopener">搬瓦工（Bandwagon Host）</a> VPS 来搭建 V2Ray，搬瓦工是一个对中国用户极度友好的 VPS 商家，有香港，CN2 GIA 等线路，支持支付宝付款，当然也是支持退款的！</p><p>哪个套餐好？<br>一般来说，<strong>推荐购买 香港线路</strong> 或 <strong>CN2 GIA 线路</strong>，或者哪个便宜选择那个，说着当然如果你使用量比较多或者想要分享给同学和朋友一起用的话，选择合适的套餐即可。又或者你土豪的话，选择最贵的也行。</p><p><strong>VPS 速度：香港线路 &gt; CN2 GIA 线路 &gt; CN2 线路 &gt; 普通线路</strong></p><p><strong>香港套餐 VPS 的速度最快。</strong> 如果你非常在乎速度的话，建议购买香港线路的 VPS，当然，但价格贵，流量相对其他套餐来说也是比较少的……退一步的选择是 CN2 GIA 线路，这个线路的速度也比较好。</p><p>线路是比较重要的，像香港和 CN2 GIA 线路到晚上一般不会怎么炸，其他的到了晚上可能会出现很慢慢的感觉。</p><p>我本人比较推荐 CN2 GIA 线路，稳定性，速度与价格适中选择，当然啦！如果你觉得价格太贵了，推荐你查看一下<a href="https://justmysocks.xyz/buy-justmysocks/" target="_blank" rel="noopener"> Just My Socks </a>，搬瓦工官方出品的代理服务，同样是 CN2 GIA 线路，<strong>每月仅需 $2.88 起！</strong>并且支持退款，放心无忧，再也不用自己折腾搭建了，<strong>最最最最重要的是：被墙自动换 IP，无须担心 IP 被墙！</strong><br>Just My Socks 购买教程在这里：<a href="https://justmysocks.xyz/buy-justmysocks/" target="_blank" rel="noopener"> Just My Socks 详细图文购买教程</a></p><p>毫无疑问！绝对的一分钱一分货。</p><blockquote><p>如果出现 out of stock 这样的提示，那就是这个套餐卖完了，选择其他套餐即可。</p></blockquote><p>本博主这里我使用了谷歌云主机，主要是注册用户免费送300$，可以用一年,刚刚好！</p><p>具体购买方法这里就不赘述了，网上一大把教程</p><h2 id="安装-V2Ray"><a href="#安装-V2Ray" class="headerlink" title="安装 V2Ray"></a>安装 V2Ray</h2><p>输入下面命令回车，你可以复制过去，然后在 Xshell 界面按 Shift + Insert 即可粘贴，不能按 Ctrl + V 的。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https:&#x2F;&#x2F;git.io&#x2F;v2ray.sh)</span><br></pre></td></tr></table></figure><blockquote><p>如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl<br>ubuntu/debian 系统安装 Curl 方法: <code>apt-get update -y &amp;&amp; apt-get install curl -y</code><br>centos 系统安装 Curl 方法: <code>yum update -y &amp;&amp; yum install curl -y</code><br>安装好 curl 之后就能安装脚本了</p></blockquote><p>然后选择安装，即是输入 1 回车<br>选择传输协议，如果没有特别的需求，使用默认的 TCP 传输协议即可，直接回车<br>选择端口，如果没有特别的需求，使用默认的端口即可，直接回车<br>是否屏蔽广告，除非你真的需要，一般来说，直接回车即可</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/734eac925355bc405fcc603dc6d44956153061b6/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323463666530352e6a7067"  alt="安装 V2Ray"></p><p>是否配置 Shadowsocks ，如果不需要就直接回车，否则就输入 Y 回车<br>Shadowsocks 端口，密码，加密方式这些东西自己看情况配置即可，我个人当然是全部直接回车。。<br>OK，按回车继续</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/eec1b155bc310b7aaa33ae727a011a2a8625bf00/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323461643131632e6a7067"  alt="配置 Shadowsocks"></p><p>安装信息，如果确保没有什么问题了，按回车继续</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/3b7eddf949a9d8aec9a04ae19a7bd49991817085/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438636133652e6a7067"  alt="安装信息"></p><p>(备注，安装信息会因你的配置而变化..不用在乎这截图)<br>(备注，由于我懒…脚本显示的一些信息可能会跟上面的截图有少许不同，但实际上都是很简单明了的)</p><h2 id="V2Ray-安装完成"><a href="#V2Ray-安装完成" class="headerlink" title="V2Ray 安装完成"></a>V2Ray 安装完成</h2><p>OK，此时 V2Ray 已经安装完成了。</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/85637928f4e109419ff40c8c219adf6684424a4b/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323462626437352e6a7067"  alt="V2Ray 安装完成"></p><p>如上图所示，V2Ray 配置信息，Shadowsocks 配置信息都有了<br>如果你使用过 Shadowsocks ，那么现在你可以测试一下 Shadowsocks 配置了，看看是否能正常使用。<br>如果你使用过 V2Ray 某些客户端，那么现在也可以测试一下配置了。<br>(备注，可能某些 V2Ray 客户端的选项或描述略有不同，但事实上，上面的 V2Ray 配置信息已经足够详细，由于客户端的不同，请对号入座。)</p><h2 id="V2Ray-客户端使用教程"><a href="#V2Ray-客户端使用教程" class="headerlink" title="V2Ray 客户端使用教程"></a>V2Ray 客户端使用教程</h2><p>暂停一下，我想，看这篇的孩子多数都是萌新，由于 V2Ray 已经安装完成了，所以此时你应该尝试使用 V2Ray 来连接上真正的互联网了。</p><blockquote><p>Windows<br><a href="https://github.com/233boy/v2ray/wiki/V2RayN使用教程" target="_blank" rel="noopener">V2RayN使用教程</a></p></blockquote><h2 id="V2Ray-管理面板"><a href="#V2Ray-管理面板" class="headerlink" title="V2Ray 管理面板"></a>V2Ray 管理面板</h2><p>现在可以尝试一下输入 <code>v2ray</code> 回车，即可管理 V2Ray</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/f440719cf368dc6b6586a93afc90a4c45bede3dc/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323463363036652e6a7067"  alt="V2Ray 管理面板"></p><h2 id="TCP-阻断"><a href="#TCP-阻断" class="headerlink" title="TCP 阻断"></a>TCP 阻断</h2><p>如果你觉得你的小鸡出现了这种情况，那么可以尝试使用 UDP 协议相关的 mKCP<br>当然，用了我的脚本那是很简单的啦，直接输入 <code>v2ray config</code> 然后选择修改 V2Ray 传输协议<br>之后再选择 mKCP 相关的就行咯<br>备注：使用 mKCP 或许还可以提高速度，但由于 UDP 的原因也许会被运营商 Qos，这是无解的。</p><h2 id="快速管理-V2Ray"><a href="#快速管理-V2Ray" class="headerlink" title="快速管理 V2Ray"></a>快速管理 V2Ray</h2><p><code>v2ray info</code> 查看 V2Ray 配置信息<br><code>v2ray config</code> 修改 V2Ray 配置<br><code>v2ray link</code> 生成 V2Ray 配置文件链接<br><code>v2ray infolink</code> 生成 V2Ray 配置信息链接<br><code>v2ray qr</code> 生成 V2Ray 配置二维码链接<br><code>v2ray ss</code> 修改 Shadowsocks 配置<br><code>v2ray ssinfo</code> 查看 Shadowsocks 配置信息<br><code>v2ray ssqr</code> 生成 Shadowsocks 配置二维码链接<br><code>v2ray status</code> 查看 V2Ray 运行状态<br><code>v2ray start</code> 启动 V2Ray<br><code>v2ray stop</code> 停止 V2Ray<br><code>v2ray restart</code> 重启 V2Ray<br><code>v2ray log</code> 查看 V2Ray 运行日志<br><code>v2ray update</code> 更新 V2Ray<br><code>v2ray update.sh</code> 更新 V2Ray 管理脚本<br><code>v2ray uninstall</code> 卸载 V2Ray</p><h2 id="优化-V2Ray"><a href="#优化-V2Ray" class="headerlink" title="优化 V2Ray"></a>优化 V2Ray</h2><p>由于本人的脚本在 Debian9 系统会自动开启 BBR 优化加速了，所以不需要再安装 BBR 优化了，<br>如果你还是觉得网络比较慢的话，你可以尝试使用含有 mKCP 的传输协议，这个 mKCP 的东东，简单一点说就像 Kcptun 一样加速，并且还能进行伪装 (可选)，但是由于 mKCP 是使用 UDP 协议的，也许运营商会限速得更加厉害，网络变得更加慢。但不管怎么样，你都可以随时尝试一下。<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再接着选择 mKCP 相关的传输协议即可<br>如果你是使用其他商家的 VPS 并且是按照此教程流程来安装 V2Ray 的话，那么你可以输入 <code>v2ray bbr</code> 回车，然后选择安装 BBR 或者 锐速 来优化 V2Ray<br>只是还想再啰嗦一下，如果你是使用国际大厂的 VPS，并且是按照此教程流程来安装 V2Ray 的话，请自行在安全组 (防火墙) 开放端口和 UDP 协议 (如果你要使用含有 mKCP 的传输协议)</p><h2 id="WebSocket-TLS"><a href="#WebSocket-TLS" class="headerlink" title="WebSocket + TLS"></a>WebSocket + TLS</h2><p>实现 WebSocket + TLS 超级无敌简单，前提是要拥有一个能正常解析的域名 (并且知道怎么解析域名)<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再选择 WebSocket + TLS，即是输入 4，接着输入你的域名，然后我都懒得说了，脚本都那么简单明了，我还瞎BB干嘛…<br>哈哈…可能有不少人在折腾 V2Ray 实现 WS + TLS 的时候真的是搞到很蛋痛咯，有些人的教程可能说得不是很清楚，或者是直接忽略小白萌新这些亲爱的用户，嗯，小白们好好加油吧，请尽量多学一些基础知识，别总是做伸手党，对于毫无交集的陌生人，人家并没有任何义务要帮你的啊<br>偷偷跟你说…使用 WebSocket + TLS 会有断流的问题<br>多说一句，不要被某些人带节奏，WS + TLS 并不是 V2Ray 的神级配置，该墙还是会墙，墙你不需要理由<br>备注一下啦，这里我没写怎么教你注册域名啦，怎么解析域名啦，如果你真的想要使用 WebSocket + TLS，那就 自己谷歌摸索一下，其实好简单的啦！<br>我本人并没有在使用 WS + TLS (WebSocket + TLS)，我用 TCP，就是用一键脚本全程回车的那种懒人</p><h2 id="HTTP-2"><a href="#HTTP-2" class="headerlink" title="HTTP/2"></a>HTTP/2</h2><p>实现 HTTP/2 (h2) 也超级无敌简单，和 WebSocket + TLS 一样，也就是只要一个域名就够<br>服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，再选择 HTTP/2，即是输入 16，然后………看上面的 WebSocket + TLS 的相关。<br>备注一下，HTTP/2 相比 WS + TLS (WebSocket + TLS) ，在浏览网页时有一些优势。速度是差不多的啦</p><h2 id="mKCP"><a href="#mKCP" class="headerlink" title="mKCP"></a>mKCP</h2><p>mKCP 这个东东其实就是 KCP 协议，反正你知道是能提速的就行，但是不保证都能提速，还能避免 TCP 阻断，但是也可以会被运营商 Qos.<br>使用方法：服务器输入 <code>v2ray config</code> 回车，然后选择 修改 V2Ray 传输协议，之后再选择 mKCP 相关的就行</p><h2 id="搬瓦工-VPS-速度慢"><a href="#搬瓦工-VPS-速度慢" class="headerlink" title="搬瓦工 VPS 速度慢"></a>搬瓦工 VPS 速度慢</h2><p>由于本教程使用了 搬瓦工 VPS 做为教程的一部分，那么相信有些新接触 VPS 的同学可能会是按照教程使用了 搬瓦工 VPS 翻墙。<br>如果你觉得搬瓦工 VPS 速度慢，你可以尝试修改一下端口，服务器输入 <code>v2ray config</code> ，，然后选择 修改 V2Ray 端口 即可，建议使用常见的端口，比如说 443，当然，为了更加安全隐蔽，你可以直接尝试使用 WebSocket + TLS 或者 HTTP/2 协议，但是使用这两个协议对于没有接触过 域名 的同学相对来说会是比较困难的。<br>搬瓦工 VPS 速度慢的一个主要原因可能会是因为端口限速，如果你已经修改端口为 443，速度还是慢的话，我建议你尝试使用 mKCP 协议。</p><h2 id="Telegram-专用代理"><a href="#Telegram-专用代理" class="headerlink" title="Telegram 专用代理"></a>Telegram 专用代理</h2><blockquote><p>重要提醒：不建议使用 V2Ray 的 MTProto 代理！<br>推荐使用： <a href="https://github.com/cutelua/mtg-dist" target="_blank" rel="noopener">https://github.com/cutelua/mtg-dist</a></p></blockquote><p><del>如果你在使用 Telegram 的话，你可以配置一个 Telegram 的专用代理，这样来，在某些情况下你就不需要再开一个代理软件了。<br>输入 <code>v2ray tg</code> 即可配置 TG 专用代理<br>配置 Telegram MTProto</del></p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/76790417fd184b9156d04f34d0020cf42e950ec9/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438656137342e6a7067"  alt="配置Telegram MTProto"></p><p>Telegram MTProto 配置信息</p><p><img src="/" class="lazyload" data-src="https://camo.githubusercontent.com/f95d1c5bbe481b175defd9768972498250c7bef4/68747470733a2f2f692e6c6f6c692e6e65742f323031392f30312f30352f356333303532323438613130662e6a7067"  alt="Telegram MTProto 配置信息"></p><h2 id="V2Ray-多用户"><a href="#V2Ray-多用户" class="headerlink" title="V2Ray 多用户"></a>V2Ray 多用户</h2><p>目前此 V2Ray 一键脚本只支持配置一个 V2Ray 账号…一个 Shadowsocks 账号<br>说着当然，如果你是大佬，配置 多用户 这种事，不是分分钟的事么？</p><h2 id="查看配置-修改配置-端口-传输协议……-？"><a href="#查看配置-修改配置-端口-传输协议……-？" class="headerlink" title="查看配置 / 修改配置 / 端口 / 传输协议…… ？"></a>查看配置 / 修改配置 / 端口 / 传输协议…… ？</h2><p>请看上面的快速管理。。。或者直接输入 <code>v2ray</code> 回车，找到你想要执行的功能。</p><h2 id="哪个传输协议好？"><a href="#哪个传输协议好？" class="headerlink" title="哪个传输协议好？"></a>哪个传输协议好？</h2><p>心中无杂念，用 TCP<br>ISP 常作怪，用 动态端口<br>小鸡速度不好，用 mKCP<br>处子之身，用 WS + TLS</p><h2 id="V2Ray-脚本说明"><a href="#V2Ray-脚本说明" class="headerlink" title="V2Ray 脚本说明"></a>V2Ray 脚本说明</h2><p><a href="https://github.com/233boy/v2ray/wiki/V2Ray一键安装脚本" target="_blank" rel="noopener">V2Ray 一键安装脚本</a></p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vpn </tag>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Kubernetes Dashboard</title>
      <link href="/2020/04/09/%E5%AE%89%E8%A3%85Kubernetes-Dashboard/"/>
      <url>/2020/04/09/%E5%AE%89%E8%A3%85Kubernetes-Dashboard/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Kubernetes Dashboard</code> 是 <code>Kubernetes</code> 的官方 Web UI。使用 Kubernetes Dashboard，您可以：</p><ul><li>向 Kubernetes 集群部署容器化应用</li><li>诊断容器化应用的问题</li><li>管理集群的资源</li><li>查看集群上所运行的应用程序</li><li>创建、修改Kubernetes 上的资源（例如 Deployment、Job、DaemonSet等）</li><li>展示集群上发生的错误</li></ul><p>例如：您可以伸缩一个 Deployment、执行滚动更新、重启一个 Pod 或部署一个新的应用程序</p><p>以上文字翻译自 Kubernetes 官方文档。Kuboard 的定位和 Dashboard 是相似的，<strong>主要的区别</strong> 在于：</p><ul><li>Kuboard 关注微服务参考架构的视角对界面进行组织，参考 <a href="https://kuboard.cn/overview/share-coder.html" target="_blank" rel="noopener">Kuboard 简介</a></li><li>Kuboard 中，不需要手工编写 YAML 文件，进一步降低 K8S 使用难度，提高便捷性</li><li>Kuboard 可以导出整个微服务架构的部署信息，并在新的名称空间/集群导入配置信息</li><li>Kuboard 的一个发展方向是，提供内建的 <a href="https://kuboard.cn/guide/example/monitor.html" target="_blank" rel="noopener">监控套件</a>（目前的全局监控套件成熟度比较高）</li></ul><p>为了帮助大家选择适合自己的工具，本文将详细描述如何在 Kubernetes 集群中安装 Kubernetes Dashboard。</p><h2 id="安装"><a href="#安装" class="headerlink" title="#安装"></a><a href="https://kuboard.cn/install/install-k8s-dashboard.html#安装" target="_blank" rel="noopener">#</a>安装</h2><p>执行如下命令，以安装 <code>Kubernetes Dashboard</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta5/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><p>如果访问不了该 yaml 文件，请使用下面的命令，效果是等价的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://kuboard.cn/install-script/k8s-dashboard/v2.0.0-beta5.yaml</span><br></pre></td></tr></table></figure><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>Kubernetes Dashboard 当前，只支持使用 Bearer Token登录。 由于 Kubernetes Dashboard 默认部署时，只配置了最低权限的 RBAC。因此，我们要创建一个名为 <code>admin-user</code> 的 ServiceAccount，再创建一个 ClusterRolebinding，将其绑定到 Kubernetes 集群中默认初始化的 <code>cluster-admin</code> 这个 ClusterRole。</p><blockquote><p>更多关于权限管理的信息，请参考 <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/" target="_blank" rel="noopener">Using RBAC Authorization</a></p></blockquote><ul><li><p>创建 Service Account 和 ClusterRoleBinding</p><p>使用 <code>kubeadm</code> 安装集群时，默认创建了 ClusterRole <code>cluster-admin</code>。此时我们可以直接为刚才的 ServiceAccount 创建 ClusterRoleBinding。</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">admin-user</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><p>执行如下命令可创建 ServiceAccount 和 ClusterRoleBinding</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://kuboard.cn/install-script/k8s-dashboard/auth.yaml</span><br></pre></td></tr></table></figure><ul><li>获取Bearer Token</li></ul><p>执行命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br></pre></td></tr></table></figure><p>输出信息如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Name:         admin-user-token-v57nw</span><br><span class="line">Namespace:    kubernetes-dashboard</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin-user</span><br><span class="line">              kubernetes.io/service-account.uid: 0303243c-4040-4a58-8a47-849ee9ba79c1</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1066 bytes</span><br><span class="line">namespace:  20 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXY1N253Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIwMzAzMjQzYy00MDQwLTRhNTgtOGE0Ny04NDllZTliYTc5YzEiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.Z2JrQlitASVwWbc-s6deLRFVk5DWD3P_vjUFXsqVSY10pbjFLG4njoZwh8p3tLxnX_VBsr7_6bwxhWSYChp9hwxznemD5x5HLtjb16kI9Z7yFWLtohzkTwuFbqmQaMoget_nYcQBUC5fDmBHRfFvNKePh_vSSb2h_aYXa8GV5AcfPQpY7r461itme1EXHQJqv-SN-zUnguDguCTjD80pFZ_CmnSE1z9QdMHPB8hoB4V68gtswR1VLa6mSYdgPwCHauuOobojALSaMc3RH7MmFUumAgguhqAkX3Omqd3rJbYOMRuMjhANqd08piDC3aIabINX6gP5-Tuuw2svnV6NYQ</span><br></pre></td></tr></table></figure><ul><li><p>执行 <code>kubectl proxy</code> 命令</p><p>您必须能够在自己的笔记本（工作电脑）上运行 kubectl 并访问您的集群。可参考文档 <a href="https://kuboard.cn/install/install-kubectl.html" target="_blank" rel="noopener">安装Kubectl</a></p><p>访问路径： <code>http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/</code></p><blockquote><p>我曾经尝试过将 kubernetes-dashboard 的访问当时修改为 nodePort 的访问，但是一直未能成功，如果有朋友解决了此问题，请告知我一下。</p></blockquote></li><li><p>将上一个步骤中获得的 Token 输入到登录界面中，点击 <strong>Sign in</strong> 按钮，完成登录</p><p><img src="/" class="lazyload" data-src="https://kuboard.cn/assets/img/signin.7fa3a8e0.png"  alt="Kubernetes教程_安装KubernetesDashboard"></p></li><li><p>登录成功后，界面如下图所示：</p><p><img src="/" class="lazyload" data-src="https://kuboard.cn/assets/img/overview.0bfd156b.png"  alt="Kubernetes教程_登录KubernetesDashboard"></p></li></ul><p>🎉 🎉 🎉 Have Fun!</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Kuboard</title>
      <link href="/2020/04/09/%E5%AE%89%E8%A3%85Kuboard/"/>
      <url>/2020/04/09/%E5%AE%89%E8%A3%85Kuboard/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>安装 Kuboard 时，假设您已经有一个 Kubernetes 集群</p><p>如果没有 Kubernetes 集群：请参考 <a href="https://www.linuxwf.com/2020/04/09/%E4%BD%BF%E7%94%A8kubeadm%E5%AE%89%E8%A3%85K8s/" target="_blank" rel="noopener">Kubernetes 安装</a></p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><table><thead><tr><th>Kubernetes 版本</th><th>Kuboard 版本</th><th>兼容性</th><th>说明</th></tr></thead><tbody><tr><td>v1.18</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.17</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.16</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.15</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.14</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.13</td><td>v1.0.x</td><td>😄</td><td>已验证</td></tr><tr><td>v1.12</td><td>v1.0.x</td><td>😐</td><td>Kubernetes Api v1.12 不支持 dryRun， Kuboard 不支持 Kubernetes v1.12</td></tr><tr><td>v1.11</td><td>v1.0.x</td><td>😐</td><td>Kuboard 不支持 Kubernetes v1.11</td></tr></tbody></table><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Kuboard。</p><blockquote><p>如果您参考 <a href="https://kuboard.cn" target="_blank" rel="noopener">https://kuboard.cn</a> 网站上提供的 Kubernetes 安装文档，可在 master 节点上执行以下命令。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://kuboard.cn/install-script/kuboard.yaml</span><br><span class="line">kubectl apply -f https://addons.kuboard.cn/metrics-server/0.3.6/metrics-server.yaml</span><br></pre></td></tr></table></figure><p>查看 Kuboard 运行状态：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -l k8s.eip.work/name=kuboard -n kube-system</span><br></pre></td></tr></table></figure><p>输出结果如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME                       READY   STATUS        RESTARTS   AGE</span><br><span class="line">kuboard-54c9c4f6cb-6lf88   1/1     Running       0          45s</span><br></pre></td></tr></table></figure><h2 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h2><p>您可以获得管理员用户、只读用户的Token。</p><blockquote><ul><li>默认情况下，您可以使用 ServiceAccount 的 Token 登录 Kuboard</li><li>您还可以 <a href="https://kuboard.cn/learning/k8s-advanced/sec/authenticate/install.html" target="_blank" rel="noopener">使用 GitLab/GitHub 账号登录 Kuboard/Kubectl</a></li><li>您也可以 <a href="https://kuboard.cn/learning/k8s-advanced/sec/kuboard.html" target="_blank" rel="noopener">为用户授权</a></li></ul></blockquote><h3 id="管理员用户"><a href="#管理员用户" class="headerlink" title="管理员用户"></a>管理员用户</h3><p><strong>拥有的权限</strong></p><ul><li>此Token拥有 ClusterAdmin 的权限，可以执行所有操作</li></ul><p><strong>执行命令</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果您参考 www.kuboard.cn 提供的文档安装 Kuberenetes，可在第一个 Master 节点上执行此命令</span></span><br><span class="line">kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep kuboard-user | awk <span class="string">'&#123;print $1&#125;'</span>) -o go-template=<span class="string">'&#123;&#123;.data.token&#125;&#125;'</span> | base64 -d</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><p>取输出信息中 <code>token</code> 字段</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLWc4aHhiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5NDhiYjVlNi04Y2RjLTExZTktYjY3ZS1mYTE2M2U1ZjdhMGYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.DZ6dMTr8GExo5IH_vCWdB_MDfQaNognjfZKl0E5VW8vUFMVvALwo0BS-6Qsqpfxrlz87oE9yGVCpBYV0D00811bLhHIg-IR_MiBneadcqdQ_TGm_a0Pz0RbIzqJlRPiyMSxk1eXhmayfPn01upPdVCQj6D3vAY77dpcGplu3p5wE6vsNWAvrQ2d_V1KhR03IB1jJZkYwrI8FHCq_5YuzkPfHsgZ9MBQgH-jqqNXs6r8aoUZIbLsYcMHkin2vzRsMy_tjMCI9yXGiOqI-E5efTb-_KbDVwV5cbdqEIegdtYZ2J3mlrFQlmPGYTwFI8Ba9LleSYbCi4o0k74568KcN_w</span><br></pre></td></tr></table></figure><h3 id="只读用户"><a href="#只读用户" class="headerlink" title="只读用户"></a>只读用户</h3><p><strong>拥有的权限</strong></p><ul><li>view 可查看名称空间的内容</li><li>system:node 可查看节点信息</li><li>system:persistent-volume-provisioner 可查看存储类和存储卷声明的信息</li></ul><p><strong>适用场景</strong></p><p>只读用户不能对集群的配置执行修改操作，非常适用于将开发环境中的 Kuboard 只读权限分发给开发者，以便开发者可以便捷地诊断问题</p><p><strong>执行命令</strong></p><p>执行如下命令可以获得 只读用户 的 <code>Token</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果您参考 www.kuboard.cn 提供的文档安装 Kuberenetes，可在第一个 Master 节点上执行此命令</span></span><br><span class="line">kubectl -n kube-system get secret $(kubectl -n kube-system get secret | grep kuboard-viewer | awk <span class="string">'&#123;print $1&#125;'</span>) -o go-template=<span class="string">'&#123;&#123;.data.token&#125;&#125;'</span> | base64 -d</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><p>取输出信息中 token 字段</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLWc4aHhiIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5NDhiYjVlNi04Y2RjLTExZTktYjY3ZS1mYTE2M2U1ZjdhMGYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.DZ6dMTr8GExo5IH_vCWdB_MDfQaNognjfZKl0E5VW8vUFMVvALwo0BS-6Qsqpfxrlz87oE9yGVCpBYV0D00811bLhHIg-IR_MiBneadcqdQ_TGm_a0Pz0RbIzqJlRPiyMSxk1eXhmayfPn01upPdVCQj6D3vAY77dpcGplu3p5wE6vsNWAvrQ2d_V1KhR03IB1jJZkYwrI8FHCq_5YuzkPfHsgZ9MBQgH-jqqNXs6r8aoUZIbLsYcMHkin2vzRsMy_tjMCI9yXGiOqI-E5efTb-_KbDVwV5cbdqEIegdtYZ2J3mlrFQlmPGYTwFI8Ba9LleSYbCi4o0k74568KcN_w</span><br></pre></td></tr></table></figure><h2 id="访问Kuboard"><a href="#访问Kuboard" class="headerlink" title="访问Kuboard"></a>访问Kuboard</h2><p>您可以通过<code>NodePort</code>、<code>port-forward</code> 两种方式当中的任意一种访问 <code>Kuboard</code></p><h3 id="通过NodePort访问"><a href="#通过NodePort访问" class="headerlink" title="通过NodePort访问"></a>通过<code>NodePort</code>访问</h3><p>Kuboard Service 使用了 NodePort 的方式暴露服务，NodePort 为 32567；您可以按如下方式访问 Kuboard。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;任意一个Worker节点的IP地址:32567&#x2F;</span><br></pre></td></tr></table></figure><p>输入前一步骤中获得的 token，可进入 <strong>Kuboard 集群概览页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TIP</span><br><span class="line"></span><br><span class="line">如果您使用的是阿里云、腾讯云等，请在其安全组设置里开放 worker 节点 32567 端口的入站访问，</span><br><span class="line">您也可以修改 Kuboard.yaml 文件，使用自己定义的 NodePort 端口号</span><br></pre></td></tr></table></figure><h3 id="通过-port-forward-访问"><a href="#通过-port-forward-访问" class="headerlink" title="通过 port-forward 访问"></a>通过 <code>port-forward</code> 访问</h3><p>在您的客户端电脑中执行如下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward service/kuboard 8080:80 -n kube-system</span><br></pre></td></tr></table></figure><p>在浏览器打开链接 （请使用 kubectl 所在机器的IP地址）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure><p>输入前一步骤中获得的 token，可进入 <strong>Kuboard 集群概览页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TIP</span><br><span class="line"></span><br><span class="line">需要您先完成 [从客户端电脑远程管理 Kubernetes](https:&#x2F;&#x2F;kuboard.cn&#x2F;install&#x2F;install-kubectl.html) 的配置</span><br></pre></td></tr></table></figure><h2 id="免登陆访问"><a href="#免登陆访问" class="headerlink" title="免登陆访问"></a>免登陆访问</h2><p>可以通过查询参数中的 k8sToken 字段直接登录系统，无需在登录界面输入 Token。</p><h3 id="直接访问集群概览页"><a href="#直接访问集群概览页" class="headerlink" title="#直接访问集群概览页"></a><a href="https://kuboard.cn/install/install-dashboard.html#直接访问集群概览页" target="_blank" rel="noopener">#</a>直接访问集群概览页</h3><p>如需要无登录访问集群概览页面，可使用如下格式的 url 进入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://任意一个Worker节点的IP地址:32567/dashboard?k8sToken=yourtoken</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">其他界面</span><br><span class="line"></span><br><span class="line">其他任意 Kuboard 界面同理，只需要增加 k8sToken 作为查询参数，即可跳过输入 Token 的步骤</span><br></pre></td></tr></table></figure><h3 id="直接访问终端界面"><a href="#直接访问终端界面" class="headerlink" title="#直接访问终端界面"></a><a href="https://kuboard.cn/install/install-dashboard.html#直接访问终端界面" target="_blank" rel="noopener">#</a>直接访问终端界面</h3><p>如果想要无登录直接访问容器组的控制台，可使用如下格式的 url 进入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://任意一个Worker节点的IP地址:32567/console/yournamespace/yourpod?containerName=yourcontainer&amp;shell=bash&amp;k8sToken=yourtoken</span><br></pre></td></tr></table></figure><p>其中，shell 参数可选取值有：</p><ul><li><code>bash</code>，使用 /bin/bash 作为 shell</li><li><code>sh</code>， 使用 /bin/sh 作为 shell</li></ul>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>harbor镜像仓库</title>
      <link href="/2020/04/09/harbor%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/"/>
      <url>/2020/04/09/harbor%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装harbor并创建项目"><a href="#安装harbor并创建项目" class="headerlink" title="安装harbor并创建项目"></a>安装harbor并创建项目</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum install -y python2-pip</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br><span class="line">pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">pip install docker-compose</span><br><span class="line"><span class="built_in">cd</span> /opt/</span><br><span class="line">wget https://storage.googleapis.com/harbor-releases/release-1.9.0/harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line">tar zxf harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line"><span class="built_in">cd</span> harbor/</span><br><span class="line">sed -i <span class="string">'/^hostname/c hostname: 10.0.0.11'</span> harbor.yml</span><br><span class="line">sed -i <span class="string">'/^harbor_admin_passwordr.yml/c harbor_admin_password: 123456'</span> harbor.yml</span><br><span class="line">sed -i <span class="string">'/^data_volume/c data_volume: /data/harbor'</span> harbor.yml</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>创建项目</p><p>10.0.0.11</p><p>新建私有项目</p><h2 id="配置docker信任harbor仓库"><a href="#配置docker信任harbor仓库" class="headerlink" title="配置docker信任harbor仓库"></a>配置docker信任harbor仓库</h2><p>注意！所有的节点都要操作</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/docker/daemon.json&lt;&lt;EOF </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://1660dchq.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [<span class="string">"http://10.0.0.11"</span>] </span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>所有节点都登陆docker-harbor</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login 10.0.0.11</span><br></pre></td></tr></table></figure><h2 id="将镜像打包并推送到harbor仓库"><a href="#将镜像打包并推送到harbor仓库" class="headerlink" title="将镜像打包并推送到harbor仓库"></a>将镜像打包并推送到harbor仓库</h2><ol><li>拉取2个Nginx镜像</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># docker pull nginx:1.14.0</span></span><br><span class="line"></span><br><span class="line">[root@node1 ~]<span class="comment"># docker pull nginx:1.16.0</span></span><br></pre></td></tr></table></figure><ol start="2"><li>给镜像打标签</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># docker tag nginx:1.14.0 10.0.0.11/k8s/nginx:1.14.0</span></span><br><span class="line"></span><br><span class="line">[root@node1 ~]<span class="comment"># docker tag nginx:1.16.0 10.0.0.11/k8s/nginx:1.16.0</span></span><br></pre></td></tr></table></figure><ol start="3"><li>推送到镜像仓库</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># docker push 10.0.0.11/k8s/nginx:1.14.0</span></span><br><span class="line"></span><br><span class="line">[root@node1 ~]<span class="comment"># docker push 10.0.0.11/k8s/nginx:1.16.0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像加速</title>
      <link href="/2020/04/09/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
      <url>/2020/04/09/Docker%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Docker镜像加速"><a href="#Docker镜像加速" class="headerlink" title="Docker镜像加速"></a>Docker镜像加速</h2><ul><li>docker 中，只能够为 docker 官方镜像仓库 hub.docker.com 提供 mirror 加速，自建的 docker 镜像仓库是不能配置 mirror 加速的；</li><li>如果您参考 kuboard.cn 提供的 kubernetes 安装文档，默认使用的 docker mirror 是 <a href="https://registry.cn-hangzhou.aliyuncs.com" target="_blank" rel="noopener">https://registry.cn-hangzhou.aliyuncs.com</a> 。</li></ul><h2 id="修改镜像仓库-mirror-地址"><a href="#修改镜像仓库-mirror-地址" class="headerlink" title="#修改镜像仓库 mirror 地址"></a><a href="https://kuboard.cn/install/docker-mirror.html#修改镜像仓库-mirror-地址" target="_blank" rel="noopener">#</a>修改镜像仓库 mirror 地址</h2><p>本文提供了快速修改的方式和手工修改的方式，效果相同</p><h3 id="快速修改"><a href="#快速修改" class="headerlink" title="快速修改"></a>快速修改</h3><ul><li>下面提供了四个 mirror 地址，您可以去掉其中任意一个地址的注释，以使用该 mirror 地址。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker中国 mirror</span></span><br><span class="line"><span class="comment"># export REGISTRY_MIRROR="https://registry.docker-cn.com"</span></span><br><span class="line"><span class="comment"># 腾讯云 docker hub mirror</span></span><br><span class="line"><span class="comment"># export REGISTRY_MIRROR="https://mirror.ccs.tencentyun.com"</span></span><br><span class="line"><span class="comment"># 华为云镜像</span></span><br><span class="line"><span class="comment"># export REGISTRY_MIRROR="https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com"</span></span><br><span class="line"><span class="comment"># DaoCloud 镜像</span></span><br><span class="line"><span class="comment"># export REGISTRY_MIRROR="http://f1361db2.m.daocloud.io"</span></span><br><span class="line"><span class="comment"># 阿里云 docker hub mirror</span></span><br><span class="line"><span class="built_in">export</span> REGISTRY_MIRROR=https://registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">curl -sSL https://kuboard.cn/install-script/set_mirror.sh | sh -s <span class="variable">$&#123;REGISTRY_MIRROR&#125;</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl restart kubelet  <span class="comment"># 假设您安装了 kubenetes</span></span><br></pre></td></tr></table></figure><h3 id="手工修改"><a href="#手工修改" class="headerlink" title="手工修改"></a>手工修改</h3><ul><li><p>修改 /etc/docker/daemon.json 文件（如果没有，则创建）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure></li><li><p>添加 registry-mirrors 字段：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="string">"registry-mirrors"</span>: [<span class="string">"https://registry.cn-hangzhou.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重启 docker/kubelet</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl start kubelet <span class="comment"># 假设您安装了 kubenetes</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="查看修改结果"><a href="#查看修改结果" class="headerlink" title="查看修改结果"></a>查看修改结果</h2><ul><li>执行命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br></pre></td></tr></table></figure><ul><li>查看结果</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">Docker Root Dir: /var/lib/docker</span><br><span class="line">Debug Mode (client): <span class="literal">false</span></span><br><span class="line">Debug Mode (server): <span class="literal">false</span></span><br><span class="line">Registry: https://index.docker.io/v1/</span><br><span class="line">Labels:</span><br><span class="line">Experimental: <span class="literal">false</span></span><br><span class="line">Insecure Registries:</span><br><span class="line"> 127.0.0.0/8</span><br><span class="line">Registry Mirrors:</span><br><span class="line"> https://registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">Live Restore Enabled: <span class="literal">false</span></span><br><span class="line">Product License: Community Engine</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kubeadm安装K8s</title>
      <link href="/2020/04/09/%E4%BD%BF%E7%94%A8kubeadm%E5%AE%89%E8%A3%85K8s/"/>
      <url>/2020/04/09/%E4%BD%BF%E7%94%A8kubeadm%E5%AE%89%E8%A3%85K8s/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>参考文档：<a href="https://kuboard.cn/install/install-k8s.html#文档特点" target="_blank" rel="noopener">https://kuboard.cn/install/install-k8s.html#%E6%96%87%E6%A1%A3%E7%89%B9%E7%82%B9</a></p><h2 id="配置要求"><a href="#配置要求" class="headerlink" title="配置要求"></a>配置要求</h2><p>对于 Kubernetes 初学者，在搭建K8S集群时，推荐在阿里云或腾讯云采购如下配置：（您也可以使用自己的虚拟机、私有云等您最容易获得的 Linux 环境）</p><ul><li>至少2台 <strong>2核4G</strong> 的服务器</li><li><strong>Cent OS 7.6</strong></li></ul><p><strong>安装后的软件版本为</strong></p><ul><li>Kubernetes v1.18.x<ul><li>calico 3.13.1</li><li>nginx-ingress 1.5.5</li></ul></li><li>Docker 19.03.8</li></ul><blockquote><p>如果要安装 Kubernetes 历史版本，请参考：</p><ul><li><a href="https://kuboard.cn/install/history-k8s/install-k8s-1.17.x.html" target="_blank" rel="noopener">安装 Kubernetes v1.17.x 单Master节点</a></li><li><a href="https://kuboard.cn/install/history-k8s/install-k8s-1.16.3.html" target="_blank" rel="noopener">安装 Kubernetes v1.16.3 单Master节点</a></li><li><a href="https://kuboard.cn/install/history-k8s/install-k8s-1.15.4.html" target="_blank" rel="noopener">安装 Kubernetes v1.15.4 单Master节点</a></li></ul></blockquote><p>安装后的拓扑图如下：<a href="https://kuboard.cn/kuboard.rp" target="_blank" rel="noopener">下载拓扑图源文件</a> 使用Axure RP 9.0可打开该文件</p><p>强烈建议初学者先按照此文档完成安装，在对 K8S 有更多理解后，再参考文档 <a href="https://kuboard.cn/install/install-kubernetes.html" target="_blank" rel="noopener">安装Kubernetes高可用</a></p><p><img src="/" class="lazyload" data-src="https://kuboard.cn/images/topology/k8s.png"  alt="Kubernetes安装：Kubernetes安装拓扑图"></p><p>关于二进制安装</p><p>kubeadm 是 Kubernetes 官方支持的安装方式，“二进制” 不是。本文档采用 kubernetes.io 官方推荐的 kubeadm 工具安装 kubernetes 集群。</p><h2 id="检查-centos-hostname"><a href="#检查-centos-hostname" class="headerlink" title="检查 centos / hostname"></a>检查 centos / hostname</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 master 节点和 worker 节点都要执行</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此处 hostname 的输出将会是该机器在 Kubernetes 集群中的节点名字</span></span><br><span class="line"><span class="comment"># 不能使用 localhost 作为节点的名字</span></span><br><span class="line">hostname</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请使用 lscpu 命令，核对 CPU 信息</span></span><br><span class="line"><span class="comment"># Architecture: x86_64    本安装文档不支持 arm 架构</span></span><br><span class="line"><span class="comment"># CPU(s):       2         CPU 内核数量不能低于 2</span></span><br><span class="line">lscpu</span><br></pre></td></tr></table></figure><p><strong>操作系统兼容性</strong></p><table><thead><tr><th>CentOS 版本</th><th>本文档是否兼容</th><th>备注</th></tr></thead><tbody><tr><td>7.7</td><td>😄</td><td>已验证</td></tr><tr><td>7.6</td><td>😄</td><td>已验证</td></tr><tr><td>7.5</td><td>😞</td><td>已证实会出现 kubelet 无法启动的问题</td></tr><tr><td>7.4</td><td>😞</td><td>已证实会出现 kubelet 无法启动的问题</td></tr><tr><td>7.3</td><td>😞</td><td>已证实会出现 kubelet 无法启动的问题</td></tr><tr><td>7.2</td><td>😞</td><td>已证实会出现 kubelet 无法启动的问题</td></tr></tbody></table><p>修改 hostname</p><p>如果您需要修改 hostname，可执行如下指令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 hostname</span></span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname your-new-host-name</span><br><span class="line"><span class="comment"># 查看修改结果</span></span><br><span class="line">hostnamectl status</span><br><span class="line"><span class="comment"># 设置 hostname 解析</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"127.0.0.1   <span class="variable">$(hostname)</span>"</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="检查网络"><a href="#检查网络" class="headerlink" title="检查网络"></a>检查网络</h2><p>在所有节点执行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@demo-master<span class="_">-a</span>-1 ~]$ ip route show</span><br><span class="line">default via 172.21.0.1 dev eth0 </span><br><span class="line">169.254.0.0/16 dev eth0 scope link metric 1002 </span><br><span class="line">172.21.0.0/20 dev eth0 proto kernel scope link src 172.21.0.12 </span><br><span class="line"></span><br><span class="line">[root@demo-master<span class="_">-a</span>-1 ~]$ ip address</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:16:3e:12:a4:1b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.17.216.80/20 brd 172.17.223.255 scope global dynamic eth0</span><br><span class="line">       valid_lft 305741654sec preferred_lft 305741654sec</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubelet使用的IP地址</span><br><span class="line"></span><br><span class="line">ip route show 命令中，可以知道机器的默认网卡，通常是 eth0，如 default via 172.21.0.23 dev eth0</span><br><span class="line">ip address 命令中，可显示默认网卡的 IP 地址，Kubernetes 将使用此 IP 地址与集群内的其他节点通信，如 172.17.216.80</span><br><span class="line">所有节点上 Kubernetes 所使用的 IP 地址必须可以互通（无需 NAT 映射、无安全组或防火墙隔离）</span><br></pre></td></tr></table></figure><h2 id="安装docker及kubelet"><a href="#安装docker及kubelet" class="headerlink" title="安装docker及kubelet"></a>安装docker及kubelet</h2><p><code>请认真核对如下选项，7 个都选中后才能显示如何安装。</code></p><p>选中后显示 安装 docker/kubelet 的文档</p><ul><li>我的任意节点 centos 版本为 7.6 或 7.7</li><li>我的任意节点 CPU 内核数量大于等于 2，且内存大于等于 4G</li><li>我的任意节点 hostname 不是 localhost，且不包含下划线、小数点、大写字母</li><li>我的任意节点都有固定的内网 IP 地址</li><li>我的任意节点都只有一个网卡，如果有特殊目的，我可以在完成 K8S 安装后再增加新的网卡</li><li>我的任意节点上 <a href="https://kuboard.cn/install/install-k8s.html#检查网络" target="_blank" rel="noopener">Kubelet使用的 IP 地址</a> 可互通（无需 NAT 映射即可相互访问），且没有防火墙、安全组隔离</li><li>我的任意节点不会直接使用 docker run 或 docker-compose 运行容器</li></ul><h2 id="初始化-master-节点"><a href="#初始化-master-节点" class="headerlink" title="初始化 master 节点"></a>初始化 master 节点</h2><p>关于初始化时用到的环境变量</p><ul><li><strong>APISERVER_NAME</strong> 不能是 master 的 hostname</li><li><strong>APISERVER_NAME</strong> 必须全为小写字母、数字、小数点，不能包含减号</li><li><strong>POD_SUBNET</strong> 所使用的网段不能与 <strong><em>master节点/worker节点</em></strong> 所在的网段重叠。该字段的取值为一个 <a href="https://kuboard.cn/glossary/cidr.html" target="_blank" rel="noopener">CIDR</a> 值，如果您对 CIDR 这个概念还不熟悉，请仍然执行 export POD_SUBNET=10.100.0.1/16 命令，不做修改</li></ul><p><code>快速初始化</code></p><p><strong>请将脚本最后的 1.18.0 替换成您需要的版本号，</strong> 脚本中间的 v1.18.x 不要替换</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line"><span class="comment"># 替换 x.x.x.x 为 master 节点实际 IP（请使用内网 IP）</span></span><br><span class="line"><span class="comment"># export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令</span></span><br><span class="line"><span class="built_in">export</span> MASTER_IP=x.x.x.x</span><br><span class="line"><span class="comment"># 替换 apiserver.demo 为 您想要的 dnsName</span></span><br><span class="line"><span class="built_in">export</span> APISERVER_NAME=apiserver.demo</span><br><span class="line"><span class="comment"># Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中</span></span><br><span class="line"><span class="built_in">export</span> POD_SUBNET=10.100.0.1/16</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;MASTER_IP&#125;</span>    <span class="variable">$&#123;APISERVER_NAME&#125;</span>"</span> &gt;&gt; /etc/hosts</span><br><span class="line">curl -sSL https://kuboard.cn/install-script/v1.18.x/init_master.sh | sh -s 1.18.0</span><br></pre></td></tr></table></figure><p><code>手动初始化</code></p><p>手动执行以下代码，结果与快速初始化相同。<strong><em>请将脚本第21行（已高亮）的 ${1} 替换成您需要的版本号，例如 1.18.0</em></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line"><span class="comment"># 替换 x.x.x.x 为 master 节点的内网IP</span></span><br><span class="line"><span class="comment"># export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令</span></span><br><span class="line"><span class="built_in">export</span> MASTER_IP=x.x.x.x</span><br><span class="line"><span class="comment"># 替换 apiserver.demo 为 您想要的 dnsName</span></span><br><span class="line"><span class="built_in">export</span> APISERVER_NAME=apiserver.demo</span><br><span class="line"><span class="comment"># Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中</span></span><br><span class="line"><span class="built_in">export</span> POD_SUBNET=10.100.0.1/16</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;MASTER_IP&#125;</span>    <span class="variable">$&#123;APISERVER_NAME&#125;</span>"</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本出错时终止执行</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;#POD_SUBNET&#125;</span> -eq 0 ] || [ <span class="variable">$&#123;#APISERVER_NAME&#125;</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">"\033[31;1m请确保您已经设置了环境变量 POD_SUBNET 和 APISERVER_NAME \033[0m"</span></span><br><span class="line">  <span class="built_in">echo</span> 当前POD_SUBNET=<span class="variable">$POD_SUBNET</span></span><br><span class="line">  <span class="built_in">echo</span> 当前APISERVER_NAME=<span class="variable">$APISERVER_NAME</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整配置选项 https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2</span></span><br><span class="line">rm -f ./kubeadm-config.yaml</span><br><span class="line">cat &lt;&lt;EOF &gt; ./kubeadm-config.yaml</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v<span class="variable">$&#123;1&#125;</span></span><br><span class="line">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class="line">controlPlaneEndpoint: <span class="string">"<span class="variable">$&#123;APISERVER_NAME&#125;</span>:6443"</span></span><br><span class="line">networking:</span><br><span class="line">  serviceSubnet: <span class="string">"10.96.0.0/16"</span></span><br><span class="line">  podSubnet: <span class="string">"<span class="variable">$&#123;POD_SUBNET&#125;</span>"</span></span><br><span class="line">  dnsDomain: <span class="string">"cluster.local"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubeadm init</span></span><br><span class="line"><span class="comment"># 根据您服务器网速的情况，您需要等候 3 - 10 分钟</span></span><br><span class="line">kubeadm init --config=kubeadm-config.yaml --upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 kubectl</span></span><br><span class="line">rm -rf /root/.kube/</span><br><span class="line">mkdir /root/.kube/</span><br><span class="line">cp -i /etc/kubernetes/admin.conf /root/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 calico 网络插件</span></span><br><span class="line"><span class="comment"># 参考文档 https://docs.projectcalico.org/v3.13/getting-started/kubernetes/self-managed-onprem/onpremises</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"安装calico-3.13.1"</span></span><br><span class="line">rm -f calico-3.13.1.yaml</span><br><span class="line">wget https://kuboard.cn/install-script/calico/calico-3.13.1.yaml</span><br><span class="line">kubectl apply -f calico-3.13.1.yaml</span><br></pre></td></tr></table></figure><p><strong>检查 master 初始化结果</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</span></span><br><span class="line">watch kubectl get pod -n kube-system -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 master 节点初始化结果</span></span><br><span class="line">kubectl get nodes -o wide</span><br></pre></td></tr></table></figure><h2 id="初始化-worker节点"><a href="#初始化-worker节点" class="headerlink" title="初始化 worker节点"></a>初始化 worker节点</h2><h3 id="获得-join命令参数获得-join命令参数"><a href="#获得-join命令参数获得-join命令参数" class="headerlink" title="获得-join命令参数获得 join命令参数"></a>获得-join命令参数获得 join命令参数</h3><p><strong>在 master 节点上执行</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br></pre></td></tr></table></figure><p>可获取kubeadm join 命令及参数，如下所示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubeadm token create 命令的输出</span></span><br><span class="line">kubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">有效时间</span><br><span class="line"></span><br><span class="line">该 token 的有效时间为 2 个小时，2小时内，您可以使用此 token 初始化任意数量的 worker 节点。</span><br></pre></td></tr></table></figure><h3 id="初始化worker"><a href="#初始化worker" class="headerlink" title="初始化worker"></a>初始化worker</h3><p><strong>针对所有的 worker 节点执行</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 worker 节点执行</span></span><br><span class="line"><span class="comment"># 替换 x.x.x.x 为 master 节点的内网 IP</span></span><br><span class="line"><span class="built_in">export</span> MASTER_IP=x.x.x.x</span><br><span class="line"><span class="comment"># 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME</span></span><br><span class="line"><span class="built_in">export</span> APISERVER_NAME=apiserver.demo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;MASTER_IP&#125;</span>    <span class="variable">$&#123;APISERVER_NAME&#125;</span>"</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换为 master 节点上 kubeadm token create 命令的输出</span></span><br><span class="line">kubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303</span><br></pre></td></tr></table></figure><h3 id="检查初始化结果"><a href="#检查初始化结果" class="headerlink" title="检查初始化结果"></a>检查初始化结果</h3><p>在 master 节点上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line">kubectl get nodes -o wide</span><br></pre></td></tr></table></figure><p>输出结果如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@demo-master<span class="_">-a</span>-1 ~]<span class="comment"># kubectl get nodes</span></span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">demo-master<span class="_">-a</span>-1   Ready    master   5m3s    v1.18.x</span><br><span class="line">demo-worker<span class="_">-a</span>-1   Ready    &lt;none&gt;   2m26s   v1.18.x</span><br><span class="line">demo-worker<span class="_">-a</span>-2   Ready    &lt;none&gt;   3m56s   v1.18.x</span><br></pre></td></tr></table></figure><h2 id="安装-Ingress-Controller"><a href="#安装-Ingress-Controller" class="headerlink" title="安装 Ingress Controller"></a>安装 Ingress Controller</h2><h3 id="快速初始化"><a href="#快速初始化" class="headerlink" title="快速初始化"></a><code>快速初始化</code></h3><p><strong>在 master 节点上执行</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line">kubectl apply -f https://kuboard.cn/install-script/v1.18.x/nginx-ingress.yaml</span><br></pre></td></tr></table></figure><h3 id="卸载-Ingress-Controller"><a href="#卸载-Ingress-Controller" class="headerlink" title="卸载 Ingress Controller"></a><code>卸载 Ingress Controller</code></h3><p><strong>在 master 节点上执行</strong></p><p>只在您想选择其他 Ingress Controller 的情况下卸载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只在 master 节点执行</span></span><br><span class="line">kubectl delete -f https://kuboard.cn/install-script/v1.18.x/nginx-ingress.yaml</span><br></pre></td></tr></table></figure><h3 id="Yaml文件"><a href="#Yaml文件" class="headerlink" title="Yaml文件"></a><code>Yaml文件</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果打算用于生产环境，请参考 https://github.com/nginxinc/kubernetes-ingress/blob/v1.5.5/docs/installation.md 并根据您自己的情况做进一步定制</span></span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ingress</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ingress </span><br><span class="line">  namespace: nginx-ingress</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: default-server-secret</span><br><span class="line">  namespace: nginx-ingress</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=</span><br><span class="line">  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: ConfigMap</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-config</span><br><span class="line">  namespace: nginx-ingress</span><br><span class="line">data:</span><br><span class="line">  server-names-hash-bucket-size: <span class="string">"1024"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ingress</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - secrets</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">  - update</span><br><span class="line">  - create</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - pods</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">""</span></span><br><span class="line">  resources:</span><br><span class="line">  - events</span><br><span class="line">  verbs:</span><br><span class="line">  - create</span><br><span class="line">  - patch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - extensions</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">  - get</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">"extensions"</span></span><br><span class="line">  resources:</span><br><span class="line">  - ingresses/status</span><br><span class="line">  verbs:</span><br><span class="line">  - update</span><br><span class="line">- apiGroups:</span><br><span class="line">  - k8s.nginx.org</span><br><span class="line">  resources:</span><br><span class="line">  - virtualservers</span><br><span class="line">  - virtualserverroutes</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">  - get</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ingress</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: nginx-ingress</span><br><span class="line">  namespace: nginx-ingress</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: nginx-ingress</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ingress</span><br><span class="line">  namespace: nginx-ingress</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/scrape: <span class="string">"true"</span></span><br><span class="line">    prometheus.io/port: <span class="string">"9113"</span></span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx-ingress</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-ingress</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: nginx-ingress</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx/nginx-ingress:1.5.5</span><br><span class="line">        name: nginx-ingress</span><br><span class="line">        ports:</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">          hostPort: 80</span><br><span class="line">        - name: https</span><br><span class="line">          containerPort: 443</span><br><span class="line">          hostPort: 443</span><br><span class="line">        - name: prometheus</span><br><span class="line">          containerPort: 9113</span><br><span class="line">        env:</span><br><span class="line">        - name: POD_NAMESPACE</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.namespace</span><br><span class="line">        - name: POD_NAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            fieldRef:</span><br><span class="line">              fieldPath: metadata.name</span><br><span class="line">        args:</span><br><span class="line">          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config</span><br><span class="line">          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret</span><br><span class="line">         <span class="comment">#- -v=3 # Enables extensive logging. Useful for troubleshooting.</span></span><br><span class="line">         <span class="comment">#- -report-ingress-status</span></span><br><span class="line">         <span class="comment">#- -external-service=nginx-ingress</span></span><br><span class="line">         <span class="comment">#- -enable-leader-election</span></span><br><span class="line">          - -<span class="built_in">enable</span>-prometheus-metrics</span><br><span class="line">         <span class="comment">#- -enable-custom-resources</span></span><br></pre></td></tr></table></figure><p><strong>配置域名解析</strong></p><p>将域名 *.demo.yourdomain.com 解析到 demo-worker-a-2 的 IP 地址 z.z.z.z （也可以是 demo-worker-a-1 的地址 y.y.y.y）</p><p><strong>验证配置</strong></p><p>在浏览器访问 a.demo.yourdomain.com，将得到 404 NotFound 错误页面</p><p><code>提示</code></p><p>许多初学者在安装 Ingress Controller 时会碰到问题，请不要灰心，可暂时跳过 <strong><em>安装 Ingress Controller</em></strong> 这个部分，等您学完 <a href="http://www.kuboard.cn" target="_blank" rel="noopener">www.kuboard.cn</a> 上 <a href="https://kuboard.cn/learning/k8s-basics/kubernetes-basics.html" target="_blank" rel="noopener">Kubernetes 入门</a> 以及 <a href="https://kuboard.cn/learning/k8s-intermediate/service/ingress.html" target="_blank" rel="noopener">通过互联网访问您的应用程序</a> 这两部分内容后，再来回顾 Ingress Controller 的安装。</p><p>也可以参考 <a href="https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-manifests/" target="_blank" rel="noopener">Install Nginx Ingress</a></p><p><code>WARNING</code></p><p>如果您打算将 Kubernetes 用于生产环境，请参考此文档 <a href="https://github.com/nginxinc/kubernetes-ingress/blob/v1.5.3/docs/installation.md" target="_blank" rel="noopener">Installing Ingress Controller</a>，完善 Ingress 的配置</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第1章 k8s简介</title>
      <link href="/2020/04/09/%E7%AC%AC1%E7%AB%A0-k8s%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/04/09/%E7%AC%AC1%E7%AB%A0-k8s%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="第1章-k8s简介"><a href="#第1章-k8s简介" class="headerlink" title="第1章 k8s简介"></a>第1章 k8s简介</h1><p><a href="https://kubernetes.io/" target="_blank" rel="noopener">Kubernetes</a> 简称k8s. 是一个开源的 Linux<br>容器自动化运维平台，它消除了容器化应用程序在部署、伸缩时涉及到的许多手动操作。换句话说，你可以将多台主机组合成集群来运行<br>Linux 容器，而 Kubernetes可以帮助你简单高效地管理那些集群。</p><p>Kubernetes 最开始是由 Google 的工程师设计开发的。Google 作为 Linux<br>容器技术的早期贡献者之一，曾公开演讲介绍 Google 如何将一切都运行于容器之中（这是<br>Google 的云服务背后的技术）。Google一周内的容器部署超过 20<br>亿次，全部的工作都由内部平台 Borg支撑。Borg是 Kubernetes 的前身，几年来开发 Borg<br>的经验教训也成了影响 Kubernetes 中许多技术的主要因素。</p><h1 id="第2章-k8s特性"><a href="#第2章-k8s特性" class="headerlink" title="第2章 k8s特性"></a>第2章 k8s特性</h1><p>Kubernetes是为生产环境而设计的容器调度管理系统，对于负载均衡、服务发现、高可用、滚动升级、自动伸缩等容器云平台的功能要求有原生支持</p><p>一个K8s集群是由分布式存储（etcd）、服务节点（Minion，etcd现在称为Node）和控制节点（Master）构成的。所有的集群状态都保存在etcd中，<br>Master节点上则运行集群的管理控制模块。<br>Node节点是真正运行应用容器的主机节点，在每个Minion节点上都会运行一个Kubelet代理，控制该节点上的容器、镜像和存储卷等。</p><h1 id="第3章-k8s系统架构"><a href="#第3章-k8s系统架构" class="headerlink" title="第3章 k8s系统架构"></a>第3章 k8s系统架构</h1><p>Kubernetes被设计为Master和Node两个节点，Master为控制节点，Node为计算节点或工作节点，在Master节点上有一个API<br>Server，对外提供标准的RestAPI,这也是Kubernetes集群的入口，意味只要和集群交互就必须连到API<br>Server</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/53f7c5494fd6e7788baee5b1267d8997/07240F78F6E84164AF4EBCA3CB172C2C?ynotemdtimestamp=1586429563125"  alt="image"></p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/53f7c5494fd6e7788baee5b1267d8997/23F75CFA322A43368E0CE0703CA297C5?ynotemdtimestamp=1586429563125"  alt="image"></p><h2 id="3-1-Master节点介绍"><a href="#3-1-Master节点介绍" class="headerlink" title="3.1 Master节点介绍"></a>3.1 Master节点介绍</h2><p>Master节点主要有4个组件，API Server, Scheduler, Contoller, etcd</p><h3 id="1-API-Server"><a href="#1-API-Server" class="headerlink" title="1.API Server"></a>1.API Server</h3><p>提供Kubernetes<br>API接口，主要处理Rest操作以及更新Etcd中的对象，是所有资源增删改查的唯一入口。</p><h3 id="2-Scheduler"><a href="#2-Scheduler" class="headerlink" title="2.Scheduler"></a>2.Scheduler</h3><p>绑定Pod到Node上，主要做资源调度</p><h3 id="3-Controller-Manager"><a href="#3-Controller-Manager" class="headerlink" title="3.Controller Manager"></a>3.Controller Manager</h3><p>所有其他集群级别的功能，目前由控制器器Manager执行。资源对象的自动化控制中心，Kubernetes集群有很多控制器。</p><h3 id="4-Etcd"><a href="#4-Etcd" class="headerlink" title="4.Etcd"></a>4.Etcd</h3><p>所有持久化的状态信息存储在Etcd中，这个是Kubernetes集群的数据库</p><h2 id="3-2-Node节点介绍"><a href="#3-2-Node节点介绍" class="headerlink" title="3.2 Node节点介绍"></a>3.2 Node节点介绍</h2><p>Node节点是Kuerntes集群的工作节点,Node节点上主要运行了Docker,Kubelet,kub-proxy<strong>三个服务</strong></p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/53f7c5494fd6e7788baee5b1267d8997/41F42C504F6E49FD88B0DFE4DE485610?ynotemdtimestamp=1586429563125"  alt="image"></p><p><strong>1.Docker Engine</strong></p><p>负责节点容器的管理工作，最终创建出来的是一个Docker容器。</p><p><strong>2.kubelet</strong></p><p>安装在Node上的代理服务，用来管理Pods以及容器/镜像/Volume等，实现对集群对节点的管理。</p><p><strong>3.kube-proxy</strong></p><p>安装在Node上的网络代理服务，提供网络代理以及负载均衡，实现与Service通讯。</p><h1 id="第4章-kubernetes逻辑架构"><a href="#第4章-kubernetes逻辑架构" class="headerlink" title="第4章 kubernetes逻辑架构"></a>第4章 kubernetes逻辑架构</h1><h2 id="4-1-Pod"><a href="#4-1-Pod" class="headerlink" title="4.1 Pod"></a>4.1 Pod</h2><p>Pod是Kubernetes的最小管理单元，一个Pod可以包含一组容器和卷。虽然一个Pod里面可以包含一个或者多个容器，但是Pod只有一个IP地址，而且Pod重启后，IP地址会发生变化。</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/53f7c5494fd6e7788baee5b1267d8997/7E22BF8ACB2A420EA993F3D16B04FE42?ynotemdtimestamp=1586429563125"  alt="image"></p><h2 id="4-2-Controller"><a href="#4-2-Controller" class="headerlink" title="4.2 Controller"></a>4.2 Controller</h2><p>集群中会有很多Pod，那么就需要使用控制器来管理Pod</p><p>k8s中有很多控制器，常见的控制器如下：</p><ul><li>Replication Controller（新版本已经被ReplicaSet所替代）</li><li>ReplicaSet（新版本被封装在Deployment中）</li><li>Deployment：封装了Pod的副本管理、部署更新、回滚、扩容、缩容等功能。</li><li>DaemonSet：保证所有的Node上有且只有一个Pod在运行。</li><li>StatefulSet：有状态的应用，为 Pod 提供唯一的标识，它可以保证部署和 scale</li><li>的顺序。</li><li>Job：使用Kubernetes运行单一任务。</li><li>CronJob：使用Kubernetes运行定时任务。</li></ul><h2 id="4-3-Service"><a href="#4-3-Service" class="headerlink" title="4.3 Service"></a>4.3 Service</h2><p>由于Pod的生命周期是短暂的，而且每次重启Pod的IP地址都会发生变化，而且一个Pod有多个副本，也就是说一个集群中有了多个节点，就需要考虑负载均衡的问题。Kubernetes使用Service来实现Pod的访问，而且Service有一个Cluster<br>IP，通常也称之为VIP，是固定不变的。</p><h1 id="第5章-kubernetes网络介绍"><a href="#第5章-kubernetes网络介绍" class="headerlink" title="第5章 kubernetes网络介绍"></a>第5章 kubernetes网络介绍</h1><p>在Kubernetes集群中存在着三种网络，分别是Node网络、Pod网络和Service网络，这几种网络之间的通信需要依靠网络插件，Kubernetes本身并没有提供，社区提供了像Flannel、Calico、Cannal等网络插件。</p><h2 id="5-1-Node网络"><a href="#5-1-Node网络" class="headerlink" title="5.1 Node网络"></a>5.1 Node网络</h2><p>Node网络指的是Kubernetes<br>Node节点本地的网络，在本实验环境中使用的是10.0.0./24这个网段，所有的Node和Master在该网段都可以正常通信。</p><h2 id="5-2-Service网络"><a href="#5-2-Service网络" class="headerlink" title="5.2 Service网络"></a>5.2 Service网络</h2><p>Service是为Pod提供访问和负载均衡的网络地址段</p><h2 id="5-3-Pod网络"><a href="#5-3-Pod网络" class="headerlink" title="5.3 Pod网络"></a>5.3 Pod网络</h2><p>后面创建的Pod，每一个Pod都会有一个IP地址，这个IP地址网络段被称之为Pod网络，如下图所示。</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dokcer </tag>
            
            <tag> k8s </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker容器</title>
      <link href="/2020/04/09/Docker%E5%AE%B9%E5%99%A8/"/>
      <url>/2020/04/09/Docker%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h1><h2 id="Docker-容器介绍"><a href="#Docker-容器介绍" class="headerlink" title="Docker 容器介绍"></a>Docker 容器介绍</h2><h3 id="docker-是什么"><a href="#docker-是什么" class="headerlink" title="docker 是什么"></a>docker 是什么</h3><p>Docker 是Docker.Inc 公司开源的一个基于LXC 技术之上构建的Container 容器引擎， 源代码托管<br>在GitHub 上, 基于Go 语言并遵从Apache2.0 协议开源。<br>Docker 是通过内核虚拟化技术（namespaces 及cgroups 等）来提供容器的资源隔离与安全保障等。由于Docker 通过操作系统层的虚拟化实现隔离，所以Docker 容器在运行时，不需要类似虚拟机（VM）额外的操作系统开销，提高资源利用率。</p><h3 id="namespace-命名空间"><a href="#namespace-命名空间" class="headerlink" title="namespace 命名空间"></a>namespace 命名空间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Mount Namespace - 用于隔离文件系统的挂载点</span><br><span class="line">UTS Namespace - 用于隔离HostName 和DomianName</span><br><span class="line">IPC Namespace - 用于隔离进程间通信</span><br><span class="line">PID Namespace - 用于隔离进程ID</span><br><span class="line">Network Namespace - 用于隔离网络</span><br><span class="line">User Namespace - 用于隔离用户和用户组UID/GID</span><br></pre></td></tr></table></figure><h3 id="cgroups资源限制"><a href="#cgroups资源限制" class="headerlink" title="cgroups资源限制"></a>cgroups资源限制</h3><p>控制组（cgroups）是Linux 内核的一个特性，主要用来对共享资源进行隔离、限制、审计等。只有<br>能控制分配到容器的资源，才能避免当多个容器同时运行时的对系统资源的竞争。<br>控制组技术最早是由Google 的程序员在2006 年提出，Linux 内核自2.6.24 开始支持。<br>控制组可以提供对容器的内存、CPU、磁盘IO 等资源的限制和审计管理。</p><h3 id="容器与虚拟机对比"><a href="#容器与虚拟机对比" class="headerlink" title="容器与虚拟机对比"></a>容器与虚拟机对比</h3><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/58F195B98CB741CF97EB5AFA4076F8B3?ynotemdtimestamp=1586417471888"  alt="image"></p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/2136579F0E664FB38DE98440F203F638?ynotemdtimestamp=1586417471888"  alt="image"></p><h3 id="docker-的三个重要概念"><a href="#docker-的三个重要概念" class="headerlink" title="docker 的三个重要概念"></a>docker 的三个重要概念</h3><p><strong>Image(镜像):</strong><br>那么镜像到底是什么呢？Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的<br>程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。</p><p><strong>Container(容器)</strong><br>容器(Container)的定义和镜像(Image)几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最上面那一层是可读可写的。</p><p><strong>Repository(仓库)</strong><br>镜像仓库是Docker 用来集中存放镜像文件的地方，类似于我们之前常用的代码仓库。<br>通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。<br>我们可以通过&lt;仓库名&gt;:&lt;标签&gt;的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将<br>以Latest 作为默认标签。</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/797B5B7220C249E29DA22FF643FE4198?ynotemdtimestamp=1586417471888"  alt="image"></p><h3 id="docker-的组成部分"><a href="#docker-的组成部分" class="headerlink" title="docker 的组成部分"></a>docker 的组成部分</h3><p>docker 是传统的CS 架构分为docker client 和docker server<br>Docker 客户端是Docker 用户与Docker 交互的主要方式。当您使用Docker 命令行运行命令时，<br>Docker 客户端将这些命令发送给服务器端，服务端将执行这些命令。<br>Docker 命令使用Docker API 。Docker 客户端可以与多个服务端进行通信。</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/1EF6422FF8044852AFE47F294CD6B928?ynotemdtimestamp=1586417471888"  alt="image"></p><h2 id="Docker-安装部署"><a href="#Docker-安装部署" class="headerlink" title="Docker 安装部署"></a>Docker 安装部署</h2><h3 id="国内源安装docker-ce"><a href="#国内源安装docker-ce" class="headerlink" title="国内源安装docker-ce"></a>国内源安装docker-ce</h3><p>这里我们使用清华源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/<span class="built_in">help</span>/docker-ce/</span><br></pre></td></tr></table></figure><p>操作步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker docker-common docker-selinux docker-engine</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">sed -i <span class="string">'s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+'</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum makecache fast</span><br><span class="line">yum install docker-ce</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="国内远镜像加速配置"><a href="#国内远镜像加速配置" class="headerlink" title="国内远镜像加速配置"></a>国内远镜像加速配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line"> tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://1660dchq.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">思路：</span><br><span class="line">1.开启yum 缓存</span><br><span class="line">2.全新环境安装docker</span><br><span class="line">3.将缓存的包全部打包出来</span><br><span class="line">4.安装的时候使用rpm -ivh *.rpm 方式安装</span><br></pre></td></tr></table></figure><h3 id="运行第一个容器"><a href="#运行第一个容器" class="headerlink" title="运行第一个容器"></a>运行第一个容器</h3><p>运行一个Hello world</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run alpine /bin/<span class="built_in">echo</span> <span class="string">"Hello world"</span></span><br></pre></td></tr></table></figure><h2 id="Docker-镜像和容器管理"><a href="#Docker-镜像和容器管理" class="headerlink" title="Docker 镜像和容器管理"></a>Docker 镜像和容器管理</h2><h3 id="镜像相关命令"><a href="#镜像相关命令" class="headerlink" title="镜像相关命令"></a>镜像相关命令</h3><h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><p>选择镜像建议：</p><p>1.优先选择官方的</p><p>2.选择星星多的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search centos</span><br></pre></td></tr></table></figure><p>3.搜索镜像并查看该镜像的tag</p><p>默认我们使用命令查看是看不到镜像的版本的，可以通过docker-hub 查看，但是国内原因。。。<br>这里可以使用仓库的restful APIl 来查询<br>jq 是一个json 格式化工具，需要提前安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install jq -y</span><br><span class="line">curl -s https://registry.hub.docker.com/v1/repositories/centos/tags|jq</span><br></pre></td></tr></table></figure><h4 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:7</span><br></pre></td></tr></table></figure><h4 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi centos:7</span><br></pre></td></tr></table></figure><h4 id="导出镜像"><a href="#导出镜像" class="headerlink" title="导出镜像"></a>导出镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save centos:7 -o centos-v7.tar</span><br><span class="line">docker save centos:7 &gt; centos-v7.tar</span><br></pre></td></tr></table></figure><h4 id="导入镜像"><a href="#导入镜像" class="headerlink" title="导入镜像"></a>导入镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker load -i centos-v7.tar</span><br><span class="line">docker load &lt; centos-v7.tar</span><br></pre></td></tr></table></figure><h3 id="容器相关命令"><a href="#容器相关命令" class="headerlink" title="容器相关命令"></a>容器相关命令</h3><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.启动一个容器并保持不退出</span><br><span class="line">docker run -it -d centos:7 /bin/bash </span><br><span class="line">2.启动一个容器并保持不退出并自定义命名</span><br><span class="line">docker run --name mycentos -it -d centos:7 /bin/bash</span><br></pre></td></tr></table></figure><h4 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器ID</span><br></pre></td></tr></table></figure><h4 id="查看容器的详细信息"><a href="#查看容器的详细信息" class="headerlink" title="查看容器的详细信息"></a>查看容器的详细信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 容器名或ID</span><br></pre></td></tr></table></figure><h4 id="查看正在运行和已经停止的容器"><a href="#查看正在运行和已经停止的容器" class="headerlink" title="查看正在运行和已经停止的容器"></a>查看正在运行和已经停止的容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker ps -a</span><br><span class="line">docker ps -q</span><br><span class="line">docker ps -qa</span><br></pre></td></tr></table></figure><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><p>docker exec 会分配一个新的终端tty</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.docker <span class="built_in">exec</span> 会分配一个新的终端tty</span><br><span class="line">docker <span class="built_in">exec</span> -it 容器ID /bin/bash</span><br><span class="line">2.docker attach 会使用同一个终端</span><br><span class="line">docker attach 容器ID</span><br></pre></td></tr></table></figure><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>删除单个容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器ID</span><br></pre></td></tr></table></figure><p>批量删除容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h2 id="Docker-网络管理"><a href="#Docker-网络管理" class="headerlink" title="Docker 网络管理"></a>Docker 网络管理</h2><h3 id="随机映射端口"><a href="#随机映射端口" class="headerlink" title="随机映射端口"></a>随机映射端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -P -d nginx:latest</span><br></pre></td></tr></table></figure><h3 id="指定映射端口"><a href="#指定映射端口" class="headerlink" title="指定映射端口"></a>指定映射端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:80 -d nginx:latest</span><br></pre></td></tr></table></figure><p>如果想多个容器使用8080 端口，可以通过添加多个IP 地址实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0:1 10.0.1.52 up</span><br><span class="line">docker run -d -p 10.0.1.51:8080:80 nginx:latest</span><br><span class="line">docker run -d -p 10.0.1.52:8080:80 nginx:latest</span><br></pre></td></tr></table></figure><p>进入容器里修改站点目录，然后访问测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it bdb2a4e7e24d /bin/bash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"web01"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line">docker <span class="built_in">exec</span> -it 31c1de138dda /bin/bash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"web02"</span> &gt; /usr/share/nginx/html/index.html</span><br></pre></td></tr></table></figure><p>访问测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]<span class="comment"># curl 10.0.1.51:8080</span></span><br></pre></td></tr></table></figure><h3 id="跨主机通信"><a href="#跨主机通信" class="headerlink" title="跨主机通信"></a>跨主机通信</h3><h2 id="Docker-数据卷管理"><a href="#Docker-数据卷管理" class="headerlink" title="Docker 数据卷管理"></a>Docker 数据卷管理</h2><h3 id="持久化数据卷"><a href="#持久化数据卷" class="headerlink" title="持久化数据卷"></a>持久化数据卷</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v 宿主机目录:容器内目录</span><br></pre></td></tr></table></figure><p>下面我们来创建一个html5 小游戏</p><h4 id="创建游戏代码目录"><a href="#创建游戏代码目录" class="headerlink" title="创建游戏代码目录"></a>创建游戏代码目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/ -p</span><br><span class="line"><span class="built_in">cd</span> /data/</span><br><span class="line">unzip xiaoniaofeifei.zip -d xiaoniao</span><br></pre></td></tr></table></figure><h4 id="创建容器并映射数据卷"><a href="#创建容器并映射数据卷" class="headerlink" title="创建容器并映射数据卷"></a>创建容器并映射数据卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line">docker run -d -p 80:80 -v /data/xiaoniao:/usr/share/nginx/html nginx:latest</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h4 id="访问游戏页面"><a href="#访问游戏页面" class="headerlink" title="访问游戏页面"></a>访问游戏页面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.51</span><br></pre></td></tr></table></figure><h3 id="持久化数据卷容器"><a href="#持久化数据卷容器" class="headerlink" title="持久化数据卷容器"></a>持久化数据卷容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--volumes-from (跟某一个已经存在的容器挂载相同的卷)</span><br></pre></td></tr></table></figure><p>查看当前容器有哪些卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><p>下面我们利用容器卷创建一个小游戏</p><h4 id="创建一个容器卷"><a href="#创建一个容器卷" class="headerlink" title="创建一个容器卷"></a>创建一个容器卷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:80 --volume xiaoniao:/usr/share/nginx/html nginx:latest</span><br><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><h4 id="查看卷的目录"><a href="#查看卷的目录" class="headerlink" title="查看卷的目录"></a>查看卷的目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume inspect xiaoniao</span><br></pre></td></tr></table></figure><h4 id="复制代码目录到容器卷目录"><a href="#复制代码目录到容器卷目录" class="headerlink" title="复制代码目录到容器卷目录"></a>复制代码目录到容器卷目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cp -a /data/xiaoniao/* /var/lib/docker/volumes/xiaoniao/_data/</span><br></pre></td></tr></table></figure><h4 id="使用容器卷创建新容器"><a href="#使用容器卷创建新容器" class="headerlink" title="使用容器卷创建新容器"></a>使用容器卷创建新容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8090:80 --volume xiaoniao:/usr/share/nginx/html nginx:latest</span><br></pre></td></tr></table></figure><h3 id="实验-访问不同端口展示不同页面"><a href="#实验-访问不同端口展示不同页面" class="headerlink" title="实验-访问不同端口展示不同页面"></a>实验-访问不同端口展示不同页面</h3><p>需求：<br>访问8080 端口，展示xiaoniao 首页<br>访问8090 端口，展示游戏集合页面</p><h4 id="准备nginx-配置文件"><a href="#准备nginx-配置文件" class="headerlink" title="准备nginx 配置文件"></a>准备nginx 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/data/game.conf&lt;&lt;EOF</span><br><span class="line">server &#123;</span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /opt/game/;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       8090;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /opt/xiaoniao/;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="上传代码目录"><a href="#上传代码目录" class="headerlink" title="上传代码目录"></a>上传代码目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 /data]<span class="comment"># ll</span></span><br><span class="line">总用量18896</span><br><span class="line">drwxr-xr-x 5 root root 73 9 月7 23:03 game</span><br><span class="line">-rw-r--r-- 1 root root 309 9 月7 22:57 game.conf</span><br><span class="line">-rw-r--r-- 1 root root 19248295 8 月28 09:48 html5.zip</span><br><span class="line">drwxr-xr-x 3 root root 92 9 月7 22:15 xiaoniao</span><br><span class="line">-rw-r--r-- 1 root root 91014 9 月7 22:11 xiaoniaofeifei.zip</span><br></pre></td></tr></table></figure><h4 id="创建容器并挂载"><a href="#创建容器并挂载" class="headerlink" title="创建容器并挂载"></a>创建容器并挂载</h4><p>需要挂载的内容：<br>1.nginx 配置文件<br>2.游戏目录<br>创建容器命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line">docker run -d -p 8080:8080 -p 8090:8090 -v /data/xiaoniao:/opt/xiaoniao -v /data/game:/opt/game -v /data/game.conf:/etc/nginx/conf.d/game.conf nginx:latest</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="Docker-镜像手动构建"><a href="#Docker-镜像手动构建" class="headerlink" title="Docker 镜像手动构建"></a>Docker 镜像手动构建</h2><h3 id="手动制作游戏镜像"><a href="#手动制作游戏镜像" class="headerlink" title="手动制作游戏镜像"></a>手动制作游戏镜像</h3><p>下面我们基于centos 容器制作一个新镜像，并安装nginx 服务</p><h4 id="启动一个容器并安装nginx"><a href="#启动一个容器并安装nginx" class="headerlink" title="启动一个容器并安装nginx"></a>启动一个容器并安装nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">docker run -it centos:7 /bin/bash</span><br><span class="line">yum install wget install openssh-clients -y</span><br><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">sed -i -e <span class="string">'/mirrors.cloud.aliyuncs.com/d'</span> -e <span class="string">'/mirrors.aliyuncs.com/d'</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">cat &gt;/etc/yum.repos.d/nginx.repo&lt;&lt;EOF  </span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">EOF</span><br><span class="line">yum makecache fast</span><br><span class="line">yum install nginx -y</span><br></pre></td></tr></table></figure><h4 id="上传代码目录并配置nginx-配置文件"><a href="#上传代码目录并配置nginx-配置文件" class="headerlink" title="上传代码目录并配置nginx 配置文件"></a>上传代码目录并配置nginx 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r 10.0.1.51:/data/* /opt/</span><br><span class="line">mv /opt/game.conf /etc/nginx/conf.d/</span><br></pre></td></tr></table></figure><h4 id="将容器提交为新的镜像"><a href="#将容器提交为新的镜像" class="headerlink" title="将容器提交为新的镜像"></a>将容器提交为新的镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit 容器ID game:v1</span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><h4 id="测试镜像功能是否可用"><a href="#测试镜像功能是否可用" class="headerlink" title="测试镜像功能是否可用"></a>测试镜像功能是否可用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:8080 -p 8090:8090 -d game:v1 nginx -g <span class="string">'daemon off;'</span></span><br></pre></td></tr></table></figure><h4 id="将新镜像导出"><a href="#将新镜像导出" class="headerlink" title="将新镜像导出"></a>将新镜像导出</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save game:v1 &gt; game-v1.tar</span><br><span class="line">docker load &lt; game-v1.tar</span><br></pre></td></tr></table></figure><h3 id="手动制作云盘镜像"><a href="#手动制作云盘镜像" class="headerlink" title="手动制作云盘镜像"></a>手动制作云盘镜像</h3><h4 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name clould game:v1 nginx -g <span class="string">'daemon off;'</span></span><br></pre></td></tr></table></figure><h4 id="进入容器安装php-并求改运行用户"><a href="#进入容器安装php-并求改运行用户" class="headerlink" title="进入容器安装php 并求改运行用户"></a>进入容器安装php 并求改运行用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">yum install wget install openssh-clients unzip -y</span><br><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">sed -i -e <span class="string">'/mirrors.cloud.aliyuncs.com/d'</span> -e <span class="string">'/mirrors.aliyuncs.com/d'</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">cat &gt;/etc/yum.repos.d/nginx.repo&lt;&lt;EOF  </span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">EOF</span><br><span class="line">yum makecache fast</span><br><span class="line">yum install nginx php-fpm php-mbstring php-gd -y</span><br><span class="line">sed -i <span class="string">'/^user/c user = nginx'</span> /etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">'/^group/c group = nginx'</span> /etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">'/daemonize/s#no#yes#g'</span> /etc/php-fpm.conf     </span><br><span class="line">php-fpm -c /etc/php.ini -y /etc/php-fpm.conf</span><br><span class="line">ps -ef|grep php</span><br></pre></td></tr></table></figure><h4 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat&gt; /etc/nginx/conf.d/cloud.conf &lt;&lt;EOF  </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    root /code/kod;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php\$ &#123;</span><br><span class="line">        root /code/kod;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME \<span class="variable">$document_root</span>\<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">rm -rf /etc/nginx/conf.d/default.conf </span><br><span class="line">nginx -t</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><h4 id="下载代码目录"><a href="#下载代码目录" class="headerlink" title="下载代码目录"></a>下载代码目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /code</span><br><span class="line">scp 10.0.1.51:/data/kodexplorer4.40.zip </span><br><span class="line">unzip kodexplorer4.40.zip -d kod</span><br><span class="line">chown -R nginx:nginx /code/</span><br></pre></td></tr></table></figure><h4 id="容器启动脚本命令"><a href="#容器启动脚本命令" class="headerlink" title="容器启动脚本命令"></a>容器启动脚本命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;init.sh&lt;&lt;EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">php-fpm -c /etc/php.ini -y /etc/php-fpm.conf</span><br><span class="line">nginx -g <span class="string">'daemon off;'</span></span><br><span class="line">EOF </span><br><span class="line">chmod +x init.sh</span><br></pre></td></tr></table></figure><h4 id="提交新的镜像"><a href="#提交新的镜像" class="headerlink" title="提交新的镜像"></a>提交新的镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit 9e691858a4bd kod:v1</span><br></pre></td></tr></table></figure><h4 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line">docker run -p 80:80 -v /data/kod/data:/code/kod/data/ -d kod:v1 /bin/bash /root/init.sh</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h4 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h4><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/7EC73629DAD746768555EB27A63345D7?ynotemdtimestamp=1586417471888"  alt="image"></p><h2 id="Dockerfile-自动构建Docker-镜像"><a href="#Dockerfile-自动构建Docker-镜像" class="headerlink" title="Dockerfile 自动构建Docker 镜像"></a>Dockerfile 自动构建Docker 镜像</h2><h3 id="Dockerfile-操作命令说明"><a href="#Dockerfile-操作命令说明" class="headerlink" title="Dockerfile 操作命令说明"></a>Dockerfile 操作命令说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">Docker 通过对于在Dockerfile 中的一系列指令的顺序解析实现自动的image 的构建</span><br><span class="line">通过使用build 命令，根据Dockerfiel 的描述来构建镜像</span><br><span class="line">通过源代码路径的方式</span><br><span class="line">通过标准输入流的方式</span><br><span class="line">Dockerfile 指令：</span><br><span class="line">只支持Docker 自己定义的一套指令，不支持自定义</span><br><span class="line">大小写不敏感，但是建议全部使用大写</span><br><span class="line">根据Dockerfile 的内容顺序执行</span><br><span class="line">FROM：</span><br><span class="line">FROM &#123;base 镜像&#125;</span><br><span class="line">必须放在DOckerfile 的第一行，表示从哪个baseimage 开始构建</span><br><span class="line">MAINTAINER：</span><br><span class="line">可选的，用来标识image 作者的地方</span><br><span class="line">RUN：</span><br><span class="line">每一个RUN 指令都会是在一个新的container 里面运行，并提交为一个image 作为下一个RUN 的base</span><br><span class="line">一个Dockerfile 中可以包含多个RUN，按定义顺序执行</span><br><span class="line">RUN 支持两种运行方式：</span><br><span class="line">RUN &lt;cmd&gt; 这个会当作/bin/sh -c “cmd” 运行</span><br><span class="line">RUN [“executable”，“arg1”，。。]，Docker 把他当作json 的顺序来解析，因此必须使用双引号，</span><br><span class="line">而且executable 需要是完整路径</span><br><span class="line">RUN 都是启动一个容器、执行命令、然后提交存储层文件变更。第一层RUN command1 的执行仅仅是当前进程，</span><br><span class="line">一个内存上的变化而已，其结果不会造成任何文件。而到第二层的时候，启动的是一个全新的容器，跟第一层的容</span><br><span class="line">器更完全没关系，自然不可能继承前一层构建过程中的内存变化。而如果需要将两条命令或者多条命令联合起来执</span><br><span class="line">行需要加上&amp;&amp;。如：<span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src &amp;&amp; wget xxxxxxx</span><br><span class="line">CMD：</span><br><span class="line">CMD 的作用是作为执行container 时候的默认行为（容器默认的启动命令）</span><br><span class="line">当运行container 的时候声明了<span class="built_in">command</span>，则不再用image 中的CMD 默认所定义的命令</span><br><span class="line">一个Dockerfile 中只能有一个有效的CMD，当定义多个CMD 的时候，只有最后一个才会起作用</span><br><span class="line">CMD 定义的三种方式：</span><br><span class="line">CMD &lt;cmd&gt; 这个会当作/bin/sh -c <span class="string">"cmd"</span>来执行</span><br><span class="line">CMD [<span class="string">"executable"</span>,<span class="string">"arg1"</span>,....]</span><br><span class="line">CMD [<span class="string">"arg1"</span>,<span class="string">"arg2"</span>]，这个时候CMD 作为ENTRYPOINT 的参数</span><br><span class="line">EXPOSE 声明端口</span><br><span class="line">格式为EXPOSE &lt;端口1&gt; [&lt;端口2&gt;...]。</span><br><span class="line">EXPOSE 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启</span><br><span class="line">这个端口的服务。在Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护</span><br><span class="line">端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是docker run -P 时，会自动随机</span><br><span class="line">映射EXPOSE 的端口。</span><br><span class="line">entrypoint：</span><br><span class="line">entrypoint 的作用是，把整个container 变成了一个可执行的文件，这样不能够通过替换CMD 的方法来改变创</span><br><span class="line">建container 的方式。但是可以通过参数传递的方法影响到container 内部</span><br><span class="line">每个Dockerfile 只能够包含一个entrypoint，多个entrypoint 只有最后一个有效</span><br><span class="line">当定义了entrypoint 以后，CMD 只能够作为参数进行传递</span><br><span class="line">entrypoint 定义方式：</span><br><span class="line">entrypoint [<span class="string">"executable"</span>,<span class="string">"arg1"</span>,<span class="string">"arg2"</span>]，这种定义方式下，CMD 可以通过json 的方式来定义entrypoint</span><br><span class="line">的参数，可以通过在运行container 的时候通过指定<span class="built_in">command</span> 的方式传递参数</span><br><span class="line">entrypoint &lt;cmd&gt;，当作/bin/bash -c <span class="string">"cmd"</span>运行命令</span><br><span class="line">ADD &amp; COPY：</span><br><span class="line">当在源代码构建的方式下，可以通过ADD 和COPY 的方式，把host 上的文件或者目录复制到image 中</span><br><span class="line">ADD 和COPY 的源必须在context 路径下</span><br><span class="line">当src 为网络URL 的情况下，ADD 指令可以把它下载到dest 的指定位置，这个在任何build 的方式下都可以</span><br><span class="line">work</span><br><span class="line">ADD 相对COPY 还有一个多的功能，能够进行自动解压压缩包</span><br><span class="line">ENV：</span><br><span class="line">ENV key value</span><br><span class="line">用来设置环境变量，后续的RUN 可以使用它所创建的环境变量</span><br><span class="line">当创建基于该镜像的container 的时候，会自动拥有设置的环境变量</span><br><span class="line">WORKDIR：</span><br><span class="line">用来指定当前工作目录（或者称为当前目录）</span><br><span class="line">当使用相对目录的情况下，采用上一个WORKDIR 指定的目录作为基准</span><br><span class="line">USER：</span><br><span class="line">指定UID 或者username，来决定运行RUN 指令的用户</span><br><span class="line">ONBUILD：</span><br><span class="line">ONBUILD 作为一个trigger 的标记，可以用来trigger 任何Dockerfile 中的指令</span><br><span class="line">可以定义多个ONBUILD 指令</span><br><span class="line">当下一个镜像B 使用镜像A 作为base 的时候，在FROM A 指令前，会先按照顺序执行在构建A 时候定义的ONBUILD指令</span><br><span class="line">ONBUILD &lt;DOCKERFILE 指令&gt; &lt;content&gt;</span><br><span class="line">VOLUME：</span><br><span class="line">用来创建一个在image 之外的mount point，用来在多个container 之间实现数据共享</span><br><span class="line">运行使用json array 的方式定义多个volume</span><br><span class="line">VOLUME [<span class="string">"/var/data1"</span>,<span class="string">"/var/data2"</span>]</span><br><span class="line">或者plain text 的情况下定义多个VOLUME 指令</span><br></pre></td></tr></table></figure><h3 id="使用Dockerfile-创建基础系统镜像"><a href="#使用Dockerfile-创建基础系统镜像" class="headerlink" title="使用Dockerfile 创建基础系统镜像"></a>使用Dockerfile 创建基础系统镜像</h3><h3 id="使用Dockerfile-创建云盘"><a href="#使用Dockerfile-创建云盘" class="headerlink" title="使用Dockerfile 创建云盘"></a>使用Dockerfile 创建云盘</h3><h4 id="准备需要的文件"><a href="#准备需要的文件" class="headerlink" title="准备需要的文件"></a>准备需要的文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~/dockerfile/kod]<span class="comment"># ls</span></span><br><span class="line">CentOS-Base.repo cloud.conf dockerfile epel.repo init.sh kodexplorer4.40.zip nginx.repo</span><br></pre></td></tr></table></figure><h4 id="编写dockerfile"><a href="#编写dockerfile" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~/dockerfile/kod]<span class="comment"># cat dockerfile</span></span><br><span class="line">FROM centos:latest</span><br><span class="line">ADD CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">ADD epel.repo /etc/yum.repos.d/epel.repo</span><br><span class="line">ADD nginx.repo /etc/yum.repos.d/nginx.repo</span><br><span class="line">RUN yum install nginx php-fpm unzip php-gd php-mbstring -y</span><br><span class="line">RUN rm -rf /etc/nginx/conf.d/default.conf</span><br><span class="line">RUN sed -i <span class="string">'/^user/c user = nginx'</span> /etc/php-fpm.d/www.conf</span><br><span class="line">RUN sed -i <span class="string">'/^group/c group = nginx'</span> /etc/php-fpm.d/www.conf</span><br><span class="line">RUN sed -i <span class="string">'/daemonize/s#no#yes#g'</span> /etc/php-fpm.conf</span><br><span class="line">ADD cloud.conf /etc/nginx/conf.d/cloud.conf</span><br><span class="line">RUN mkdir /code</span><br><span class="line">WORKDIR /code</span><br><span class="line">ADD kodexplorer4.40.zip /code/kodexplorer4.40.zip</span><br><span class="line">RUN unzip kodexplorer4.40.zip</span><br><span class="line">RUN chown -R nginx:nginx .</span><br><span class="line">VOLUME /code</span><br><span class="line">ADD init.sh /init.sh</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD [<span class="string">"/bin/bash"</span>,<span class="string">"/init.sh"</span>]</span><br></pre></td></tr></table></figure><h4 id="构建新镜像"><a href="#构建新镜像" class="headerlink" title="构建新镜像"></a>构建新镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~/dockerfile/kod]<span class="comment"># docker build --network=host -t centos_kod:v1 .</span></span><br><span class="line">[root@docker01 ~/dockerfile/kod]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY TAG IMAGE ID CREATED SIZE</span><br><span class="line">centos_kod v1 87071ea7c86b 2 minutes ago 465MB</span><br></pre></td></tr></table></figure><h4 id="基于新镜像运行容器"><a href="#基于新镜像运行容器" class="headerlink" title="基于新镜像运行容器"></a>基于新镜像运行容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~/dockerfile/kod]<span class="comment"># docker run -d -p 80:80 centos_kod:v1</span></span><br><span class="line">4d1007d7194d434248762e5aca76070206643f0f0f533f2112d0359b25fe7ba0</span><br></pre></td></tr></table></figure><h2 id="Docker-私有仓库"><a href="#Docker-私有仓库" class="headerlink" title="Docker 私有仓库"></a>Docker 私有仓库</h2><h3 id="企业级的docker-harbor"><a href="#企业级的docker-harbor" class="headerlink" title="企业级的docker-harbor"></a>企业级的docker-harbor</h3><h4 id="部署思路"><a href="#部署思路" class="headerlink" title="部署思路"></a>部署思路</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装docker 和docker-compose</span><br><span class="line">第二步：下载harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line">第三步：上传到/opt,并解压</span><br><span class="line">第四步：修改harbor.yml 配置文件hostname = 10.0.0.11 harbor_admin_password = 123456</span><br><span class="line">第五步：执行install.sh</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>1.下载软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://github.com/goharbor/harbor/releases/download/v1.9.3/harbor-offline-installer-v1.9.3.tgz</span><br><span class="line">tar xf harbor-offline-installer-v1.9.0-rc1.tgz</span><br></pre></td></tr></table></figure><p>2.修改配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim harbor.yml </span><br><span class="line">hostname: 10.0.1.5</span><br><span class="line">harbor_admin_password: 123456</span><br></pre></td></tr></table></figure><p>3.下载docker-compose</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-compose -y</span><br></pre></td></tr></table></figure><p>4.安装harbor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><p>5.修改镜像名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag 019a54813db0 10.0.1.51/linux/centos_kod:v1</span><br></pre></td></tr></table></figure><p>6.修改docker配置添加信任仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/docker/daemon.json&lt;&lt;EOF </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://1660dchq.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="string">"insecure-registries"</span>: [<span class="string">"http://10.0.1.51"</span>] </span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>7.docker登录到harbor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login 10.0.1.51</span><br></pre></td></tr></table></figure><p>8.上传镜像到私有仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push 10.0.1.51/linux/centos_kod:v1</span><br></pre></td></tr></table></figure><p>9.客户端使用仓库下载镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:80 -d 10.0.1.51/linux/centos_kod:v1</span><br></pre></td></tr></table></figure><p>10.访问测试</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/f681b4611780d72ab9718e381df5ea17/177D74A8FB504F1DB6D881B13ED113A7?ynotemdtimestamp=1586417471888"  alt="image"></p><h2 id="docker运行zabbix"><a href="#docker运行zabbix" class="headerlink" title="docker运行zabbix"></a>docker运行zabbix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql-server -t \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"zabbix_pwd"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"root_pwd"</span> \</span><br><span class="line">-d mysql:5.7 \</span><br><span class="line">--character-set-server=utf8 --collation-server=utf8_bin</span><br><span class="line"></span><br><span class="line">docker run --name zabbix-server-mysql -t \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span> \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"zabbix_pwd"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"root_pwd"</span> \</span><br><span class="line">--link mysql-server:mysql \</span><br><span class="line">-p 10051:10051 \</span><br><span class="line">-d zabbix/zabbix-server-mysql:latest</span><br><span class="line"></span><br><span class="line">docker run --name zabbix-web-nginx-mysql -t \</span><br><span class="line">-e DB_SERVER_HOST=<span class="string">"mysql-server"</span> \</span><br><span class="line">-e MYSQL_DATABASE=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_USER=<span class="string">"zabbix"</span> \</span><br><span class="line">-e MYSQL_PASSWORD=<span class="string">"zabbix_pwd"</span> \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">"root_pwd"</span> \</span><br><span class="line">--link mysql-server:mysql \</span><br><span class="line">--link zabbix-server-mysql:zabbix-server \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-d zabbix/zabbix-web-nginx-mysql:latest</span><br></pre></td></tr></table></figure><h2 id="docker运行gitlab"><a href="#docker运行gitlab" class="headerlink" title="docker运行gitlab"></a>docker运行gitlab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach \</span><br><span class="line">--hostname 10.0.1.51 \</span><br><span class="line">--publish 443:443 --publish 80:80 --publish 22:22 \</span><br><span class="line">--name gitlab \</span><br><span class="line">--restart always \</span><br><span class="line">--volume /srv/gitlab/config:/etc/gitlab \</span><br><span class="line">--volume /srv/gitlab/logs:/var/<span class="built_in">log</span>/gitlab \</span><br><span class="line">--volume /srv/gitlab/data:/var/opt/gitlab \</span><br><span class="line">gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dokcer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搜索插件</title>
      <link href="/2020/04/09/Hexo%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/04/09/Hexo%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Hexo-Algoliasearch"><a href="#Hexo-Algoliasearch" class="headerlink" title="Hexo-Algoliasearch"></a>Hexo-Algoliasearch</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>一个在Algolia上为Hexo博客的帖子编制索引的插件 ，增加搜索功能。</strong></p><p>你需要安裝 <a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">hexo-algolia</a> 或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch" target="_blank" rel="noopener">hexo-algoliasearch</a>. 根据它们的说明文档去做相应的配置。</p><p><a href="https://puui.qpic.cn/fans_admin/0/3_290186585_1571456373974/0" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://puui.qpic.cn/fans_admin/0/3_290186585_1571456373974/0"  alt="img"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里我们使用 <code>hexo-algoliasearch</code>插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure><p><strong>Hexo自动检测到所有插件 ， 如果不是这种情况，请在您的<code>_config.yml</code>文件中注册插件：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">  - hexo-algoliasearch</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>在<code>_config.yml</code>文件中配置此插件：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  appId: &quot;Application ID 对应的值&quot;</span><br><span class="line">  apiKey: &quot;新建的 api key 对应的值&quot;</span><br><span class="line">  adminApiKey: &quot;***&quot;</span><br><span class="line">  chunkSize: 5000</span><br><span class="line">  indexName: &quot;my-blog&quot;</span><br><span class="line">  fields:</span><br><span class="line">    - content:strip:truncate,0,500</span><br><span class="line">    - excerpt:strip</span><br><span class="line">    - gallery</span><br><span class="line">    - permalink</span><br><span class="line">    - photos</span><br><span class="line">    - slug</span><br><span class="line">    - tags</span><br><span class="line">    - title</span><br><span class="line">    - about</span><br><span class="line">    - categories</span><br><span class="line">    - link</span><br><span class="line">    - movies</span><br><span class="line">    - music</span><br><span class="line">    - _posts</span><br><span class="line">    - messageboard</span><br></pre></td></tr></table></figure><table><thead><tr><th>键</th><th>类型</th><th>默认</th><th>描述</th></tr></thead><tbody><tr><td>appId</td><td>String</td><td></td><td>您的应用程序ID。可选，如果<code>ALGOLIA_APP_ID</code>设置了环境变量</td></tr><tr><td>apiKey</td><td>String</td><td></td><td>您的API密钥（只读）。用于搜索索引。可选，如果<code>ALGOLIA_API_KEY</code>设置了环境变量</td></tr><tr><td>adminApiKey</td><td>String</td><td></td><td>您的adminAPI密钥。它用于创建，删除，更新索引。可选，如果<code>ALGOLIA_ADMIN_API_KEY</code>设置了环境变量</td></tr><tr><td>chunkSize</td><td>Number</td><td>5000</td><td>记录/帖子被分成几块上传。建议使用Algolia以<code>5000</code>获得最佳性能。请注意，如果您要为帖子内容编制索引，则由于篇幅限制，它可能会失败。为了克服这个问题，请减小块的大小，直到通过为止。</td></tr><tr><td>indexName</td><td>String</td><td></td><td>存储帖子的索引名称。可选，如果<code>ALGOLIA_INDEX_NAME</code>设置了环境变量</td></tr><tr><td>fields</td><td>List</td><td></td><td>要索引的字段名称列表。用分隔字段名称和过滤器<code>:</code>。阅读<a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch#filters" target="_blank" rel="noopener">过滤器</a>以获取更多信息</td></tr></tbody></table><h3 id="筛选器"><a href="#筛选器" class="headerlink" title="筛选器"></a>筛选器</h3><p>过滤器使您能够在建立索引之前处理字段的值。过滤器之间用冒号（<code>:</code>）隔开，并且可能具有以逗号（<code>,</code>）分隔的可选参数。可以链接多个过滤器。一个滤波器的输出将应用于下一个。</p><h3 id="过滤器列表："><a href="#过滤器列表：" class="headerlink" title="过滤器列表："></a>过滤器列表：</h3><table><thead><tr><th>过滤</th><th>签名</th><th>句法</th><th>描述</th></tr></thead><tbody><tr><td>跳闸</td><td><code>strip()</code></td><td><code>strip</code></td><td>删除HTML。对于摘录和内容值不索引HTML标签和属性可能很有用。</td></tr><tr><td>截短</td><td><code>truncate(start: number, end: number)</code></td><td><code>truncate,0,300</code></td><td>从<code>start</code>索引到<code>end</code>索引截断字符串。阿尔戈利亚（Algolia）在记录大小方面有一些限制，因此减少帖子内容可能很有用。</td></tr></tbody></table><h4 id="例"><a href="#例" class="headerlink" title="例"></a>例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fields:</span><br><span class="line">  - content:strip:truncate,0,200</span><br></pre></td></tr></table></figure><h3 id="选件"><a href="#选件" class="headerlink" title="选件"></a>选件</h3><table><thead><tr><th>选件</th><th>描述</th></tr></thead><tbody><tr><td>-n，-不清除</td><td>不清除现有索引</td></tr></tbody></table><h2 id="生成索引文件"><a href="#生成索引文件" class="headerlink" title="生成索引文件"></a>生成索引文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><h1 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>你需要安裝 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>. 根據它的文檔去做相應配置。注意格式只支持 xml。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>修改站点配置文件 <code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><p>修改配置文件 <code>butterfly.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#39;t find any results for the search: $&#123;query&#125;&quot; # if there are no result</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Douban 插件</title>
      <link href="/2020/04/09/Hexo-Douban-%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/04/09/Hexo-Douban-%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong><a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">Hexo-Douban</a> —— 一个在 Hexo 页面中嵌入豆瓣个人主页的小插件，能够在Blog同步豆瓣个人主页信息。</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#豆瓣插件</span><br><span class="line">douban:</span><br><span class="line">  user: 150594772  #自己的ID</span><br><span class="line">  builtin: true</span><br><span class="line">  book:</span><br><span class="line">    title: &#39;那些年，看过的书&#39;</span><br><span class="line">    quote: &#39;过去、现在、未来&#39;</span><br><span class="line">  movie:</span><br><span class="line">    title: &#39;那些年，看过的电影&#39;</span><br><span class="line">    quote: &#39;过去、现在、未来&#39;</span><br><span class="line">  game:</span><br><span class="line">    title: &#39;那些年，玩过的游戏&#39;</span><br><span class="line">    quote: &#39;过去、现在、未来&#39;</span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入<code>hexo s</code>和<code>hexo g</code>中，默认是<code>false</code>,另一可选项为<code>true</code>(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="1-x-x版本"><a href="#1-x-x版本" class="headerlink" title="1.x.x版本"></a>1.x.x版本</h3><p>在0.x.x版本中，文章的更新和豆瓣页面的爬取操作是绑定在一起的，无法支持单独更新文章或者单独爬取文章。</p><p>在1.x.x版本中，使用<code>hexo douban</code>命令即可生成指定页面，如果不加参数，那么默认参数为<code>-bgm</code>。</p><p><strong>需要注意的是</strong>，通常大家都喜欢用<code>hexo d</code>来作为<code>hexo deploy</code>命令的简化，但是当安装了<code>hexo douban</code>之后，就不能用<code>hexo d</code>了，因为<code>hexo douban</code>跟<code>hexo deploy</code>的前缀都是<code>hexo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span><br><span class="line">Usage: hexo douban</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Generate pages from douban</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -b, --books   Generate douban books only</span><br><span class="line">  -g, --games   Generate douban games only</span><br><span class="line">  -m, --movies  Generate douban movies only</span><br></pre></td></tr></table></figure><p>如果配置了<code>builtin</code>参数为<code>true</code>，那么除了可以使用<code>hexo douban</code>命令之外，<code>hexo g</code>或<code>hexo s</code>也内嵌了生成页面的功能。</p><h3 id="0-x-x版本"><a href="#0-x-x版本" class="headerlink" title="0.x.x版本"></a>0.x.x版本</h3><p>直接使用命令<code>hexo g</code>即在生成静态页面前爬取豆瓣数据，如果使用<code>hexo s</code>则会监听文件变动，每有一次变动就会重新爬取数据。</p><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>我会不定期更新一些功能或者修改一些Bug，所以如果想使用最新的特性，可以用下面的方法来更新:</p><ol><li>修改package.json内hexo-douban的版本号至最新</li><li>重新安装最新版本<code>npm install hexo-douban --save</code></li></ol><p>或者使用<code>npm install hexo-douban --update --save</code>直接更新。</p><h2 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h2><p>如果上面的配置和操作都没问题，就可以在生成站点之后打开 <code>//yourblog/books</code> 和 <code>//yourblog/movies</code>, <code>//yourblog/games</code>, 来查看结果.</p><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p>如果上面的显示没有问题就可以在主题的配置文件 <code>_config.yml</code> 里添加如下配置来为这些页面添加菜单链接.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: &#x2F;</span><br><span class="line">  Archives: &#x2F;archives</span><br><span class="line">  Books: &#x2F;books     #This is your books page</span><br><span class="line">  Movies: &#x2F;movies   #This is your movies page</span><br><span class="line">  Games: &#x2F;games   #This is your games page</span><br></pre></td></tr></table></figure><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><h3 id="使用效果"><a href="#使用效果" class="headerlink" title="使用效果"></a><strong>使用效果</strong></h3><h4 id="movie"><a href="#movie" class="headerlink" title="movie"></a><a href="https://www.linuxwf.com/movies/" target="_blank" rel="noopener">movie</a></h4><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/CE984752A7D347629C96B0B4BF05C4DC?ynotemdtimestamp=1586414793214"  alt="image"></p><h4 id="book"><a href="#book" class="headerlink" title="book"></a><a href="https://www.linuxwf.com/books/" target="_blank" rel="noopener">book</a></h4><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/1CE66E89BC704F0EAEBA61339157DF26?ynotemdtimestamp=1586414793214"  alt="image"></p><h4 id="game"><a href="#game" class="headerlink" title="game"></a><a href="https://www.linuxwf.com/games/" target="_blank" rel="noopener">game</a></h4><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/0D30C0729F6C4EE0BAF3C984240EC6D0?ynotemdtimestamp=1586414793214"  alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加RSS订阅</title>
      <link href="/2020/04/09/Hexo%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85/"/>
      <url>/2020/04/09/Hexo%E6%B7%BB%E5%8A%A0RSS%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h2><p><strong>hexo博客有一个专门生成RSS xml文件的插件<code>hexo-generator-feed</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><h2 id="启用插件"><a href="#启用插件" class="headerlink" title="启用插件"></a>启用插件</h2><p>在博客工程文件根目录下<code>_config.yml</code>文件中添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">plugins:</span><br><span class="line">    hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">    type: atom</span><br><span class="line">    path: atom.xml</span><br><span class="line">    limit: 20</span><br></pre></td></tr></table></figure><h2 id="生成RSS"><a href="#生成RSS" class="headerlink" title="生成RSS"></a>生成RSS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h2><h3 id="新建订阅"><a href="#新建订阅" class="headerlink" title="新建订阅"></a>新建订阅</h3><p><strong>订阅地址为： <a href="https://www.linuxwf.com/atom.xml" target="_blank" rel="noopener">https://www.linuxwf.com/atom.xml</a> （PS：订阅地址改为自己的博客）</strong></p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/FFF4606B38824B69BDB9DE37C7FB1EAB?ynotemdtimestamp=1586409584945"  alt="image"></p><h3 id="订阅成功"><a href="#订阅成功" class="headerlink" title="订阅成功"></a>订阅成功</h3><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/7829F79D72084FF5BABA1C8FDE298975?ynotemdtimestamp=1586409584945"  alt="image"></p><h3 id="查看邮箱中的博文"><a href="#查看邮箱中的博文" class="headerlink" title="查看邮箱中的博文"></a>查看邮箱中的博文</h3><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/57D60F88CBA44799B3A2EEC1947299CB?ynotemdtimestamp=1586409584945"  alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Aplayer播放器</title>
      <link href="/2020/04/09/Hexo-Aplayer%E6%92%AD%E6%94%BE%E5%99%A8/"/>
      <url>/2020/04/09/Hexo-Aplayer%E6%92%AD%E6%94%BE%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="创建歌单页面"><a href="#创建歌单页面" class="headerlink" title="创建歌单页面"></a>创建歌单页面</h2><p><strong>新建页面，命名为music：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page music</span><br></pre></td></tr></table></figure><p><strong>在 /Hexo/source 文件夹下会生成一个music文件夹，打开里面的index.md，修改：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 那些年，听过的音乐</span><br><span class="line">date: 2019-10-06 15:42:18</span><br><span class="line">type: &quot;music&quot;</span><br><span class="line">top_img: https:&#x2F;&#x2F;p.pstatp.com&#x2F;origin&#x2F;fe8c0000ded87ed2cd73</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>打开主题的 _config.yml文件，在menu下新建一个名为playlist的类（注意这里使用的图标是图标库中的<a href="http://www.fontawesome.com.cn/faicons/" target="_blank" rel="noopener">图标</a>。可以选择自己喜欢的图标，我这里选择的是music）。完成后如下所示：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: &#x2F; || fa fa-home</span><br><span class="line">  时间轴: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  标签: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  分类: &#x2F;categories&#x2F; || fa fa-folder-open</span><br><span class="line">  清单||fa-fw fa fa-heartbeat:</span><br><span class="line">    - 音乐 || &#x2F;music&#x2F; || fa fa-music</span><br><span class="line">    - 电影 || &#x2F;movies&#x2F; || fa fa-film</span><br><span class="line">    - 书籍 || &#x2F;books&#x2F; || fa fa-book</span><br><span class="line">    - Game || &#x2F;games&#x2F; || fa fa-gamepad</span><br><span class="line">  友链: &#x2F;link&#x2F; || fa fa-link</span><br><span class="line">  留言板: &#x2F;messageboard&#x2F; || fa-fw fa fa-coffee</span><br><span class="line">  关于: &#x2F;about&#x2F; || fa fa-heart</span><br></pre></td></tr></table></figure><h2 id="使用-hexo-tag-aplayer-插件"><a href="#使用-hexo-tag-aplayer-插件" class="headerlink" title="使用 hexo-tag-aplayer 插件"></a>使用 hexo-tag-aplayer 插件</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>最新版的 hexo-tag-aplayer 已经支持了MetingJS的使用，可以直接解析网络平台的歌曲，首先要在站点配置文件中开启meting模式，添加以下代码在配置文件的最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure><p>复制歌单的链接，然后复制歌单的id，例如 <code>http://music.163.com/playlist/967120942/624741809/?userid=624741809</code>这个歌单的id就是967120942，公司名可以是tencent、netease或是其他公司，下面给出一个例子，打开source/music/index.md文件，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;967120942&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a><a href="https://www.gz1903.club/music/" target="_blank" rel="noopener">演示</a></h3><p><a href="https://ae01.alicdn.com/kf/Hcdef1c4c28324e1c8a8f9a68478628c7z.png" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://ae01.alicdn.com/kf/Hcdef1c4c28324e1c8a8f9a68478628c7z.png"  alt="img"></a></p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><h2 id="标签参数"><a href="#标签参数" class="headerlink" title="标签参数"></a>标签参数</h2><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width:xxx</code>: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc:xxx</code>: （可选）歌词文件 URL 地址</li></ul><p>当开启 Hexo 的 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#文章资源文件夹" target="_blank" rel="noopener">文章资源文件夹</a> 功能时，可以将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><h2 id="歌词标签"><a href="#歌词标签" class="headerlink" title="歌词标签"></a>歌词标签</h2><p>除了使用标签 <code>lrc</code> 选项来设定歌词，你也可以直接使用 <code>aplayerlrc</code> 标签来直接插入歌词文本在博客中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlrc &quot;title&quot; &quot;author&quot; &quot;url&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">[00:00.00]lrc here</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure><h2 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,                          &#x2F;&#x2F; （可选）播放器袖珍风格</span><br><span class="line">    &quot;autoplay&quot;: true,                         &#x2F;&#x2F; （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,                         &#x2F;&#x2F; （可选）曲目循环类型，有 &#39;random&#39;（随机播放）, &#39;single&#39; (单曲播放), &#39;circulation&#39; (循环播放), &#39;order&#39; (列表播放)， 默认：&#39;circulation&#39; </span><br><span class="line">    &quot;showlrc&quot;: 3,                             &#x2F;&#x2F; （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="line">    &quot;mutex&quot;: true,                            &#x2F;&#x2F; （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;,                      &#x2F;&#x2F; （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,                    &#x2F;&#x2F; （可选）音乐文件预载入模式，可选项： &#39;none&#39; &#39;metadata&#39; &#39;auto&#39;, 默认: &#39;auto&#39;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,                 &#x2F;&#x2F; (可选) 该播放列表的最大长度</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><h2 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h2><p><a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a> 是基于<a href="https://github.com/metowolf/Meting" target="_blank" rel="noopener">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure><p>接着就可以通过``</p><p>在文章中使用 MetingJS 播放器了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 简单示例 (id, server, type)  --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 进阶示例 --&gt;</span><br><span class="line">&#123;% meting &quot;60198&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><p>有关``</p><p>的选项列表如下:</p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table><p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#自定义配置30-新功能" target="_blank" rel="noopener">自定义配置</a></p><h3 id="PJAX-兼容"><a href="#PJAX-兼容" class="headerlink" title="PJAX 兼容"></a>PJAX 兼容</h3><p>若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(document).on(&#39;pjax:start&#39;, function () &#123;</span><br><span class="line">    if (window.aplayers) &#123;</span><br><span class="line">        for (let i &#x3D; 0; i &lt; window.aplayers.length; i++) &#123;</span><br><span class="line">            window.aplayers[i].destroy();</span><br><span class="line">        &#125;</span><br><span class="line">        window.aplayers &#x3D; [];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="自定义配置（3-0-新功能）"><a href="#自定义配置（3-0-新功能）" class="headerlink" title="自定义配置（3.0 新功能）"></a>自定义配置（3.0 新功能）</h2><p>现在你可以在 Hexo 配置文件 <code>_config.yml</code> 中配置本插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  script_dir: some&#x2F;place                        # Public 目录下脚本目录路径，默认: &#39;assets&#x2F;js&#39;</span><br><span class="line">  style_dir: some&#x2F;place                         # Public 目录下样式目录路径，默认: &#39;assets&#x2F;css&#39;</span><br><span class="line">  cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  style_cdn: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span><br><span class="line">  meting: true                                  # MetingJS 支持</span><br><span class="line">  meting_api: http:&#x2F;&#x2F;xxx&#x2F;api.php                # 自定义 Meting API 地址</span><br><span class="line">  meting_cdn: http:&#x2F;&#x2F;xxx&#x2F;Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)</span><br><span class="line">  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span><br><span class="line">  externalLink: http:&#x2F;&#x2F;xxx&#x2F;aplayer.min.js       # 老版本参数，功能与参数 cdn 相同</span><br></pre></td></tr></table></figure><h2 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h2><h3 id="标签参数空格问题"><a href="#标签参数空格问题" class="headerlink" title="标签参数空格问题"></a>标签参数空格问题</h3><p>在 Hexo 标签中，用户可能无法直接在标签参数中<a href="https://github.com/hexojs/hexo/issues/1455" target="_blank" rel="noopener">加入空格</a></p><p>如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;autoplay&quot; &quot;width:70%&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure><h3 id="重复载入-Aplayer-js-资源脚本问题"><a href="#重复载入-Aplayer-js-资源脚本问题" class="headerlink" title="重复载入 Aplayer.js 资源脚本问题"></a>重复载入 Aplayer.js 资源脚本问题</h3><p>本插件通过 <code>after_render:html</code>过滤器 , 将 <code>APlayer.js</code> 和 <code>Meting.js</code> 插入到使用了本插件标签 的 HTML 文件中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;script src&#x3D;&quot;assets&#x2F;js&#x2F;aplayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;assets&#x2F;js&#x2F;meting.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>但是 <code>after_render:html</code> 在一些情形下可能无法被正常触发:</p><ul><li><a href="https://github.com/hexojs/hexo-inject/issues/1" target="_blank" rel="noopener">Does not work with hexo-renderer-jade</a></li><li><code>after_render:html</code> 似乎在 Hexo 服务器模式默认配置中无法被调用 (<code>hexo server</code>), 遇到这种情况用户可能需要使用 <code>hexo-server</code> 的静态文件解析模式 ( <code>hexo server -s</code>) .</li></ul><p>如果在博客生成过程中，插件发现 <code>after_render:html</code> 没有被调用，那么插件将会通过 <code>after_post_render</code> 过滤器来植入脚本。但是使用 <code>after_post_render</code> 会有重复载入 <code>APlayer.js</code> 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。</p><p>如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 <code>Aplayer.js</code> 与 <code>Meting.js</code>，同时关闭插件的自动脚本插入功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  asset_inject: false</span><br></pre></td></tr></table></figure><h1 id="我的配置"><a href="#我的配置" class="headerlink" title="我的配置"></a>我的配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 那些年，听过的音乐</span><br><span class="line">date: 2020-04-08 11:05:43</span><br><span class="line">type: &quot;music&quot;</span><br><span class="line">top_img: https:&#x2F;&#x2F;p.pstatp.com&#x2F;origin&#x2F;fe8c0000ded87ed2cd73</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 那些年，听过的音乐</span><br><span class="line"></span><br><span class="line">一习清风两行泪，</span><br><span class="line"></span><br><span class="line">三线四弦不成诗，</span><br><span class="line"></span><br><span class="line">借问江湖泣花调，</span><br><span class="line"></span><br><span class="line">为谁飘浪为谁痴？</span><br><span class="line"></span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10&#x2F;dist&#x2F;APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer@1.10&#x2F;dist&#x2F;APlayer.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;meting@1.2&#x2F;dist&#x2F;Meting.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% meting &quot;405179499&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Valine Admin 留言板</title>
      <link href="/2020/04/09/Valine-Admin-%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>/2020/04/09/Valine-Admin-%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>此项目是一个对 <a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 评论系统的拓展应用，可增强 <code>Valine</code> 的邮件通知功能。基于 Leancloud 的云引擎与云函数。可以提供邮件 <code>通知站长</code> 和 <code>@ 通知</code> 的功能，而且还支持自定义邮件通知模板。</p><p><a href="https://github.com/zhaojun1998/Valine-Admin/blob/master/高级配置.md#邮件通知展示" target="_blank" rel="noopener">点击查看演示</a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>Valine官方提供的邮件提醒功能是基于<code>Leancloud的密码重置邮件提醒</code>，操作步骤如下：</p><p>进入<code>Leancloud</code>&gt;选择你的评论所存放的<code>应用</code>&gt;<code>设置</code>&gt;<code>邮件模板</code>，按下图设置好用于<code>重置密码</code>的邮件主题&gt;然后保存:</p><p>修改邮件主题：<code>你在 的评论收到了新的评论</code></p><p>修改内容：将下面的代码复制到“内容”中，并将其中的<code>你的网址首页链接</code>改为你的网址首页链接。</p><p><a href="https://pic.superbed.cn/item/5da937ec451253d178246518.png" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://pic.superbed.cn/item/5da937ec451253d178246518.png"  alt="img"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href&#x3D;&quot;你的网址首页链接&quot; style&#x3D;&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>点击“保存”按钮</p><p>修改<strong>主题配置文件</strong>搜索<code>valine</code>（快速定位），将其中的<code>false</code>改为<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # if you want use valine,please set this value is true</span><br><span class="line">  appId:    # leancloud application app id</span><br><span class="line">  appKey:    # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true&#x2F;false) https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: true # valine verify code (true&#x2F;false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: zh-cn # i18n: zh-cn&#x2F;en</span><br><span class="line">  placeholder: Please leave your footprints # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header info</span><br><span class="line">  bg: &#x2F;img&#x2F;comment_bg.png  # valine background</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>发送次数过多，可能会暂时被Leancloud 屏蔽邮件发送功能</li><li>由于<code>邮件提醒</code>功能使用的<code>Leancloud的密码重置邮件提醒</code>，只能传递<code>昵称</code>、<code>邮箱</code>两个属性，所以邮件提醒链接<code>无法直达指定文章页</code>。<strong>请悉知</strong>。</li><li>开启<code>邮件提醒</code>会默认开启<code>验证码</code>选项。</li><li>该功能目前还在测试阶段，谨慎使用。</li><li>目前<code>邮件提醒</code>正处于测试阶段，仅在<code>子级</code>对存在邮件地址的<code>父级</code>发表评论时发送邮件</li></ul><h2 id="第三方支持"><a href="#第三方支持" class="headerlink" title="第三方支持"></a>第三方支持</h2><p>这里重点讲一下第三方<code>邮件提醒</code>：<a href="https://github.com/zhaojun1998/Valine-Admin" target="_blank" rel="noopener">Valine-Admin</a></p><p>这也先需要将Valine的评论功能成功跑起来。</p><p>然后进入 <a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">Leancloud</a> 对应的 Valine 应用中。</p><p>点击 <code>云引擎 -&gt; 设置</code> 填写代码库并保存：<code>https://github.com/zhaojun1998/Valine-Admin</code></p><p><a href="https://p.pstatp.com/origin/ff4700010297073dbed1" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff4700010297073dbed1"  alt="img"></a></p><p>切换到部署标签页，分支使用 master，点击部署即可：</p><p><a href="https://p.pstatp.com/origin/fe8000017fb250d16a0f" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe8000017fb250d16a0f"  alt="img"></a></p><p><a href="https://p.pstatp.com/origin/ff6f00007bb410dac4c1" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff6f00007bb410dac4c1"  alt="img"></a></p><p>设置云引擎的环境变量</p><p><a href="https://p.pstatp.com/origin/ff250000ea6543063008" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff250000ea6543063008"  alt="img"></a></p><p><strong>必选参数</strong></p><ul><li><code>SITE_NAME</code> : 网站名称。</li><li><code>SITE_URL</code> : 网站地址, <strong>最后不要加 / 。</strong></li><li><code>SMTP_USER</code> : SMTP 服务用户名，一般为邮箱地址。</li><li><code>SMTP_PASS</code> : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式</li><li><code>SMTP_SERVICE</code> : 邮件服务提供商，支持 <code>QQ</code>、<code>163</code>、<code>126</code>、<code>Gmail</code>、<code>&quot;Yahoo&quot;</code>、<code>......</code> ，全部支持请参考 : <a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">Nodemailer Supported services</a>。 — <em>如这里没有你使用的邮件提供商，请查看自定义邮件服务器</em></li><li><code>SENDER_NAME</code> : 寄件人名称。</li></ul><p>由于我使用的是我自己的企业邮箱，所以这边的<code>SMTP_SERVICE</code>就不适用了，需要用这三个参数替换：<code>SMTP_HOST</code>、<code>SMTP_PORT</code>、<code>SMTP_SECURE</code>。</p><p>详细说明如下：</p><ul><li><code>SMTP_HOST</code> : 邮件服务提供商 SMTP 地址，如 qq : <code>smtp.qq.com</code>，<em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_PORT</code> : 邮件服务提供商 SMTP 端口, <em>此项需要自行查询或询问其服务商</em>。</li><li><code>SMTP_SECURE</code> : 是否启用加密, 默认为 <code>true</code>，一般不需要设置，如有特殊请自行配置。 <em>此项需要自行查询或询问其服务商</em>。</li></ul><p>如果也同我一样使用阿里云企业邮箱，<code>SMTP_HOST</code>、<code>SMTP_PORT</code>、<code>SMTP_SECURE</code>可以照我的写。</p><p>可以看到上图中，我的自定义环境变量还多了2个，分别是：</p><ul><li><code>TO_EMAIL</code>：这个是填收邮件提醒的邮箱地址，若没有这个字段，则将邮件发到<code>SMTP_USER</code>。</li><li><code>TEMPLATE_NAME</code>：设置提醒邮件的主题，目前内置了两款主题，分别为 <code>default</code> 与 <code>rainbow</code>。默认为 <code>default</code> 。</li></ul><h2 id="Web-评论管理"><a href="#Web-评论管理" class="headerlink" title="Web 评论管理"></a>Web 评论管理</h2><p>此项目还为 Valine 提供了更方便的评论管理功能，可以在 web 端对评论进行查看与删除操作。配置方式如下。</p><p><a href="https://p.pstatp.com/origin/fff900005d904ddf81b4" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fff900005d904ddf81b4"  alt="img"></a></p><p>后台登录需要账号密码，需要在这里设置，只需要填写 <code>email</code>、<code>password</code>、<code>username</code>，这三个字段即可, 使用 <code>email</code> 作为账号登陆即可。（为了安全考虑，此 <code>email</code> 必须为配置中的 <code>SMTP_USER</code> 或 <code>TO_EMAIL</code>， 否则不允许登录）</p><p><a href="https://p.pstatp.com/origin/fec100008805cbf4cedf" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fec100008805cbf4cedf"  alt="img"></a></p><blockquote><p>Web 后台目前仅有 <code>查看</code> 与 <code>删除</code> 功能</p></blockquote><h2 id="LeanCloud-休眠策略"><a href="#LeanCloud-休眠策略" class="headerlink" title="LeanCloud 休眠策略"></a>LeanCloud 休眠策略</h2><p>免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行：</p><ul><li>每天必须休眠 6 个小时</li><li>30 分钟内没有外部请求，则休眠。</li><li>休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。</li></ul><p>分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。</p><p>附 <code>Linux crontab</code> 定时器代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#x2F;20 7-23 * * * curl https:&#x2F;&#x2F;你配置的域名前缀.leanapp.cn</span><br></pre></td></tr></table></figure><blockquote><p>注意, LeanCloud 最近更新了定时器校验规则, 需要将 Cron 表达式写为: <code>0 */20 7-23 * * ?</code> </p></blockquote><p><strong>更新新版本与更改环境变量均需要重启容器后生效。</strong></p><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><p><a href="https://p.pstatp.com/origin/fe6700008710c45106bb" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe6700008710c45106bb"  alt="img"></a></p><h2 id="邮件通知展示"><a href="#邮件通知展示" class="headerlink" title="邮件通知展示"></a>邮件通知展示</h2><p><strong>游客 A 评论，站长收到邮件 :</strong></p><p>( <code>rainbow</code> 主题)</p><p><a href="https://p.pstatp.com/origin/ffef0000307de5ccb4ca" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ffef0000307de5ccb4ca"  alt="img"></a></p><p><strong>游客被 @ 收到的邮件 :</strong></p><p><a href="https://p.pstatp.com/origin/fe9a0000ed17a41e8325" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe9a0000ed17a41e8325"  alt="img"></a></p><blockquote><p><code>rainbow</code> 彩虹主题</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加Live2d看板动画效果</title>
      <link href="/2020/04/09/Hexo%E6%B7%BB%E5%8A%A0Live2d%E7%9C%8B%E6%9D%BF%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
      <url>/2020/04/09/Hexo%E6%B7%BB%E5%8A%A0Live2d%E7%9C%8B%E6%9D%BF%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>Hexo是一个快速、简洁且高效的博客框架，能够快速生成静态页面，只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站，支持 GitHub Flavored Markdown 的所有功能，同时还拥有强大的插件系统。</p><p><a href="https://p.pstatp.com/origin/fe4a0000a08fd0c13898" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe4a0000a08fd0c13898"  alt="img"></a></p><p>为增添页面趣味性，这次主要介绍 <strong>Hexo</strong> 添加Live2d看板动画效果。</p><h1 id="添加Live2d看板动画"><a href="#添加Live2d看板动画" class="headerlink" title="添加Live2d看板动画"></a>添加Live2d看板动画</h1><p><a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">看板动画</a></p><p>站点根目录下载插件，安装成功后，你可以在你的站点根文件夹<code>/node_modules/</code>底下找到<code>live2d-widget</code>这个文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装你想要的live2d动画人物，这里选择 <code>live2d-widget-model-koharu</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>在站点根目录下<code>_config.yml</code>添加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#live2d看板动画</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  log: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-koharu</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 100</span><br><span class="line">    vOffset: -50</span><br><span class="line">  mobile:</span><br><span class="line">    show: true </span><br><span class="line">    scale: 0.5</span><br><span class="line">react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure><h1 id="本地预览效果"><a href="#本地预览效果" class="headerlink" title="本地预览效果"></a>本地预览效果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h1 id="Live2d各个模型："><a href="#Live2d各个模型：" class="headerlink" title="Live2d各个模型："></a>Live2d各个模型：</h1><h2 id="live2d-widget-model-chitose"><a href="#live2d-widget-model-chitose" class="headerlink" title="live2d-widget-model-chitose"></a>live2d-widget-model-chitose</h2><p><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe4a0000a08d891a1549"  alt="img"></p><h2 id="live2d-widget-model-epsilon2-1"><a href="#live2d-widget-model-epsilon2-1" class="headerlink" title="live2d-widget-model-epsilon2_1"></a>live2d-widget-model-epsilon2_1</h2><p><a href="https://p.pstatp.com/origin/fed40000cc5a743e5149" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fed40000cc5a743e5149"  alt="img"></a></p><h2 id="live2d-widget-model-haru-01"><a href="#live2d-widget-model-haru-01" class="headerlink" title="live2d-widget-model-haru_01"></a>live2d-widget-model-haru_01</h2><p><a href="https://p.pstatp.com/origin/ff710000a431bce325bb" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff710000a431bce325bb"  alt="img"></a></p><h2 id="live2d-widget-model-haru-02"><a href="#live2d-widget-model-haru-02" class="headerlink" title="live2d-widget-model-haru_02"></a>live2d-widget-model-haru_02</h2><p><a href="https://p.pstatp.com/origin/ffd400009132cc544f22" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ffd400009132cc544f22"  alt="img"></a></p><h2 id="live2d-widget-model-haruto"><a href="#live2d-widget-model-haruto" class="headerlink" title="live2d-widget-model-haruto"></a>live2d-widget-model-haruto</h2><p><a href="https://p.pstatp.com/origin/ff7c00005b37bf013a3c" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff7c00005b37bf013a3c"  alt="img"></a></p><h2 id="live2d-widget-model-koharu"><a href="#live2d-widget-model-koharu" class="headerlink" title="live2d-widget-model-koharu"></a>live2d-widget-model-koharu</h2><p><a href="https://p.pstatp.com/origin/ffaf00008314d58db851" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ffaf00008314d58db851"  alt="img"></a></p><h2 id="live2d-widget-model-hibiki"><a href="#live2d-widget-model-hibiki" class="headerlink" title="live2d-widget-model-hibiki"></a>live2d-widget-model-hibiki</h2><p><a href="https://p.pstatp.com/origin/ff3000005d80a386f62a" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff3000005d80a386f62a"  alt="img"></a></p><h2 id="live2d-widget-model-miku"><a href="#live2d-widget-model-miku" class="headerlink" title="live2d-widget-model-miku"></a>live2d-widget-model-miku</h2><p><a href="https://p.pstatp.com/origin/ff3d000080e58996f61a" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff3d000080e58996f61a"  alt="img"></a></p><h2 id="live2d-widget-model-hijiki"><a href="#live2d-widget-model-hijiki" class="headerlink" title="live2d-widget-model-hijiki"></a>live2d-widget-model-hijiki</h2><p><a href="https://p.pstatp.com/origin/fe73000080c3e97be163" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe73000080c3e97be163"  alt="img"></a></p><h2 id="live2d-widget-model-tororo"><a href="#live2d-widget-model-tororo" class="headerlink" title="live2d-widget-model-tororo"></a>live2d-widget-model-tororo</h2><p><a href="https://p.pstatp.com/origin/fff700008b02b33ba68f" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fff700008b02b33ba68f"  alt="img"></a></p><h2 id="live2d-widget-model-izumi"><a href="#live2d-widget-model-izumi" class="headerlink" title="live2d-widget-model-izumi"></a>live2d-widget-model-izumi</h2><p><a href="https://p.pstatp.com/origin/fe9500010f2eb3e81fce" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe9500010f2eb3e81fce"  alt="img"></a></p><h2 id="live2d-widget-model-nico"><a href="#live2d-widget-model-nico" class="headerlink" title="live2d-widget-model-nico"></a>live2d-widget-model-nico</h2><p><a href="https://p.pstatp.com/origin/ff4300012a0d2fd26fe0" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff4300012a0d2fd26fe0"  alt="img"></a></p><h2 id="live2d-widget-model-nietzsche"><a href="#live2d-widget-model-nietzsche" class="headerlink" title="live2d-widget-model-nietzsche"></a>live2d-widget-model-nietzsche</h2><p><a href="https://p.pstatp.com/origin/dc0e0003fe591e30be22" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/dc0e0003fe591e30be22"  alt="img"></a></p><h2 id="live2d-widget-model-ni-j"><a href="#live2d-widget-model-ni-j" class="headerlink" title="live2d-widget-model-ni-j"></a>live2d-widget-model-ni-j</h2><p><a href="https://p.pstatp.com/origin/ff2a00009569ea4124da" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff2a00009569ea4124da"  alt="img"></a></p><h2 id="live2d-widget-model-nipsilon"><a href="#live2d-widget-model-nipsilon" class="headerlink" title="live2d-widget-model-nipsilon"></a>live2d-widget-model-nipsilon</h2><p><a href="https://p.pstatp.com/origin/ff9100008f839fa2b69f" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff9100008f839fa2b69f"  alt="img"></a></p><h2 id="live2d-widget-model-nito"><a href="#live2d-widget-model-nito" class="headerlink" title="live2d-widget-model-nito"></a>live2d-widget-model-nito</h2><p><a href="https://p.pstatp.com/origin/ff920000e23707f31859" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff920000e23707f31859"  alt="img"></a></p><h2 id="live2d-widget-model-shizuku"><a href="#live2d-widget-model-shizuku" class="headerlink" title="live2d-widget-model-shizuku"></a>live2d-widget-model-shizuku</h2><p><a href="https://p.pstatp.com/origin/ff2000007cf8512db0cb" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/ff2000007cf8512db0cb"  alt="img"></a></p><h2 id="live2d-widget-model-tsumiki"><a href="#live2d-widget-model-tsumiki" class="headerlink" title="live2d-widget-model-tsumiki"></a>live2d-widget-model-tsumiki</h2><p><a href="https://p.pstatp.com/origin/fffb00003b22de60ed66" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fffb00003b22de60ed66"  alt="img"></a></p><h2 id="live2d-widget-model-unitychan"><a href="#live2d-widget-model-unitychan" class="headerlink" title="live2d-widget-model-unitychan"></a>live2d-widget-model-unitychan</h2><p><a href="https://p.pstatp.com/origin/dc10000289606c5ec97d" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/dc10000289606c5ec97d"  alt="img"></a></p><h2 id="live2d-widget-model-gf"><a href="#live2d-widget-model-gf" class="headerlink" title="live2d-widget-model-gf"></a>live2d-widget-model-gf</h2><p><a href="https://p.pstatp.com/origin/10000000039a141fd6695" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/10000000039a141fd6695"  alt="img"></a></p><h2 id="live2d-widget-model-wanko"><a href="#live2d-widget-model-wanko" class="headerlink" title="live2d-widget-model-wanko"></a>live2d-widget-model-wanko</h2><p><a href="https://p.pstatp.com/origin/fead00009151e943e78c" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fead00009151e943e78c"  alt="img"></a></p><h2 id="live2d-widget-model-z16"><a href="#live2d-widget-model-z16" class="headerlink" title="live2d-widget-model-z16"></a>live2d-widget-model-z16</h2><p>[<img src="/" class="lazyload" data-src="https://p.pstatp.com/origin/fe3200011fc5d922916c"  alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/2020/04/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/04/09/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>官方文档：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><p>Node.js (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本)</p></li><li><p>Git</p></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo<br>步骤。如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install git </span><br><span class="line">git config --global user.name &quot;你的账号&quot; </span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>#下载地址 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.16.1&#x2F;node-v12.16.1-linux-x64.tar.xz </span><br><span class="line"></span><br><span class="line">#解压 tar xf</span><br><span class="line">node-v12.16.1-linux-x64.tar.xz -C &#x2F;usr&#x2F;local&#x2F; </span><br><span class="line"></span><br><span class="line">#配置软连接 </span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F; </span><br><span class="line">ln -s node-v12.16.1-linux-x64 node </span><br><span class="line">echo &#39;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;node&#x2F;bin:\$PATH&#39; &gt;&gt; &#x2F;etc&#x2F;profile </span><br><span class="line">source &#x2F;etc&#x2F;profile </span><br><span class="line"></span><br><span class="line">#查看版本 </span><br><span class="line">node -v </span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p><strong>进阶安装和使用</strong></p><p>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p><strong>安装以后，可以使用以下两种方式执行 Hexo：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.npx hexo &lt;command&gt;</span><br><span class="line"></span><br><span class="line">2.将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo &lt;command&gt;：</span><br><span class="line">echo &#39;PATH&#x3D;&quot;$PATH:.&#x2F;node_modules&#x2F;.bin&quot;&#39; &gt;&gt; ~&#x2F;.profile</span><br></pre></td></tr></table></figure><p>安装完hexo框架，就可以开始初始化hexo了，选择一个目录存放你的博客文件，切换到目录。接着，输入</p><p>hexo init blog  进行初始化hexo</p><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init my_blog</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/918E35C5FCE94037996AB964900E86DF?ynotemdtimestamp=1586399922554"  alt="clipboard.png"></p><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;my_blog</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds </span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><table><thead><tr><th>文件/文件夹</th><th>说明</th></tr></thead><tbody><tr><td>_config.yml</td><td>配置文件</td></tr><tr><td>public</td><td>生成的静态文件，这个目录最终会发布到服务器</td></tr><tr><td>scaffolds</td><td>一些通用的markdown模板</td></tr><tr><td>source</td><td>编写的markdown文件，_drafts草稿文件，_posts发布的文章</td></tr><tr><td>themes</td><td>主题文件夹。Hexo 会根据主题来生成静态页面。</td></tr></tbody></table><p>Hexo会根据主题来生成静态页面。</p><p>清除缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>后台运行hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2 </span><br><span class="line"></span><br><span class="line">vi run.js</span><br><span class="line">&#x2F;&#x2F;run.js</span><br><span class="line">const &#123; exec &#125; &#x3D; require(&#39;child_process&#39;)</span><br><span class="line">exec(&#39;hexo server&#39;,(error, stdout, stderr) &#x3D;&gt; &#123;</span><br><span class="line">  if(error)&#123;</span><br><span class="line">    console.log(&#96;exec error: $&#123;error&#125;&#96;)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(&#96;stdout: $&#123;stdout&#125;&#96;);</span><br><span class="line">  console.log(&#96;stderr: $&#123;stderr&#125;&#96;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">#进入博客根目录,运行脚本</span><br><span class="line">pm2 start run.js</span><br></pre></td></tr></table></figure><h1 id="访问hexo"><a href="#访问hexo" class="headerlink" title="访问hexo"></a>访问hexo</h1><p><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/27E3E612F4E2450884AF96DE903886B2?ynotemdtimestamp=1586399922554"  alt="clipboard.png"></p><h1 id="GitHub的配置与访问"><a href="#GitHub的配置与访问" class="headerlink" title="GitHub的配置与访问"></a>GitHub的配置与访问</h1><p>上面已经搭建完成了基础环境，下面我们想要在互联网上可以随意访问个人的博客，但是我们当下没有自己的服务器和相应的外网IP地址，对此，这里我们采用GitHub的方式进行发布自己的个人博客。</p><p>前提条件自己需要去<a href="https://github.com/官网进行注册一个账号" target="_blank" rel="noopener">https://github.com/官网进行注册一个账号</a></p><p>在该账号下创建一个项目，该项目名称命名方式要遵循以下格式：</p><p>hexo的个人博客名称（也是自己以后访问使用的域名）.github.io</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/75D7472C2C9D4F678633E59CD843D1F7?ynotemdtimestamp=1586399922554"  alt="clipboard.png"></p><p>切换到自己的服务器中，在~目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的github中设置的邮箱&quot;</span><br></pre></td></tr></table></figure><p>建议在设置ssh的秘钥时设置一个证书密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat .ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>将上面查看的所有信息复制一份放到GitHub上面</p><p><img src="/" class="lazyload" data-src="https://note.youdao.com/yws/public/resource/0a4c7f6e5952926d5443d353067af10b/EBE5D437E63D4D8DA789D9A84F46E4D1?ynotemdtimestamp=1586399922554"  alt="clipboard.png"></p><p>在服务器中进行执行以下命令进行测试ssh直连是否可用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>这里在执行时会让输入一个密码，这个密码就是上面证书设置的密码，如果上面没有设置密码，则这里直接免密连接。</p><p>连接成功会打印一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hi cnHuaShao! You&#39;ve successfully authenticated, but GitHub does not provide</span><br><span class="line">shell access.</span><br></pre></td></tr></table></figure><h1 id="hexo的git基础管理工具"><a href="#hexo的git基础管理工具" class="headerlink" title="hexo的git基础管理工具"></a>hexo的git基础管理工具</h1><p>#安装基础的管理软件 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;my_blog </span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h1 id="设置hexo项目提交位置"><a href="#设置hexo项目提交位置" class="headerlink" title="设置hexo项目提交位置"></a>设置hexo项目提交位置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;你的hexo项目名</span><br><span class="line">vim _config.yml</span><br><span class="line">#翻到最底部，设置以下内容,:wq保存并退出</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;你的GitHub的名称&#x2F;上面设置的名称.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><strong>注：在提交的过程中会让输入GitHub的账号密码，如果想不输入账号密码，则把repo更改为ssh地址</strong></p><h1 id="清理缓存，重新生成静态文件并部署"><a href="#清理缓存，重新生成静态文件并部署" class="headerlink" title="清理缓存，重新生成静态文件并部署"></a>清理缓存，重新生成静态文件并部署</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h1 id="安装hexo-admin后台"><a href="#安装hexo-admin后台" class="headerlink" title="安装hexo-admin后台"></a>安装hexo-admin后台</h1><p>首先进入hexo创建的博客项目的根目录下，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><p>mac可能需要root权限，前面加个sudo就可以了。如果报错缺少组件，则缺少什么安装什么，npm install 加缺少的组件。</p><p>运行下列命令启动hexo-admin ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -d</span><br></pre></td></tr></table></figure><p>打开 <a href="http://localhost:4000/admin/" target="_blank" rel="noopener">http://localhost:4000/admin/</a> 就可以访问到hexo-admin管理页面了。</p><p>密码保护</p><p>打开setting，点击Setup authentification<br>here输入用户名，密码，密钥，下面会自动生成配置文件，复制加在hexo根目录下的_config.yml中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin:</span><br><span class="line">  username: xxx</span><br><span class="line">  password_hash: xxx</span><br><span class="line">  secret: xxx</span><br><span class="line">  deployCommand: .&#x2F;admin_script&#x2F;hexo-d.sh</span><br></pre></td></tr></table></figure><p>重启hexo，就可以看到登录页面了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly 安裝文檔（三）主題配置</title>
      <link href="/2020/04/08/exo-theme-butterfly-%E5%AE%89%E8%A3%9D%E6%96%87%E6%AA%94%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%BB%E9%A1%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/04/08/exo-theme-butterfly-%E5%AE%89%E8%A3%9D%E6%96%87%E6%AA%94%EF%BC%88%E4%B8%89%EF%BC%89%E4%B8%BB%E9%A1%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本文章转载自<a href="https://jerryc.me/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC%E9%AB%98%E4%BA%AE%E4%B8%BB%E9%A1%8C" target="_blank" rel="noopener">https://jerryc.me/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC%E9%AB%98%E4%BA%AE%E4%B8%BB%E9%A1%8C</a></p><div id="article-container"><div class="note danger"><p>本教程更新於 2020 年 03 月 28 日<br>Butterfly 已經升級到 V2.2.5<br>為了方便我回復大家的問題和集中管理，此文章的評論關閉。<br>如有跟主題相關的問題，可以在 <a href="https://github.com/jerryc127/hexo-theme-butterfly/issues" target="_blank" rel="external nofollow noreferrer noopener">Github Issues</a> 或者<a href="https://jerryc.me/messageboard/" target="_blank" rel="noopener">留言板</a>上反饋 / 詢問</p></div><div class="note info"><p>關於主題自定義的問題，建議仔細觀察主題代碼的寫法，自己動手操作，不懂的可以 <a href="https://www.google.com/" target="_blank" rel="external nofollow noreferrer noopener">Google</a>，我不一定會回答你的問題，請見諒。</p><p>很多人希望能有交流平台可以進行討論。因此，我開通了一個 QQ 群，有興趣的可以加入。<br><a href="https://jq.qq.com/?_wv=1027&amp;k=5W4yhdT" target="_blank" rel="external nofollow noreferrer noopener">QQ 群連接</a></p></div><div class="note primary"><p>文檔目錄<br><a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">快速開始</a><br><a href="https://jerryc.me/posts/dc584b87/" target="_blank" rel="noopener">主題頁面</a><br><a href="https://jerryc.me/posts/4aa8abbe/" target="_blank" rel="noopener">主題配置</a><br><a href="https://jerryc.me/posts/98d20436/" target="_blank" rel="noopener">主題問答、打賞名單</a><br><a href="https://jerryc.me/posts/198a4240/" target="_blank" rel="noopener">主題更新日誌</a></p></div><h2 id="配置文件説明"><a href="#配置文件説明" class="headerlink" title="配置文件説明"></a>配置文件説明</h2><ul><li>站點配置文件<code>_config.yml</code> 是 hexo 工作目錄下的主配置文件 (還不知道是哪裏的，自己 google)</li><li><code>butterfly.yml</code> 是 <code>Butterfly</code> 的配置文件。它需要你手動將主題目錄下的<code>_config.yml</code> 文件複製到 hexo 工作目錄的 <code>source/_data/butterfly.yml</code> 中。如果文件或者文件夾不存在，需要手動創建。</li></ul><h2 id="語言"><a href="#語言" class="headerlink" title="語言"></a>語言</h2><p>修改站點配置文件 <code>_config.yml</code></p><p>默認語言是 en</p><p>主題支持三種語言</p><ul><li>default(en)</li><li>zh-CN (簡體中文)</li><li>zh-TW (繁體中文)</li></ul><h2 id="網站資料"><a href="#網站資料" class="headerlink" title="網站資料"></a>網站資料</h2><p>修改網站各種資料，例如標題、副標題和郵箱等個人資料，請修改博客根目錄的<code>_config.yml</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191120000444.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191120000444.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191120000444.png" alt=""></a></p><h2 id="導航菜單"><a href="#導航菜單" class="headerlink" title="導航菜單"></a>導航菜單</h2><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="attr">Link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">  <span class="string">List||fa</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Music</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Movie</span> <span class="string">||</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-film</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>必須是 <code>/xxx/</code>，後面 <code>||</code> 分開，然後寫圖標名。菜單名稱可自己修改</p><p>格式：</p><p>顯示名稱:</p><p>路徑 ||icon</p><p>sub-menu 格式</p><p>名稱 ||icon:</p><ul><li>名稱 || 路徑 || icon</li></ul></blockquote><p><strong>注意：</strong> 導航的文字可自行更改</p><p>例如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首頁: / || fa fa-home</span><br><span class="line">  時間軸: /archives/ || fa fa-archive</span><br><span class="line">  標籤: /tags/ || fa fa-tags</span><br><span class="line">  分類: /categories/ || fa fa-folder-open</span><br><span class="line">  清單||fa fa-heartbeat:</span><br><span class="line"><span class="bullet">    - </span>音樂 || /music/ || fa fa-music</span><br><span class="line"><span class="bullet">    - </span>照片 || /Gallery/ || fa fa-picture-o</span><br><span class="line"><span class="bullet">    - </span>電影 || /movies/ || fa fa-film</span><br><span class="line">  友鏈: /link/ || fa fa-link</span><br><span class="line">  關於: /about/ || fa fa-heart</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-menu.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-menu.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-menu.png" alt=""></a></p><h2 id="代碼"><a href="#代碼" class="headerlink" title="代碼"></a>代碼</h2><h3 id="代碼高亮主題"><a href="#代碼高亮主題" class="headerlink" title="代碼高亮主題"></a>代碼高亮主題</h3><p><code>Butterfly</code> 支持了 <a href="https://github.com/equinusocio/material-theme" target="_blank" rel="external nofollow noreferrer noopener">Material Theme</a> 全部 5 種代碼高亮樣式：</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li></ul><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">light</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>default</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-default.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-default.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-default.png" alt=""></a></p><blockquote><p>darker</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png" alt=""></a></p><blockquote><p>pale night</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png" alt=""></a></p><blockquote><p>light</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png" alt=""></a></p><blockquote><p>ocean</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png" alt=""></a></p><h3 id="代碼複製"><a href="#代碼複製" class="headerlink" title="代碼複製"></a>代碼複製</h3><p>主題支持代碼複製功能</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png" alt=""></a></p><h3 id="代碼框展開-關閉"><a href="#代碼框展開-關閉" class="headerlink" title="代碼框展開/關閉"></a>代碼框展開 / 關閉</h3><p>在默認情況下，代碼框自動展開，可設置是否所有代碼框都關閉狀態，點擊 <code>&gt;</code> 可展開代碼</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">true</span> <span class="comment">#代碼框不展開，需點擊 '&gt;' 打開</span></span><br></pre></td></tr></tbody></table></figure></div><p><code>highlight_shrink: true</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png" alt=""></a></p><p><code>highlight_shrink: false</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png" alt=""></a></p><p><code>highlight_shrink: none</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-highlight-shirk-none.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-highlight-shirk-none.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-highlight-shirk-none.png" alt=""></a></p><h3 id="代碼換行"><a href="#代碼換行" class="headerlink" title="代碼換行"></a>代碼換行</h3><p>在默認情況下，<code>hexo-highlight</code> 在編譯的時候不會實現代碼自動換行。如果你不希望在代碼塊的區域裏有橫向滾動條的話，那麼你可以考慮開啟這個功能。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p>然後找到你站點的 Hexo 配置文件<code>_config.yml</code>，將 <code>line_number</code> 改成 <code>false</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>設置 <code>code_word_wrap</code> 之前:</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png" alt=""></a></p><blockquote><p> 設置 <code>code_word_wrap</code> 之後:</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png" alt=""></a></p><h2 id="社交圖標"><a href="#社交圖標" class="headerlink" title="社交圖標"></a>社交圖標</h2><p>Butterfly 支持 <a href="https://fontawesome.com/v4.7.0/" target="_blank" rel="external nofollow noreferrer noopener">font-awesome v4</a> 和 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="external nofollow noreferrer noopener">font-awesome v5</a>. 如需開啟 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="external nofollow noreferrer noopener">font-awesome v5</a>, 需要在 <code>Butterfly.yml</code> 上開啟</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fontawesome圖標</span></span><br><span class="line"><span class="comment"># 默認使用的是 fontawesome v4版本的圖標</span></span><br><span class="line"><span class="attr">fontawesome_v5:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p>無論 V4 還是 V5, 書寫格式都是一樣的<code>圖標名：url || 描述性文字</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fa fa-github:</span> <span class="string">https://github.com/jerryc127</span> <span class="string">||</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">fa fa-rss:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">RSS鏈接</span></span><br></pre></td></tr></tbody></table></figure></div><p>圖標名可在這尋找</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontawesome.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontawesome.png" alt=""></a></p><p>PC:</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-social-icon-pc.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-social-icon-pc.png" alt=""></a></p><p>Mobile:</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-socila-icon-mobile.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="1560603353743" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-socila-icon-mobile.png" alt="1560603353743"></a></p><h2 id="主頁文章節選-自動節選和文章頁description"><a href="#主頁文章節選-自動節選和文章頁description" class="headerlink" title="主頁文章節選(自動節選和文章頁description)"></a>主頁文章節選 (自動節選和文章頁 description)</h2><p>因為主題 UI 的關係，<code>主頁文章節選</code>只支持<code>自動節選</code>和<code>文章頁description</code>。優先選擇<code>自動節選</code>。</p><p>在 <code>butterfly.yml</code> 裏可以開啟 <code>auto_excerpt</code> 的選項，你的文章將會在自動截取部分顯示在主頁。（默認顯示 150 個字）。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></tbody></table></figure></div><p>如果沒有開啟<code>自動節選</code>，則會顯示文章頁 front-matter 裏面設置的 <code>description</code>。</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png" alt=""></a></p><blockquote><p>注意：如果開啟了自動節選功能，代碼塊的顯示將有可能不正常。</p></blockquote><h2 id="頂部圖"><a href="#頂部圖" class="headerlink" title="頂部圖"></a>頂部圖</h2><p><code>頂部圖</code>有 2 種配置：具體 url 和（留空，true 和 false，三個效果一樣）</p><h3 id="page頁"><a href="#page頁" class="headerlink" title="page頁"></a>page 頁</h3><h4 id="當具體url時"><a href="#當具體url時" class="headerlink" title="當具體url時"></a>當具體 url 時</h4><p>主頁的頂部圖可以在 <code>Butterfly.yml</code> 設置 <code>index_img</code></p><p>archives 頁的頂部圖可以在 <code>Butterfly.yml</code> 設置 <code>archive_img</code></p><p>其他 <code>page</code> 頁的頂部圖可以在各自的 md 頁面設置 <code>front-matter</code> 中的 <code>top_img</code></p><blockquote><p>頁面如果沒有設置各自的 <code>top_img</code>，則會顯示 <code>default_top_img</code> 圖片</p></blockquote><h4 id="當頂部圖留空，true和false"><a href="#當頂部圖留空，true和false" class="headerlink" title="當頂部圖留空，true和false"></a>當頂部圖留空，true 和 false</h4><p>主頁會顯示純顏色的頂部圖</p><p>其他 page 的頂部圖沒有設置時，也會顯示純顏色的頂部圖</p><h3 id="post頁"><a href="#post頁" class="headerlink" title="post頁"></a>post 頁</h3><p><code>post</code> 頁的頂部圖會優先顯示各自 <code>front-matter</code> 中的 <code>top_img</code>, 如果沒有設置，則會縮略圖（即各自 <code>front-matter</code> 中的 <code>cover</code>)，如果沒有則會顯示顯示 <code>default_top_img</code> 圖片</p><h2 id="文章相關項"><a href="#文章相關項" class="headerlink" title="文章相關項"></a>文章相關項</h2><p>這個選項是用來顯示文章的相關信息的。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">page:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 主頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 主頁是否顯示標籤</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示分類</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 文章頁是否顯示標籤</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-page-meta.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-page-meta.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-page-meta.png" alt=""></a></p><p>在文章頂部的資料，</p><p><code>date_type</code>: 可設置文章日期顯示創建日期 (<code>created</code>) 或者更新日期 (<code>updated</code>) 或者兩種都顯示 (<code>both</code>)</p><p><code>categories</code> 是否顯示分類</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-info.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-info.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-info.png" alt=""></a></p><p><code>tags</code> 是否顯示標籤</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-tag.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-tag.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-tag.png" alt=""></a></p><h2 id="文章版權"><a href="#文章版權" class="headerlink" title="文章版權"></a>文章版權</h2><p>為你的博客文章展示文章版權和許可協議。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_copyright:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">decode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">4.0</span></span><br><span class="line">  <span class="attr">license_url:</span> <span class="string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><br></pre></td></tr></tbody></table></figure></div><p>由於 Hexo 4.1 開始，默認對網址進行解碼，以至於如果是中文網址，會被解碼，可設置 <code>decode: true</code> 來顯示中文網址。</p><p>如果有文章（例如：轉載文章）不需要顯示版權，可以在文章 Front-matter 單獨設置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copyright:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure></div><p><strong>版權顯示截圖</strong></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-copyright.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-copyright.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-copyright.png" alt=""></a></p><h2 id="文章打賞"><a href="#文章打賞" class="headerlink" title="文章打賞"></a>文章打賞</h2><p>在你每篇文章的結尾，可以添加打賞按鈕。相關二維碼可以自行配置</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">itemlist:</span></span><br><span class="line">        <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">itemlist:</span></span><br><span class="line">        <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">        <span class="attr">text:</span> <span class="string">支付寶</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-donate.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-donate.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-donate.png" alt=""></a></p><h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h2><p>文章的 markdown 文檔上，在 <code>Front-matter</code> 添加 <code>cover</code>, 並填上要顯示的圖片地址。<br>如果不配置 <code>cover</code>, 可以設置顯示默認的 cover.</p><p>如果不想在首頁顯示 cover, 可以設置為 <code>false</code></p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># 是否顯示文章封面</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 封面顯示的位置</span></span><br><span class="line">  <span class="comment"># 三個值可配置 left , right , both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="comment"># 當沒有設置cover時，默認的封面顯示</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br></pre></td></tr></tbody></table></figure></div><p>當配置多張圖片時，會隨機選擇一張作為 cover. 此時寫法應為</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover.png" alt=""></a><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover-show.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover-show.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover-show.png" alt=""></a></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-false.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-false.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-false.png" alt=""></a></p><p><code>left</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-left.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-left.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-left.png" alt=""></a></p><p><code>right</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-right.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-right.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-right.png" alt=""></a></p><p><code>both</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-both.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-both.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-both.png" alt=""></a></p><h2 id="文章隱藏"><a href="#文章隱藏" class="headerlink" title="文章隱藏"></a>文章隱藏</h2><blockquote><p>2.1.0 版本以上支持</p></blockquote><p>參考 <em>printempw/hexo-hide-posts</em>，如果想要隱藏文章，可以在文章的 Front-matter 添加</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">Code</div></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hide: true</span><br></pre></td></tr></tbody></table></figure></div><h2 id="頭像"><a href="#頭像" class="headerlink" title="頭像"></a>頭像</h2><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">    <span class="attr">effect:</span> <span class="literal">true</span> <span class="comment"># 頭像會一直轉圈</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-avatar.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-avatar.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-avatar.png" alt=""></a></p><h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p>在文章頁，會有一個目錄，用於顯示 TOC。 手機端默認顯示按鈕。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span>   <span class="comment">#顯示章節數字</span></span><br></pre></td></tr></tbody></table></figure></div><p><strong>PC</strong><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-pc.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-pc.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-pc.png" alt=""></a></p><p><strong>Mobile</strong><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-mobile.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-mobile.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-mobile.png" alt=""></a></p><h3 id="為特定的文章配置是否顯示TOC和特定的目錄章節數字"><a href="#為特定的文章配置是否顯示TOC和特定的目錄章節數字" class="headerlink" title="為特定的文章配置是否顯示TOC和特定的目錄章節數字"></a>為特定的文章配置是否顯示 TOC 和特定的目錄章節數字</h3><p>在你的文章 <code>md</code> 文件的頭部，加入 <code>toc_number</code> 和 <code>toc</code> 項，並配置 <code>true</code> 或者 <code>false</code> 即可。</p><p><code>toc</code> 是否顯示文章 TOC</p><p><code>toc_number</code> 是否顯示章節數</p><p>配置之後你的特定的文章將會擁有它自己的目錄數字的顯示與否，而不會受全局的配置影響。</p><blockquote><p><code>enable: true</code></p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-true.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-true.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-true.png" alt=""></a></p><blockquote><p><code>number: false</code></p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-number-false.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-number-false.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-number-false.png" alt=""></a></p><h3 id="設置是否自動打開TOC"><a href="#設置是否自動打開TOC" class="headerlink" title="設置是否自動打開TOC"></a>設置是否自動打開 TOC</h3><p>可選擇進入文章頁面時，是否自動打開 sidebar 顯示 TOC</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_open_sidebar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h2><p>相關文章推薦的原理是根據文章 tags 的比重來推薦</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># 顯示推薦文章數目</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># or created or updated 文章日期顯示創建日或者更新日</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-releatedpost.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-releatedpost.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-releatedpost.png" alt=""></a></p><h2 id="圖片描述"><a href="#圖片描述" class="headerlink" title="圖片描述"></a>圖片描述</h2><p>可開啓圖片 Figcaption 描述文字顯示</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">photofigcaption:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-photo-figcaption.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-photo-figcaption.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-photo-figcaption.png" alt=""></a></p><h2 id="Footer-設置"><a href="#Footer-設置" class="headerlink" title="Footer 設置"></a>Footer 設置</h2><h3 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a>博客年份</h3><p><code>since</code> 是一個來展示你站點起始時間的選項。它位於頁面的最底部。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2018</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-since.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-since.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-since.png" alt=""></a></p><h3 id="頁腳自定義文本"><a href="#頁腳自定義文本" class="headerlink" title="頁腳自定義文本"></a>頁腳自定義文本</h3><p><code>footer_custom_text</code> 是一個給你用來在頁腳自定義文本的選項。通常你可以在這裏寫聲明文本等。支持 HTML。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer_custom_text:</span> <span class="string">Hi,</span> <span class="string">welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">&lt;a</span> <span class="string">href="https://jerryc.me/"&gt;blog&lt;/a&gt;!</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-text.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-text.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-text.png" alt=""></a></p><h3 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a>ICP</h3><p>對於部分有備案的域名，可以在 ICP 配置顯示。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ICP:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">http://www.beian.miit.gov.cn/state/outPortal/loginPortal.action</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">粵ICP備xxxx</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">/img/icp.png</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="右下角按鈕"><a href="#右下角按鈕" class="headerlink" title="右下角按鈕"></a>右下角按鈕</h2><h3 id="簡繁轉換"><a href="#簡繁轉換" class="headerlink" title="簡繁轉換"></a>簡繁轉換</h3><p>簡體繁體互換</p><p>右下角會有簡繁轉換按鈕。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 默認按鈕顯示文字(網站是簡體，應設置為'default: 繁')</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">簡</span></span><br><span class="line">  <span class="comment">#網站默認語言，1: 繁體中文, 2: 簡體中文</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment">#博客網址</span></span><br><span class="line">  <span class="attr">cookieDomain:</span> <span class="string">"https://jerryc.me/"</span></span><br><span class="line">  <span class="comment">#當文字是簡體時，按鈕顯示的文字</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">"繁"</span></span><br><span class="line">  <span class="comment">#當文字是繁體時，按鈕顯示的文字</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">"簡"</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>簡體</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-simp.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-simp.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-simp.png" alt=""></a></p><blockquote><p>繁體</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-tranditional.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-tranditional.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-tranditional.png" alt=""></a></p><h3 id="夜間模式"><a href="#夜間模式" class="headerlink" title="夜間模式"></a>夜間模式</h3><p>右下角會有夜間模式按鈕</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dark mode</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># dark mode和 light mode切換按鈕</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 自動切換 dark mode和 light mode</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 1  跟隨系統而變化，不支持的瀏覽器/系統將按照時間晚上6點到早上6點之間切換為 dark mode</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 2  只按照時間晚上6點到早上6點之間切換為 dark mode</span></span><br><span class="line">  <span class="comment"># autoChangeMode: false 取消自動切換</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-dark-mode.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-dark-mode.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-dark-mode.png" alt=""></a></p><blockquote><p>V2.0.0 開始增加一個選項，可開啟自動切換 light mode 和 dark mode</p><p>autoChangeMode: 1 跟隨系統而變化，不支持的瀏覽器 / 系統將按照時間晚上 6 點到早上 6 點之間切換為 dark mode</p><p>autoChangeMode: 2 只按照時間 晚上 6 點到早上 6 點之間切換為 dark mode, 其餘時間為 light mode</p><p>autoChangeMode: false 取消自動切換</p></blockquote><h3 id="閲讀模式"><a href="#閲讀模式" class="headerlink" title="閲讀模式"></a>閲讀模式</h3><p>閲讀模式下會去掉除文章外的內容，避免干擾閲讀。</p><p>只會出現在文章頁面，右下角會有閲讀模式按鈕。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">readmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-read-mode.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-read-mode.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-read-mode.png" alt=""></a></p><h2 id="側邊欄設置"><a href="#側邊欄設置" class="headerlink" title="側邊欄設置"></a>側邊欄設置</h2><h3 id="側邊排版"><a href="#側邊排版" class="headerlink" title="側邊排版"></a>側邊排版</h3><p>可自行決定哪個項目需要顯示，可決定位置，也可以設置不顯示側邊欄。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># 手機頁面（ 顯示寬度 &lt; 768px ）是否顯示aside內容</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># left or right</span></span><br><span class="line">  <span class="attr">card_author:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_announcement:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_recent_post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_categories:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_archives:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_webinfo:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><strong>left</strong><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-left.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-left.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-left.png" alt=""></a></p><p><strong>right</strong><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-right.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-right.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-right.png" alt=""></a></p><h3 id="訪問人數-busuanzi-UV-和-PV"><a href="#訪問人數-busuanzi-UV-和-PV" class="headerlink" title="訪問人數 busuanzi (UV 和 PV)"></a>訪問人數 busuanzi (UV 和 PV)</h3><p>訪問 busuanzi 的<a href="http://busuanzi.ibruce.info/" target="_blank" rel="external nofollow noreferrer noopener">官方網站</a>查看更多的介紹。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-busuanzi-site-pv.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-busuanzi-site-pv.png" alt=""></a></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-pv.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-pv.png" alt=""></a></p><h3 id="運行時間"><a href="#運行時間" class="headerlink" title="運行時間"></a>運行時間</h3><p>網頁已運行時間</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">start_date:</span> <span class="number">6</span><span class="string">/7/2018</span> <span class="number">00</span><span class="string">:00:00</span>  </span><br><span class="line">  <span class="comment">##網頁開通時間</span></span><br><span class="line">  <span class="comment">#格式: 月/日/年 時間</span></span><br><span class="line">  <span class="comment">#也可以寫成 年/月/日 時間</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-runtime.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-runtime.png" alt=""></a></p><h2 id="標籤外掛（Tag-Plugins）"><a href="#標籤外掛（Tag-Plugins）" class="headerlink" title="標籤外掛（Tag Plugins）"></a>標籤外掛（Tag Plugins）</h2><blockquote><p>標籤外掛是 Hexo 獨有的功能，並不是標準的 Markdown 格式。</p><p>以下的寫法，只適用於 Butterfly 主題，用在其它主題上不會有效果，甚至可能會報錯。使用前請留意</p></blockquote><h3 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h3><p>移植於 next 主題</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">md</div></div><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><div class="note [class] [no-icon]">            <p></span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br></pre></td></tr></tbody></table></figure></div><p>例如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><div class="note default">            <p></span><br><span class="line">default 提示塊標籤</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line"><div class="note primary no-icon">            <p></span><br><span class="line">primary 提示塊標籤</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line"><div class="note success">            <p></span><br><span class="line">success 提示塊標籤</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line"><div class="note info">            <p></span><br><span class="line">info 提示塊標籤</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line"><div class="note warning">            <p></span><br><span class="line">warning 提示塊標籤</span><br><span class="line"></p>          </div></span><br><span class="line"></span><br><span class="line"><div class="note danger">            <p></span><br><span class="line">danger 提示塊標籤</span><br><span class="line"></p>          </div></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>style: simple</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105232825.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="20200105232825.png" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105232825.png" alt="20200105232825.png"></a></p><blockquote><p>style: modern</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233018.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="20200105233018.png" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233018.png" alt="20200105233018.png"></a></p><blockquote><p>style: flat</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233145.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="20200105233145.png" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233145.png" alt="20200105233145.png"></a></p><blockquote><p>style: disabled</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233310.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="20200105233310.png" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200105233310.png" alt="20200105233310.png"></a></p><h3 id="Gallery相冊圖庫"><a href="#Gallery相冊圖庫" class="headerlink" title="Gallery相冊圖庫"></a>Gallery 相冊圖庫</h3><blockquote><p>2.2.0 以上提供</p></blockquote><p>一個圖庫集合。</p><p>寫法</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">Code</div></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="gallery-group-main"&gt;</span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='/img-url'>  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  </span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='/img-url'>  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  </span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='/img-url'>  <figcaption>  <div class="gallery-group-name">name</div>  <p>description</p>  <a href='/link'></a>  </figcaption>  </figure>  </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure></div><ul><li>name：圖庫名字</li><li> description：圖庫描述</li><li> link：連接到對應相冊的地址</li><li> img-url：圖庫封面的地址</li></ul><p>例如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">Code</div></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="gallery-group-main"&gt;</span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>  </span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg'>  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>  </span><br><span class="line">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg'>  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191226003414.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191226003414.png" alt=""></a></p><h3 id="Gallery相冊"><a href="#Gallery相冊" class="headerlink" title="Gallery相冊"></a>Gallery 相冊</h3><blockquote><p>2.0.0 以上提供</p></blockquote><p>區別於舊版的 Gallery 相冊，新的 Gallery 相冊會自動根據圖片長度進行排版，書寫也更加方便，與 markdown 格式一樣。可根據需要插入到相應的 md。</p><p>寫法:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">md</div></div><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><div class="justified-gallery"><p></span><br><span class="line">markdown 圖片格式</span><br><span class="line"></p>          </div></span><br></pre></td></tr></tbody></table></figure></div><p>例如</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">md</div></div><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><div class="justified-gallery"><p></span><br><span class="line"><img src="/" class="lazyload" data-src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-scary-pumpkin-hand-900x600.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-fresh-fish-dinner-900x600.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-mountain-cloud-landscape-900x600.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://picjumbo.com/wp-content/uploads/iphone-free-stock-photos-2210x3315.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://picjumbo.com/wp-content/uploads/young-millennial-girl-drinking-lemonade-and-overlooking-the-city-2210x1473.jpg"  alt=""></span><br><span class="line">![](<a href="https://picjumbo.com/wp-content/uploads/modern-graphic-designer-essentials" target="_blank" rel="noopener">https://picjumbo.com/wp-content/uploads/modern-graphic-designer-essentials</a><span class="emphasis"><em>free</em></span>stock<span class="emphasis"><em>photos</em></span>picjumbo_HNCK4919-2210x1474.jpg)</span><br><span class="line"></p>          </div></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191101143214.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191101143214.png" alt=""></a></p><h3 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h3><blockquote><p>2.2.0 以上提供</p></blockquote><p>如果你想把一些文字、內容隱藏起來，並提供按鈕讓用户點擊顯示。可以使用這個標籤外掛。</p><p>寫法：</p><p><code>inline</code> 在文本里面添加按鈕隱藏內容，只限文字</p><p>( content 不能包含當引號，可用 <code>&amp;apos;</code>)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hide-inline"><a class="hide-button button--primary button--animated" style="color:color;background-color:bg">display    </a><span class="hide-content">content</span></span></span><br></pre></td></tr></tbody></table></figure></div><ul><li>content: 文本內容</li><li> display: 按鈕顯示的文字 (可選)</li><li>bg: 按鈕的背景顏色 (可選)</li><li>color: 按鈕文字的顏色 (可選)</li></ul><p><code>block</code> 獨立的 block 隱藏內容，可以隱藏很多內容，包括圖片，代碼塊等等</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><div class="hide-block"><a class="hide-button button--primary button--animated" style="color:color;background-color:color">display    </a><span class="hide-content"><p></span><br><span class="line">content</span><br><span class="line"></p></span></div></span><br></pre></td></tr></tbody></table></figure></div><ul><li>content: 文本內容</li><li> display: 按鈕顯示的文字 (可選)</li><li>bg: 按鈕的背景顏色 (可選)</li><li>color: 按鈕文字的顏色 (可選)</li></ul><p>例如：</p><blockquote><p>inline</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">哪個英文字母最酷？ <span class="hide-inline"><a class="hide-button button--primary button--animated" style="color:#fff;background-color:#FF7242">查看答案    </a><span class="hide-content">因為西裝褲(C裝酷)</span></span></span><br><span class="line"></span><br><span class="line">門裏站着一個人? <span class="hide-inline"><a class="hide-button button--primary button--animated" style="color:#fff;">Click    </a><span class="hide-content">閃</span></span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-tag-hide-inline.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-tag-hide-inline.gif" alt=""></a></p><blockquote><p>block</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">Code</div></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><div class="hide-block"><a class="hide-button button--primary button--animated" style="color:#fff;">查看答案    </a><span class="hide-content"><p></span><br><span class="line"><div class="justified-gallery"><p></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"  alt=""></span><br><span class="line"><img src="/" class="lazyload" data-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"  alt=""></span><br><span class="line"></p><br>          </div></span><br><span class="line"></p></span></div></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-tag-hide-block.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-tag-hide-block.gif" alt=""></a></p><h2 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h2><p>使用 mermaid 標籤可以繪製 Flowchart（流程圖）、Sequence diagram（時序圖 ）、Class Diagram（類別圖）、State Diagram（狀態圖）、Gantt（甘特圖）和 Pie Chart（圓形圖），具體可以查看 <a href="https://mermaid-js.github.io/mermaid/#/" target="_blank" rel="external nofollow noreferrer noopener">mermaid 文檔</a></p><p>寫法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><div class="mermaid">          </span><br><span class="line">內容</span><br><span class="line">          </div></span><br></pre></td></tr></tbody></table></figure></div><p>例如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><div class="mermaid">          </span><br><span class="line">pie</span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    "Calcium" : 42.96</span></span><br><span class="line"><span class="code">    "Potassium" : 50.05</span></span><br><span class="line"><span class="code">    "Magnesium" : 10.01</span></span><br><span class="line"><span class="code">    "Iron" :  5</span></span><br><span class="line">          </div></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-mermaid.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-mermaid.png" alt=""></a></p><h2 id="評論"><a href="#評論" class="headerlink" title="評論"></a>評論</h2><blockquote><p>只能選擇一個評論服務商</p></blockquote><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h3><p>註冊 <a href="https://disqus.com/" target="_blank" rel="external nofollow noreferrer noopener">disqus</a>，配置你自己的 disqus，然後在 <code>Butterfly</code> 裏開啟它。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">shortname:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># top_img顯示評論數</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-disqus.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-disqus.png" alt=""></a></p><h3 id="Disqusjs"><a href="#Disqusjs" class="headerlink" title="Disqusjs"></a>Disqusjs</h3><p>與 Disqus 一樣，但由於 Disqus 在中國大陸無法訪問， 使用 Disqusjs 可以在無法訪問 Disqus 時顯示評論。具體可參考 <a href="https://github.com/SukkaW/DisqusJS" target="_blank" rel="external nofollow noreferrer noopener">Disqusjs</a>。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">disqusjs:</span><br><span class="line">  enable: true #開啟改為 true</span><br><span class="line">  shortname: </span><br><span class="line">  siteName: </span><br><span class="line">  apikey: </span><br><span class="line">  api: https://disqus.skk.moe/disqus/ #一般情況下無需修改 API 地址</span><br><span class="line">  admin:</span><br><span class="line">  adminLabel:</span><br><span class="line">  count: true # top_img顯示評論數</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-disqusjs.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-disqusjs.png" alt=""></a></p><h3 id="Laibili（來必力）"><a href="#Laibili（來必力）" class="headerlink" title="Laibili（來必力）"></a>Laibili（來必力）</h3><p>註冊<a href="http://www.laibili.com.cn/" target="_blank" rel="external nofollow noreferrer noopener">來必力</a>，配置你自己的來必力設置，然後在 <code>Butterfly</code> 裏開啟它。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">laibili:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">uid:</span></span><br></pre></td></tr></tbody></table></figure></div><p>laibili 的 uid 你能在這裏找到:</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili.jpg" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili.jpg" alt=""></a></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili_2.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili_2.png" alt=""></a></p><h3 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h3><p>遵循 <a href="https://github.com/gitalk/gitalk" target="_blank" rel="external nofollow noreferrer noopener">gitalk</a> 的指示去獲取你的 github Oauth 應用的 client id 和 secret 值。以及查看它的相關配置説明。</p><p>然後配置 <code>butterfly.yml</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">你的client</span> <span class="string">id</span> </span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">你的client</span> <span class="string">secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">你的github倉庫</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">你的github用户名</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">該倉庫的擁有者或協作者</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># en , zh-CN , zh-TW</span></span><br><span class="line">  <span class="attr">perPage:</span> <span class="number">10</span> <span class="comment"># Pagination size, with maximum 100.</span></span><br><span class="line">  <span class="attr">distractionFreeMode:</span> <span class="literal">false</span> <span class="comment"># Facebook-like distraction free mode.</span></span><br><span class="line">  <span class="attr">pagerDirection:</span> <span class="string">last</span> <span class="comment"># Comment sorting direction, available values are last and first.</span></span><br><span class="line">  <span class="attr">createIssueManually:</span> <span class="literal">false</span> <span class="comment"># Gitalk will create a corresponding github issue for your every single page automatically</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># top_img顯示評論數</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-gitalk.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-gitalk.png" alt=""></a></p><h3 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h3><p>遵循 <a href="https://github.com/xCss/Valine" target="_blank" rel="external nofollow noreferrer noopener">Valine</a> 的指示去配置你的 LeanCloud 應用。以及查看相應的配置説明。</p><p>然後配置 <code>butterfly.yml</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># if you want use valine,please set this value is true</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="comment"># leancloud application app id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># leancloud application app key</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># valine verify code (true/false)</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># comment list page size</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span> <span class="comment"># i18n: zh-cn/en</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">Please</span> <span class="string">leave</span> <span class="string">your</span> <span class="string">footprints</span> <span class="comment"># valine comment input placeholder(like: Please leave your footprints )</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">#valine comment header info</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Record reviewer IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="string">/img/comment_bg.png</span> <span class="comment"># valine background</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># top_img顯示評論數</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-valine.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-valine.png" alt=""></a></p><h3 id="Utterances"><a href="#Utterances" class="headerlink" title="Utterances"></a>Utterances</h3><p>與 Gitalk 一樣，基於 GitHub issues 的評論工具。相對於 Gitalk, 其相對需要權限較少。具體配置可參考 <a href="https://utteranc.es/" target="_blank" rel="external nofollow noreferrer noopener">Utterances</a>。</p><p>配置 <code>butterfly.yml</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">utterances:</span><br><span class="line">  enable: false</span><br><span class="line">  repo:</span><br><span class="line">  # 可選 pathname/url/title/og:title</span><br><span class="line">  issue_term: pathname</span><br><span class="line">  # 可選 github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span><br><span class="line">  light_theme: github-light</span><br><span class="line">  dark_theme: photon-dark</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-Utterances.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-Utterances.png" alt=""></a></p><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><blockquote><p>只能選擇一個分享服務商</p></blockquote><h3 id="AddThis"><a href="#AddThis" class="headerlink" title="AddThis"></a>AddThis</h3><blockquote><p>找到你的 pub-id</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addthis.jpg" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addthis.jpg" alt=""></a></p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">addThis:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># or false</span></span><br><span class="line">  <span class="attr">pubid:</span> <span class="string">你的pub-id</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="Sharejs"><a href="#Sharejs" class="headerlink" title="Sharejs"></a>Sharejs</h3><p>如果你不知道 <a href="https://github.com/overtrue/share.js/" target="_blank" rel="external nofollow noreferrer noopener">sharejs</a>，看看它的説明。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">facebook,twitter,wechat,weibo,qq</span>  <span class="comment">#想要顯示的內容</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-sharejs.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-sharejs.png" alt=""></a></p><h3 id="Addtoany"><a href="#Addtoany" class="headerlink" title="Addtoany"></a>Addtoany</h3><p>可以到 <a href="https://www.addtoany.com/" target="_blank" rel="external nofollow noreferrer noopener">addtoany</a> 查看使用説明</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">addtoany:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">item:</span>   <span class="comment"># 顯示的內容</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">facebook</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">twitter</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">wechat</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sina_weibo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">facebook_messenger</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">email</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">copy_link</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addtoany.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addtoany.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addtoany.png" alt=""></a></p><h2 id="搜索系統"><a href="#搜索系統" class="headerlink" title="搜索系統"></a>搜索系統</h2><h3 id="Algolia"><a href="#Algolia" class="headerlink" title="Algolia"></a>Algolia</h3><ol><li><p>你需要安裝 <a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="external nofollow noreferrer noopener">hexo-algolia</a> 或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch" target="_blank" rel="external nofollow noreferrer noopener">hexo-algoliasearch</a>. 根據它們的説明文檔去做相應的配置。</p></li><li><p>配置 <code>butterfly.yml</code></p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">6</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">"We didn't find any results for the search: ${query}"</span> <span class="comment"># if there are no result</span></span><br><span class="line">    <span class="attr">hits_stats:</span> <span class="string">"${hits} results found in ${time} ms"</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><ol><li><p>你需要安裝 <a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="external nofollow noreferrer noopener">hexo-generator-search</a>. 根據它的文檔去做相應配置。<strong>注意格式只支持 xml</strong>。</p></li><li><p>配置 <code>butterfly.yml</code></p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">"We didn't find any results for the search: ${query}"</span> <span class="comment"># if there are no result</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="網站驗證"><a href="#網站驗證" class="headerlink" title="網站驗證"></a>網站驗證</h2><p>如果需要搜索引擎收錄網站，可能需要登錄對應搜索引擎的管理平台進行提交。<br>各自的驗證碼可從各自管理平台拿到</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="attr">google_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bing Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.bing.com/webmaster/</span></span><br><span class="line"><span class="attr">bing_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yandex Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://webmaster.yandex.ru/</span></span><br><span class="line"><span class="attr">yandex_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Baidu Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site/</span></span><br><span class="line"><span class="attr">baidu_site_verification:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 360 Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># see http://zhanzhang.so.com/</span></span><br><span class="line"><span class="attr">qihu_site_verification:</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="分析統計"><a href="#分析統計" class="headerlink" title="分析統計"></a>分析統計</h2><h3 id="百度統計"><a href="#百度統計" class="headerlink" title="百度統計"></a>百度統計</h3><ol><li><p>登錄百度統計的<a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="external nofollow noreferrer noopener">官方網站</a></p></li><li><p>找到你百度統計的統計代碼</p></li></ol><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-baidu-tongji.jpg" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-baidu-tongji.jpg" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-baidu-tongji.jpg" alt=""></a></p><ol start="3"><li>配置 <code>butterfly.yml</code></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">你的代碼</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="谷歌分析"><a href="#谷歌分析" class="headerlink" title="谷歌分析"></a>谷歌分析</h3><ol><li><p>登錄谷歌分析的<a href="https://www.google.com/analytics/" target="_blank" rel="external nofollow noreferrer noopener">官方網站</a></p></li><li><p>找到你的谷歌分析的跟蹤 ID</p></li></ol><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-google-analytics.jpg" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-google-analytics.jpg" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-google-analytics.jpg" alt=""></a></p><ol start="3"><li> 配置 <code>butterfly.yml</code></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span> <span class="string">你的代碼</span> <span class="comment"># 通常以`UA-`打頭</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="騰訊分析"><a href="#騰訊分析" class="headerlink" title="騰訊分析"></a>騰訊分析</h3><ol><li><p>登錄騰訊分析的<a href="https://ta.qq.com/" target="_blank" rel="external nofollow noreferrer noopener">官方網站</a></p></li><li><p>找到你的站點 ID</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-tengxun-analysic.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-tengxun-analysic.png" class=" ls-is-cached lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-tengxun-analysic.png" alt=""></a></p></li><li><p> 配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">Code</div></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Tencent_analytics ID</span><br><span class="line">tencent_analytics:</span><br></pre></td></tr></tbody></table></figure></div></li></ol><h2 id="廣告"><a href="#廣告" class="headerlink" title="廣告"></a>廣告</h2><h3 id="谷歌廣告"><a href="#谷歌廣告" class="headerlink" title="谷歌廣告"></a>谷歌廣告</h3><p>主題已集成谷歌廣告（自動廣告）</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_adsense:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">js:</span> <span class="string">https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span></span><br><span class="line">  <span class="attr">client:</span> <span class="comment"># 填入個人識別碼</span></span><br><span class="line">  <span class="attr">enable_page_level_ads:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-google-adsense.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-google-adsense.png" class=" lazyloaded" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-google-adsense.png" alt="" style="display: none !important;"></a></p><h3 id="手動廣告配置"><a href="#手動廣告配置" class="headerlink" title="手動廣告配置"></a>手動廣告配置</h3><p>主題預留了三個位置可供插入廣告，分別爲主頁文章 (每三篇文章出現廣告)/aside 公告之後 / 文章頁打賞之後。<br>把 html 代碼填寫到對應的位置</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ad:</span></span><br><span class="line">  <span class="attr">index:</span></span><br><span class="line">  <span class="attr">aside:</span></span><br><span class="line">  <span class="attr">post:</span></span><br></pre></td></tr></tbody></table></figure></div><p>例如:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index:</span> <span class="string">&lt;ins</span> <span class="string">class="adsbygoogle"</span> <span class="string">style="display:block"</span> <span class="string">data-ad-format="fluid"</span> <span class="string">data-ad-layout-key="xxxxxxxxxxxx"</span> <span class="string">data-ad-client="ca-pub-xxxxxxxxxx"</span> <span class="string">data-ad-slot="xxxxxxxxxx"&gt;&lt;/ins&gt;&lt;script&gt;(adsbygoogle=window.adsbygoogle||[]).push({})&lt;/script&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-post.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-post.png" alt=""></a><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-index.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-index.png" alt=""></a></p><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><blockquote><p>建議使用 KaTex 獲得更好的效果，下文有介紹！</p></blockquote><p>配置 <code>butterfly.yml</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># true 表示每一頁都加載mathjax.js</span></span><br><span class="line">  <span class="comment"># false 需要時加載，須在使用的Markdown Front-matter 加上 mathjax: true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>如果 <code>per_page</code> 設為 <code>true</code>, 則每一頁都會加載 Mathjax 服務。設為 <code>false</code>，則需要在文章 <code>Front-matter</code> 添加 <code>mathjax: true</code>, 對應的文章才會加載 Mathjax 服務。</p></blockquote><p>然後你需要修改一下默認的 <code>markdown</code> 渲染引擎來實現 MathJax 的效果。</p><p>查看: <a href="https://www.npmjs.com/package/hexo-renderer-kramed" target="_blank" rel="external nofollow noreferrer noopener">hexo-renderer-kramed</a></p><p>以下操作在你 hexo 博客的目錄下 (<strong>不是 Butterfly 的目錄！</strong>):</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-mathjax.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-mathjax.png" alt=""></a></p><p>效果：</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-mathjax-2.jpg" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-mathjax-2.jpg" alt=""></a></p><h2 id="KaTeX"><a href="#KaTeX" class="headerlink" title="KaTeX"></a>KaTeX</h2><p>首先禁用 <code>MathJax</code>（如果你配置過 MathJax 的話），然後修改你的 <code>butterfly.yml</code> 以便加載 <code>katex.min.css</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># true 表示每一頁都加載katex.js</span></span><br><span class="line">  <span class="comment"># false 需要時加載，須在使用的Markdown Front-matter 加上 katex: true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p>你不需要添加 <code>katex.min.js</code> 來渲染數學方程。相應的你需要卸載你之前的 hexo 的 markdown 渲染器以及 <code>hexo-math</code>，然後安裝新的 <code>hexo-renderer-markdown-it-plus</code>:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替換 `hexo-renderer-kramed` 或者 `hexo-renderer-marked` 等hexo的markdown渲染器</span></span><br><span class="line"><span class="comment"># 你可以在你的package.json裏找到hexo的markdwon渲染器，並將其卸載</span></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-renderer-marked</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-renderer-kramed</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸載 `hexo-math`</span></span><br><span class="line"><span class="string">npm</span> <span class="string">un</span> <span class="string">hexo-math</span> <span class="string">--save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然後安裝 `hexo-renderer-markdown-it-plus`</span></span><br><span class="line"><span class="string">npm</span> <span class="string">i</span> <span class="string">@upupming/hexo-renderer-markdown-it-plus</span> <span class="string">--save</span></span><br></pre></td></tr></tbody></table></figure></div><p>注意到 <a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus" target="_blank" rel="external nofollow noreferrer noopener"><code>hexo-renderer-markdown-it-plus</code></a>已經無人持續維護，所以我們使用 <a href="https://github.com/upupming/hexo-renderer-markdown-it-plus" target="_blank" rel="external nofollow noreferrer noopener"><code>@upupming/hexo-renderer-markdown-it-plus</code></a>。 這份 fork 的代碼使用了 <a href="https://github.com/yzhang-gh/markdown-it-katex" target="_blank" rel="external nofollow noreferrer noopener"><code>@neilsustc/markdown-it-katex</code></a>同時它也是 VSCode 的插件 <a href="https://github.com/yzhang-gh/vscode-markdown" target="_blank" rel="external nofollow noreferrer noopener">Markdown All in One</a> 所使用的，所以我們可以獲得最新的 KaTex 功能例如 <code>\tag{}</code>。</p><p>你還可以通過 <a href="https://github.com/yzhang-gh/markdown-it-katex" target="_blank" rel="external nofollow noreferrer noopener"><code>@neilsustc/markdown-it-katex</code></a>控制 KaTeX 的設置，所有可配置的選項參見 <a href="https://katex.org/docs/options.html。" target="_blank" rel="external nofollow noreferrer noopener">https://katex.org/docs/options.html。</a> 比如你想要禁用掉 KaTeX 在命令行上輸出的宂長的警告信息，你可以在根目錄的 <code>_config.yml</code> 中使用下面的配置將 <code>strict</code> 設置為 false:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown_it_plus:</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">plugin:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">'@neilsustc/markdown-it-katex'</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">strict:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure></div><p>當然，你還可以利用這個特性來定義一些自己常用的 <code>macros</code>。</p><p>因為 KaTeX 更快更輕量，因此沒有 MathJax 的功能多（比如右鍵菜單）。為那些使用 MathJax 的用户，我們也為 KaTeX 默認添加了 <a href="https://github.com/upupming/katex-copytex" target="_blank" rel="external nofollow noreferrer noopener"><em>Copy As TeX Code</em></a> 的功能。</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-katex.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-katex.gif" alt=""></a></p><h2 id="美化-特效"><a href="#美化-特效" class="headerlink" title="美化/特效"></a>美化 / 特效</h2><h3 id="自定義主題色"><a href="#自定義主題色" class="headerlink" title="自定義主題色"></a>自定義主題色</h3><p>可以修改大部分 UI 顏色</p><p>配置 <code>butterfly.yml</code>，比如：</p><blockquote><p>顏色值必須被雙引號包裹，就像 <code>"#000"</code> 而不是<code>#000</code>。否則將會在構建的時候報錯！</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">"#49B1F5"</span></span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">"#00c4b6"</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">"#FF7242"</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">"#00c4b6"</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">"#99a9bf"</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">"#858585"</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">"#A4D8FA"</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">"#F47466"</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">"rgba(27, 31, 35, .05)"</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">"#00c4b6"</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">"#49b1f5"</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">"#49b1f5"</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_1.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_1.png" alt=""></a><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_2.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_2.png" alt=""></a></p><h3 id="網站背景"><a href="#網站背景" class="headerlink" title="網站背景"></a>網站背景</h3><p>默認顯示白色，可設置圖片或者顏色</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 圖片格式 background: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="comment"># 顏色 background: '#49B202'</span></span><br><span class="line"><span class="comment"># 留空 顯示白色</span></span><br><span class="line"><span class="attr">background:</span></span><br></pre></td></tr></tbody></table></figure></div><p><code>background:'#49B202'</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-color.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-color.png" alt=""></a></p><p><code>background: url(https://i.loli.net/2019/09/09/5oDRkWVKctx2b6A.png)</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-img.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-img.png" alt=""></a></p><h3 id="footer-背景"><a href="#footer-背景" class="headerlink" title="footer 背景"></a>footer 背景</h3><p>footer 的背景會與 <code>top_img</code> 的一致，當設置 <code>false</code> 時，將與主題色一致。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># footer是否顯示圖片背景(與top_img一致)</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><code>true</code></p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-img.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-img.png" alt=""></a></p><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h3><p>打字效果 <a href="https://github.com/disjukr/activate-power-mode" target="_blank" rel="external nofollow noreferrer noopener">activate-power-mode</a></p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打字效果</span></span><br><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># 冒光特效</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment"># 抖動特效</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-type-animation.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-type-animation.gif" alt=""></a></p><h3 id="靜止綵帶"><a href="#靜止綵帶" class="headerlink" title="靜止綵帶"></a>靜止綵帶</h3><p>好看的綵帶背景，可設置每次刷新更換綵帶，或者每次點擊更換綵帶</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">click_to_change:</span> <span class="literal">false</span>  <span class="comment">#設置是否每次點擊都更換綵帶</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment"># false 手機端不顯示 true 手機端顯示</span></span><br></pre></td></tr></tbody></table></figure></div><p>相關配置可查看 <a href="https://github.com/hustcc/ribbon.js" target="_blank" rel="external nofollow noreferrer noopener">canvas_ribbon</a></p><h3 id="動態綵帶"><a href="#動態綵帶" class="headerlink" title="動態綵帶"></a>動態綵帶</h3><p>好看的綵帶背景，會飄動</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon_piao:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment"># false 手機端不顯示 true 手機端顯示</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas-ribbon-piao.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas-ribbon-piao.gif" alt=""></a></p><h3 id="canvas-nest"><a href="#canvas-nest" class="headerlink" title="canvas-nest"></a>canvas-nest</h3><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">'0,0,255'</span> <span class="comment">#color of lines, default: '0,0,0'; RGB values: (R,G,B).(note: use ',' to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.7</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment"># false 手機端不顯示 true 手機端顯示</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas_nest.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas_nest.gif" alt=""></a></p><h3 id="鼠標點擊效果"><a href="#鼠標點擊效果" class="headerlink" title="鼠標點擊效果"></a>鼠標點擊效果</h3><h4 id="煙花"><a href="#煙花" class="headerlink" title="煙花"></a>煙花</h4><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-firewall.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-firewall.gif" alt=""></a></p><h4 id="愛心"><a href="#愛心" class="headerlink" title="愛心"></a>愛心</h4><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 點擊出現愛心</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_love.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_love.gif" alt=""></a></p><h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 點擊出現文字，文字可自行修改</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">富強</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">民主</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">文明</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">和諧</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">自由</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">平等</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">公正</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">法治</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">愛國</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">敬業</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">誠信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">友善</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">15px</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_word.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_word.gif" alt=""></a></p><h3 id="頁面美化"><a href="#頁面美化" class="headerlink" title="頁面美化"></a>頁面美化</h3><p>會改變 ol、ul、h1-h5 的樣式</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 美化頁面顯示</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">'\f0c1'</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">"#F47466"</span></span><br></pre></td></tr></tbody></table></figure></div><p><code>title-prefix-icon</code> 填寫的是 fontawesome 的 icon 的 Unicode 數。<br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontwesome-unicode.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontwesome-unicode.png" alt=""></a></p><blockquote><p>未開啟美化</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautify.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautify.png" alt=""></a></p><blockquote><p>開啟美化</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautif.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautif.png" alt=""></a></p><h3 id="自定義字體"><a href="#自定義字體" class="headerlink" title="自定義字體"></a>自定義字體</h3><p>可自行設置字體的 <code>font-family</code></p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">Lato,</span> <span class="string">Helvetica</span> <span class="string">Neue</span> <span class="string">For</span> <span class="string">Number,</span> <span class="string">-apple-system,</span> <span class="string">BlinkMacSystemFont,</span> <span class="string">Segoe</span> <span class="string">UI,</span> <span class="string">Roboto,</span> <span class="string">PingFang</span> <span class="string">SC,</span> <span class="string">Hiragino</span> <span class="string">Sans</span> <span class="string">GB,"Microsoft</span> <span class="string">JhengHei",</span> <span class="string">"MicrMicrosoft YaHei"</span><span class="string">,</span> <span class="string">Helvetica</span> <span class="string">Neue,</span> <span class="string">Helvetica,</span> <span class="string">Arial,</span> <span class="string">sans-serif</span></span><br><span class="line">  <span class="attr">code-font:</span> <span class="string">consolas,</span> <span class="string">Menlo,</span> <span class="string">"PingFang SC"</span><span class="string">,</span> <span class="string">"Microsoft JhengHei"</span><span class="string">,"Microsoft</span> <span class="string">YaHei",</span> <span class="string">monospace,</span> <span class="string">Helvetica</span> <span class="string">Neue</span> <span class="string">For</span> <span class="string">Number</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="網站副標題"><a href="#網站副標題" class="headerlink" title="網站副標題"></a>網站副標題</h3><blockquote><p>適用於 版本號 &gt;= V1.2.0</p><p>V2.0.0 開始增加一些第三方 api 調用</p></blockquote><p>可設置主頁中顯示的網站副標題或者喜歡的座右銘。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主頁subtitle</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 打字效果</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 循環或者只打字一次</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># source調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用金山詞霸的每日一句（簡體）</span></span><br><span class="line">  <span class="comment"># source: 2  調用一言網的一句話（簡體） #https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 3  調用一句網（簡體） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 4  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># (如果有英文逗號' , '，請使用轉義字符 &amp;#44;)</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">今日事&amp;#44;今日畢</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Never</span> <span class="string">put</span> <span class="string">off</span> <span class="string">till</span> <span class="string">tomorrow</span> <span class="string">what</span> <span class="string">you</span> <span class="string">can</span> <span class="string">do</span> <span class="string">today</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-subtitle.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-subtitle.gif" alt=""></a></p><h3 id="主頁top-img顯示大小"><a href="#主頁top-img顯示大小" class="headerlink" title="主頁top_img顯示大小"></a>主頁 top_img 顯示大小</h3><blockquote><p>適用於 版本號 &gt;= V1.2.0</p></blockquote><p>默認的顯示為全屏。site-info 的區域會居中顯示</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主頁設置</span></span><br><span class="line"><span class="comment"># 默認top_img全屏，site_info在中間</span></span><br><span class="line"><span class="comment"># 使用默認, 都無需填寫（建議默認）</span></span><br><span class="line"><span class="attr">index_site_info_top:</span> <span class="comment"># 主頁標題距離頂部距離  例如 300px/300em/300rem/10%</span></span><br><span class="line"><span class="attr">index_top_img_height:</span>  <span class="comment">#主頁top_img高度 例如 300px/300em/300rem  不能使用百分比</span></span><br></pre></td></tr></tbody></table></figure></div><p>注意：<code>index_top_img_height</code> 的值不能使用百分比。<br>2 個都不填的話，會使用默認值</p><p>舉例，當</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_top_img_height:</span> <span class="string">400px</span></span><br></pre></td></tr></tbody></table></figure></div><p>效果</p><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-top-img-setting.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-top-img-setting.png" alt=""></a></p><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><p>要為 <code>Butterfly</code> 配上 PWA 特性，你需要如下幾個步驟:</p><ol><li><p>打開 hexo 工作目錄</p></li><li><p><code>npm install hexo-offline --save</code> 或者 <code>yarn add hexo-offline</code></p></li><li><p>修改<code>_config.yml</code> 在站點<code>_config.yml</code> 中增加以下內容。</p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># offline config passed to sw-precache.</span></span><br><span class="line"><span class="attr">offline:</span></span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes:</span> <span class="number">10485760</span> <span class="comment"># 緩存的最大文件大小，以字節為單位</span></span><br><span class="line">  <span class="attr">staticFileGlobs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">public/**/*.{js,html,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2}</span></span><br><span class="line">  <span class="comment"># 靜態文件合集，如果你的站點使用了例如webp格式的文件，請將文件類型添加進去。</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">runtimeCaching:</span></span><br><span class="line">    <span class="comment"># CDNs - should be cacheFirst, since they should be used specific versions so should not change</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">urlPattern:</span> <span class="string">/*</span> <span class="comment"># 如果你需要加載CDN資源，請配置該選項，如果沒有，可以不配置。</span></span><br><span class="line">      <span class="attr">handler:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">origin:</span> <span class="string">your_websie_url</span> <span class="comment"># 可替換成你的 url</span></span><br></pre></td></tr></tbody></table></figure></div><p>更多內容請查看 <a href="https://github.com/JLHwung/hexo-offline" target="_blank" rel="external nofollow noreferrer noopener">hexo-offline</a> 的官方文檔</p><ol start="4"><li>在 <code>butterfly.yml</code> 中開啟 pwa 選項。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">manifest:</span> <span class="string">/img/pwa/manifest.json</span></span><br><span class="line">  <span class="attr">theme_color:</span> <span class="string">"#fff"</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/img/pwa/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">favicon_32_32:</span> <span class="string">/img/pwa/32.png</span></span><br><span class="line">  <span class="attr">favicon_16_16:</span> <span class="string">/img/pwa/16.png</span></span><br><span class="line">  <span class="attr">mask_icon:</span> <span class="string">/img/pwa/safari-pinned-tab.svg</span></span><br></pre></td></tr></tbody></table></figure></div><ol start="5"><li>在創建 <code>source/</code> 目錄中創建 <code>manifest.json</code> 文件。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">json</div></div><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"string"</span>, <span class="comment">//應用全稱</span></span><br><span class="line">    <span class="attr">"short_name"</span>: <span class="string">"Junzhou"</span>, <span class="comment">//應用簡稱</span></span><br><span class="line">    <span class="attr">"theme_color"</span>: <span class="string">"#49b1f5"</span>, <span class="comment">//匹配瀏覽器的地址欄顏色</span></span><br><span class="line">    <span class="attr">"background_color"</span>: <span class="string">"#49b1f5"</span>,<span class="comment">//加載應用時的背景色</span></span><br><span class="line">    <span class="attr">"display"</span>: <span class="string">"standalone"</span>,<span class="comment">//首選顯示模式 其他選項有：fullscreen,minimal-ui,browser</span></span><br><span class="line">    <span class="attr">"scope"</span>: <span class="string">"/"</span>,</span><br><span class="line">    <span class="attr">"start_url"</span>: <span class="string">"/"</span>,</span><br><span class="line">    <span class="attr">"icons"</span>: [ <span class="comment">//該數組指定icons圖標參數，用來時適配不同設備（需為png，至少包含一個192px*192px的圖標）</span></span><br><span class="line">        {</span><br><span class="line">          <span class="attr">"src"</span>: <span class="string">"images/pwaicons/36.png"</span>, <span class="comment">//圖標文件的目錄，需在source/目錄下自行創建。</span></span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"36x36"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">"src"</span>: <span class="string">"images/pwaicons/48.png"</span>,</span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"48x48"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          <span class="attr">"src"</span>: <span class="string">"images/pwaicons/72.png"</span>,</span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"72x72"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          <span class="attr">"src"</span>: <span class="string">"images/pwaicons/96.png"</span>,</span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"96x96"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          <span class="attr">"src"</span>: <span class="string">"images/pwaicons/144.png"</span>,</span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"144x144"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          <span class="attr">"src"</span>: <span class="string">"images/pwaicons/192.png"</span>,</span><br><span class="line">          <span class="attr">"sizes"</span>: <span class="string">"192x192"</span>,</span><br><span class="line">          <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">            <span class="attr">"src"</span>: <span class="string">"images/pwaicons/512.png"</span>,</span><br><span class="line">            <span class="attr">"sizes"</span>: <span class="string">"512x512"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">          }</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"splash_pages"</span>: <span class="literal">null</span> <span class="comment">//配置自定義啟動動畫。</span></span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure></div><p>你也可以通過 <a href="https://app-manifest.firebaseapp.com/" target="_blank" rel="external nofollow noreferrer noopener">Web App Manifest</a> 快速創建 <code>manifest.json</code>。（Web App Manifest 要求至少包含一個 512*512 像素的圖標）</p><ol start="6"><li><p>可以通過 <code>Chrome</code> 插件 <code>Lighthouse</code> 檢查 PWA 配置是否生效以及配置是否正確。</p><ul><li>打開博客頁面</li><li>啟動 <code>Lighthouse</code> 插件 (<code>Lighthouse</code> 插件要求至少包含一個 512*512 像素的圖標)</li></ul></li></ol><p>關於 PWA（漸進式增強 Web 應用）的更多內容請參閲 <a href="https://developers.google.com/web/tools/lighthouse/audits/address-bar" target="_blank" rel="external nofollow noreferrer noopener">Google Tools for Web Developers</a></p><h2 id="字數統計"><a href="#字數統計" class="headerlink" title="字數統計"></a>字數統計</h2><p>要為 <code>Butterfly</code> 配上字數統計特性，你需要如下幾個步驟:</p><ol><li><p>打開 hexo 工作目錄</p></li><li><p><code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code></p></li><li><p>配置 <code>butterfly.yml</code>:</p></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-word-count.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-word-count.png" alt=""></a><br><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-wordcount-totalcount.png" target="_blank" rel="noopener" data-fancybox="group" data-caption="" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-wordcount-totalcount.png" alt=""></a></p><h2 id="文章置頂"><a href="#文章置頂" class="headerlink" title="文章置頂"></a>文章置頂</h2><p>要為你一些文章置頂，你需要如下步驟:</p><ol><li>打開 hexo 工作目錄</li><li><code>npm uninstall hexo-generator-index --save</code> 然後 <code>npm install hexo-generator-index-pin-top --save</code></li><li>你要在文章的 <code>front-matter</code> 區域裏添加 <code>top: True</code> 屬性來把這篇文章置頂。</li><li>你可以參考 <a href="https://github.com/netcan/hexo-generator-index-pin-top" target="_blank" rel="external nofollow noreferrer noopener">hexo-generator-index-pin-top</a> 這個倉庫來了解更多細節。</li></ol><p>舉個例子:</p><p>你的某篇文章開頭如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">md</div></div><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: xxxx</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>xxx</span><br><span class="line">date: 2018-08-08 08:08:08</span><br><span class="line">---</span><br><span class="line">// ....</span><br></pre></td></tr></tbody></table></figure></div><p>現在把 <code>top: True</code> 加進去：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">md</div></div><figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: xxxx</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>xxx</span><br><span class="line">date: 2018-08-08 08:08:08</span><br><span class="line">top: True</span><br><span class="line">---</span><br><span class="line">// ....</span><br></pre></td></tr></tbody></table></figure></div><h2 id="圖片大圖查看模式"><a href="#圖片大圖查看模式" class="headerlink" title="圖片大圖查看模式"></a>圖片大圖查看模式</h2><h3 id="fancybox"><a href="#fancybox" class="headerlink" title="fancybox"></a>fancybox</h3><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fancybox http://fancyapps.com/fancybox/3/</span></span><br><span class="line"><span class="attr">fancybox:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/fancybox.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="fancybox.gif" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/fancybox.gif" alt="fancybox.gif"></a></p><h3 id="medium-zoom"><a href="#medium-zoom" class="headerlink" title="medium_zoom"></a>medium_zoom</h3><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">medium_zoom:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/medium_zoom.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="medium_zoom.gif" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/medium_zoom.gif" alt="medium_zoom.gif"></a></p><h2 id="Snackbar-彈窗"><a href="#Snackbar-彈窗" class="headerlink" title="Snackbar 彈窗"></a>Snackbar 彈窗</h2><p>Snackbar 彈窗，根據自己愛好開啟</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">yaml</div></div><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Snackbar 彈窗</span></span><br><span class="line"><span class="comment"># https://github.com/polonel/SnackBar</span></span><br><span class="line"><span class="comment"># position 彈窗位置</span></span><br><span class="line"><span class="comment"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span></span><br><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">bottom-left</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">'#49b1f5'</span> <span class="comment">#light mode時彈窗背景</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">'#2d3035'</span> <span class="comment">#dark mode時彈窗背景</span></span><br></pre></td></tr></tbody></table></figure></div><blockquote><p>未開啟 Snackbar</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_false.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="snackbar_false.gif" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_false.gif" alt="snackbar_false.gif"></a></p><blockquote><p> 開啟 Snackbar</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_true.gif" target="_blank" rel="noopener" data-fancybox="group" data-caption="snackbar_true.gif" class="fancybox"><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_true.gif" alt="snackbar_true.gif"></a></p><h2 id="豆瓣"><a href="#豆瓣" class="headerlink" title="豆瓣"></a>豆瓣</h2><p>很多人使用 <a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="external nofollow noreferrer noopener">hexo-douban</a> 這款插件。但是該插件是直接生成相應的網頁，而不會去讀取對應的 markdown 文件。因此，可在設置裏進行相應的配置。</p><p>配置 <code>butterfly.yml</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code-lang">markdown</div></div><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 如果你有使用hexo-douban，可配置這個</span></span><br><span class="line">douban:</span><br><span class="line">  meta: true</span><br><span class="line">  movies<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/jerryc127/butterfly_</span>cdn@2.1.0/top_img/movie.jpg</span><br><span class="line">  books_img:</span><br><span class="line">  games_img:</span><br></pre></td></tr></tbody></table></figure></div><p>由於豆瓣開啟了反盜鏈，因此，一些瀏覽器（safari）會無法顯示圖片，可把 <code>meta</code> 設為 true。但此操作會導致一些插件失效（例如：不蒜子）。</p></div>]]></content>
      
      
      <categories>
          
          <category> Butterfly文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly 安装文档（二）主题页面</title>
      <link href="/2020/04/08/hexo-theme-butterfly-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2/"/>
      <url>/2020/04/08/hexo-theme-butterfly-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B8%BB%E9%A2%98%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本文转载自 <a href="https://jerryc.me/posts/dc584b87/#Page-Front-matter" target="_blank" rel="noopener">https://jerryc.me/posts/dc584b87/#Page-Front-matter</a></p><h1 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">type: (tags,link,categories这三个页面需要配置) </span><br><span class="line">comments: (是否需要显示评论，默认true) </span><br><span class="line">description: </span><br><span class="line">top_img: (设置顶部图) </span><br><span class="line">mathjax: </span><br><span class="line">katex: </span><br><span class="line">aside: </span><br><span class="line">-- -</span><br></pre></td></tr></table></figure><h1 id="Post-Front-matte"><a href="#Post-Front-matte" class="headerlink" title="Post Front-matte"></a>Post Front-matte</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">keywords: </span><br><span class="line">description: </span><br><span class="line">top_img: (除非特定需要，可以不写) </span><br><span class="line">comments是否显示评论(除非设置false,可以不写) </span><br><span class="line">cover:缩略图</span><br><span class="line">toc:是否显示toc (除非特定文章设置，可以不写) </span><br><span class="line">toc_number:是否显示toc数字(除非特定文章设置，可以不写) </span><br><span class="line">copyright:是否显示版权(除非特定文章设置，可以不写) </span><br><span class="line">mathjax: </span><br><span class="line">katex: </span><br><span class="line">hide: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h1><ol><li><p>前往你的Hexo 博客的根目录</p></li><li><p>输入 hexo new page tags</p></li><li><p>你会找到source/tags/index.md这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title:标签</span><br><span class="line">date: 2018-01-05 00:00:00 </span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h1><ol><li><p>前往你的Hexo 博客的根目录</p></li><li><p>输入 hexo new page categories</p></li><li><p>你会找到source/categories/index.md这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title:分类</span><br><span class="line">date: 2018-01-05 00:00:00 </span><br><span class="line">type: &quot;categories&quot; </span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h1 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h1><p>为你的博客创建一个友情链接！</p><h2 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a>创建友情链接页面</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入 hexo new page link</p></li><li><p>你会找到source/link/index.md这个文件</p></li><li><p>修改这个文件：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--- </span><br><span class="line">title:友情链接</span><br><span class="line">date: 2018-06-07 22:17:49 </span><br><span class="line">type: &quot;link&quot; </span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a>友情链接添加</h2><p>在Hexo博客目录中的source/_data，创建一个文件link.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">class:</span></span><br><span class="line">  <span class="attr">class_name:</span> <span class="string">友情鏈接</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="attr">1:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">xxx</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://blog.xxx.com</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://cdn.xxxxx.top/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">xxxxxxx</span></span><br><span class="line">    <span class="attr">2:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">xxxxxx</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.xxxxxxcn/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://xxxxx/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">xxxxxxx</span>  </span><br><span class="line"></span><br><span class="line"> <span class="attr">class2:</span></span><br><span class="line">   <span class="attr">class_name:</span> <span class="string">鏈接無效</span></span><br><span class="line">   <span class="attr">link_list:</span></span><br><span class="line">     <span class="attr">1:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">夢xxx</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://blog.xxx.com</span></span><br><span class="line">       <span class="attr">avatar:</span> <span class="string">https://xxxx/avatar.png</span></span><br><span class="line">       <span class="attr">descr:</span> <span class="string">xxxx</span></span><br><span class="line">     <span class="attr">2:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">xx</span></span><br><span class="line">       <span class="attr">link:</span> <span class="string">https://www.axxxx.cn/</span></span><br><span class="line">       <span class="attr">avatar:</span> <span class="string">https://x</span></span><br><span class="line">       <span class="attr">descr:</span> <span class="string">xx</span></span><br></pre></td></tr></table></figure><h2 id="友情鏈接界面設置"><a href="#友情鏈接界面設置" class="headerlink" title="友情鏈接界面設置"></a>友情鏈接界面設置</h2><p>由 2.2.0 起，友情鏈接界面可以由用户自己自定義，只需要在友情鏈接的 md 檔設置就行，以普通的 Markdown 格式書寫。</p><h1 id="音樂"><a href="#音樂" class="headerlink" title="音樂"></a>音樂</h1><p>音樂界面使用了插件 <a href="https://github.com/MoePlayer/hexo-tag-aplayer。" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-aplayer。</a></p><p>使用方法請參考插件的文檔。</p><p>音樂頁面只是普通的 page 頁，按普通頁面操作生成就行。</p><h1 id="電影"><a href="#電影" class="headerlink" title="電影"></a>電影</h1><p>電影界面使用了插件 <a href="https://github.com/mythsman/hexo-douban。" target="_blank" rel="noopener">https://github.com/mythsman/hexo-douban。</a></p><p>使用方法請參考插件的文檔。</p><p>注意：hexo-douban 會主動生成頁面，所以不需要自己創建。對應網頁的 top_img 可以 butterfly.yml 修改。</p><h1 id="404-頁面"><a href="#404-頁面" class="headerlink" title="404 頁面"></a>404 頁面</h1><p>主題內置了一個簡單的 404 頁面，可在設置中開啟</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># A simple 404 page</span></span><br><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">"頁面沒有找到"</span></span><br><span class="line">  <span class="attr">background:</span></span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-error404.png"  alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Butterfly文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly 安裝文檔（一）快速開始</title>
      <link href="/2020/04/08/hexo-theme-butterfly-%E5%AE%89%E8%A3%9D%E6%96%87%E6%AA%94%EF%BC%88%E4%B8%80%EF%BC%89%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B-1/"/>
      <url>/2020/04/08/hexo-theme-butterfly-%E5%AE%89%E8%A3%9D%E6%96%87%E6%AA%94%EF%BC%88%E4%B8%80%EF%BC%89%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本文转载自 <a href="https://jerryc.me/posts/21cfbf15/#安裝" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/#%E5%AE%89%E8%A3%9D</a></p><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p>hexo-theme-butterfly 是基于Molunerfinn的hexo-theme-melody的基础上进行开发的。<br>文档也是在hexo-theme-melody的文档基础上修改。因为一些配置变更导致与原主题配置上有部分区别。故如果安装hexo-theme-butterfly主题，请参考这篇文档。</p><h2 id="主题安装和升级"><a href="#主题安装和升级" class="headerlink" title="主题安装和升级"></a>主题安装和升级</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在你的博客根目录里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>如果想要安装比较新的dev 分支，可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改站点配置文件_config.yml，把主题改为Butterfly</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme:  Butterfly</span><br></pre></td></tr></table></figure><p>如果你没有pug以及stylus的渲染器，请下载安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">或者 </span><br><span class="line">yarn add hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure><h3 id="平滑升级"><a href="#平滑升级" class="headerlink" title="平滑升级"></a>平滑升级</h3><p>为了主题的平滑升级，Butterfly使用了data files特性。</p><p>推荐把主题默认的配置文件_config.yml复制到 Hexo工作目录下的 source/_data/butterfly.yml，如果source/_data的目录不存在那就创建一个。</p><p>注意，如果你创建了butterfly.yml,它将会替换主题默认配置文件_config.yml里的配置项( 不是合并而是替换 ),之后你就只需要通过git pull的方式就可以平滑地升级theme-butterfly了。</p>]]></content>
      
      
      <categories>
          
          <category> Butterfly文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/08/hello-world/"/>
      <url>/2020/04/08/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
