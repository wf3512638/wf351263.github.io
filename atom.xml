<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WF&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linuxwf.com/"/>
  <updated>2020-04-15T02:27:17.379Z</updated>
  <id>http://linuxwf.com/</id>
  
  <author>
    <name>Wu Fei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>9.MHA高可用</title>
    <link href="http://linuxwf.com/2020/04/15/9-MHA%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <id>http://linuxwf.com/2020/04/15/9-MHA%E9%AB%98%E5%8F%AF%E7%94%A8/</id>
    <published>2020-04-15T02:26:00.000Z</published>
    <updated>2020-04-15T02:27:17.379Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="MHA高可用"><a href="#MHA高可用" class="headerlink" title="MHA高可用"></a>MHA高可用</h1><h2 id="第1章-主从复制架构演变介绍"><a href="#第1章-主从复制架构演变介绍" class="headerlink" title="第1章 主从复制架构演变介绍"></a>第1章 主从复制架构演变介绍</h2><h3 id="1-1-基本结构"><a href="#1-1-基本结构" class="headerlink" title="1.1 基本结构"></a>1.1 基本结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）一主一从</span><br><span class="line">（2）一主多从</span><br><span class="line">（3）多级主从</span><br><span class="line">（4）双主</span><br><span class="line">（5）循环复制</span><br></pre></td></tr></table></figure><h3 id="1-2-高级应用架构演变"><a href="#1-2-高级应用架构演变" class="headerlink" title="1.2 高级应用架构演变"></a>1.2 高级应用架构演变</h3><h4 id="1-2-1-高性能架构"><a href="#1-2-1-高性能架构" class="headerlink" title="1.2.1 高性能架构"></a>1.2.1 高性能架构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">读写分离架构(读性能较高)</span><br><span class="line">代码级别</span><br><span class="line">MySQL proxy (Atlas,mysql router,proxySQL(percona),maxscale)、</span><br><span class="line">amoeba(taobao)</span><br><span class="line">xx-dbproxy等。</span><br><span class="line">分布式架构(读写性能都提高):</span><br><span class="line">分库分表——cobar---&gt;TDDL(头都大了),DRDS</span><br><span class="line">Mycat---&gt;DBLE自主研发等。</span><br><span class="line">NewSQL--&gt;TiDB</span><br></pre></td></tr></table></figure><h4 id="1-2-2-高可用架构"><a href="#1-2-2-高可用架构" class="headerlink" title="1.2.2 高可用架构"></a>1.2.2 高可用架构</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）单活:MMM架构——mysql-mmm（google）</span><br><span class="line">（2）单活:MHA架构——mysql-master-ha（日本DeNa）,T-MHA</span><br><span class="line">（3）多活:MGR ——5.7 新特性 MySQL Group replication(5.7.17) ---&gt;Innodb Cluster  </span><br><span class="line">（4）多活:MariaDB Galera Cluster架构,(PXC)Percona XtraDB Cluster、</span><br><span class="line">MySQL Cluster(Oracle rac)架构</span><br></pre></td></tr></table></figure><h2 id="第2章-高可用MHA"><a href="#第2章-高可用MHA" class="headerlink" title="第2章 高可用MHA"></a>第2章 高可用MHA</h2><h3 id="2-1-工作原理"><a href="#2-1-工作原理" class="headerlink" title="2.1 工作原理"></a>2.1 工作原理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">主库宕机处理过程</span><br><span class="line">1. 监控节点 (通过配置文件获取所有节点信息)</span><br><span class="line">   系统,网络,SSH连接性</span><br><span class="line">   主从状态,重点是主库</span><br><span class="line"></span><br><span class="line">2. 选主</span><br><span class="line">(1) 如果判断从库(position或者GTID),数据有差异,最接近于Master的slave,成为备选主</span><br><span class="line">(2) 如果判断从库(position或者GTID),数据一致,按照配置文件顺序,选主.</span><br><span class="line">(3) 如果设定有权重(candidate_master=1),按照权重强制指定备选主.</span><br><span class="line">    1. 默认情况下如果一个slave落后master 100M的relay logs的话，即使有权重,也会失效.</span><br><span class="line">    2. 如果check_repl_delay=0的化,即使落后很多日志,也强制选择其为备选主</span><br><span class="line">3. 数据补偿</span><br><span class="line">(1) 当SSH能连接,从库对比主库GTID 或者position号,立即将二进制日志保存至各个从节点并且应用(save_binary_logs )</span><br><span class="line">(2) 当SSH不能连接, 对比从库之间的relaylog的差异(apply_diff_relay_logs) </span><br><span class="line">4. Failover</span><br><span class="line">将备选主进行身份切换,对外提供服务</span><br><span class="line">其余从库和新主库确认新的主从关系</span><br><span class="line">5. 应用透明(VIP)</span><br><span class="line">6. 故障切换通知(send_reprt)</span><br><span class="line">7. 二次数据补偿(binlog_server)</span><br><span class="line">8. 自愈自治(待开发...)</span><br></pre></td></tr></table></figure><h3 id="2-2-架构介绍"><a href="#2-2-架构介绍" class="headerlink" title="2.2 架构介绍"></a>2.2 架构介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1主2从，master：db01   slave：db02   db03 ）：</span><br><span class="line">MHA 高可用方案软件构成</span><br><span class="line">Manager软件：选择一个从节点安装</span><br><span class="line">Node软件：所有节点都要安装</span><br></pre></td></tr></table></figure><h3 id="2-3-MHA软件构成"><a href="#2-3-MHA软件构成" class="headerlink" title="2.3 MHA软件构成"></a>2.3 MHA软件构成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Manager工具包主要包括以下几个工具：</span><br><span class="line">masterha_manger             启动MHA </span><br><span class="line">masterha_check_ssh      检查MHA的SSH配置状况 </span><br><span class="line">masterha_check_repl         检查MySQL复制状况 </span><br><span class="line">masterha_master_monitor     检测master是否宕机 </span><br><span class="line">masterha_check_status       检测当前MHA运行状态 </span><br><span class="line">masterha_master_switch  控制故障转移（自动或者手动）</span><br><span class="line">masterha_conf_host      添加或删除配置的server信息</span><br><span class="line"></span><br><span class="line">Node工具包主要包括以下几个工具：</span><br><span class="line">这些工具通常由MHA Manager的脚本触发，无需人为操作</span><br><span class="line">save_binary_logs            保存和复制master的二进制日志 </span><br><span class="line">apply_diff_relay_logs       识别差异的中继日志事件并将其差异的事件应用于其他的</span><br><span class="line">purge_relay_logs            清除中继日志（不会阻塞SQL线程）</span><br></pre></td></tr></table></figure><h3 id="2-4-MHA环境搭建"><a href="#2-4-MHA环境搭建" class="headerlink" title="2.4 MHA环境搭建"></a>2.4 MHA环境搭建</h3><h4 id="2-4-1-规划"><a href="#2-4-1-规划" class="headerlink" title="2.4.1 规划"></a>2.4.1 规划</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主库: 51    node </span><br><span class="line">从库: 52    node</span><br><span class="line">53    node    manager</span><br></pre></td></tr></table></figure><h4 id="2-4-2-准备环境-1主2从GTID"><a href="#2-4-2-准备环境-1主2从GTID" class="headerlink" title="2.4.2 准备环境(1主2从GTID)"></a>2.4.2 准备环境(1主2从GTID)</h4><p><strong>清理环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill mysqld</span><br><span class="line">rm -rf /data/mysql/data/*</span><br><span class="line">rm -rf /data/binlog/*</span><br></pre></td></tr></table></figure><p><strong>准备配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">主库db01：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql/</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=51</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db01 [\\d]&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">slave1(db02)：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/data/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=52</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db02 [\\d]&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">slave2(db03)：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/data/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=53</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db03 [\\d]&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>初始化数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql  --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><p><strong>启动数据库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld start</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><p><strong>构建主从</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">master:51slave:52,53</span><br><span class="line"></span><br><span class="line"><span class="comment">#51</span></span><br><span class="line">grant replication slave  on *.* to repl@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#52、53</span></span><br><span class="line">change master to </span><br><span class="line">master_host=<span class="string">'10.0.1.51'</span>,</span><br><span class="line">master_user=<span class="string">'repl'</span>,</span><br><span class="line">master_password=<span class="string">'123'</span> ,</span><br><span class="line">MASTER_AUTO_POSITION=1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><h4 id="2-4-3-配置关键程序软连接"><a href="#2-4-3-配置关键程序软连接" class="headerlink" title="2.4.3 配置关键程序软连接"></a>2.4.3 配置关键程序软连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /data/mysql/bin/mysqlbinlog    /usr/bin/mysqlbinlog</span><br><span class="line">ln -s /data/mysql/bin/mysql          /usr/bin/mysql</span><br></pre></td></tr></table></figure><h4 id="2-4-4-配置各节点互信"><a href="#2-4-4-配置各节点互信" class="headerlink" title="2.4.4 配置各节点互信"></a>2.4.4 配置各节点互信</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">db01：</span><br><span class="line">rm -rf /root/.ssh </span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="built_in">cd</span> /root/.ssh </span><br><span class="line">mv id_rsa.pub authorized_keys</span><br><span class="line">scp -r /root/.ssh 10.0.1.52:/root/</span><br><span class="line">scp -r /root/.ssh 10.0.1.53:/root/</span><br><span class="line">各节点验证</span><br><span class="line">db01:</span><br><span class="line">ssh 10.0.1.51 date</span><br><span class="line">ssh 10.0.1.52 date</span><br><span class="line">ssh 10.0.1.53 date</span><br><span class="line">db02:</span><br><span class="line">ssh 10.0.1.51 date</span><br><span class="line">ssh 10.0.1.52 date</span><br><span class="line">ssh 10.0.1.53 date</span><br><span class="line">db03:</span><br><span class="line">ssh 10.0.1.51 date</span><br><span class="line">ssh 10.0.1.52 date</span><br><span class="line">ssh 10.0.1.53 date</span><br></pre></td></tr></table></figure><h4 id="2-4-5-安装软件"><a href="#2-4-5-安装软件" class="headerlink" title="2.4.5 安装软件"></a>2.4.5 安装软件</h4><p><strong>下载MHA软件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mha官网：https://code.google.com/archive/p/mysql-master-ha/</span><br><span class="line">github下载地址：https://github.com/yoshinorim/mha4mysql-manager/wiki/Downloads</span><br></pre></td></tr></table></figure><p><strong>所有节点安装Node软件依赖包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install perl-DBD-MySQL</span><br><span class="line">rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm</span><br></pre></td></tr></table></figure><p><strong>在db01主库中创建mha需要的用户</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to mha@<span class="string">'10.0.1.%'</span> identified by <span class="string">'mha'</span>;</span><br></pre></td></tr></table></figure><p><strong>Manager软件安装（db03）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y perl-Config-Tiny epel-release perl-Log-Dispatch perl-Parallel-ForkManager perl-Time-HiRes</span></span><br><span class="line"><span class="comment"># rpm -ivh mha4mysql-manager-0.56-0.el6.noarch.rpm</span></span><br></pre></td></tr></table></figure><p><strong>2.4.6 配置文件准备(db03)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建配置文件目录</span></span><br><span class="line"> mkdir -p /etc/mha</span><br><span class="line"><span class="comment">#创建日志目录</span></span><br><span class="line"> mkdir -p /var/<span class="built_in">log</span>/mha/app1</span><br><span class="line"><span class="comment">#编辑mha配置文件</span></span><br><span class="line">vim /etc/mha/app1.cnf</span><br><span class="line">[server default]</span><br><span class="line">manager_log=/var/<span class="built_in">log</span>/mha/app1/manager        </span><br><span class="line">manager_workdir=/var/<span class="built_in">log</span>/mha/app1            </span><br><span class="line">master_binlog_dir=/data/binlog       </span><br><span class="line">user=mha                                   </span><br><span class="line">password=mha                               </span><br><span class="line">ping_interval=2</span><br><span class="line">repl_password=123</span><br><span class="line">repl_user=repl</span><br><span class="line">ssh_user=root                               </span><br><span class="line">[server1]                                   </span><br><span class="line">hostname=10.0.1.51</span><br><span class="line">port=3306                                  </span><br><span class="line">[server2]            </span><br><span class="line">hostname=10.0.1.52</span><br><span class="line">port=3306</span><br><span class="line">[server3]</span><br><span class="line">hostname=10.0.1.53</span><br><span class="line">port=3306</span><br></pre></td></tr></table></figure><h4 id="2-4-7-状态检查"><a href="#2-4-7-状态检查" class="headerlink" title="2.4.7 状态检查"></a>2.4.7 状态检查</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#互信检查</span></span><br><span class="line">[root@db03 ~]<span class="comment"># masterha_check_ssh  --conf=/etc/mha/app1.cnf </span></span><br><span class="line">Fri Oct 25 04:29:50 2019 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [info] Reading application default configuration from /etc/mha/app1.cnf..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [info] Reading server configuration from /etc/mha/app1.cnf..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [info] Starting SSH connection tests..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug] </span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]  Connecting via SSH from root@10.0.1.51(10.0.1.51:22) to root@10.0.1.52(10.0.1.52:22)..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]  Connecting via SSH from root@10.0.1.51(10.0.1.51:22) to root@10.0.1.53(10.0.1.53:22)..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug] </span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]  Connecting via SSH from root@10.0.1.52(10.0.1.52:22) to root@10.0.1.51(10.0.1.51:22)..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]  Connecting via SSH from root@10.0.1.52(10.0.1.52:22) to root@10.0.1.53(10.0.1.53:22)..</span><br><span class="line">Fri Oct 25 04:29:50 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug] </span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug]  Connecting via SSH from root@10.0.1.53(10.0.1.53:22) to root@10.0.1.51(10.0.1.51:22)..</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug]  Connecting via SSH from root@10.0.1.53(10.0.1.53:22) to root@10.0.1.52(10.0.1.52:22)..</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [debug]   ok.</span><br><span class="line">Fri Oct 25 04:29:51 2019 - [info] All SSH connection tests passed successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment">#主从状态检查</span></span><br><span class="line">[root@db03 ~]<span class="comment"># masterha_check_repl  --conf=/etc/mha/app1.cnf</span></span><br><span class="line">Fri Oct 25 04:51:22 2019 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Fri Oct 25 04:51:22 2019 - [info] Reading application default configuration from /etc/mha/app1.cnf..</span><br><span class="line">Fri Oct 25 04:51:22 2019 - [info] Reading server configuration from /etc/mha/app1.cnf..</span><br><span class="line">Fri Oct 25 04:51:22 2019 - [info] MHA::MasterMonitor version 0.56.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] GTID failover mode = 1</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Dead Servers:</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Alive Servers:</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]   10.0.1.51(10.0.1.51:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]   10.0.1.52(10.0.1.52:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]   10.0.1.53(10.0.1.53:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Alive Slaves:</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]   10.0.1.52(10.0.1.52:3306)  Version=5.7.26-log (oldest major version between slaves) <span class="built_in">log</span>-bin:enabled</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]     GTID ON</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]     Replicating from 10.0.1.51(10.0.1.51:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]   10.0.1.53(10.0.1.53:3306)  Version=5.7.26-log (oldest major version between slaves) <span class="built_in">log</span>-bin:enabled</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]     GTID ON</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]     Replicating from 10.0.1.51(10.0.1.51:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Current Alive Master: 10.0.1.51(10.0.1.51:3306)</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Checking slave configurations..</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  read_only=1 is not <span class="built_in">set</span> on slave 10.0.1.52(10.0.1.52:3306).</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  read_only=1 is not <span class="built_in">set</span> on slave 10.0.1.53(10.0.1.53:3306).</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Checking replication filtering settings..</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  binlog_do_db= , binlog_ignore_db= </span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  Replication filtering check ok.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] GTID (with auto-pos) is supported. Skipping all SSH and Node package checking.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Checking SSH publickey authentication settings on the current master..</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] HealthCheck: SSH to 10.0.1.51 is reachable.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] </span><br><span class="line">10.0.1.51(10.0.1.51:3306) (current master)</span><br><span class="line"> +--10.0.1.52(10.0.1.52:3306)</span><br><span class="line"> +--10.0.1.53(10.0.1.53:3306)</span><br><span class="line"></span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Checking replication health on 10.0.1.52..</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  ok.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Checking replication health on 10.0.1.53..</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info]  ok.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [warning] shutdown_script is not defined.</span><br><span class="line">Fri Oct 25 04:51:23 2019 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><h4 id="2-4-8-开启MHA-db03-："><a href="#2-4-8-开启MHA-db03-：" class="headerlink" title="2.4.8 开启MHA(db03)："></a>2.4.8 开启MHA(db03)：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span></span><br><span class="line">[1] 1755</span><br></pre></td></tr></table></figure><h4 id="2-4-9-查看MHA状态"><a href="#2-4-9-查看MHA状态" class="headerlink" title="2.4.9 查看MHA状态"></a>2.4.9 查看MHA状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># masterha_check_status --conf=/etc/mha/app1.cnf</span></span><br><span class="line">app1 (pid:1755) is running(0:PING_OK), master:10.0.1.51</span><br><span class="line"></span><br><span class="line">[root@db03 ~]<span class="comment"># mysql -umha -pmha -h 10.0.1.51 -e "show variables like 'server_id'"</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 51    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">[root@db03 ~]<span class="comment"># mysql -umha -pmha -h 10.0.1.52 -e "show variables like 'server_id'"</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 52    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">[root@db03 ~]<span class="comment"># mysql -umha -pmha -h 10.0.1.53 -e "show variables like 'server_id'"</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 53    |</span><br><span class="line">+---------------+-------+</span><br></pre></td></tr></table></figure><h4 id="2-4-10-故障模拟及处理"><a href="#2-4-10-故障模拟及处理" class="headerlink" title="2.4.10 故障模拟及处理"></a>2.4.10 故障模拟及处理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 停主库db01:    </span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl stop mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#观察manager  日志 tail -f /var/log/mha/app1/manager 末尾必须显示successfully，才算正常切换成功。 </span></span><br><span class="line">[root@db03 ~]<span class="comment"># tail -f /var/log/mha/app1/manager</span></span><br><span class="line">Master 10.0.1.51(10.0.1.51:3306) is down!</span><br><span class="line"></span><br><span class="line">Check MHA Manager logs at db03:/var/<span class="built_in">log</span>/mha/app1/manager <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Selected 10.0.1.52(10.0.1.52:3306) as a new master.</span><br><span class="line">10.0.1.52(10.0.1.52:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.0.1.53(10.0.1.53:3306): OK: Slave started, replicating from 10.0.1.52(10.0.1.52:3306)</span><br><span class="line">10.0.1.52(10.0.1.52:3306): Resetting slave info succeeded.</span><br><span class="line">Master failover to 10.0.1.52(10.0.1.52:3306) completed successfully.</span><br></pre></td></tr></table></figure><p><strong>查看db02变成主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">db02 [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000003 |      194 |              |                  | 39b29c3b-f69b-11e9-a428-000c29cfb981:1-4 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">db03 [(none)]&gt;show slave status \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 10.0.1.52</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 194</span><br><span class="line">               Relay_Log_File: db03-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><p><strong>启动db01</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><p><strong>恢复主从结构，db02变成主库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;CHANGE MASTER TO </span><br><span class="line">    -&gt; MASTER_HOST=<span class="string">'10.0.1.52'</span>,</span><br><span class="line">    -&gt; MASTER_PORT=3306, </span><br><span class="line">    -&gt; MASTER_AUTO_POSITION=1, </span><br><span class="line">    -&gt; MASTER_USER=<span class="string">'repl'</span>, </span><br><span class="line">    -&gt; MASTER_PASSWORD=<span class="string">'123'</span>;</span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show slave status \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 10.0.1.52</span><br><span class="line">                  Master_User: repl</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 194</span><br><span class="line">               Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 367</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><p><strong>修改db03 MHA配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># vim /etc/mha/app1.cnf</span></span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.1.51</span><br><span class="line">port=3306</span><br></pre></td></tr></table></figure><p><strong>启动MHA</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span></span><br><span class="line">[1] 1959</span><br><span class="line">[root@db03 ~]<span class="comment"># masterha_check_status --conf=/etc/mha/app1.cnf</span></span><br><span class="line">app1 (pid:1959) is running(0:PING_OK), master:10.0.1.52</span><br></pre></td></tr></table></figure><h4 id="2-4-11-Manager额外参数介绍"><a href="#2-4-11-Manager额外参数介绍" class="headerlink" title="2.4.11 Manager额外参数介绍"></a>2.4.11 Manager额外参数介绍</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">说明：</span><br><span class="line">主库宕机谁来接管？</span><br><span class="line">1. 所有从节点日志都是一致的，默认会以配置文件的顺序去选择一个新主。</span><br><span class="line">2. 从节点日志不一致，自动选择最接近于主库的从库</span><br><span class="line">3. 如果对于某节点设定了权重（candidate_master=1），权重节点会优先选择。</span><br><span class="line">但是此节点日志量落后主库100M日志的话，也不会被选择。可以配合check_repl_delay=0，关闭日志量的检查，强制选择候选节点。</span><br><span class="line"></span><br><span class="line">(1)  ping_interval=1</span><br><span class="line"><span class="comment">#设置监控主库，发送ping包的时间间隔，尝试三次没有回应的时候自动进行failover</span></span><br><span class="line">(2) candidate_master=1</span><br><span class="line"><span class="comment">#设置为候选master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的slave</span></span><br><span class="line">(3)check_repl_delay=0</span><br><span class="line"><span class="comment">#默认情况下如果一个slave落后master 100M的relay logs的话，</span></span><br><span class="line">MHA将不会选择该slave作为一个新的master，因为对于这个slave的恢复需要花费很长时间，通过设置check_repl_delay=0,MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master=1的主机非常有用，因为这个候选主在切换的过程中一定是新的master</span><br></pre></td></tr></table></figure><h4 id="2-4-12-MHA-的vip功能"><a href="#2-4-12-MHA-的vip功能" class="headerlink" title="2.4.12 MHA 的vip功能"></a>2.4.12 MHA 的vip功能</h4><p><strong>参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mha/app1.cnf</span><br><span class="line">master_ip_failover_script=/usr/<span class="built_in">local</span>/bin/master_ip_failover</span><br></pre></td></tr></table></figure><p><strong>拷贝脚本至指定位置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># cp master_ip_failover.txt /usr/local/bin/master_ip_failover</span></span><br></pre></td></tr></table></figure><p><strong>修改脚本内容：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># vim  /usr/local/bin/master_ip_failover</span></span><br><span class="line">修改为:</span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">'10.0.1.55/24'</span>;</span><br><span class="line">my <span class="variable">$key</span> = <span class="string">'1'</span>;</span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">"/sbin/ifconfig eth0:<span class="variable">$key</span> <span class="variable">$vip</span>"</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">"/sbin/ifconfig eth0:<span class="variable">$key</span> down"</span>;</span><br><span class="line"></span><br><span class="line">[root@db03 ~]<span class="comment"># yum -y install dos2unix</span></span><br><span class="line">[root@db03 ~]<span class="comment"># dos2unix /usr/local/bin/master_ip_failover </span></span><br><span class="line">dos2unix: converting file /usr/<span class="built_in">local</span>/bin/master_ip_failover to Unix format ...</span><br><span class="line">[root@db03 ~]<span class="comment"># chmod +x /usr/local/bin/master_ip_failover</span></span><br></pre></td></tr></table></figure><p><strong>主库上，手工生成第一个vip地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">手工在主库上绑定vip，注意一定要和配置文件中的ethN一致，我的是eth0:1(1是key指定的值)</span><br><span class="line">ifconfig eth0:1 10.0.1.55/24</span><br></pre></td></tr></table></figure><p><strong>重启mha</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span></span><br><span class="line">[root@db03 ~]<span class="comment"># masterha_check_status --conf=/etc/mha/app1.cnf</span></span><br></pre></td></tr></table></figure><h4 id="2-4-13-邮件提醒"><a href="#2-4-13-邮件提醒" class="headerlink" title="2.4.13 邮件提醒"></a>2.4.13 邮件提醒</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1. 参数：</span><br><span class="line">report_script=/usr/<span class="built_in">local</span>/bin/send</span><br><span class="line">2. 准备邮件脚本</span><br><span class="line">send_report</span><br><span class="line">(1)准备发邮件的脚本(上传 email_2019-最新.zip中的脚本，到/usr/<span class="built_in">local</span>/bin/中)</span><br><span class="line">(2)将准备好的脚本添加到mha配置文件中,让其调用</span><br><span class="line">[root@db03 /usr/<span class="built_in">local</span>/bin]<span class="comment"># chmod +x send</span></span><br><span class="line">[root@db03 /usr/<span class="built_in">local</span>/bin]<span class="comment"># chmod +x sendEmail </span></span><br><span class="line">[root@db03 /usr/<span class="built_in">local</span>/bin]<span class="comment"># chmod +x testpl</span></span><br><span class="line"></span><br><span class="line">3. 修改manager配置文件，调用邮件脚本</span><br><span class="line">vi /etc/mha/app1.cnf</span><br><span class="line">report_script=/usr/<span class="built_in">local</span>/bin/send</span><br><span class="line"></span><br><span class="line">（3）停止MHA</span><br><span class="line">masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">（4）开启MHA    </span><br><span class="line">nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /var/<span class="built_in">log</span>/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line">        </span><br><span class="line">(5) 关闭主库,看警告邮件  </span><br><span class="line">故障修复：</span><br><span class="line">1. 恢复故障节点</span><br><span class="line">（1）实例宕掉</span><br><span class="line">/etc/init.d/mysqld start </span><br><span class="line">（2）主机损坏，有可能数据也损坏了</span><br><span class="line">备份并恢复故障节点。</span><br><span class="line">2.恢复主从环境</span><br><span class="line">看日志文件：</span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">'10.0.1.52'</span>, MASTER_PORT=3306, MASTER_AUTO_POSITION=1, MASTER_USER=<span class="string">'repl'</span>, MASTER_PASSWORD=<span class="string">'123'</span>;</span><br><span class="line">start slave ;</span><br><span class="line">3.恢复manager</span><br><span class="line">3.1 修好的故障节点配置信息，加入到配置文件</span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.1.51</span><br><span class="line">port=3306</span><br><span class="line">3.2 启动manager   </span><br><span class="line">nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /var/<span class="built_in">log</span>/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h4 id="2-4-14-binlog-server（db03）"><a href="#2-4-14-binlog-server（db03）" class="headerlink" title="2.4.14 binlog server（db03）"></a>2.4.14 binlog server（db03）</h4><p><strong>参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">binlogserver配置：</span><br><span class="line">找一台额外的机器，必须要有5.6以上的版本，支持gtid并开启，我们直接用的第二个slave（db03）</span><br><span class="line">vim /etc/mha/app1.cnf </span><br><span class="line">[binlog1]</span><br><span class="line">no_master=1</span><br><span class="line">hostname=10.0.1.53</span><br><span class="line">master_binlog_dir=/data/mysql/binlog</span><br></pre></td></tr></table></figure><p><strong>创建必要目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/mysql/binlog</span><br><span class="line">chown -R mysql.mysql /data/*</span><br><span class="line">修改完成后，将主库binlog拉过来（从000001开始拉，之后的binlog会自动按顺序过来）</span><br></pre></td></tr></table></figure><p><strong>拉取主库binlog日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/mysql/binlog     -----》必须进入到自己创建好的目录</span><br><span class="line">mysqlbinlog  -R --host=10.0.1.52 --user=mha --password=mha --raw  --stop-never mysql-bin.000001 &amp;</span><br><span class="line">注意：</span><br><span class="line">拉取日志的起点,需要按照目前从库的已经获取到的二进制日志点为起点</span><br><span class="line">[root@db03 /data/mysql/binlog]<span class="comment"># ll</span></span><br><span class="line">total 12</span><br><span class="line">-rw-r----- 1 root root  177 Oct 25 05:38 mysql-bin.000001</span><br><span class="line">-rw-r----- 1 root root 1199 Oct 25 05:38 mysql-bin.000002</span><br><span class="line">-rw-r----- 1 root root  194 Oct 25 05:38 mysql-bin.000003</span><br></pre></td></tr></table></figure><p><strong>重启MHA</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]<span class="comment"># masterha_stop --conf=/etc/mha/app1.cnf</span></span><br><span class="line">[root@db03 ~]<span class="comment"># nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span></span><br><span class="line">[root@db03 ~]<span class="comment"># masterha_check_status --conf=/etc/mha/app1.cnf</span></span><br></pre></td></tr></table></figure><p><strong>故障处理</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主库宕机，binlogserver 自动停掉，manager 也会自动停止。</span><br><span class="line">处理思路：</span><br><span class="line">1、重新获取新主库的binlog到binlogserver中</span><br><span class="line">2、重新配置文件binlog server信息</span><br><span class="line">3、最后再启动MHA</span><br></pre></td></tr></table></figure><h2 id="第3章-管理员在高可用架构维护的职责"><a href="#第3章-管理员在高可用架构维护的职责" class="headerlink" title="第3章 管理员在高可用架构维护的职责"></a>第3章 管理员在高可用架构维护的职责</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 搭建：MHA+VIP+SendReport+BinlogServer</span><br><span class="line">2. 监控及故障处理</span><br><span class="line">3. 高可用架构的优化</span><br><span class="line"> 核心是：尽可能降低主从的延时，让MHA花在数据补偿上的时间尽量减少。</span><br><span class="line">5.7 版本，开启GTID模式，开启从库SQL并发复制。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
      <category term="MHA高可用" scheme="http://linuxwf.com/tags/MHA%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>8.MySQL主从复制</title>
    <link href="http://linuxwf.com/2020/04/15/8-MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>http://linuxwf.com/2020/04/15/8-MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</id>
    <published>2020-04-15T02:21:00.000Z</published>
    <updated>2020-04-15T02:21:59.994Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="第8课-MySQL主从复制"><a href="#第8课-MySQL主从复制" class="headerlink" title="第8课 MySQL主从复制"></a>第8课 MySQL主从复制</h1><h2 id="第1章-企业高可用性标准"><a href="#第1章-企业高可用性标准" class="headerlink" title="第1章 企业高可用性标准"></a>第1章 企业高可用性标准</h2><h3 id="1-1-全年无故障率-非计划内故障停机"><a href="#1-1-全年无故障率-非计划内故障停机" class="headerlink" title="1.1 全年无故障率(非计划内故障停机)"></a>1.1 全年无故障率(非计划内故障停机)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">99.9%                 ----&gt; 0.001*365*24*60=525.6  min</span><br><span class="line">99.99%                ----&gt; 0.0001*365*24*60=52.56 min</span><br><span class="line">99.999%               ----&gt; 0.0001*365*24*60=5.256 min</span><br></pre></td></tr></table></figure><h3 id="1-2-高可用架构方案"><a href="#1-2-高可用架构方案" class="headerlink" title="1.2 高可用架构方案"></a>1.2 高可用架构方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">负载均衡:有一定的高可用性 </span><br><span class="line">LVS  Nginx</span><br><span class="line">主备系统:有高可用性,但是需要切换,是单活的架构</span><br><span class="line">KA ,   MHA, MMM</span><br><span class="line">真正高可用(多活系统): </span><br><span class="line">NDB Cluster  Oracle RAC  Sysbase cluster   , InnoDB Cluster（MGR）,PXC , MGC</span><br></pre></td></tr></table></figure><h2 id="第2章-主从复制"><a href="#第2章-主从复制" class="headerlink" title="第2章 主从复制"></a>第2章 主从复制</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.1. 基于二进制日志复制的</span><br><span class="line">1.2. 主库的修改操作会记录二进制日志</span><br><span class="line">1.3. 从库会请求新的二进制日志并回放,最终达到主从数据同步</span><br><span class="line">1.4. 主从复制核心功能:</span><br><span class="line">辅助备份,处理物理损坏                   </span><br><span class="line">扩展新型的架构:高可用,高性能,分布式架构等</span><br></pre></td></tr></table></figure><h3 id="2-2-主从复制前提-搭建主从的过程"><a href="#2-2-主从复制前提-搭建主从的过程" class="headerlink" title="2.2 主从复制前提(搭建主从的过程)"></a>2.2 主从复制前提(搭建主从的过程)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 2.1 两台以上mysql实例 ,server_id,server_uuid不同</span></span><br><span class="line"><span class="comment">## 2.2 主库开启二进制日志</span></span><br><span class="line"><span class="comment">## 2.3 专用的复制用户</span></span><br><span class="line"><span class="comment">## 2.4 保证主从开启之前的某个时间点,从库数据是和主库一致(补课)</span></span><br><span class="line"><span class="comment">## 2.5 告知从库,复制user,passwd,IP port,以及复制起点(change master to)</span></span><br><span class="line"><span class="comment">## 2.6 线程(三个):Dump thread  IO thread  SQL thread 开启(start slave)</span></span><br></pre></td></tr></table></figure><h2 id="第3章-主从复制搭建"><a href="#第3章-主从复制搭建" class="headerlink" title="第3章 主从复制搭建"></a>第3章 主从复制搭建</h2><h3 id="3-1-准备两个数据库实例-3307-主-3308-从"><a href="#3-1-准备两个数据库实例-3307-主-3308-从" class="headerlink" title="3.1 准备两个数据库实例(3307(主),3308(从))"></a>3.1 准备两个数据库实例(3307(主),3308(从))</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略</span><br></pre></td></tr></table></figure><h3 id="3-2-修改主库my-cnf-开启二进制日志功能"><a href="#3-2-修改主库my-cnf-开启二进制日志功能" class="headerlink" title="3.2 修改主库my.cnf 开启二进制日志功能"></a>3.2 修改主库my.cnf 开启二进制日志功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># vim /data/3307/my.cnf </span></span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line">datadir=/data/3307/data</span><br><span class="line">server_id=7</span><br><span class="line">socket=/data/3307/mysql.sock</span><br><span class="line">port=3307</span><br><span class="line">log_bin=/data/3307/mysql-bin</span><br></pre></td></tr></table></figure><h3 id="3-3-启动所有节点"><a href="#3-3-启动所有节点" class="headerlink" title="3.3 启动所有节点"></a>3.3 启动所有节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld3307</span><br><span class="line">systemctl start mysqld3308</span><br></pre></td></tr></table></figure><h3 id="3-4-主库创建复制用户-3307-主库"><a href="#3-4-主库创建复制用户-3307-主库" class="headerlink" title="3.4 主库创建复制用户(3307 主库)"></a>3.4 主库创建复制用户(3307 主库)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql -S /data/3307/mysql.sock </span></span><br><span class="line">mysql&gt; grant replication slave on *.* to repl@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><h3 id="3-5-备份主库数据恢复到从库"><a href="#3-5-备份主库数据恢复到从库" class="headerlink" title="3.5 备份主库数据恢复到从库"></a>3.5 备份主库数据恢复到从库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqldump -uroot -S /data/3307/mysql.sock -A --master-data=2 --single-transaction -R -E --triggers &gt;/tmp/full.sql</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysql -S /data/3308/mysql.sock &lt;/tmp/full.sql</span></span><br></pre></td></tr></table></figure><h3 id="3-6-配置从库"><a href="#3-6-配置从库" class="headerlink" title="3.6 配置从库"></a>3.6 配置从库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysql -S /data/3308/mysql.sock </span></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST=<span class="string">'10.0.1.51'</span>,</span><br><span class="line">  MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">  MASTER_PASSWORD=<span class="string">'123456'</span>,</span><br><span class="line">  MASTER_PORT=3307,</span><br><span class="line">  MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>,</span><br><span class="line">  MASTER_LOG_POS=154,</span><br><span class="line">  MASTER_CONNECT_RETRY=10;</span><br></pre></td></tr></table></figure><h3 id="3-7-开启主从专用线程"><a href="#3-7-开启主从专用线程" class="headerlink" title="3.7 开启主从专用线程"></a>3.7 开启主从专用线程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave ;</span><br></pre></td></tr></table></figure><h3 id="3-8-检查状态"><a href="#3-8-检查状态" class="headerlink" title="3.8 检查状态"></a>3.8 检查状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status \G</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line"></span><br><span class="line">[root@db01 ~]<span class="comment"># mysql  -S /data/3308/mysql.sock -e "show slave status \G"|grep "Running:";</span></span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h3 id="3-9-如果搭建报错-解决方法"><a href="#3-9-如果搭建报错-解决方法" class="headerlink" title="3.9 如果搭建报错,解决方法"></a>3.9 如果搭建报错,解决方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stop slave ;</span><br><span class="line">reset slave all;</span><br><span class="line">change master to ...</span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><h2 id="第4章-主从复制的原理"><a href="#第4章-主从复制的原理" class="headerlink" title="第4章 主从复制的原理"></a>第4章 主从复制的原理</h2><h3 id="4-1-主从中设置到的文件和线程"><a href="#4-1-主从中设置到的文件和线程" class="headerlink" title="4.1 主从中设置到的文件和线程"></a>4.1 主从中设置到的文件和线程</h3><h4 id="4-1-1-线程"><a href="#4-1-1-线程" class="headerlink" title="4.1.1 线程"></a>4.1.1 线程</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主:</span><br><span class="line">DUMP THREAD</span><br><span class="line">从:</span><br><span class="line">IO  THREAD</span><br><span class="line">SQL THREAD</span><br></pre></td></tr></table></figure><h4 id="4-1-2-文件"><a href="#4-1-2-文件" class="headerlink" title="4.1.2 文件"></a>4.1.2 文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主:</span><br><span class="line">mysql-bin.000001</span><br><span class="line">从: </span><br><span class="line">db01-relay.000001     ===&gt;中继日志</span><br><span class="line">master.info                 ===》主库信息记录日志</span><br><span class="line">relay-log.info              ===&gt; 记录中继应用情况信息</span><br></pre></td></tr></table></figure><h3 id="4-2-主从复制原理"><a href="#4-2-主从复制原理" class="headerlink" title="4.2 主从复制原理"></a>4.2 主从复制原理</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql16.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql17.png"  alt=""></p><p><strong>主从复制原理描述：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(1) 从库 执行change master to语句 ,将以下信息保存至master.info文件中</span><br><span class="line">(2) 从库 start slave , 从库IO_T和SQL_T生成</span><br><span class="line">(3)Io_T ,读取master.info中主库连接信息(ip , port, user,password)</span><br><span class="line">   连接主库,主库专门开启Dump_T,和从库IO_T进行交互</span><br><span class="line">(5) IO_T,读取 master.info ,复制的起点信息,找主库DUMP要最新的binlog</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>,MASTER_LOG_POS=154</span><br><span class="line">(6)主库dump_T,截取最新的binlog,发送给从库IO_T</span><br><span class="line">(7)扩展: 基于TCP/IP网络工作模式,IO_T将日志存储到TCP/Ip缓存中,并返回ACK给主库.</span><br><span class="line">(8) IO_T最终会将缓存中数据,写入到relay_log文件中保存.更新master.info为新位置点.</span><br><span class="line">(9) SQL_T,读取relay-log.info信息,获取上次SQL_T回放的位置点.</span><br><span class="line">(10)SQL_T,根据位置点,向下回放最新的relaylog.并且再次更新relay-log.info文件为最新点.</span><br><span class="line">补充:</span><br><span class="line">(11) 主库dump_T 会持续的监控binlog的变化,一旦有新的日志生成,给从库发一些信号.</span><br><span class="line">(12) 从库 relay_log_purge线程会定期自动清理回放过的relay日志.</span><br><span class="line">细节：</span><br><span class="line">1.主库一旦有新的日志生成，会发送“信号”给binlog dump ，IO线程再请求</span><br></pre></td></tr></table></figure><h2 id="第5章-主从故障监控-分析-处理"><a href="#第5章-主从故障监控-分析-处理" class="headerlink" title="第5章 主从故障监控\分析\处理"></a>第5章 主从故障监控\分析\处理</h2><h3 id="5-1-线程相关监控"><a href="#5-1-线程相关监控" class="headerlink" title="5.1 线程相关监控"></a>5.1 线程相关监控</h3><h4 id="5-1-1-主库信息监控-master-info"><a href="#5-1-1-主库信息监控-master-info" class="headerlink" title="5.1.1 主库信息监控(master.info)"></a>5.1.1 主库信息监控(master.info)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status \G</span><br><span class="line">(1) 主库信息监控(master.info)</span><br><span class="line">Master_Host: 10.0.1.51</span><br><span class="line">Master_User: repl</span><br><span class="line">Master_Port: 3307</span><br><span class="line">Connect_Retry: 10</span><br><span class="line">Master_Log_File: mysql-bin.000003</span><br><span class="line">Read_Master_Log_Pos: 154</span><br></pre></td></tr></table></figure><h4 id="5-1-2-从库relay-log的应用信息-relay-log-info"><a href="#5-1-2-从库relay-log的应用信息-relay-log-info" class="headerlink" title="5.1.2 从库relay-log的应用信息(relay-log.info)"></a>5.1.2 从库relay-log的应用信息(relay-log.info)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(2) 从库relay-log的应用信息(relay-log.info)</span><br><span class="line">Relay_Log_File: db01-relay-bin.000008</span><br><span class="line">Relay_Log_Pos: 367</span><br><span class="line">Relay_Master_Log_File: mysql-bin.000003</span><br></pre></td></tr></table></figure><h4 id="5-1-3-从库线程工作状态"><a href="#5-1-3-从库线程工作状态" class="headerlink" title="5.1.3 从库线程工作状态"></a>5.1.3 从库线程工作状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(3) 从库线程工作状态</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">Last_IO_Errno: 0</span><br><span class="line">Last_IO_Error: </span><br><span class="line">Last_SQL_Errno: 0</span><br><span class="line">Last_SQL_Error:</span><br></pre></td></tr></table></figure><h4 id="5-1-4-过滤复制有关信息"><a href="#5-1-4-过滤复制有关信息" class="headerlink" title="5.1.4 过滤复制有关信息"></a>5.1.4 过滤复制有关信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Replicate_Do_DB: </span><br><span class="line">Replicate_Ignore_DB: </span><br><span class="line">Replicate_Do_Table: </span><br><span class="line">Replicate_Ignore_Table: </span><br><span class="line">Replicate_Wild_Do_Table: </span><br><span class="line">Replicate_Wild_Ignore_Table:</span><br></pre></td></tr></table></figure><h4 id="5-1-5-主从延时时间"><a href="#5-1-5-主从延时时间" class="headerlink" title="5.1.5 主从延时时间"></a>5.1.5 主从延时时间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Seconds_Behind_Master: 0</span><br></pre></td></tr></table></figure><h4 id="5-1-6-延时从库的状态"><a href="#5-1-6-延时从库的状态" class="headerlink" title="5.1.6 延时从库的状态"></a>5.1.6 延时从库的状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL_Delay: 0</span><br><span class="line">SQL_Remaining_Delay: NULL</span><br></pre></td></tr></table></figure><h4 id="5-1-7-GTID复制有关"><a href="#5-1-7-GTID复制有关" class="headerlink" title="5.1.7 GTID复制有关"></a>5.1.7 GTID复制有关</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Retrieved_Gtid_Set: </span><br><span class="line">Executed_Gtid_Set:</span><br></pre></td></tr></table></figure><h3 id="5-2-主从复制故障分析"><a href="#5-2-主从复制故障分析" class="headerlink" title="5.2 主从复制故障分析"></a>5.2 主从复制故障分析</h3><h4 id="5-2-1-IO线程故障"><a href="#5-2-1-IO线程故障" class="headerlink" title="5.2.1 IO线程故障"></a>5.2.1 IO线程故障</h4><p>(1) 连接主库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(1) 连接主库 </span><br><span class="line">网络不通,防火墙</span><br><span class="line">连接信息错误(ip,port,user,password)</span><br><span class="line"></span><br><span class="line">[root@db01 data]<span class="comment"># mysql -urepl1 -p123 -h10.0.1.51 -P3307</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): Access denied <span class="keyword">for</span> user <span class="string">'repl1'</span>@<span class="string">'db01'</span> (using password: YES)</span><br><span class="line">[root@db01 data]<span class="comment"># mysql -urepl -p12311 -h10.0.1.51 -P3307</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 1045 (28000): Access denied <span class="keyword">for</span> user <span class="string">'repl'</span>@<span class="string">'db01'</span> (using password: YES)</span><br><span class="line">[root@db01 data]<span class="comment"># mysql -urepl -p123 -h10.0.1.55 -P3307</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 2003 (HY000): Can<span class="string">'t connect to MySQL server on '</span>10.0.1.55<span class="string">' (113)</span></span><br><span class="line"><span class="string">[root@db01 data]# mysql -urepl -p123 -h10.0.1.51 -P33011</span></span><br><span class="line"><span class="string">mysql: [Warning] Using a password on the command line interface can be insecure.</span></span><br><span class="line"><span class="string">ERROR 2003 (HY000): Can'</span>t connect to MySQL server on <span class="string">'10.0.1.51'</span> (111)</span><br><span class="line"></span><br><span class="line">解决方法: </span><br><span class="line">stop slave;</span><br><span class="line">reset slave all; </span><br><span class="line">重新change master to </span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><p><strong>主库连接数上线,或者是主库太繁忙</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show slave  staus \G </span><br><span class="line">Last_IO_Errno: 1040</span><br><span class="line">Last_IO_Error: error reconnecting to master <span class="string">'repl@10.0.0.51:3307'</span> - retry-time: 10  retries: 7</span><br><span class="line">处理思路:</span><br><span class="line">拿复制用户,手工连接一下</span><br><span class="line"></span><br><span class="line">[root@db01 ~]<span class="comment"># mysql -urepl -p123 -h 10.0.0.51 -P 3307 </span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">ERROR 1040 (HY000): Too many connections</span><br><span class="line">处理方法:</span><br><span class="line">db01 [(none)]&gt;<span class="built_in">set</span> global max_connections=300;</span><br><span class="line"></span><br><span class="line">(3) 防火墙,网络不通</span><br></pre></td></tr></table></figure><p>(2) 请求二进制日志 (最常见报错)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(2) 请求日志 (最常见报错)</span><br><span class="line">主库日志损坏 ,丢失,不连续</span><br><span class="line"></span><br><span class="line"><span class="comment">#说明: </span></span><br><span class="line">在主从复制环境中,严令禁止主库中reset master; 可以选择expire 进行定期清理主库二进制日志</span><br><span class="line"><span class="comment">#解决方案:</span></span><br><span class="line">最好的办法是重新构建主库.</span><br></pre></td></tr></table></figure><h4 id="5-2-2-SQL-线程故障"><a href="#5-2-2-SQL-线程故障" class="headerlink" title="5.2.2 SQL 线程故障"></a>5.2.2 SQL 线程故障</h4><p>SQL线程功能：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)读写relay-log.info </span><br><span class="line">(2)relay-log损坏,断节,找不到</span><br><span class="line">(3)接收到的SQL无法执行</span><br></pre></td></tr></table></figure><p>导致SQL线程故障原因分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">回放日志 (为什么SQL语句执行失败?)</span><br><span class="line">1. 版本差异，参数设定不同，比如：数据类型的差异，SQL_MODE影响</span><br><span class="line">2.要创建的数据库对象,已经存在</span><br><span class="line">3.要删除或修改的对象不存在  </span><br><span class="line">4.DML语句不符合表定义及约束时.  </span><br><span class="line">归根揭底的原因都是由于从库发生了写入操作.</span><br><span class="line">Last_SQL_Error: Error <span class="string">'Can'</span>t create database <span class="string">'db'</span>; database exists<span class="string">' on query. Default database: '</span>db<span class="string">'. Query: '</span>create database db<span class="string">'</span></span><br></pre></td></tr></table></figure><p><strong>处理方法(以从库为核心的处理方案)：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line">stop slave; </span><br><span class="line"><span class="built_in">set</span> global sql_slave_skip_counter = 1;</span><br><span class="line"><span class="comment">#将同步指针向下移动一个，如果多次不同步，可以重复操作。</span></span><br><span class="line">start slave;</span><br><span class="line">方法二：</span><br><span class="line">/etc/my.cnf</span><br><span class="line">slave-skip-errors = 1032,1062,1007</span><br><span class="line">常见错误代码:</span><br><span class="line">1007:对象已存在</span><br><span class="line">1032:无法执行DML</span><br><span class="line">1062:主键冲突,或约束冲突</span><br><span class="line"></span><br><span class="line">但是，以上操作有时是有风险的，最安全的做法就是重新构建主从。把握一个原则,一切以主库为主.</span><br></pre></td></tr></table></figure><p><strong>一劳永逸的方法:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">处理建议: </span><br><span class="line">1. 一切以主库为准.最彻底方法重新构建主从。</span><br><span class="line">2. 将从库设置为只读库,采用读写分离的中间件,防止从库写入</span><br><span class="line">mysql&gt; show variables like <span class="string">'%read_only%'</span>;</span><br><span class="line">read_only=ON</span><br><span class="line">super_read_only=ON</span><br><span class="line"></span><br><span class="line">了解:</span><br><span class="line">可以借助工具,校验和同步</span><br><span class="line">pt-checksum </span><br><span class="line">pt-sync</span><br></pre></td></tr></table></figure><h2 id="第6章-主从延时"><a href="#第6章-主从延时" class="headerlink" title="第6章  主从延时"></a>第6章  主从延时</h2><h3 id="6-1-监控"><a href="#6-1-监控" class="headerlink" title="6.1 监控"></a>6.1 监控</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(1) 有没有延时 </span><br><span class="line">show slave status \G </span><br><span class="line">Seconds_Behind_Master: 0</span><br><span class="line">(2) 延时了多少日志量?</span><br><span class="line"> 1) 从库回放了多少日志?</span><br><span class="line">relay-log.info   -----&gt; 从库回放到了哪个点.</span><br><span class="line"> 2) 以上位置点对应着主库binlog的位置点.</span><br><span class="line">./db01-relay-bin.000002</span><br><span class="line">501</span><br><span class="line">mysql-bin.000001</span><br><span class="line">335</span><br><span class="line">(3) 看主库的位置点</span><br><span class="line">show master status;</span><br><span class="line">(5) 找到哪一个事件</span><br><span class="line">mysql-bin.000001</span><br><span class="line">335</span><br></pre></td></tr></table></figure><h3 id="6-2-主从延时原因分析"><a href="#6-2-主从延时原因分析" class="headerlink" title="6.2 主从延时原因分析"></a>6.2 主从延时原因分析</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主库做了修改操作,从库比较长时间才能追上.</span><br></pre></td></tr></table></figure><h4 id="6-2-1-外在因素"><a href="#6-2-1-外在因素" class="headerlink" title="6.2.1 外在因素"></a>6.2.1 外在因素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">网络 </span><br><span class="line">主从硬件差异较大</span><br><span class="line">版本差异</span><br><span class="line">参数因素</span><br><span class="line">从库较多</span><br></pre></td></tr></table></figure><h4 id="6-2-2-主库"><a href="#6-2-2-主库" class="headerlink" title="6.2.2 主库"></a>6.2.2 主库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(1) 二进制日志写入不及时</span><br><span class="line">[rep]&gt;select @@sync_binlog;</span><br><span class="line">(2) CR的主从复制中,binlog_dump线程,事件为单元,串行传送二进制日志(5.6 5.5)</span><br><span class="line"></span><br><span class="line">1. 主库并发事务量大,主库可以并行,传送时是串行</span><br><span class="line">2. 主库发生了大事务,由于是串行传送,会产生阻塞后续的事务.</span><br><span class="line"></span><br><span class="line">解决方案:</span><br><span class="line">1. 5.6 开始,开启GTID,实现了GC(group commit)机制,可以并行传输日志给从库IO</span><br><span class="line">2. 5.7 开始,不开启GTID,会自动维护匿名的GTID,也能实现GC,我们建议还是认为开启GTID</span><br><span class="line">3. 大事务拆成多个小事务,可以有效的减少主从延时.</span><br></pre></td></tr></table></figure><h4 id="6-2-3-从库"><a href="#6-2-3-从库" class="headerlink" title="6.2.3 从库"></a>6.2.3 从库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SQL线程导致的主从延时</span><br><span class="line">在CR复制情况下: 从库默认情况下只有一个SQL,只能串行回放事务SQL</span><br><span class="line">1. 主库如果并发事务量较大,从库只能串行回放</span><br><span class="line">2. 主库发生了大事务,会阻塞后续的所有的事务的运行</span><br><span class="line"></span><br><span class="line">解决方案:</span><br><span class="line">1. 5.6 版本开启GTID之后,加入了SQL多线程的特性,但是只能针对不同库(database)下的事务进行并发回放.</span><br><span class="line">2. 5.7 版本开始GTID之后,在SQL方面,提供了基于逻辑时钟(logical_clock),binlog加入了seq_no机制,</span><br><span class="line">真正实现了基于事务级别的并发回放,这种技术我们把它称之为MTS(enhanced multi-threaded slave).</span><br><span class="line">3. 大事务拆成多个小事务,可以有效的减少主从延时.</span><br><span class="line">[https://dev.mysql.com/worklog/task/?id=6314]</span><br></pre></td></tr></table></figure><h2 id="第7章-过滤复制"><a href="#第7章-过滤复制" class="headerlink" title="第7章 过滤复制"></a>第7章 过滤复制</h2><h3 id="7-1-主库-了解"><a href="#7-1-主库-了解" class="headerlink" title="7.1 主库  (了解)"></a>7.1 主库  (了解)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">binlog_do_db    白名单 </span><br><span class="line">binlog_ignore_db        黑名单</span><br></pre></td></tr></table></figure><h3 id="7-2-从库"><a href="#7-2-从库" class="headerlink" title="7.2 从库"></a>7.2 从库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">在SQL_T回放日志,选择部分日志回放</span><br><span class="line">replicate_do_db=world</span><br><span class="line">replicate_do_db=oldguo</span><br><span class="line">replicate_ignore_db </span><br><span class="line"></span><br><span class="line">replicate_do_table=world.t1</span><br><span class="line">replicate_ignore_table</span><br><span class="line"></span><br><span class="line">replicate_wild_do_table=world.t*</span><br><span class="line">replicate_wild_ignore_table</span><br></pre></td></tr></table></figure><h3 id="7-3-案例"><a href="#7-3-案例" class="headerlink" title="7.3 案例"></a>7.3 案例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">从库: </span><br><span class="line">vim /data/3308/my.cnf</span><br><span class="line">replicate_do_db=world</span><br><span class="line"></span><br><span class="line">[root@db01 data]<span class="comment"># systemctl restart mysqld3308</span></span><br></pre></td></tr></table></figure><h2 id="第8章-延时从库"><a href="#第8章-延时从库" class="headerlink" title="第8章 延时从库"></a>第8章 延时从库</h2><h3 id="8-1-介绍"><a href="#8-1-介绍" class="headerlink" title="8.1 介绍"></a>8.1 介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是我们认为配置的一种特殊从库.人为配置从库和主库延时N小时.</span><br></pre></td></tr></table></figure><h3 id="8-2-为什么要有延时从"><a href="#8-2-为什么要有延时从" class="headerlink" title="8.2 为什么要有延时从"></a>8.2 为什么要有延时从</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数据库故障?</span><br><span class="line">物理损坏</span><br><span class="line">主从复制非常擅长解决物理损坏.</span><br><span class="line">逻辑损坏</span><br><span class="line">普通主从复制没办法解决逻辑损坏</span><br></pre></td></tr></table></figure><h3 id="8-3-配置延时从库"><a href="#8-3-配置延时从库" class="headerlink" title="8.3 配置延时从库"></a>8.3 配置延时从库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  STOP SLAVE;   -- 先停止同步</span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_DELAY = 300;  -- 设置延迟300s，一般设置3-6个小时，单位是s</span><br><span class="line">mysql&gt; START SLAVE; -- 启动同步</span><br><span class="line">mysql&gt; SHOW SLAVE STATUS \G;  -- 查看状态</span><br><span class="line">SQL_Delay: 300</span><br><span class="line">SQL_Remaining_Delay: NULL</span><br></pre></td></tr></table></figure><h3 id="8-4-模拟故障及恢复"><a href="#8-4-模拟故障及恢复" class="headerlink" title="8.4 模拟故障及恢复"></a>8.4 模拟故障及恢复</h3><p>(1) 模拟数据(3307)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create database oss charset utf8mb4; </span><br><span class="line">use oss;</span><br><span class="line">create table t1(id int);</span><br><span class="line">insert into t1 values(1),(2),(3);</span><br><span class="line">commit;</span><br><span class="line">insert into t1 values(11),(22),(33);</span><br><span class="line"></span><br><span class="line">drop database oss;</span><br></pre></td></tr></table></figure><p>(2) 停线程(3308)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; STOP SLAVE;  -- 都停了</span><br><span class="line">mysql&gt; stop slave sql_thread;  --停止SQL线程方法</span><br></pre></td></tr></table></figure><p>(3) 截取relaylog </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#起点:</span></span><br><span class="line">show slave status \G</span><br><span class="line">Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">Relay_Log_Pos: 320</span><br><span class="line"></span><br><span class="line"><span class="comment">#终点:</span></span><br><span class="line">mysql&gt; show relaylog events <span class="keyword">in</span> <span class="string">'db01-relay-bin.000002'</span>;</span><br><span class="line">| db01-relay-bin.000005 | 1401 | Query          |         7 |        1826 | drop database oss    </span><br><span class="line"> db01-relay-bin.000005  1401</span><br></pre></td></tr></table></figure><p>(4)截取日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 data]<span class="comment"># mysqlbinlog --start-position=320 --stop-position=1401 db01-relay-bin.000002 &gt;/tmp/relay.sql</span></span><br></pre></td></tr></table></figure><p>(5)恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /tmp/relay.sql</span><br><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line"> Slave_IO_Running: Yes</span><br><span class="line"> Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><p>(6)从库身份解除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;stop slave;</span><br><span class="line">&gt;reset slave all;</span><br></pre></td></tr></table></figure><h2 id="第9章-半同步"><a href="#第9章-半同步" class="headerlink" title="第9章 半同步"></a>第9章 半同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解决主从数据一致性问题</span><br></pre></td></tr></table></figure><h3 id="9-1-半同步复制工作原理的变化"><a href="#9-1-半同步复制工作原理的变化" class="headerlink" title="9.1 半同步复制工作原理的变化"></a>9.1 半同步复制工作原理的变化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 主库执行新的事务,commit时,更新 show master status\G ,触发一个信号给 </span><br><span class="line">2. binlog dump 接收到主库的 show master status\G信息,通知从库日志更新了 </span><br><span class="line">3. 从库IO线程请求新的二进制日志事件 </span><br><span class="line">4. 主库会通过dump线程传送新的日志事件,给从库IO线程 </span><br><span class="line">5. 从库IO线程接收到binlog日志,当日志写入到磁盘上的relaylog文件时,给主库ACK_receiver线程 6. ACK_receiver线程触发一个事件,告诉主库commit可以成功了 </span><br><span class="line">7. 如果ACK达到了我们预设值的超时时间,半同步复制会切换为原始的异步复制.</span><br></pre></td></tr></table></figure><h3 id="9-2-配置半同步复制"><a href="#9-2-配置半同步复制" class="headerlink" title="9.2 配置半同步复制"></a>9.2 配置半同步复制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">加载插件</span><br><span class="line">主:</span><br><span class="line">INSTALL PLUGIN rpl_semi_sync_master SONAME <span class="string">'semisync_master.so'</span>;</span><br><span class="line">从:</span><br><span class="line">INSTALL PLUGIN rpl_semi_sync_slave SONAME <span class="string">'semisync_slave.so'</span>;</span><br><span class="line">查看是否加载成功:</span><br><span class="line">show plugins;</span><br><span class="line">启动:</span><br><span class="line">主:</span><br><span class="line">SET GLOBAL rpl_semi_sync_master_enabled = 1;</span><br><span class="line">从:</span><br><span class="line">SET GLOBAL rpl_semi_sync_slave_enabled = 1;</span><br><span class="line">重启从库上的IO线程</span><br><span class="line">STOP SLAVE IO_THREAD;</span><br><span class="line">START SLAVE IO_THREAD;</span><br><span class="line">查看是否在运行</span><br><span class="line">主:</span><br><span class="line">show status like <span class="string">'Rpl_semi_sync_master_status'</span>;</span><br><span class="line">从:</span><br><span class="line">show status like <span class="string">'Rpl_semi_sync_slave_status'</span>;</span><br></pre></td></tr></table></figure><h2 id="第10章-GTID复制"><a href="#第10章-GTID复制" class="headerlink" title="第10章 GTID复制"></a>第10章 GTID复制</h2><h3 id="10-1-GTID介绍"><a href="#10-1-GTID介绍" class="headerlink" title="10.1 GTID介绍"></a>10.1 GTID介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GTID(Global Transaction ID)是对于一个已提交事务的唯一编号，并且是一个全局(主从复制)唯一的编号。</span><br><span class="line">它的官方定义如下：</span><br><span class="line">GTID = source_id ：transaction_id</span><br><span class="line">7E11FA47-31CA-19E1-9E56-C43AA21293967:29</span><br><span class="line">什么是sever_uuid，和Server-id 区别？</span><br><span class="line">核心特性: 全局唯一,具备幂等性</span><br></pre></td></tr></table></figure><h3 id="10-2-GTID核心参数"><a href="#10-2-GTID核心参数" class="headerlink" title="10.2 GTID核心参数"></a>10.2 GTID核心参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gtid-mode=on </span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span> </span><br><span class="line"><span class="built_in">log</span>-slave-updates=1 </span><br><span class="line"></span><br><span class="line">gtid-mode=on --启用gtid类型，否则就是普通的复制架构 </span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span> --强制GTID的一致性 </span><br><span class="line"><span class="built_in">log</span>-slave-updates=1 --slave更新是否记入日志</span><br></pre></td></tr></table></figure><h3 id="10-3-GTID复制配置过程"><a href="#10-3-GTID复制配置过程" class="headerlink" title="10.3 GTID复制配置过程"></a>10.3 GTID复制配置过程</h3><h4 id="10-3-1-清理环境"><a href="#10-3-1-清理环境" class="headerlink" title="10.3.1 清理环境"></a>10.3.1 清理环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill mysqld</span><br><span class="line"> \rm -rf /data/mysql/data/*</span><br><span class="line"> \rm -rf /data/binlog/*</span><br></pre></td></tr></table></figure><h4 id="10-3-2-准备配置文件"><a href="#10-3-2-准备配置文件" class="headerlink" title="10.3.2 准备配置文件"></a>10.3.2 准备配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">主库db01：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/data/mysql/</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=51</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db01 [\\d]&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">slave1(db02)：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/data/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=52</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db02 [\\d]&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">slave2(db03)：</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/data/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">server_id=53</span><br><span class="line">port=3306</span><br><span class="line">secure-file-priv=/tmp</span><br><span class="line">autocommit=0</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line">gtid-mode=on</span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span></span><br><span class="line"><span class="built_in">log</span>-slave-updates=1</span><br><span class="line">[mysql]</span><br><span class="line">prompt=db03 [\\d]&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="10-3-3-初始化数据"><a href="#10-3-3-初始化数据" class="headerlink" title="10.3.3 初始化数据"></a>10.3.3 初始化数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/data/mysql  --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><h4 id="10-3-4-启动数据库"><a href="#10-3-4-启动数据库" class="headerlink" title="10.3.4 启动数据库"></a>10.3.4 启动数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h4 id="10-3-5-构建主从"><a href="#10-3-5-构建主从" class="headerlink" title="10.3.5 构建主从"></a>10.3.5 构建主从</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">master:51</span><br><span class="line">slave:52,53</span><br><span class="line"></span><br><span class="line">51:</span><br><span class="line">grant replication slave  on *.* to repl@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br><span class="line"></span><br><span class="line">52\53:</span><br><span class="line">change master to </span><br><span class="line">master_host=<span class="string">'10.0.0.51'</span>,</span><br><span class="line">master_user=<span class="string">'repl'</span>,</span><br><span class="line">master_password=<span class="string">'123'</span> ,</span><br><span class="line">MASTER_AUTO_POSITION=1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><h4 id="10-3-6-GTID-从库误写入操作处理"><a href="#10-3-6-GTID-从库误写入操作处理" class="headerlink" title="10.3.6 GTID 从库误写入操作处理"></a>10.3.6 GTID 从库误写入操作处理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">查看监控信息: </span><br><span class="line">Last_SQL_Error: Error <span class="string">'Can'</span>t create database <span class="string">'oldboy'</span>; database exists<span class="string">' on query. Default database: '</span>oldboy<span class="string">'. Query: '</span>create database oldboy<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Retrieved_Gtid_Set: 71bfa52e-4aae-11e9-ab8c-000c293b577e:1-3 </span></span><br><span class="line"><span class="string">Executed_Gtid_Set: 71bfa52e-4aae-11e9-ab8c-000c293b577e:1-2, </span></span><br><span class="line"><span class="string">7ca4a2b7-4aae-11e9-859d-000c298720f6:1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注入空事物的方法： </span></span><br><span class="line"><span class="string">stop slave; </span></span><br><span class="line"><span class="string">set gtid_next='</span>99279e1e-61b7-11e9-a9fc-000c2928f5dd:3<span class="string">'; </span></span><br><span class="line"><span class="string">begin;commit; </span></span><br><span class="line"><span class="string">set gtid_next='</span>AUTOMATIC<span class="string">'; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">这里的xxxxx:N 也就是你的slave sql thread报错的GTID，或者说是你想要跳过的GTID。 </span></span><br><span class="line"><span class="string">最好的解决方案：重新构建主从环境</span></span><br></pre></td></tr></table></figure><h4 id="10-3-7-GTID-复制和普通复制的区别"><a href="#10-3-7-GTID-复制和普通复制的区别" class="headerlink" title="10.3.7 GTID 复制和普通复制的区别"></a>10.3.7 GTID 复制和普通复制的区别</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST=<span class="string">'10.0.1.51'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'repl'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'123'</span>,</span><br><span class="line">MASTER_PORT=3307,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-bin.000001'</span>,</span><br><span class="line">MASTER_LOG_POS=444,</span><br><span class="line">MASTER_CONNECT_RETRY=10;</span><br><span class="line"></span><br><span class="line">change master to </span><br><span class="line">master_host=<span class="string">'10.0.1.51'</span>,</span><br><span class="line">master_user=<span class="string">'repl'</span>,</span><br><span class="line">master_password=<span class="string">'123'</span> ,</span><br><span class="line">MASTER_AUTO_POSITION=1;</span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line">（0）在主从复制环境中，主库发生过的事务，在全局都是由唯一GTID记录的，更方便Failover</span><br><span class="line">（1）额外功能参数（3个）</span><br><span class="line">（2）change master to 的时候不再需要binlog 文件名和position号,MASTER_AUTO_POSITION=1;</span><br><span class="line">（3）在复制过程中，从库不再依赖master.info文件，而是直接读取最后一个relaylog的 GTID号</span><br><span class="line">（4） mysqldump备份时，默认会将备份中包含的事务操作，以以下方式</span><br><span class="line">    SET @@GLOBAL.GTID_PURGED=<span class="string">'8c49d7ec-7e78-11e8-9638-000c29ca725d:1'</span>;</span><br><span class="line">    告诉从库，我的备份中已经有以上事务，你就不用运行了，直接从下一个GTID开始请求binlog就行。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
      <category term="mysql主从复制" scheme="http://linuxwf.com/tags/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>7.MySQL备份恢复</title>
    <link href="http://linuxwf.com/2020/04/15/7-MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/"/>
    <id>http://linuxwf.com/2020/04/15/7-MySQL%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/</id>
    <published>2020-04-15T02:14:00.000Z</published>
    <updated>2020-04-15T02:15:01.273Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="MySQL备份恢复"><a href="#MySQL备份恢复" class="headerlink" title="MySQL备份恢复"></a>MySQL备份恢复</h1><h2 id="第1章-数据库备份恢复职责"><a href="#第1章-数据库备份恢复职责" class="headerlink" title="第1章 数据库备份恢复职责"></a>第1章 数据库备份恢复职责</h2><h3 id="1-1-备份策略"><a href="#1-1-备份策略" class="headerlink" title="1.1 备份策略"></a>1.1 备份策略</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">全备、增量、时间、自动</span><br></pre></td></tr></table></figure><h3 id="1-2-日常备份检查"><a href="#1-2-日常备份检查" class="headerlink" title="1.2 日常备份检查"></a>1.2 日常备份检查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">备份存在性</span><br><span class="line">备份空间够用否</span><br></pre></td></tr></table></figure><h3 id="1-3-定期恢复演练-测试库"><a href="#1-3-定期恢复演练-测试库" class="headerlink" title="1.3 定期恢复演练(测试库)"></a>1.3 定期恢复演练(测试库)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一季度 或者 半年</span><br></pre></td></tr></table></figure><h3 id="1-4-故障恢复"><a href="#1-4-故障恢复" class="headerlink" title="1.4 故障恢复"></a>1.4 故障恢复</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过现有备份,能够将数据库恢复到故障之前的时间点</span><br></pre></td></tr></table></figure><h3 id="1-5-迁移"><a href="#1-5-迁移" class="headerlink" title="1.5 迁移"></a>1.5 迁移</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 停机时间</span><br><span class="line">2. 回退方案</span><br></pre></td></tr></table></figure><h2 id="第2章-备份类型"><a href="#第2章-备份类型" class="headerlink" title="第2章 备份类型"></a>第2章 备份类型</h2><h3 id="2-1-热备"><a href="#2-1-热备" class="headerlink" title="2.1 热备"></a>2.1 热备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在数据库正常业务时,备份数据,并且能够一致性恢复（只能是innodb）</span><br><span class="line">对业务影响非常小</span><br></pre></td></tr></table></figure><h3 id="2-2-温备"><a href="#2-2-温备" class="headerlink" title="2.2 温备"></a>2.2 温备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">锁表备份,只能查询不能修改（myisam）</span><br><span class="line">影响到写入操作</span><br></pre></td></tr></table></figure><h3 id="2-3-冷备"><a href="#2-3-冷备" class="headerlink" title="2.3 冷备"></a>2.3 冷备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关闭数据库业务,数据库没有任何变更的情况下,进行备份数据.</span><br><span class="line">业务停止</span><br></pre></td></tr></table></figure><h2 id="第3章-备份方式及工具介绍"><a href="#第3章-备份方式及工具介绍" class="headerlink" title="第3章 备份方式及工具介绍"></a>第3章 备份方式及工具介绍</h2><h3 id="3-1-逻辑备份工具"><a href="#3-1-逻辑备份工具" class="headerlink" title="3.1 逻辑备份工具"></a>3.1 逻辑备份工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于SQL语句进行备份</span><br><span class="line">mysqldump       *****</span><br><span class="line">mysqlbinlog     *****</span><br></pre></td></tr></table></figure><h3 id="3-2-物理备份工具"><a href="#3-2-物理备份工具" class="headerlink" title="3.2 物理备份工具"></a>3.2 物理备份工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于磁盘数据文件备份</span><br><span class="line">xtrabackup(XBK) ：percona 第三方   *****</span><br><span class="line">MySQL Enterprise Backup（MEB）</span><br></pre></td></tr></table></figure><h2 id="第4章-逻辑备份和物理备份的比较"><a href="#第4章-逻辑备份和物理备份的比较" class="headerlink" title="第4章 逻辑备份和物理备份的比较"></a>第4章 逻辑备份和物理备份的比较</h2><h3 id="4-1-mysqldump-MDP"><a href="#4-1-mysqldump-MDP" class="headerlink" title="4.1 mysqldump (MDP)"></a>4.1 mysqldump (MDP)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">1.不需要下载安装</span><br><span class="line">2.备份出来的是SQL，文本格式，可读性高,便于备份处理</span><br><span class="line">3.压缩比较高，节省备份的磁盘空间</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">4.依赖于数据库引擎，需要从磁盘把数据读出</span><br><span class="line">然后转换成SQL进行转储，比较耗费资源，数据量大的话效率较低</span><br><span class="line">建议：</span><br><span class="line">100G以内的数据量级，可以使用mysqldump</span><br><span class="line">超过TB以上，我们也可能选择的是mysqldump，配合分布式的系统</span><br><span class="line">1EB  =1024 PB =1000000 TB</span><br></pre></td></tr></table></figure><h3 id="4-2-xtrabackup-XBK"><a href="#4-2-xtrabackup-XBK" class="headerlink" title="4.2 xtrabackup(XBK)"></a>4.2 xtrabackup(XBK)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">1.类似于直接cp数据文件，不需要管逻辑结构，相对来说性能较高</span><br><span class="line">缺点：</span><br><span class="line">2.可读性差</span><br><span class="line">3.压缩比低，需要更多磁盘空间</span><br><span class="line">建议：</span><br><span class="line">&gt;100G&lt;TB</span><br></pre></td></tr></table></figure><h2 id="第5章-备份策略"><a href="#第5章-备份策略" class="headerlink" title="第5章 备份策略"></a>第5章 备份策略</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">备份方式：</span><br><span class="line">全备:全库备份，备份所有数据</span><br><span class="line">增量:备份变化的数据</span><br><span class="line">逻辑备份=mysqldump+mysqlbinlog</span><br><span class="line">物理备份=xtrabackup_full+xtrabackup_incr+binlog或者xtrabackup_full+binlog</span><br><span class="line">备份周期:</span><br><span class="line">根据数据量设计备份周期</span><br><span class="line">比如：周日全备，周1-周6增量</span><br></pre></td></tr></table></figure><h2 id="第6章-备份工具使用-mysqldump"><a href="#第6章-备份工具使用-mysqldump" class="headerlink" title="第6章 备份工具使用-mysqldump"></a>第6章 备份工具使用-mysqldump</h2><h3 id="6-1-mysqldump-逻辑备份的客户端工具"><a href="#6-1-mysqldump-逻辑备份的客户端工具" class="headerlink" title="6.1 mysqldump (逻辑备份的客户端工具)"></a>6.1 mysqldump (逻辑备份的客户端工具)</h3><h4 id="6-1-1-客户端通用参数"><a href="#6-1-1-客户端通用参数" class="headerlink" title="6.1.1 客户端通用参数"></a>6.1.1 客户端通用参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-u  -p   -S   -h  -P    </span><br><span class="line">本地备份:</span><br><span class="line">mysqldump -uroot -p  -S /tmp/mysql.sock</span><br><span class="line">远程备份:</span><br><span class="line">mysqldump -uroot -p  -h 10.0.0.51 -P3306</span><br></pre></td></tr></table></figure><h4 id="6-1-2-备份专用基本参数"><a href="#6-1-2-备份专用基本参数" class="headerlink" title="6.1.2 备份专用基本参数"></a>6.1.2 备份专用基本参数</h4><p><strong>-A 全备参数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例子1:</span><br><span class="line">[root@db01 ~]<span class="comment"># mkdir -p /data/backup</span></span><br><span class="line">mysqldump -uroot -p -A &gt;/data/backup/full.sql</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">mysqldump: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Warning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don<span class="string">'t want to restore GTIDs, pass --set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events. </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 补充:</span></span><br><span class="line"><span class="string"># 1.常规备份是要加 --set-gtid-purged=OFF,解决备份时的警告</span></span><br><span class="line"><span class="string"># [root@db01 ~]# mysqldump -uroot -p123 -A  --set-gtid-purged=OFF  &gt;/backup/full.sql</span></span><br><span class="line"><span class="string"># 2.构建主从时,做的备份,不需要加这个参数</span></span><br><span class="line"><span class="string"># [root@db01 ~]# mysqldump -uroot -p123 -A    --set-gtid-purged=ON &gt;/backup/full.sql</span></span><br></pre></td></tr></table></figure><p><strong>-B db1 db2 db3 备份多个单库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">说明：生产中需要备份，生产相关的库和MySQL库</span><br><span class="line">例子2 :</span><br><span class="line">mysqldump -B mysql gtid --<span class="built_in">set</span>-gtid-purged=OFF &gt;/data/backup/b.sql</span><br></pre></td></tr></table></figure><p><strong>备份单个或多个表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例子3 world数据库下的city,country表</span><br><span class="line">mysqldump -uroot -p world city country &gt;/backup/bak1.sql</span><br><span class="line">以上备份恢复时:必须库事先存在,并且ues才能<span class="built_in">source</span>恢复</span><br></pre></td></tr></table></figure><h4 id="6-1-3-高级参数应用"><a href="#6-1-3-高级参数应用" class="headerlink" title="6.1.3 高级参数应用"></a>6.1.3 高级参数应用</h4><p><strong>特殊参数1使用（必须要加)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-R            备份存储过程及函数</span><br><span class="line">--triggers  备份触发器</span><br><span class="line">-E             备份事件</span><br><span class="line"></span><br><span class="line">例子4:</span><br><span class="line">[root@db01 backup]<span class="comment"># mysqldump -uroot -p -A -R -E --triggers &gt;/data/backup/full.sql</span></span><br><span class="line">(5) 特殊参数2使用</span><br></pre></td></tr></table></figure><p><strong>-F 在备份开始时,刷新一个新binlog日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例子5:</span><br><span class="line">mysqldump -uroot -p  -A  -R --triggers -F &gt;/bak/full.sql</span><br></pre></td></tr></table></figure><p><strong>–master-data=2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">以注释的形式,保存备份开始时间点的binlog的状态信息</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p  -A  -R --triggers --master-data=2   &gt;/back/world.sql</span><br><span class="line">[root@db01 ~]<span class="comment"># grep 'CHANGE' /backup/world.sql </span></span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">'mysql-bin.000035'</span>, MASTER_LOG_POS=194;</span><br><span class="line"></span><br><span class="line">功能：</span><br><span class="line">（1）在备份时，会自动记录，二进制日志文件名和位置号</span><br><span class="line">0 默认值</span><br><span class="line">1  以change master to命令形式，可以用作主从复制</span><br><span class="line">2  以注释的形式记录，备份时刻的文件名+postion号</span><br><span class="line">（2） 自动锁表</span><br><span class="line">（3）如果配合--single-transaction，只对非InnoDB表进行锁表备份，InnoDB表进行“热“”备，实际上是实现快照备份</span><br></pre></td></tr></table></figure><p><strong>–single-transaction</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">innodb 存储引擎开启热备(快照备份)功能       </span><br><span class="line">master-data可以自动加锁</span><br><span class="line">（1）在不加--single-transaction ，启动所有表的温备份，所有表都锁定</span><br><span class="line">（1）加上--single-transaction ,对innodb进行快照备份,对非innodb表可以实现自动锁表功能</span><br><span class="line">例子6: 备份必加参数</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data=2  --single-transaction --<span class="built_in">set</span>-gtid-purged=OFF &gt;/data/backup/full.sql</span><br></pre></td></tr></table></figure><p><strong>–set-gtid-purged=auto</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto , on</span><br><span class="line">off </span><br><span class="line">使用场景:</span><br><span class="line">1. --<span class="built_in">set</span>-gtid-purged=OFF,可以使用在日常备份参数中.</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data=2  --single-transaction --<span class="built_in">set</span>-gtid-purged=OFF &gt;/data/backup/full.sql</span><br><span class="line">2. auto , on:在构建主从复制环境时需要的参数配置</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data=2  --single-transaction --<span class="built_in">set</span>-gtid-purged=ON &gt;/data/backup/full.sql</span><br></pre></td></tr></table></figure><p><strong>–max-allowed-packet=#</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data=2  --single-transaction --<span class="built_in">set</span>-gtid-purged=OFF --max-allowed-packet=256M &gt;/data/backup/full.sql</span><br><span class="line"></span><br><span class="line"> --max-allowed-packet=<span class="comment"># </span></span><br><span class="line">The maximum packet length to send to or receive from server</span><br></pre></td></tr></table></figure><h3 id="6-2-练习"><a href="#6-2-练习" class="headerlink" title="6.2 练习"></a>6.2 练习</h3><h4 id="6-2-1-实现所有表的单独备份"><a href="#6-2-1-实现所有表的单独备份" class="headerlink" title="6.2.1 实现所有表的单独备份"></a>6.2.1 实现所有表的单独备份</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">提示：</span><br><span class="line">information_schema.tables</span><br><span class="line">mysqldump -uroot -p123 world city &gt;/backup/world_city.sql</span><br><span class="line"></span><br><span class="line">select concat(<span class="string">"mysqldump -uroot -p123 "</span>,table_schema,<span class="string">" "</span>,table_name,<span class="string">" --master-data=2 --single-transaction --set-gtid-purged=0  -R -E --triggers&gt;/backup/"</span>,table_schema,<span class="string">"_"</span>,table_name,<span class="string">".sql"</span>) from information_schema.tables <span class="built_in">where</span> table_schema not <span class="keyword">in</span> (<span class="string">'sys'</span>,<span class="string">'information_schema'</span>,<span class="string">'performance_schema'</span>);</span><br></pre></td></tr></table></figure><h4 id="6-2-2-模拟故障案例并恢复"><a href="#6-2-2-模拟故障案例并恢复" class="headerlink" title="6.2.2.模拟故障案例并恢复"></a>6.2.2.模拟故障案例并恢复</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">（1）每天全备</span><br><span class="line">（2）binlog日志是完整</span><br><span class="line">（3）模拟白天的数据变化</span><br><span class="line">（4）模拟下午两点误删除数据库</span><br><span class="line"></span><br><span class="line">需求： 利用全备+binlog回复数据库误删除之前。</span><br><span class="line">故障模拟及恢复：</span><br><span class="line">1. 模拟周一23:00的全备</span><br><span class="line">mysqldump -uroot -p123 -A -R -E --master-data=2 --single-transaction --triggers --max_allowed_packet=128M &gt;/backup/full_$(date +%F).sql</span><br><span class="line">2. 模拟白天的数据变化</span><br><span class="line">Master [(none)]&gt;create database day1 charset utf8;</span><br><span class="line">Master [(none)]&gt;use day1</span><br><span class="line">Master [day1]&gt;create table t1(id int);</span><br><span class="line">Master [day1]&gt;insert into t1 values(1),(2),(3);</span><br><span class="line">Master [day1]&gt;commit;</span><br><span class="line">Master [world]&gt;update city <span class="built_in">set</span> countrycode=<span class="string">'CHN'</span>;</span><br><span class="line">Master [world]&gt;commit;</span><br><span class="line">模拟磁盘损坏：</span><br><span class="line">[root@db01 data]<span class="comment"># \rm -rf /data/mysql/data/*</span></span><br><span class="line">3. 恢复故障</span><br><span class="line">[root@db01 data]<span class="comment"># pkill mysqld</span></span><br><span class="line">[root@db01 data]<span class="comment"># \rm -rf /data/mysql/data/*</span></span><br><span class="line">4. 恢复思路</span><br><span class="line">1.检查备份可用性</span><br><span class="line">2.从备份中获取二进制日志位置</span><br><span class="line">3.根据日志位置截取需要的二进制日志</span><br><span class="line">4.初始化数据库,并启动</span><br><span class="line">5.恢复全备</span><br><span class="line">6.恢复二进制日志</span><br></pre></td></tr></table></figure><h3 id="6-3-压缩备份并添加时间戳"><a href="#6-3-压缩备份并添加时间戳" class="headerlink" title="6.3 压缩备份并添加时间戳"></a>6.3 压缩备份并添加时间戳</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --master-data=2  --single-transaction|gzip &gt; /backup/full_$(date +%F).sql.gz</span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --master-data=2  --single-transaction|gzip &gt; /backup/full_$(date +%F-%T).sql.gz</span><br><span class="line"></span><br><span class="line">mysqldump备份的恢复方式（在生产中恢复要谨慎，恢复会删除重复的表）</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"><span class="built_in">source</span> /backup/full_2018-06-28.sql</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1、mysqldump在备份和恢复时都需要mysql实例启动为前提。</span><br><span class="line">2、一般数据量级100G以内，大约15-45分钟可以恢复，数据量级很大很大的时候（PB、EB）</span><br><span class="line">3、mysqldump是覆盖形式恢复的方法。</span><br><span class="line"></span><br><span class="line">一般我们认为，在同数据量级，物理备份要比逻辑备份速度快.</span><br><span class="line">逻辑备份的优势:</span><br><span class="line">1、可读性强</span><br><span class="line">2、压缩比很高</span><br></pre></td></tr></table></figure><h2 id="第7章-企业故障恢复案例"><a href="#第7章-企业故障恢复案例" class="headerlink" title="第7章 企业故障恢复案例"></a>第7章 企业故障恢复案例</h2><h3 id="7-1-背景环境"><a href="#7-1-背景环境" class="headerlink" title="7.1 背景环境"></a>7.1 背景环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">正在运行的网站系统，mysql-5.7.20 数据库，数据量50G，日业务增量1-5M</span><br></pre></td></tr></table></figure><h3 id="7-2-备份策略"><a href="#7-2-备份策略" class="headerlink" title="7.2 备份策略"></a>7.2 备份策略</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每天23:00点，计划任务调用mysqldump执行全备脚本</span><br></pre></td></tr></table></figure><h3 id="7-3-故障时间点"><a href="#7-3-故障时间点" class="headerlink" title="7.3 故障时间点"></a>7.3 故障时间点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">年底故障演练:模拟周三上午10点误删除数据库，并进行恢复</span><br></pre></td></tr></table></figure><h3 id="7-4-思路"><a href="#7-4-思路" class="headerlink" title="7.4 思路"></a>7.4 思路</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、停业务，避免数据的二次伤害</span><br><span class="line">2、找一个临时库，恢复周三23：00全备</span><br><span class="line">3、截取周二23：00  --- 周三10点误删除之间的binlog，恢复到临时库</span><br><span class="line">4、测试可用性和完整性</span><br><span class="line">5、 </span><br><span class="line">    5.1 方法一：直接使用临时库顶替原生产库，前端应用割接到新库</span><br><span class="line">    5.2 方法二：将误删除的表导出，导入到原生产库</span><br><span class="line">6、开启业务</span><br><span class="line">处理结果：经过20分钟的处理，最终业务恢复正常</span><br></pre></td></tr></table></figure><h3 id="7-5-故障模拟演练"><a href="#7-5-故障模拟演练" class="headerlink" title="7.5 故障模拟演练"></a>7.5 故障模拟演练</h3><h4 id="7-5-1-准备数据"><a href="#7-5-1-准备数据" class="headerlink" title="7.5.1 准备数据"></a>7.5.1 准备数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create database backup;</span><br><span class="line">use backup</span><br><span class="line">create table t1 (id int);</span><br><span class="line">insert into t1 values(1),(2),(3);</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h4 id="7-5-2-周二-23：00全备"><a href="#7-5-2-周二-23：00全备" class="headerlink" title="7.5.2 周二 23：00全备"></a>7.5.2 周二 23：00全备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123 -A -R -E --master-data=2 --single-transaction --triggers --max_allowed_packet=128M|gzip &gt; /backup/full_$(date +%F).sql.gz</span><br></pre></td></tr></table></figure><h4 id="7-5-3-模拟周二23：00到周三10：00之间数据变化"><a href="#7-5-3-模拟周二23：00到周三10：00之间数据变化" class="headerlink" title="7.5.3 模拟周二23：00到周三10：00之间数据变化"></a>7.5.3 模拟周二23：00到周三10：00之间数据变化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use backup</span><br><span class="line">insert into t1 values(11),(22),(33);</span><br><span class="line">commit;</span><br><span class="line">create table t2 (id int);</span><br><span class="line">insert into t2 values(11),(22),(33);</span><br></pre></td></tr></table></figure><h4 id="7-5-4-模拟故障-删除库-只是模拟，不代表生产操作"><a href="#7-5-4-模拟故障-删除库-只是模拟，不代表生产操作" class="headerlink" title="7.5.4 模拟故障,删除库(只是模拟，不代表生产操作)"></a>7.5.4 模拟故障,删除库(只是模拟，不代表生产操作)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database backup;</span><br></pre></td></tr></table></figure><h3 id="7-6-恢复过程"><a href="#7-6-恢复过程" class="headerlink" title="7.6  恢复过程"></a>7.6  恢复过程</h3><h4 id="7-6-1-准备临时数据库（多实例3307）"><a href="#7-6-1-准备临时数据库（多实例3307）" class="headerlink" title="7.6.1 准备临时数据库（多实例3307）"></a>7.6.1 准备临时数据库（多实例3307）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld3307</span><br></pre></td></tr></table></figure><h4 id="7-6-2-准备备份"><a href="#7-6-2-准备备份" class="headerlink" title="7.6.2 准备备份"></a>7.6.2 准备备份</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）准备全备：</span><br><span class="line"><span class="built_in">cd</span> /backup</span><br><span class="line">gunzip full_2018-10-17.sql.gz </span><br><span class="line">（2）截取二进制日志</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">'mysql-bin.000036'</span>, MASTER_LOG_POS=793;</span><br><span class="line">mysqlbinlog --skip-gtids --include-gtids=<span class="string">'3ca79ab5-3e4d-11e9-a709-000c293b577e:6-7'</span> /data/binlog/mysql-bin.000036 &gt;/backup/bin.sql</span><br></pre></td></tr></table></figure><h4 id="7-6-3-恢复备份到临时库"><a href="#7-6-3-恢复备份到临时库" class="headerlink" title="7.6.3 恢复备份到临时库"></a>7.6.3 恢复备份到临时库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -S /data/3307/mysql.sock </span><br><span class="line"><span class="built_in">set</span> sql_log_bin=0; </span><br><span class="line"><span class="built_in">source</span> /backup/full_2018-10-17.sql </span><br><span class="line"><span class="built_in">source</span> /backup/bin.sql</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=1;</span><br></pre></td></tr></table></figure><h2 id="第8章-备份时优化参数"><a href="#第8章-备份时优化参数" class="headerlink" title="第8章 备份时优化参数"></a>第8章 备份时优化参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1) max_allowed_packet   最大的数据包大小</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --<span class="built_in">set</span>-gtid-purged=OFF --master-data=2 max_allowed_packet=128M  --single-transaction|gzip &gt; /backup/full_$(date +%F).sql.gz</span><br><span class="line"></span><br><span class="line">(2) 增加key_buffer_size    (临时表有关)</span><br><span class="line">(3) 分库分表并发备份       (作业)</span><br><span class="line">(4) 架构分离,分别备份      (架构拆分,分布式备份)</span><br></pre></td></tr></table></figure><h2 id="第9章-MySQL物理备份工具-xtrabackup-XBK、Xbackup"><a href="#第9章-MySQL物理备份工具-xtrabackup-XBK、Xbackup" class="headerlink" title="第9章 MySQL物理备份工具-xtrabackup(XBK、Xbackup)"></a>第9章 MySQL物理备份工具-xtrabackup(XBK、Xbackup)</h2><h3 id="9-1-安装"><a href="#9-1-安装" class="headerlink" title="9.1 安装"></a>9.1 安装</h3><h4 id="9-1-1-安装依赖包"><a href="#9-1-1-安装依赖包" class="headerlink" title="9.1.1 安装依赖包"></a>9.1.1 安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo yum -y install perl perl-devel libaio libaio-devel perl-Time-HiRes perl-DBD-MySQL libev</span><br></pre></td></tr></table></figure><h4 id="9-1-2-下载软件并安装"><a href="#9-1-2-下载软件并安装" class="headerlink" title="9.1.2 下载软件并安装"></a>9.1.2 下载软件并安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos7</span></span><br><span class="line">wget https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.12/binary/redhat/7/x86_64/percona-xtrabackup-24-2.4.12-1.el7.x86_64.rpm</span><br><span class="line"><span class="comment">#centos6</span></span><br><span class="line">https://www.percona.com/downloads/XtraBackup/Percona-XtraBackup-2.4.4/binary/redhat/6/x86_64/percona-xtrabackup-24-2.4.4-1.el6.x86_64.rpm</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum -y install percona-xtrabackup-24-2.4.4-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="9-2-备份命令介绍"><a href="#9-2-备份命令介绍" class="headerlink" title="9.2 备份命令介绍"></a>9.2 备份命令介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xtrabackup</span><br><span class="line">innobackupex    ******</span><br></pre></td></tr></table></figure><h3 id="9-3-备份方式——物理备份"><a href="#9-3-备份方式——物理备份" class="headerlink" title="9.3 备份方式——物理备份"></a>9.3 备份方式——物理备份</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）对于非Innodb表（比如 myisam）是，锁表cp数据文件，属于一种温备份。</span><br><span class="line">（2）对于Innodb的表（支持事务的），不锁表，拷贝数据页，最终以数据文件的方式保存下来，把一部分redo和undo一并备走，属于热备方式。</span><br></pre></td></tr></table></figure><h3 id="面试题：-xbk-在innodb表备份恢复的流程"><a href="#面试题：-xbk-在innodb表备份恢复的流程" class="headerlink" title="面试题： xbk 在innodb表备份恢复的流程"></a>面试题： xbk 在innodb表备份恢复的流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1)xbk备份执行的瞬间,立即触发ckpt,已提交的数据脏页,从内存刷写到磁盘,并记录此时的LSN号</span><br><span class="line">(2)备份时，拷贝磁盘数据页，并且记录备份过程中产生的redo和undo一起拷贝走,也就是checkpoint LSN之后的日志</span><br><span class="line">(3)在恢复之前，模拟Innodb“自动故障恢复”的过程，将redo（前滚）与undo（回滚）进行应用</span><br><span class="line">(4)恢复过程是cp 备份到原来数据目录下</span><br></pre></td></tr></table></figure><h3 id="9-4-innobackupex使用"><a href="#9-4-innobackupex使用" class="headerlink" title="9.4 innobackupex使用"></a>9.4 innobackupex使用</h3><h4 id="9-4-1-全备"><a href="#9-4-1-全备" class="headerlink" title="9.4.1 全备"></a>9.4.1 全备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]<span class="comment"># innobackupex --user=root --password=123  /data/backup</span></span><br></pre></td></tr></table></figure><h4 id="9-4-2-自主定制备份路径名"><a href="#9-4-2-自主定制备份路径名" class="headerlink" title="9.4.2 自主定制备份路径名"></a>9.4.2 自主定制备份路径名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]<span class="comment"># innobackupex --user=root --password=123 --no-timestamp /backup/full</span></span><br></pre></td></tr></table></figure><p><strong>备份集中多出来的文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-rw-r----- 1 root root       24 Jun 29 09:59 xtrabackup_binlog_info</span><br><span class="line">-rw-r----- 1 root root      119 Jun 29 09:59 xtrabackup_checkpoints</span><br><span class="line">-rw-r----- 1 root root      489 Jun 29 09:59 xtrabackup_info</span><br><span class="line">-rw-r----- 1 root root     2560 Jun 29 09:59 xtrabackup_logfile</span><br><span class="line"></span><br><span class="line">xtrabackup_binlog_info ：（备份时刻的binlog位置）</span><br><span class="line">[root@db01 full]<span class="comment"># cat xtrabackup_binlog_info </span></span><br><span class="line">mysql-bin.000003    536749</span><br><span class="line">79de40d3-5ff3-11e9-804a-000c2928f5dd:1-7</span><br><span class="line">记录的是备份时刻，binlog的文件名字和当时的结束的position，可以用来作为截取binlog时的起点。</span><br><span class="line"></span><br><span class="line">xtrabackup_checkpoints ：</span><br><span class="line">backup_type = full-backuped</span><br><span class="line">from_lsn = 0            上次所到达的LSN号(对于全备就是从0开始,对于增量有别的显示方法)</span><br><span class="line">to_lsn = 160683027      备份开始时间(ckpt)点数据页的LSN    </span><br><span class="line">last_lsn = 160683036    备份结束后，redo日志最终的LSN</span><br><span class="line">compact = 0</span><br><span class="line">recover_binlog_info = 0</span><br><span class="line">（1）备份时刻，立即将已经commit过的，内存中的数据页刷新到磁盘(CKPT).开始备份数据，数据文件的LSN会停留在to_lsn位置。</span><br><span class="line">（2）备份时刻有可能会有其他的数据写入，已备走的数据文件就不会再发生变化了。</span><br><span class="line">（3）在备份过程中，备份软件会一直监控着redo的undo，如果一旦有变化会将日志也一并备走，并记录LSN到last_lsn。</span><br><span class="line">从to_lsn  ----》last_lsn 就是，备份过程中产生的数据变化.</span><br></pre></td></tr></table></figure><h4 id="9-4-3-全备的恢复"><a href="#9-4-3-全备的恢复" class="headerlink" title="9.4.3 全备的恢复"></a>9.4.3 全备的恢复</h4><p>准备备份（Prepared）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将redo进行重做，已提交的写到数据文件，未提交的使用undo回滚掉。模拟了CSR的过程</span><br><span class="line">[root@db01 ~]<span class="comment"># innobackupex --apply-log  /backup/full</span></span><br></pre></td></tr></table></figure><p>恢复备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前提：</span><br><span class="line">1、被恢复的目录是空</span><br><span class="line">2、被恢复的数据库的实例是关闭</span><br><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>创建新目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]<span class="comment"># mkdir /data/mysql1</span></span><br></pre></td></tr></table></figure><p>数据授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql /data/mysql1</span><br></pre></td></tr></table></figure><p>恢复备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 full]<span class="comment"># cp -a /backup/full/* /data/mysql1/</span></span><br></pre></td></tr></table></figure><p>启动数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">datadir=/data/mysql1</span><br><span class="line">[root@db01 mysql1]<span class="comment"># chown -R mysql.mysql /data/mysql1</span></span><br><span class="line">[root@db01 mysql1]<span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><h4 id="9-4-5-innobackupex-增量备份-incremental"><a href="#9-4-5-innobackupex-增量备份-incremental" class="headerlink" title="9.4.5 innobackupex 增量备份(incremental)"></a>9.4.5 innobackupex 增量备份(incremental)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）增量备份的方式，是基于上一次备份进行增量。</span><br><span class="line">（2）增量备份无法单独恢复。必须基于全备进行恢复。</span><br><span class="line">（3）所有增量必须要按顺序合并到全备中。</span><br></pre></td></tr></table></figure><h4 id="增量备份命令"><a href="#增量备份命令" class="headerlink" title="增量备份命令"></a>增量备份命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">（1）删掉原来备份</span><br><span class="line">略.</span><br><span class="line">（2）全备（周日）</span><br><span class="line">[root@db01 backup]# innobackupex --user&#x3D;root --password --no-timestamp &#x2F;backup&#x2F;full &gt;&amp;&#x2F;tmp&#x2F;xbk_full.log</span><br><span class="line">（3）模拟周一数据变化</span><br><span class="line">db01 [(none)]&gt;create database cs charset utf8;</span><br><span class="line">db01 [(none)]&gt;use cs</span><br><span class="line">db01 [cs]&gt;create table t1 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t1 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line"></span><br><span class="line">（4）第一次增量备份（周一）</span><br><span class="line">innobackupex --user&#x3D;root --password&#x3D;123 --no-timestamp --incremental --incremental-basedir&#x3D;&#x2F;backup&#x2F;full  &#x2F;backup&#x2F;inc1 &amp;&gt;&#x2F;tmp&#x2F;inc1.log</span><br><span class="line">（5）模拟周二数据</span><br><span class="line">db01 [cs]&gt;create table t2 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t2 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line">（6）周二增量</span><br><span class="line"> innobackupex --user&#x3D;root --password&#x3D;123 --no-timestamp --incremental --incremental-basedir&#x3D;&#x2F;backup&#x2F;inc1  &#x2F;backup&#x2F;inc2  &amp;&gt;&#x2F;tmp&#x2F;inc2.log</span><br><span class="line">（7）模拟周三数据变化</span><br><span class="line">db01 [cs]&gt;create table t3 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t3 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line">db01 [cs]&gt;drop database cs;</span><br></pre></td></tr></table></figure><p>恢复到周三误drop之前的数据状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">恢复思路： </span><br><span class="line">1. 挂出维护页，停止当天的自动备份脚本 </span><br><span class="line">2. 检查备份：周日full+周一inc1+周二inc2，周三的完整二进制日志 </span><br><span class="line">3. 进行备份整理（细节），截取关键的二进制日志（从备份——误删除之前） </span><br><span class="line">4. 测试库进行备份恢复及日志恢复 </span><br><span class="line">5. 应用进行测试无误，开启业务 </span><br><span class="line">6. 此次工作的总结</span><br></pre></td></tr></table></figure><p>恢复过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1. 检查备份</span><br><span class="line">1afe8136-601d-11e9-9022-000c2928f5dd:7-9</span><br><span class="line">2. 备份整理（apply-log）+合并备份（full+inc1+inc2）</span><br><span class="line">(1) 全备的整理</span><br><span class="line">[root@db01 one]<span class="comment"># innobackupex --apply-log --redo-only /data/backup/full</span></span><br><span class="line">(2) 合并inc1到full中</span><br><span class="line">[root@db01 one]<span class="comment"># innobackupex --apply-log --redo-only --incremental-dir=/data/backup/inc1 /data/backup/full</span></span><br><span class="line">(3) 合并inc2到full中</span><br><span class="line">[root@db01 one]<span class="comment"># innobackupex --apply-log  --incremental-dir=/data/backup/inc2 /data/backup/full</span></span><br><span class="line">(4) 最后一次整理全备</span><br><span class="line">[root@db01 backup]<span class="comment">#  innobackupex --apply-log  /data/backup/full</span></span><br><span class="line">3. 截取周二 23:00 到drop 之前的 binlog </span><br><span class="line">[root@db01 inc2]<span class="comment"># mysqlbinlog --skip-gtids --include-gtids='1afe8136-601d-11e9-9022-000c2928f5dd:7-9' /data/binlog/mysql-bin.000009 &gt;/data/backup/binlog.sql</span></span><br><span class="line">4. 进行恢复</span><br><span class="line">[root@db01 backup]<span class="comment"># mkdir /data/mysql/data2 -p</span></span><br><span class="line">[root@db01 full]<span class="comment"># cp -a * /data/mysql/data2</span></span><br><span class="line">[root@db01 backup]<span class="comment"># chown -R mysql.  /data/*</span></span><br><span class="line">[root@db01 backup]<span class="comment"># systemctl stop mysqld</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">datadir=/data/mysql/data2</span><br><span class="line">systemctl start mysqld</span><br><span class="line">Master [(none)]&gt;<span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line">Master [(none)]&gt;<span class="built_in">source</span> /data/backup/binlog.sql</span><br></pre></td></tr></table></figure><p>从mysqldump 全备中获取库和表的备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、获得表结构</span><br><span class="line"><span class="comment"># sed -e'/./&#123;H;$!d;&#125;' -e 'x;/CREATE TABLE `city`/!d;q'  full.sql&gt;createtable.sql</span></span><br><span class="line"></span><br><span class="line">2、获得INSERT INTO 语句，用于数据的恢复</span><br><span class="line"></span><br><span class="line"><span class="comment"># grep -i 'INSERT INTO `city`'  full.sqll &gt;data.sql &amp;</span></span><br><span class="line"></span><br><span class="line">3.获取单库的备份</span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n '/^-- Current Database: `world`/,/^-- Current Database: `/p' all.sql &gt;world.sql</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>6.日志管理</title>
    <link href="http://linuxwf.com/2020/04/15/6-%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/"/>
    <id>http://linuxwf.com/2020/04/15/6-%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86/</id>
    <published>2020-04-15T02:10:00.000Z</published>
    <updated>2020-04-15T02:11:35.485Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h1><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql15.png"  alt=""></p><h2 id="第1章-错误日志-log-error"><a href="#第1章-错误日志-log-error" class="headerlink" title="第1章 错误日志(log_error)"></a>第1章 错误日志(log_error)</h2><h3 id="1-1-作用"><a href="#1-1-作用" class="headerlink" title="1.1 作用"></a>1.1 作用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记录启动\关闭\日常运行过程中,状态信息,警告,错误</span><br></pre></td></tr></table></figure><h3 id="1-2-错误日志配置"><a href="#1-2-错误日志配置" class="headerlink" title="1.2 错误日志配置"></a>1.2 错误日志配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">默认就是开启的:  /数据路径下/hostname.err</span><br><span class="line">手工设定:</span><br><span class="line">Master [(none)]&gt;select @@log_error;</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">log_error=/var/<span class="built_in">log</span>/mysql.log</span><br><span class="line">log_timestamps=system</span><br><span class="line">重启生效</span><br><span class="line">show variables like <span class="string">'log_error'</span>;</span><br></pre></td></tr></table></figure><h3 id="1-3-日志内容查看"><a href="#1-3-日志内容查看" class="headerlink" title="1.3 日志内容查看"></a>1.3 日志内容查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要关注[ERROR],看上下文</span><br></pre></td></tr></table></figure><h2 id="第2章-binlog-binary-logs-二进制日志"><a href="#第2章-binlog-binary-logs-二进制日志" class="headerlink" title="第2章 binlog(binary logs):二进制日志"></a>第2章 binlog(binary logs):二进制日志</h2><h3 id="2-1-作用"><a href="#2-1-作用" class="headerlink" title="2.1 作用"></a>2.1 作用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(1)备份恢复必须依赖二进制日志</span><br><span class="line">(2)主从环境必须依赖二进制日志</span><br></pre></td></tr></table></figure><h3 id="2-2-binlog配置-5-7必须加server-id"><a href="#2-2-binlog配置-5-7必须加server-id" class="headerlink" title="2.2 binlog配置 (5.7必须加server_id)"></a>2.2 binlog配置 (5.7必须加server_id)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注意：MySQL默认是没有开启二进制日志的。</span><br><span class="line">基础参数查看:</span><br><span class="line">开关:</span><br><span class="line">[(none)]&gt;select @@log_bin;</span><br><span class="line">日志路径及名字</span><br><span class="line">[(none)]&gt;select @@log_bin_basename;</span><br><span class="line">服务ID号:</span><br><span class="line">[(none)]&gt;select @@server_id;</span><br><span class="line">二进制日志格式:</span><br><span class="line">[(none)]&gt;select @@binlog_format;</span><br><span class="line">双一标准之二:</span><br><span class="line">[(none)]&gt;select @@sync_binlog;</span><br></pre></td></tr></table></figure><h4 id="2-2-1-创建日志目录"><a href="#2-2-1-创建日志目录" class="headerlink" title="2.2.1 创建日志目录"></a>2.2.1 创建日志目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data/binlog</span><br><span class="line">chown -R mysql.mysql /data/binlog</span><br></pre></td></tr></table></figure><h4 id="2-2-2-修改配置文件"><a href="#2-2-2-修改配置文件" class="headerlink" title="2.2.2 修改配置文件"></a>2.2.2 修改配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">server_id=51                                    -----&gt;5.6中，单机可以不需要此参数              </span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">binlog_format=row</span><br></pre></td></tr></table></figure><h4 id="2-2-3-重启数据库生效"><a href="#2-2-3-重启数据库生效" class="headerlink" title="2.2.3 重启数据库生效"></a>2.2.3 重启数据库生效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># systemctl restart</span></span><br></pre></td></tr></table></figure><h4 id="2-2-4-参数说明"><a href="#2-2-4-参数说明" class="headerlink" title="2.2.4 参数说明"></a>2.2.4 参数说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server_id=3306 </span><br><span class="line">主要是在主从复制过程中必须要加的,但是在5.7版本中,要用以下参数(log_bin),开启binlog日志,即使是单机也是必加的</span><br><span class="line">log_bin=/data/binlog/mysql-bin</span><br><span class="line">(1)开启二进制日志功能</span><br><span class="line">(2)设置二进制日志目录及名称前缀</span><br><span class="line">binlog_format=row</span><br><span class="line">binlog的记录格式??</span><br></pre></td></tr></table></figure><h3 id="2-3-binlog记录了什么"><a href="#2-3-binlog记录了什么" class="headerlink" title="2.3 binlog记录了什么"></a>2.3 binlog记录了什么</h3><h4 id="2-3-1-引入"><a href="#2-3-1-引入" class="headerlink" title="2.3.1 引入"></a>2.3.1 引入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binlog是SQL层的功能。记录的是变更SQL语句，不记录查询语句。</span><br></pre></td></tr></table></figure><h4 id="2-3-2-记录SQL语句种类"><a href="#2-3-2-记录SQL语句种类" class="headerlink" title="2.3.2 记录SQL语句种类"></a>2.3.2 记录SQL语句种类</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DDL ：原封不动的记录当前DDL(statement语句方式)。</span><br><span class="line">DCL ：原封不动的记录当前DCL(statement语句方式)。</span><br><span class="line">DML ：只记录已经提交的事务DML</span><br></pre></td></tr></table></figure><h4 id="2-3-3-DML三种记录方式"><a href="#2-3-3-DML三种记录方式" class="headerlink" title="2.3.3 DML三种记录方式"></a>2.3.3 DML三种记录方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">binlog_format（binlog的记录格式）参数影响</span><br><span class="line">（1）statement（5.6默认）SBR(statement based replication) ：语句模式原封不动的记录当前DML。</span><br><span class="line">（2）ROW(5.7 默认值) RBR(ROW based replication) ：记录数据行的变化(用户看不懂，需要工具分析)</span><br><span class="line">（3）mixed（混合）MBR(mixed based replication)模式  ：以上两种模式的混合</span><br></pre></td></tr></table></figure><h4 id="2-3-4-面试题"><a href="#2-3-4-面试题" class="headerlink" title="2.3.4 面试题"></a>2.3.4 面试题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SBR与RBR模式的对比</span></span><br><span class="line">STATEMENT：可读性较高，日志量少，但是不够严谨</span><br><span class="line">ROW      ：可读性很低，日志量大，足够严谨</span><br><span class="line">update t1 <span class="built_in">set</span> xxx=xxx <span class="built_in">where</span> id&gt;1000   ? --&gt;一共500w行，row模式怎么记录的日志</span><br><span class="line"><span class="comment">#为什么row模式严谨？</span></span><br><span class="line">id  name    intime</span><br><span class="line">insert into t1 values(1,<span class="string">'zs'</span>,now())</span><br><span class="line">我们建议使用：row记录模式</span><br></pre></td></tr></table></figure><h3 id="2-4-event（事件）是什么"><a href="#2-4-event（事件）是什么" class="headerlink" title="2.4 event（事件）是什么?"></a>2.4 event（事件）是什么?</h3><h4 id="2-4-1-事件的简介"><a href="#2-4-1-事件的简介" class="headerlink" title="2.4.1 事件的简介"></a>2.4.1 事件的简介</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">二进制日志的最小记录单元</span><br><span class="line">对于DDL,DCL,一个语句就是一个event</span><br><span class="line">对于DML语句来讲:只记录已提交的事务。</span><br><span class="line">例如以下列子,就被分为了4个event</span><br><span class="line">begin;      120  - 340</span><br><span class="line">DML1        340  - 460</span><br><span class="line">DML2        460  - 550</span><br><span class="line">commit;     550  - 760</span><br></pre></td></tr></table></figure><h4 id="2-4-2-event的组成"><a href="#2-4-2-event的组成" class="headerlink" title="2.4.2 event的组成"></a>2.4.2 event的组成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">三部分构成:</span><br><span class="line">(1) 事件的开始标识</span><br><span class="line">(2) 事件内容</span><br><span class="line">(3) 事件的结束标识</span><br><span class="line">Position:</span><br><span class="line">开始标识: at 194</span><br><span class="line">结束标识: end_log_pos 254</span><br><span class="line">194? 254?</span><br><span class="line">某个事件在binlog中的相对位置号</span><br><span class="line">位置号的作用是什么？</span><br><span class="line">为了方便我们截取事件</span><br></pre></td></tr></table></figure><h3 id="2-5-日志文件查看"><a href="#2-5-日志文件查看" class="headerlink" title="2.5 日志文件查看"></a>2.5 日志文件查看</h3><h4 id="2-5-1-查看日志的开启情况"><a href="#2-5-1-查看日志的开启情况" class="headerlink" title="2.5.1 查看日志的开启情况"></a>2.5.1 查看日志的开启情况</h4><p>log_bin参数设置的路径,可以找到二进制日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show variables like <span class="string">'%log_bin%'</span>;</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">| Variable_name                   | Value                        |</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">| log_bin                         | ON                           |</span><br><span class="line">| log_bin_basename                | /data/binlog/mysql-bin       |</span><br><span class="line">| log_bin_index                   | /data/binlog/mysql-bin.index |</span><br><span class="line">| log_bin_trust_function_creators | OFF                          |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF                          |</span><br><span class="line">| sql_log_bin                     | ON                           |</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h4 id="2-5-2-查看一共多少个binlog"><a href="#2-5-2-查看一共多少个binlog" class="headerlink" title="2.5.2 查看一共多少个binlog"></a>2.5.2 查看一共多少个binlog</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       154 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;flush logs;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;flush logs;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       201 |</span><br><span class="line">| mysql-bin.000002 |       201 |</span><br><span class="line">| mysql-bin.000003 |       154 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;</span><br></pre></td></tr></table></figure><h4 id="2-5-3-查看mysql正在使用的日志文件"><a href="#2-5-3-查看mysql正在使用的日志文件" class="headerlink" title="2.5.3 查看mysql正在使用的日志文件"></a>2.5.3 查看mysql正在使用的日志文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000003 |      154 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">Master [(none)]&gt;</span><br></pre></td></tr></table></figure><p>file：当前MySQL正在使用的文件名<br>Position：最后一个事件的结束位置号</p><h3 id="2-6-日志内容查看"><a href="#2-6-日志内容查看" class="headerlink" title="2.6 日志内容查看"></a>2.6 日志内容查看</h3><h4 id="2-6-1-event查看"><a href="#2-6-1-event查看" class="headerlink" title="2.6.1 event查看"></a>2.6.1 event查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Master [binlog]&gt;show binlog events <span class="keyword">in</span> <span class="string">'mysql-bin.000003'</span>;</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line">| Log_name         | Pos | Event_type     | Server_id | End_log_pos | Info                                   |</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000003 |   4 | Format_desc    |         6 |         123 | Server ver: 5.7.20-log, Binlog ver: 4  |</span><br><span class="line">| mysql-bin.000003 | 123 | Previous_gtids |         6 |         154 |                                        |</span><br><span class="line">| mysql-bin.000003 | 154 | Anonymous_Gtid |         6 |         219 | SET @@SESSION.GTID_NEXT= <span class="string">'ANONYMOUS'</span>   |</span><br><span class="line">| mysql-bin.000003 | 219 | Query          |         6 |         319 | create database binlog                 |</span><br><span class="line">| mysql-bin.000003 | 319 | Anonymous_Gtid |         6 |         384 | SET @@SESSION.GTID_NEXT= <span class="string">'ANONYMOUS'</span>   |</span><br><span class="line">| mysql-bin.000003 | 384 | Query          |         6 |         486 | use `binlog`; create table t1 (id int) |</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line"></span><br><span class="line">Log_name：binlog文件名</span><br><span class="line">Pos：开始的position    *****</span><br><span class="line">Event_type：事件类型</span><br><span class="line">Format_desc：格式描述，每一个日志文件的第一个事件，多用户没有意义，MySQL识别binlog必要信息</span><br><span class="line">Server_id：mysql服务号标识</span><br><span class="line">End_log_pos：事件的结束位置号 *****</span><br><span class="line">Info：事件内容*****</span><br><span class="line">补充:</span><br><span class="line">SHOW BINLOG EVENTS</span><br><span class="line">   [IN <span class="string">'log_name'</span>]</span><br><span class="line">   [FROM pos]</span><br><span class="line">   [LIMIT [offset,] row_count]</span><br><span class="line">[root@db01 binlog]<span class="comment"># mysql -e "show binlog events in 'mysql-bin.000004'" |grep drop</span></span><br></pre></td></tr></table></figure><h4 id="2-6-2-binlog文件内容详细查看"><a href="#2-6-2-binlog文件内容详细查看" class="headerlink" title="2.6.2 binlog文件内容详细查看"></a>2.6.2 binlog文件内容详细查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog /data/mysql/mysql-bin.000006</span><br><span class="line">mysqlbinlog --base64-output=decode-rows -vvv /data/binlog/mysql-bin.000003</span><br><span class="line">mysqlbinlog  -d binlog /data/binlog/mysql-bin.000003</span><br><span class="line">[root@db01 binlog]<span class="comment"># mysqlbinlog --start-datetime='2019-05-06 17:00:00' --stop-datetime='2019-05-06 17:01:00'  /data/binlog/mysql-bin.000004</span></span><br></pre></td></tr></table></figure><h3 id="2-7-基于Position号进行日志截取"><a href="#2-7-基于Position号进行日志截取" class="headerlink" title="2.7 基于Position号进行日志截取"></a>2.7 基于Position号进行日志截取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">核心就是找截取的起点和终点</span><br><span class="line">--start-position=321</span><br><span class="line">--stop-position=513</span><br><span class="line"> mysqlbinlog --start-position=219 --stop-position=1347 /data/binlog/mysql-bin.000003 &gt;/tmp/bin.sql</span><br><span class="line"></span><br><span class="line">案例: 使用binlog日志进行数据恢复</span><br><span class="line">模拟:</span><br><span class="line">1. </span><br><span class="line">[(none)]&gt;create database binlog charset utf8;</span><br><span class="line">2. </span><br><span class="line">[(none)]&gt;use binlog;</span><br><span class="line">[binlog]&gt;create table t1(id int);</span><br><span class="line">3. </span><br><span class="line">[binlog]&gt;insert into t1 values(1);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">[binlog]&gt;insert into t1 values(2);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">[binlog]&gt;insert into t1 values(3);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">4. </span><br><span class="line">[binlog]&gt;drop database binlog;</span><br><span class="line">恢复:</span><br><span class="line">[(none)]&gt;show master status ;</span><br><span class="line">[(none)]&gt;show binlog events <span class="keyword">in</span> <span class="string">'mysql-bin.000004'</span>;</span><br><span class="line">[root@db01 binlog]<span class="comment"># mysqlbinlog --start-position=1227 --stop-position=2342 /data/binlog/mysql-bin.000004 &gt;/tmp/bin.sql</span></span><br><span class="line">[(none)]&gt;<span class="built_in">set</span> sql_Log_bin=0;</span><br><span class="line">[(none)]&gt;<span class="built_in">source</span> /tmp/bin.sql</span><br><span class="line"></span><br><span class="line">面试案例:</span><br><span class="line">1. 备份策略每天全备,有全量的二进制日志</span><br><span class="line">2.业务中一共10个库,其中一个被误drop了</span><br><span class="line">3. 需要在其他9个库正常工作过程中进行数据恢复</span><br></pre></td></tr></table></figure><h3 id="2-8-binlog日志的GTID新特性"><a href="#2-8-binlog日志的GTID新特性" class="headerlink" title="2.8 binlog日志的GTID新特性"></a>2.8 binlog日志的GTID新特性</h3><h4 id="2-8-1-GTID-介绍"><a href="#2-8-1-GTID-介绍" class="headerlink" title="2.8.1 GTID 介绍"></a>2.8.1 GTID 介绍</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5.6 版本新加的特性,5.7中做了加强</span><br><span class="line">5.6 中不开启,没有这个功能.</span><br><span class="line">5.7 中的GTID,即使不开也会有自动生成</span><br><span class="line">SET @@SESSION.GTID_NEXT= <span class="string">'ANONYMOUS'</span></span><br></pre></td></tr></table></figure><h4 id="2-8-2-GTID-Global-Transaction-ID"><a href="#2-8-2-GTID-Global-Transaction-ID" class="headerlink" title="2.8.2. GTID(Global Transaction ID)"></a>2.8.2. GTID(Global Transaction ID)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是对于一个已提交事务的编号，并且是一个全局唯一的编号。</span><br><span class="line">它的官方定义如下：</span><br><span class="line"></span><br><span class="line">GTID = source_id ：transaction_id</span><br><span class="line">7E11FA47-31CA-19E1-9E56-C43AA21293967:29</span><br></pre></td></tr></table></figure><h4 id="2-8-3-重要参数介绍："><a href="#2-8-3-重要参数介绍：" class="headerlink" title="2.8.3 重要参数介绍："></a>2.8.3 重要参数介绍：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">gtid-mode=on                    <span class="comment"># 开关</span></span><br><span class="line">enforce-gtid-consistency=<span class="literal">true</span>   <span class="comment"># 强制gitd的一致性</span></span><br><span class="line">log_slave_updates=ON            <span class="comment"># 强制从库记录binlog</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status ;</span><br><span class="line">mysql&gt; show binlog events <span class="keyword">in</span> <span class="string">'mysql-bin.000004'</span>;</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;create database gtid charset utf8;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      326 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;use gtid</span><br><span class="line">Database changed</span><br><span class="line">Master [gtid]&gt;create table t1 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      489 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-2 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;create table t2 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;create table t3 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      815 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-4 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;insert into t1 values(1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;commit;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |     1068 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-5 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;insert into t2 values(1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;commit;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |     1321 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-6 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="2-8-3-基于GTID进行查看binlog"><a href="#2-8-3-基于GTID进行查看binlog" class="headerlink" title="2.8.3. 基于GTID进行查看binlog"></a>2.8.3. 基于GTID进行查看binlog</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">具备GTID后,截取查看某些事务日志:</span><br><span class="line">--include-gtids</span><br><span class="line">--exclude-gtids</span><br><span class="line">mysqlbinlog --include-gtids=<span class="string">'dff98809-55c3-11e9-a58b-000c2928f5dd:1-6'</span> --exclude-gtids=<span class="string">'dff98809-55c3-11e9-a58b-000c2928f5dd:4'</span>  /data/binlog/mysql-bin.000004</span><br></pre></td></tr></table></figure><h4 id="2-8-4-GTID的幂等性"><a href="#2-8-4-GTID的幂等性" class="headerlink" title="2.8.4 GTID的幂等性"></a>2.8.4 GTID的幂等性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开启GTID后,MySQL恢复Binlog时,重复GTID的事务不会再执行了</span><br><span class="line">就想恢复?怎么办?</span><br><span class="line">--skip-gtids    <span class="comment"># 注意</span></span><br><span class="line">mysqlbinlog --include-gtids=<span class="string">'3ca79ab5-3e4d-11e9-a709-000c293b577e:4'</span> /data/binlog/mysql-bin.000004 /data/binlog/mysql-bin.000004</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"><span class="built_in">source</span> /tmp/binlog.sql</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=1;</span><br></pre></td></tr></table></figure><h3 id="2-9-使用二进制日志恢复数据案例"><a href="#2-9-使用二进制日志恢复数据案例" class="headerlink" title="2.9 使用二进制日志恢复数据案例"></a>2.9 使用二进制日志恢复数据案例</h3><h4 id="2-9-1-故障环境介绍"><a href="#2-9-1-故障环境介绍" class="headerlink" title="2.9.1 故障环境介绍"></a>2.9.1 故障环境介绍</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">创建了一个库  db, 导入了表t1 ,t1表中录入了很多数据</span><br><span class="line">一个开发人员,drop database db;</span><br><span class="line">没有备份,日志都在.怎么恢复?</span><br><span class="line">思路:找到建库语句到删库之前所有的日志,进行恢复.(开启了GTID模式)</span><br><span class="line">故障案例模拟:</span><br><span class="line">(0) drop database <span class="keyword">if</span> exists db ;</span><br><span class="line">(1) create database db charset utf8;     </span><br><span class="line">(2) use db;</span><br><span class="line">(3) create table t1 (id int);</span><br><span class="line">(4) insert into t1 values(1),(2),(3);</span><br><span class="line">(5) insert into t1 values(4),(5),(6);</span><br><span class="line">(6) commit</span><br><span class="line">(7) update t1 <span class="built_in">set</span> id=30 <span class="built_in">where</span> id=3;</span><br><span class="line">(8) commit;</span><br><span class="line">(9) delete from t1 <span class="built_in">where</span> id=4;</span><br><span class="line">(10)commit;</span><br><span class="line">(11)insert into t1 values(7),(8),(9);</span><br><span class="line">(12)commit;</span><br><span class="line">(13)drop database db;</span><br><span class="line">========================</span><br><span class="line">drop database <span class="keyword">if</span> exists db ;</span><br><span class="line">create database db charset utf8; </span><br><span class="line">use db;</span><br><span class="line">create table t1 (id int);</span><br><span class="line">insert into t1 values(1),(2),(3);</span><br><span class="line">insert into t1 values(4),(5),(6);</span><br><span class="line">commit;</span><br><span class="line">update t1 <span class="built_in">set</span> id=30 <span class="built_in">where</span> id=3;</span><br><span class="line">commit;</span><br><span class="line">delete from t1 <span class="built_in">where</span> id=4;</span><br><span class="line">commit;</span><br><span class="line">insert into t1 values(7),(8),(9);</span><br><span class="line">commit;</span><br><span class="line">drop database db;</span><br><span class="line">=======</span><br><span class="line">运行以上语句，模拟故障场景</span><br><span class="line">需求：将数据库恢复到以下状态（提示第9步和第13步是误操作，其他都是正常操作）</span><br></pre></td></tr></table></figure><h4 id="2-9-2-恢复过程-无GTID时的恢复"><a href="#2-9-2-恢复过程-无GTID时的恢复" class="headerlink" title="2.9.2 恢复过程(无GTID时的恢复)"></a>2.9.2 恢复过程(无GTID时的恢复)</h4><p>1.查看当前使用的 binlog文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">oldguo [db]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line"></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |    1873 |              |                  |                  |</span><br><span class="line"></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">2.查看事件：</span><br><span class="line"></span><br><span class="line">第一段：</span><br><span class="line">| mysql-bin.000006 |  813 | Query      |        1 |        907 | use `db`; create table t1 (id int)                  |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |  907 | Query      |        1 |        977 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |  977 | Table_map  |        1 |        1020 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1020 | Write_rows  |        1 |        1070 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1070 | Table_map  |        1 |        1113 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1113 | Write_rows  |        1 |        1163 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1163 | Xid        |        1 |        1194 | COMMIT /* xid=74 */                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1194 | Query      |        1 |        1264 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1264 | Table_map  |        1 |        1307 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1307 | Update_rows |        1 |        1353 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1353 | Xid        |        1 |        1384 | COMMIT /* xid=77 */   </span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=813 --stop-position=1384 /data/mysql/mysql-bin.000006 &gt;/tmp/bin1.sql</span><br></pre></td></tr></table></figure><p>第二段：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">二段：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1568 | Query      |        1 |        1638 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1638 | Table_map  |        1 |        1681 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1681 | Write_rows  |        1 |        1731 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1731 | Xid        |        1 |        1762 | COMMIT /* xid=81 */ </span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=1568 --stop-position=1762 /data/mysql/mysql-bin.000006 &gt;/tmp/bin2.sql</span><br></pre></td></tr></table></figure><p>3.恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"><span class="built_in">source</span> /tmp/bin1.sql</span><br><span class="line"><span class="built_in">source</span> /tmp/bin2.sql</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=1;</span><br></pre></td></tr></table></figure><h4 id="2-9-3-有GTID的恢复"><a href="#2-9-3-有GTID的恢复" class="headerlink" title="2.9.3 有GTID的恢复:"></a>2.9.3 有GTID的恢复:</h4><p>(1)截取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog --skip-gtids --include-gtids=<span class="string">'3ca79ab5-3e4d-11e9-a709-000c293b577e:7-12'</span> mysql-bin.000004&gt; /tmp/bin.sql</span><br></pre></td></tr></table></figure><p>(2)恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"><span class="built_in">source</span> /tmp/bin.sql</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=1;</span><br></pre></td></tr></table></figure><h3 id="2-10二进制日志其他操作"><a href="#2-10二进制日志其他操作" class="headerlink" title="2.10二进制日志其他操作"></a>2.10二进制日志其他操作</h3><h4 id="2-10-1-自动清理日志"><a href="#2-10-1-自动清理日志" class="headerlink" title="2.10.1 自动清理日志"></a>2.10.1 自动清理日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">'%expire%'</span>;</span><br><span class="line">expire_logs_days  0   </span><br><span class="line">自动清理时间,是要按照全备周期+1</span><br><span class="line"><span class="built_in">set</span> global expire_logs_days=8;</span><br><span class="line">永久生效:</span><br><span class="line">my.cnf</span><br><span class="line">expire_logs_days=15;</span><br><span class="line">企业建议,至少保留两个全备周期+1的binlog</span><br></pre></td></tr></table></figure><h4 id="2-10-2-手工清理"><a href="#2-10-2-手工清理" class="headerlink" title="2.10.2 手工清理"></a>2.10.2 手工清理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PURGE BINARY LOGS BEFORE now() - INTERVAL 3 day;</span><br><span class="line">PURGE BINARY LOGS TO <span class="string">'mysql-bin.000010'</span>;</span><br><span class="line">注意:不要手工 rm binlog文件</span><br><span class="line">1. my.cnf binlog关闭掉,启动数据库</span><br><span class="line">2.把数据库关闭,开启binlog,启动数据库</span><br><span class="line">删除所有binlog,并从000001开始重新记录日志</span><br></pre></td></tr></table></figure><p><strong>*reset master; 主从关系中，主库执行此操作，主从环境必崩</strong></p><h4 id="2-10-3-日志是怎么滚动"><a href="#2-10-3-日志是怎么滚动" class="headerlink" title="2.10.3 日志是怎么滚动"></a>2.10.3 日志是怎么滚动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flush logs; </span><br><span class="line">重启mysql也会自动滚动一个新的</span><br><span class="line">日志文件达到1G大小(max_binlog_size)</span><br><span class="line">| max_binlog_size                          | 1073741824     </span><br><span class="line">备份时,加入参数也可以自动滚动</span><br></pre></td></tr></table></figure><h2 id="第3章-slow-log-慢日志"><a href="#第3章-slow-log-慢日志" class="headerlink" title="第3章 slow_log 慢日志"></a>第3章 slow_log 慢日志</h2><h3 id="3-1-作用"><a href="#3-1-作用" class="headerlink" title="3.1 作用"></a>3.1 作用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记录慢SQL语句的日志,定位低效SQL语句的工具日志</span><br></pre></td></tr></table></figure><h3 id="3-2-开启慢日志-默认没开启"><a href="#3-2-开启慢日志-默认没开启" class="headerlink" title="3.2 开启慢日志(默认没开启)"></a>3.2 开启慢日志(默认没开启)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">开关:</span><br><span class="line">slow_query_log=1 </span><br><span class="line">文件位置及名字 </span><br><span class="line">slow_query_log_file=/data/mysql/slow.log</span><br><span class="line">设定慢查询时间:</span><br><span class="line">long_query_time=0.1</span><br><span class="line">没走索引的语句也记录:</span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">slow_query_log=1 </span><br><span class="line">slow_query_log_file=/data/mysql/slow.log</span><br><span class="line">long_query_time=0.1</span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h3 id="3-3-mysqldumpslow-分析慢日志"><a href="#3-3-mysqldumpslow-分析慢日志" class="headerlink" title="3.3 mysqldumpslow 分析慢日志"></a>3.3 mysqldumpslow 分析慢日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow -s c -t 10 /data/mysql/slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三方工具(自己扩展)</span></span><br><span class="line">https://www.percona.com/downloads/percona-toolkit/LATEST/</span><br><span class="line">yum install perl-DBI perl-DBD-MySQL perl-Time-HiRes perl-IO-Socket-SSL perl-Digest-MD5</span><br><span class="line">toolkit工具包中的命令:</span><br><span class="line">./pt-query-diagest  /data/mysql/slow.log</span><br><span class="line">Anemometer基于pt-query-digest将MySQL慢查询可视化</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>5.存储引擎</title>
    <link href="http://linuxwf.com/2020/04/15/5-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
    <id>http://linuxwf.com/2020/04/15/5-%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/</id>
    <published>2020-04-15T02:04:00.000Z</published>
    <updated>2020-04-15T02:05:06.828Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><h2 id="第1章-简介"><a href="#第1章-简介" class="headerlink" title="第1章 简介"></a>第1章 简介</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">相当于Linux文件系统，只不过比文件系统强大</span><br></pre></td></tr></table></figure><h2 id="第2章-存储引擎种类"><a href="#第2章-存储引擎种类" class="headerlink" title="第2章 存储引擎种类"></a>第2章 存储引擎种类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show engines;</span><br><span class="line">| CSV                                                    </span><br><span class="line">| MRG_MYISAM         </span><br><span class="line">| MyISAM            </span><br><span class="line">| BLACKHOLE          </span><br><span class="line">| PERFORMANCE_SCHEMA </span><br><span class="line">| MEMORY             </span><br><span class="line">| ARCHIVE            </span><br><span class="line">| InnoDB             </span><br><span class="line">| FEDERATED       </span><br><span class="line"></span><br><span class="line"><span class="comment">#引擎种类查看</span></span><br><span class="line">show engines;</span><br><span class="line">存储引擎是作用在表上的，也就意味着，不同的表可以有不同的存储引擎类型。</span><br><span class="line">PerconaDB:默认是XtraDB</span><br><span class="line">MariaDB:默认是InnoDB</span><br><span class="line">其他的存储引擎支持:</span><br><span class="line">TokuDB    </span><br><span class="line">RocksDB</span><br><span class="line">MyRocks</span><br><span class="line">以上三种存储引擎的共同点:压缩比较高,数据插入性能极高</span><br><span class="line">现在很多的NewSQL,使用比较多的功能特性.</span><br></pre></td></tr></table></figure><h3 id="2-1-InnoDB-MyISAM引擎的区别"><a href="#2-1-InnoDB-MyISAM引擎的区别" class="headerlink" title="2.1 InnoDB,MyISAM引擎的区别"></a>2.1 InnoDB,MyISAM引擎的区别</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">支持事务(transaction)</span><br><span class="line">支持行级锁(row level lock),MyISAM是表级锁</span><br><span class="line">支持外键(FK)</span><br><span class="line">支持热备(Hot Backup) ,MyISAM支持温备份</span><br><span class="line">支持自动故障恢复(ACSR)</span><br><span class="line">主从复制新特性(GTID,Group Commit,MTS,MGR...)</span><br><span class="line">支持各类高级的缓存机制</span><br><span class="line">更丰富的线程支持</span><br></pre></td></tr></table></figure><h3 id="2-2-简历案例—zabbix监控系统架构整改"><a href="#2-2-简历案例—zabbix监控系统架构整改" class="headerlink" title="2.2 简历案例—zabbix监控系统架构整改"></a>2.2 简历案例—zabbix监控系统架构整改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">环境: zabbix 3.2    mariaDB 5.5  centos 7.3</span><br><span class="line">现象 : zabbix卡的要死 ,  每隔3-4个月,都要重新搭建一遍zabbix,存储空间经常爆满.</span><br><span class="line">问题 :</span><br><span class="line">1. zabbix 版本 </span><br><span class="line">2. 数据库版本</span><br><span class="line">3. zabbix数据库500G,存在一个文件里</span><br><span class="line">优化建议:</span><br><span class="line">1.数据库版本升级到5.7版本,zabbix升级更高版本</span><br><span class="line">2.存储引擎改为tokudb</span><br><span class="line">3.监控数据按月份进行切割(二次开发:zabbix 数据保留机制功能重写,数据库分表)</span><br><span class="line">4.关闭binlog和双1</span><br><span class="line">5.参数调整....</span><br><span class="line">优化结果:</span><br><span class="line">监控状态良好</span><br><span class="line"></span><br><span class="line">为什么?</span><br><span class="line">1. 原生态支持TokuDB,另外经过测试环境,5.7要比5.5 版本性能 高  2-3倍</span><br><span class="line">2. TokuDB:insert数据比Innodb快的多，数据压缩比要Innodb高</span><br><span class="line">3.监控数据按月份进行切割,为了能够truncate每个分区表,立即释放空间</span><br><span class="line">4.关闭binlog -----&gt;减少无关日志的记录.</span><br><span class="line">5.参数调整...-----&gt;安全性参数关闭,提高性能.</span><br></pre></td></tr></table></figure><h3 id="2-3-InnoDB个MyISAM存储引擎的替换"><a href="#2-3-InnoDB个MyISAM存储引擎的替换" class="headerlink" title="2.3 InnoDB个MyISAM存储引擎的替换"></a>2.3 InnoDB个MyISAM存储引擎的替换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">环境: centos 5.8 ,MySQL 5.0版本,MyISAM存储引擎,网站业务(LNMP),数据量50G左右</span><br><span class="line">现象问题: 业务压力大的时候,非常卡;经历过宕机,会有部分数据丢失.</span><br><span class="line">问题分析:</span><br><span class="line">1.MyISAM存储引擎表级锁,在高并发时,会有很高锁等待</span><br><span class="line">2.MyISAM存储引擎不支持事务,在断电时,会有可能丢失数据</span><br><span class="line">职责</span><br><span class="line">1.监控锁的情况:有很多的表锁等待</span><br><span class="line">2.存储引擎查看:所有表默认是MyISAM</span><br><span class="line">解决方案:</span><br><span class="line">1.升级MySQL 5.6.10版本</span><br><span class="line">2. 迁移所有表到新环境</span><br><span class="line">3. 开启双1安全参数</span><br></pre></td></tr></table></figure><h2 id="第3章-InnoDB存储引擎介绍"><a href="#第3章-InnoDB存储引擎介绍" class="headerlink" title="第3章 InnoDB存储引擎介绍"></a>第3章 InnoDB存储引擎介绍</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql11.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在MySQL5.5版本之后，默认的存储引擎，提供高可靠性和高性能。</span><br></pre></td></tr></table></figure><h2 id="第4章-存储引擎查看"><a href="#第4章-存储引擎查看" class="headerlink" title="第4章 存储引擎查看"></a>第4章 存储引擎查看</h2><h3 id="4-1-使用-SELECT-确认会话存储引擎"><a href="#4-1-使用-SELECT-确认会话存储引擎" class="headerlink" title="4.1 使用 SELECT 确认会话存储引擎"></a>4.1 使用 SELECT 确认会话存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@default_storage_engine;</span><br><span class="line"><span class="comment">##存储引擎(不代表生产操作)</span></span><br><span class="line">会话级别:</span><br><span class="line"><span class="built_in">set</span> default_storage_engine=myisam;</span><br><span class="line">全局级别(仅影响新会话):</span><br><span class="line"><span class="built_in">set</span> global default_storage_engine=myisam;</span><br><span class="line">重启之后,所有参数均失效.</span><br><span class="line">如果要永久生效:</span><br><span class="line">写入配置文件</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">default_storage_engine=myisam</span><br><span class="line">存储引擎是表级别的,每个表创建时可以指定不同的存储引擎,但是我们建议统一为innodb.</span><br></pre></td></tr></table></figure><h3 id="4-2-SHOW-确认每个表的存储引擎"><a href="#4-2-SHOW-确认每个表的存储引擎" class="headerlink" title="4.2 SHOW 确认每个表的存储引擎"></a>4.2 SHOW 确认每个表的存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE City\G;</span><br><span class="line">SHOW TABLE STATUS LIKE <span class="string">'CountryLanguage'</span>\G</span><br></pre></td></tr></table></figure><h3 id="4-3-INFORMATION-SCHEMA-确认每个表的存储引擎"><a href="#4-3-INFORMATION-SCHEMA-确认每个表的存储引擎" class="headerlink" title="4.3 INFORMATION_SCHEMA 确认每个表的存储引擎"></a>4.3 INFORMATION_SCHEMA 确认每个表的存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[world]&gt;select table_schema,table_name ,engine from information_schema.tables <span class="built_in">where</span> table_schema not <span class="keyword">in</span> (<span class="string">'sys'</span>,<span class="string">'mysql'</span>,<span class="string">'information_schema'</span>,<span class="string">'performance_schema'</span>);</span><br><span class="line">Master [world]&gt;show table status;</span><br><span class="line">Master [world]&gt;show create table city;</span><br></pre></td></tr></table></figure><h3 id="4-4-修改一个表的存储引擎"><a href="#4-4-修改一个表的存储引擎" class="headerlink" title="4.4 修改一个表的存储引擎"></a>4.4 修改一个表的存储引擎</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [oldboy]&gt;alter table t1 engine innodb;</span><br><span class="line">注意：此命令我们经常使用他，进行innodb表的碎片整理</span><br></pre></td></tr></table></figure><h3 id="4-5-平常处理过的MySQL问题–碎片处理"><a href="#4-5-平常处理过的MySQL问题–碎片处理" class="headerlink" title="4.5 平常处理过的MySQL问题–碎片处理"></a>4.5 平常处理过的MySQL问题–碎片处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">环境:centos7.4,MySQL 5.7.20,InnoDB存储引擎</span><br><span class="line">业务特点:数据量级较大,经常需要按月删除历史数据.</span><br><span class="line">问题:磁盘空间占用很大,不释放</span><br><span class="line">处理方法:</span><br><span class="line">以前:将数据逻辑导出,手工drop表,然后导入进去</span><br><span class="line">现在:</span><br><span class="line">对表进行按月进行分表(partition,中间件)</span><br><span class="line">业务替换为truncate方式</span><br></pre></td></tr></table></figure><h3 id="4-6-扩展-如何批量修改"><a href="#4-6-扩展-如何批量修改" class="headerlink" title="4.6 扩展:如何批量修改"></a>4.6 扩展:如何批量修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">需求:将zabbix库中的所有表,innodb替换为tokudb</span><br><span class="line">select concat(<span class="string">"alter table zabbix."</span>,table_name,<span class="string">" engine tokudb;"</span>) from</span><br><span class="line">information_schema.tables <span class="built_in">where</span> table_schema=<span class="string">'zabbix'</span> into outfile <span class="string">'/tmp/tokudb.sql'</span>;</span><br></pre></td></tr></table></figure><h2 id="第5章-InnoDB存储引擎物理存储结构"><a href="#第5章-InnoDB存储引擎物理存储结构" class="headerlink" title="第5章 InnoDB存储引擎物理存储结构"></a>第5章 InnoDB存储引擎物理存储结构</h2><h3 id="5-1-最直观的存储方式-data-mysql-data"><a href="#5-1-最直观的存储方式-data-mysql-data" class="headerlink" title="5.1 最直观的存储方式(/data/mysql/data)"></a>5.1 最直观的存储方式(/data/mysql/data)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ibdata1：系统数据字典信息(统计信息)，UNDO表空间等数据</span><br><span class="line">ib_logfile0 ~ ib_logfile1: REDO日志文件，事务日志文件。</span><br><span class="line">ibtmp1： 临时表空间磁盘位置，存储临时表</span><br><span class="line">frm：存储表的列信息</span><br><span class="line">ibd：表的数据行和索引</span><br></pre></td></tr></table></figure><h3 id="5-2-表空间-Tablespace"><a href="#5-2-表空间-Tablespace" class="headerlink" title="5.2 表空间(Tablespace)"></a>5.2 表空间(Tablespace)</h3><h4 id="5-2-1-共享表空间"><a href="#5-2-1-共享表空间" class="headerlink" title="5.2.1 共享表空间"></a>5.2.1 共享表空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">需要将所有数据存储到同一个表空间中 ，管理比较混乱</span><br><span class="line">5.5版本: 用户表数据和索引,系统数据字典信息,undo信息(回滚信息),临时表信息等.</span><br><span class="line">5.6版本: 将用户数据和索引分离.剩下:系统数据字典信息,undo信息(回滚信息),临时表信息等.</span><br><span class="line">5.7版本: 将临时表独立,剩下:系统数据字典信息,undo信息(回滚信息).人为可以undo信息独立</span><br><span class="line">8.0版本: undo也独立了,数据字典只存一份.共享表空间会慢慢解耦了.</span><br></pre></td></tr></table></figure><p>具体变化参考官方文档:<br><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.6%2Fen%2Finnodb-architecture.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.6/en/innodb-architecture.html</a><br><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.7%2Fen%2Finnodb-architecture.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html</a><br><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.8%2Fen%2Finnodb-architecture.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.8/en/innodb-architecture.html</a></p><h4 id="5-2-2-共享表空间设置"><a href="#5-2-2-共享表空间设置" class="headerlink" title="5.2.2 共享表空间设置"></a>5.2.2 共享表空间设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">共享表空间设置(在搭建MySQL时，初始化数据之前设置到参数文件中)</span><br><span class="line">[(none)]&gt;select @@innodb_data_file_path;</span><br><span class="line">[(none)]&gt;show variables like <span class="string">'%extend%'</span>;</span><br><span class="line">innodb_data_file_path=ibdata1:512M:ibdata2:512M:autoextend</span><br><span class="line">innodb_autoextend_increment=64</span><br></pre></td></tr></table></figure><h4 id="5-2-3-独立表空间"><a href="#5-2-3-独立表空间" class="headerlink" title="5.2.3 独立表空间"></a>5.2.3 独立表空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">从5.6，默认表空间不再使用共享表空间，替换为独立表空间。</span><br><span class="line">主要存储的是用户数据</span><br><span class="line">存储特点为：一个表一个ibd文件，存储数据行和索引信息</span><br><span class="line">基本表结构元数据存储：</span><br><span class="line">xxx.frm</span><br><span class="line">最终结论：</span><br><span class="line">      元数据            数据行+索引</span><br><span class="line">mysql表数据    =（ibdataX+frm）+ibd(段、区、页)</span><br><span class="line">        DDL             DML+DQL</span><br><span class="line"></span><br><span class="line">MySQL的存储引擎日志：</span><br><span class="line">Redo Log: ib_logfile0  ib_logfile1，重做日志</span><br><span class="line">Undo Log: ibdata1 ibdata2(存储在共享表空间中)，回滚日志</span><br><span class="line">临时表:ibtmp1，在做join union操作产生临时数据，用完就自动</span><br></pre></td></tr></table></figure><h4 id="5-2-4-独立表空间设置问题"><a href="#5-2-4-独立表空间设置问题" class="headerlink" title="5.2.4 独立表空间设置问题"></a>5.2.4 独立表空间设置问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;select @@innodb_file_per_table;</span><br><span class="line">+-------------------------+</span><br><span class="line">| @@innodb_file_per_table |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+-------------------------+</span><br><span class="line">alter table city dicard tablespace;</span><br><span class="line">alter table city import tablespace;</span><br></pre></td></tr></table></figure><h2 id="第6章-故障案例"><a href="#第6章-故障案例" class="headerlink" title="第6章 故障案例"></a>第6章 故障案例</h2><h3 id="6-1-案例一"><a href="#6-1-案例一" class="headerlink" title="6.1 案例一"></a>6.1 案例一</h3><h4 id="6-1-1-案例背景："><a href="#6-1-1-案例背景：" class="headerlink" title="6.1.1 案例背景："></a>6.1.1 案例背景：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">硬件及软件环境:</span><br><span class="line">联想服务器（IBM） </span><br><span class="line">磁盘500G 没有raid</span><br><span class="line">centos 6.8</span><br><span class="line">mysql 5.6.33  innodb引擎  独立表空间</span><br><span class="line">备份没有，日志也没开</span><br><span class="line"></span><br><span class="line">开发用户专用库:</span><br><span class="line">jira(bug追踪) 、 confluence(内部知识库)    ------&gt;LNMT</span><br></pre></td></tr></table></figure><h4 id="6-1-2-故障描述"><a href="#6-1-2-故障描述" class="headerlink" title="6.1.2 故障描述:"></a>6.1.2 故障描述:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">故障:</span><br><span class="line">1.  开发用的 Jira , confluence (无备份,无优化,无高可用).</span><br><span class="line">2.  断电,第二天启动,<span class="string">"根文件系统只读,建议使用fsck命令修复文件系统"</span></span><br><span class="line">3.  拿到手的操作系统起来了,但是数据库启动不了.</span><br><span class="line">4.  检查问题,jira库目录丢失,只剩下confluence</span><br></pre></td></tr></table></figure><h4 id="6-1-3-解决办法"><a href="#6-1-3-解决办法" class="headerlink" title="6.1.3 解决办法"></a>6.1.3 解决办法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表空间迁移:</span><br><span class="line">create table xxx</span><br><span class="line">alter table  confulence.t1 discard tablespace;</span><br><span class="line">alter table confulence.t1 import tablespace;</span><br><span class="line">虚拟机测试可行。</span><br></pre></td></tr></table></figure><h4 id="6-1-4-解决思路"><a href="#6-1-4-解决思路" class="headerlink" title="6.1.4 解决思路"></a>6.1.4 解决思路</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">confulence库中一共有107张表。</span><br><span class="line">1、创建107和和原来一模一样的表。</span><br><span class="line">他有2016年的历史库，我让他去他同时电脑上 mysqldump备份confulence库</span><br><span class="line">mysqldump -uroot -ppassw0rd -B  confulence --no-data &gt;test.sql</span><br><span class="line">拿到你的测试库，进行恢复</span><br><span class="line">到这步为止，表结构有了。</span><br><span class="line">2、表空间删除。</span><br><span class="line">select concat(<span class="string">'alter table '</span>,table_schema,<span class="string">'.'</span>table_name,<span class="string">' discard tablespace;'</span>) from information_schema.tables <span class="built_in">where</span> table_schema=<span class="string">'confluence'</span> into outfile <span class="string">'/tmp/discad.sql'</span>;</span><br><span class="line"><span class="built_in">source</span> /tmp/discard.sql</span><br><span class="line">执行过程中发现，有20-30个表无法成功。主外键关系</span><br><span class="line">很绝望，一个表一个表分析表结构，很痛苦。</span><br><span class="line"><span class="built_in">set</span> foreign_key_checks=0 跳过外键检查。</span><br><span class="line">把有问题的表表空间也删掉了。</span><br><span class="line">3、拷贝生产中confulence库下的所有表的ibd文件拷贝到准备好的环境中</span><br><span class="line">select concat(<span class="string">'alter table '</span>,table_schema,<span class="string">'.'</span>table_name,<span class="string">' import tablespace;'</span>) from information_schema.tables <span class="built_in">where</span> table_schema=<span class="string">'confluence'</span> into outfile <span class="string">'/tmp/discad.sql'</span>;</span><br><span class="line">4、验证数据</span><br><span class="line">表都可以访问了，数据挽回到了出现问题时刻的状态（2-8）</span><br></pre></td></tr></table></figure><h3 id="6-2-案例二"><a href="#6-2-案例二" class="headerlink" title="6.2 案例二"></a>6.2 案例二</h3><h4 id="6-2-1-案例背景"><a href="#6-2-1-案例背景" class="headerlink" title="6.2.1 案例背景"></a>6.2.1 案例背景</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#真实的存储引擎优化项目</span></span><br><span class="line">背景:     zabbix 2.x+ MariaDB 5.5, InnODB ,共享表空间 ,监控一共2000+</span><br><span class="line">性能问题: 每隔几个月,Zabbix卡.以前的解决方案,每隔一段时间就要重新搭建zabbix.ibdata1文件已经500G+</span><br><span class="line">性能问题: 每隔几个月,Zabbix卡.以前的解决方案,每隔一段时间就要重新搭建zabbix.ibdata1文件已经500G+</span><br></pre></td></tr></table></figure><h4 id="6-2-2-问题分析"><a href="#6-2-2-问题分析" class="headerlink" title="6.2.2 问题分析"></a>6.2.2 问题分析</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. zabbix版本较低</span><br><span class="line">2. MariaDB版本较低</span><br><span class="line">2.1 版本老,原生态性能低</span><br><span class="line">2.2 5.5版本使用共享表空间</span><br><span class="line">2.3 只保留半年以内的监控数据</span><br><span class="line">2.4 安全参数都开了</span><br><span class="line">2.5 使用InnoDB引擎</span><br></pre></td></tr></table></figure><h4 id="6-2-3-改造建议"><a href="#6-2-3-改造建议" class="headerlink" title="6.2.3 改造建议"></a>6.2.3 改造建议</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">改造建议:</span><br><span class="line">1. zabbix换成较新的版本</span><br><span class="line">2. MariaDB 版本要升级,MariaDB 10.x版本或者Oracle MySQL 5.7或 8.0版本</span><br><span class="line">3. 表空间模式,升级后变为独立表空间模式</span><br><span class="line">5. 关闭所有安全参数和日志.</span><br><span class="line">双一参数关闭</span><br><span class="line">binlog关闭</span><br><span class="line">6.  存储引擎 TokuDB,MyRocks</span><br><span class="line">说明: TokuDB,MyRocks 等存储引擎,MariaDB原生态支持,特点是插入性能高,压缩比极高.</span><br><span class="line">7. 每月进行分表,删除历史数据时,truncate.好处是:delete替换为truncate(未实现).</span><br><span class="line">结果:</span><br><span class="line">经过改造,zabbix没有出现卡顿的显现.</span><br></pre></td></tr></table></figure><h3 id="6-3-MySQL问题–碎片处理"><a href="#6-3-MySQL问题–碎片处理" class="headerlink" title="6.3 MySQL问题–碎片处理"></a>6.3 MySQL问题–碎片处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">环境:centos7.4,MySQL 5.7.20,InnoDB存储引擎</span><br><span class="line">业务特点:数据量级较大,经常需要按月删除历史数据.</span><br><span class="line">问题:磁盘空间占用很大,不释放</span><br><span class="line">处理方法:</span><br><span class="line">以前:将数据逻辑导出,手工truncate表,然后导入进去</span><br><span class="line">现在:</span><br><span class="line">对表进行按月进行分表(partition,中间件)</span><br><span class="line">业务替换为truncate方式</span><br><span class="line"></span><br><span class="line">整理碎片:</span><br><span class="line">alter table t1 engine=innodb;</span><br><span class="line">optimize table t1;</span><br></pre></td></tr></table></figure><h2 id="第7章-InnoDB核心特性-事务"><a href="#第7章-InnoDB核心特性-事务" class="headerlink" title="第7章 InnoDB核心特性-事务"></a>第7章 InnoDB核心特性-事务</h2><h3 id="7-1-事务功能介绍"><a href="#7-1-事务功能介绍" class="headerlink" title="7.1 事务功能介绍"></a>7.1 事务功能介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将多条变更语句,放在一个组(事务)中同时语句,要么全成功,要么全失败.</span><br><span class="line">不可以出现中间过程</span><br><span class="line"></span><br><span class="line">我的理解: </span><br><span class="line">事务是计算机中,伴随着交易类的需求出现的概念和工作机制</span><br><span class="line">所有参加的交易性质的语句,必须同时成功或失败</span><br></pre></td></tr></table></figure><h3 id="7-2-事务的核心特性ACID介绍"><a href="#7-2-事务的核心特性ACID介绍" class="headerlink" title="7.2 事务的核心特性ACID介绍"></a>7.2 事务的核心特性ACID介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Atomic（原子性）</span><br><span class="line">不可再分的特性.一个事务就是一个执行单元,不可再分.必须同时成功或失败</span><br><span class="line">Consistent（一致性）</span><br><span class="line">在一个事务工作单元中,不管是开始时,进行中,结束后,必须数据保证最终一致.</span><br><span class="line">Isolated（隔离性）</span><br><span class="line">多个事务之间工作互不影响.</span><br><span class="line">Durable（持久性）</span><br><span class="line">事务成功完成后，所做的所有更改都会准确地记录在数据库中。所做的更改不会丢失</span><br></pre></td></tr></table></figure><h2 id="第8章-事务的生命周期（事务控制语句）"><a href="#第8章-事务的生命周期（事务控制语句）" class="headerlink" title="第8章 事务的生命周期（事务控制语句）"></a>第8章 事务的生命周期（事务控制语句）</h2><h3 id="8-1-事务的开始"><a href="#8-1-事务的开始" class="headerlink" title="8.1 事务的开始"></a>8.1 事务的开始</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">说明:在5.5 以上的版本，不需要手工begin，只要你执行的是一个DML，会自动在前面加一个begin命令</span><br></pre></td></tr></table></figure><h3 id="8-2-事务的结束"><a href="#8-2-事务的结束" class="headerlink" title="8.2 事务的结束"></a>8.2 事务的结束</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">commit：提交事务</span><br><span class="line">完成一个事务，一旦事务提交成功 ，就说明具备ACID特性了。</span><br><span class="line">rollback ：回滚事务</span><br><span class="line">将内存中，已执行过的操作，回滚回去</span><br><span class="line">说明:  </span><br><span class="line">1. 已经commit成功的事务,无法进行回滚.</span><br><span class="line">2. 标准事务语句: insert update delete</span><br></pre></td></tr></table></figure><h3 id="8-3-自动提交策略（autocommit）"><a href="#8-3-自动提交策略（autocommit）" class="headerlink" title="8.3 自动提交策略（autocommit）"></a>8.3 自动提交策略（autocommit）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;select @@autocommit;</span><br><span class="line">db01 [(none)]&gt;<span class="built_in">set</span> autocommit=0;</span><br><span class="line">db01 [(none)]&gt;<span class="built_in">set</span> global autocommit=0;</span><br><span class="line">注：</span><br><span class="line">自动提交是否打开，一般在有事务需求的MySQL中，将其关闭</span><br><span class="line">不管有没有事务需求，我们一般也都建议设置为0，可以很大程度上提高数据库性能</span><br><span class="line">(1)</span><br><span class="line"><span class="built_in">set</span> autocommit=0;   </span><br><span class="line"><span class="built_in">set</span> global autocommit=0;</span><br><span class="line">(2)</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">autocommit=0</span><br></pre></td></tr></table></figure><h3 id="8-4-隐式提交语句"><a href="#8-4-隐式提交语句" class="headerlink" title="8.4 隐式提交语句"></a>8.4 隐式提交语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用于隐式提交的 SQL 语句：</span><br><span class="line">begin </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">SET AUTOCOMMIT = 1</span><br><span class="line"></span><br><span class="line">导致提交的非事务语句：</span><br><span class="line">DDL语句： （ALTER、CREATE 和 DROP）</span><br><span class="line">DCL语句： （GRANT、REVOKE 和 SET PASSWORD）</span><br><span class="line">锁定语句：（LOCK TABLES 和 UNLOCK TABLES）</span><br><span class="line">导致隐式提交的语句示例：</span><br><span class="line">TRUNCATE TABLE</span><br><span class="line">LOAD DATA INFILE</span><br><span class="line">SELECT FOR UPDATE</span><br></pre></td></tr></table></figure><h3 id="8-5-开始事务流程"><a href="#8-5-开始事务流程" class="headerlink" title="8.5 开始事务流程"></a>8.5 开始事务流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、检查autocommit是否为关闭状态</span><br><span class="line">select @@autocommit;</span><br><span class="line">或者：</span><br><span class="line">show variables like <span class="string">'autocommit'</span>;</span><br><span class="line">2、开启事务,并结束事务</span><br><span class="line">begin</span><br><span class="line">delete from student <span class="built_in">where</span> name=<span class="string">'alexsb'</span>;</span><br><span class="line">update student <span class="built_in">set</span> name=<span class="string">'alexsb'</span> <span class="built_in">where</span> name=<span class="string">'alex'</span>;</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">delete from student <span class="built_in">where</span> name=<span class="string">'alexsb'</span>;</span><br><span class="line">update student <span class="built_in">set</span> name=<span class="string">'alexsb'</span> <span class="built_in">where</span> name=<span class="string">'alex'</span>;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h2 id="第9章-InnoDB-事务的ACID如何保证"><a href="#第9章-InnoDB-事务的ACID如何保证" class="headerlink" title="第9章 InnoDB 事务的ACID如何保证"></a>第9章 InnoDB 事务的ACID如何保证</h2><h3 id="9-1-相关概念"><a href="#9-1-相关概念" class="headerlink" title="9.1 相关概念"></a>9.1 相关概念</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">redo <span class="built_in">log</span> ---&gt; 重做日志 ib_logfile0~1   50M   , 轮询使用</span><br><span class="line">redo <span class="built_in">log</span> buffer ---&gt; redo内存区域</span><br><span class="line">ibd     ----&gt; 存储 数据行和索引 </span><br><span class="line">buffer pool ---&gt;缓冲区池,数据和索引的缓冲</span><br><span class="line">LSN : 日志序列号 </span><br><span class="line">磁盘数据页,redo文件,buffer pool,redo buffer</span><br><span class="line">MySQL 每次数据库启动,都会比较磁盘数据页和redolog的LSN,必须要求两者LSN一致数据库才能正常启动</span><br><span class="line">WAL : write ahead <span class="built_in">log</span> 日志优先写的方式实现持久化</span><br><span class="line">脏页: 内存脏页,内存中发生了修改,没写入到磁盘之前,我们把内存页称之为脏页.</span><br><span class="line">CKPT:Checkpoint,检查点,就是将脏页刷写到磁盘的动作</span><br><span class="line">TXID: 事务号,InnoDB会为每一个事务生成一个事务号,伴随着整个事务.</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql12.png"  alt=""></p><h3 id="9-2-redo-log"><a href="#9-2-redo-log" class="headerlink" title="9.2 redo log"></a>9.2 redo log</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(1)Redo是什么？</span><br><span class="line">redo,顾名思义“重做日志”，是事务日志的一种</span><br><span class="line">(2)作用是什么?</span><br><span class="line">在事务ACID过程中，实现的是“D”持久化的作用。对于AC也有相应的作用</span><br><span class="line">(3)redo日志位置?</span><br><span class="line">redo的日志文件：iblogfile0 iblogfile1</span><br><span class="line">(4)redo buffer</span><br><span class="line">redo的buffer:数据页的变化信息+数据页当时的LSN号</span><br><span class="line">LSN：日志序列号  磁盘数据页、内存数据页、redo buffer、redolog</span><br><span class="line">(5)redo的刷新策略</span><br><span class="line">commit;</span><br><span class="line">刷新当前事务的redo buffer到磁盘</span><br><span class="line">还会顺便将一部分redo buffer中没有提交的事务日志也刷新到磁盘</span><br><span class="line">(6)MySQL CSR——前滚</span><br><span class="line">MySQL : 在启动时,必须保证redo日志文件和数据文件LSN必须一致, 如果不一致就会触发CSR,最终保证一致</span><br><span class="line"><span class="comment">#情况一:</span></span><br><span class="line">我们做了一个事务,begin;update;commit.</span><br><span class="line">1.在begin ,会立即分配一个TXID=tx_01.</span><br><span class="line">2.update时,会将需要修改的数据页(dp_01,LSN=101),加载到data buffer中</span><br><span class="line">3.DBWR线程,会进行dp_01数据页修改更新,并更新LSN=102</span><br><span class="line">4.LOGBWR日志写线程,会将dp_01数据页的变化+LSN+TXID存储到redobuffer</span><br><span class="line">5. 执行commit时,LGWR日志写线程会将redobuffer信息写入redolog日志文件中,基于WAL原则,在日志完全写入磁盘后,commit命令才执行成功,(会将此日志打上commit标记)</span><br><span class="line">6.假如此时宕机,内存脏页没有来得及写入磁盘,内存数据全部丢失</span><br><span class="line">7.MySQL再次重启时,必须要redolog和磁盘数据页的LSN是一致的.但是,此时dp_01,TXID=tx_01磁盘是LSN=101,dp_01,TXID=tx_01,redolog中LSN=102</span><br><span class="line">MySQL此时无法正常启动,MySQL触发CSR.在内存追平LSN号,触发ckpt,将内存数据页更新到磁盘,从而保证磁盘数据页和redolog LSN一值.这时MySQL正长启动</span><br><span class="line">以上的工作过程,我们把它称之为基于REDO的<span class="string">"前滚操作"</span></span><br></pre></td></tr></table></figure><h3 id="9-3-undo-回滚日志"><a href="#9-3-undo-回滚日志" class="headerlink" title="9.3 undo 回滚日志"></a>9.3 undo 回滚日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#(1)undo是什么？</span></span><br><span class="line">undo,顾名思义“回滚日志”</span><br><span class="line"><span class="comment">#(2)作用是什么？</span></span><br><span class="line">在事务ACID过程中，实现的是“A” 原子性的作用</span><br><span class="line">另外CI也依赖于Undo</span><br><span class="line">在rolback时,将数据恢复到修改之前的状态</span><br><span class="line">在CSR实现的是,将redo当中记录的未提交的时候进行回滚.</span><br><span class="line">undo提供快照技术,保存事务修改之前的数据状态.保证了MVCC,隔离性,mysqldump的热备</span><br><span class="line"><span class="comment">#(3)概念性的东西</span></span><br><span class="line">redo怎么应用的</span><br><span class="line">undo怎么应用的</span><br><span class="line">CSR(自动故障恢复)过程</span><br><span class="line">LSN :日志序列号</span><br><span class="line">TXID:事务ID</span><br><span class="line">CKPT(Checkpoint)</span><br><span class="line"><span class="comment">#(4)锁</span></span><br><span class="line">“锁”顾名思义就是锁定的意思。</span><br><span class="line">“锁”的作用是什么？</span><br><span class="line">在事务ACID过程中，“锁”和“隔离级别”一起来实现“I”隔离性和<span class="string">"C"</span> 一致性 (redo也有参与).</span><br><span class="line">悲观锁:行级锁定(行锁)</span><br><span class="line">谁先操作某个数据行,就会持有&lt;这行&gt;的(X)锁.</span><br><span class="line">乐观锁: 没有锁</span><br><span class="line"><span class="comment">#(5)隔离级别</span></span><br><span class="line">影响到数据的读取,默认的级别是 RR模式.</span><br><span class="line">transaction_isolation   隔离级别(参数)</span><br><span class="line">负责的是,MVCC,读一致性问题</span><br><span class="line">RU  : 读未提交,可脏读,一般部议叙出现</span><br><span class="line">RC  : 读已提交,可能出现幻读,可以防止脏读.</span><br><span class="line">RR  : 可重复读,功能是防止<span class="string">"幻读"</span>现象 ,利用的是undo的快照技术+GAP(间隙锁)+NextLock(下键锁)</span><br><span class="line">SR   : 可串行化,可以防止死锁,但是并发事务性能较差</span><br><span class="line">补充: 在RC级别下,可以减轻GAP+NextLock锁的问题,但是会出现幻读现象,一般在为了读一致性会在正常select后添加<span class="keyword">for</span> update语句.但是,请记住执行完一定要commit 否则容易出现所等待比较严重.</span><br><span class="line">例如:</span><br><span class="line">[world]&gt;select * from city <span class="built_in">where</span> id=999 <span class="keyword">for</span> update;</span><br><span class="line">[world]&gt;commit;</span><br></pre></td></tr></table></figure><h2 id="第10章-InnoDB存储引擎核心特性-参数补充"><a href="#第10章-InnoDB存储引擎核心特性-参数补充" class="headerlink" title="第10章 InnoDB存储引擎核心特性-参数补充"></a>第10章 InnoDB存储引擎核心特性-参数补充</h2><h3 id="10-1-存储引擎相关"><a href="#10-1-存储引擎相关" class="headerlink" title="10.1 存储引擎相关"></a>10.1 存储引擎相关</h3><h4 id="10-1-1-查看"><a href="#10-1-1-查看" class="headerlink" title="10.1.1 查看"></a>10.1.1 查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show engines;</span><br><span class="line">show variables like <span class="string">'default_storage_engine'</span>;</span><br><span class="line">select @@default_storage_engine;</span><br></pre></td></tr></table></figure><h4 id="10-1-2-如何指定和修改存储引擎"><a href="#10-1-2-如何指定和修改存储引擎" class="headerlink" title="10.1.2 如何指定和修改存储引擎"></a>10.1.2 如何指定和修改存储引擎</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 通过参数设置默认引擎</span><br><span class="line">(2) 建表的时候进行设置</span><br><span class="line">(3) alter table t1 engine=innodb;</span><br></pre></td></tr></table></figure><h3 id="10-2-表空间"><a href="#10-2-表空间" class="headerlink" title="10.2 表空间"></a>10.2 表空间</h3><h4 id="10-2-1-共享表空间"><a href="#10-2-1-共享表空间" class="headerlink" title="10.2.1 共享表空间"></a>10.2.1 共享表空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">innodb_data_file_path</span><br><span class="line">一般是在初始化数据之前就设置好</span><br><span class="line">例子:</span><br><span class="line">innodb_data_file_path=ibdata1:512M:ibdata2:512M:autoextend</span><br></pre></td></tr></table></figure><h4 id="10-2-2-独立表空间"><a href="#10-2-2-独立表空间" class="headerlink" title="10.2.2 独立表空间"></a>10.2.2 独立表空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">'innodb_file_per_table'</span>;</span><br></pre></td></tr></table></figure><h3 id="10-3-缓冲区池"><a href="#10-3-缓冲区池" class="headerlink" title="10.3 缓冲区池"></a>10.3 缓冲区池</h3><h4 id="10-3-1-查询"><a href="#10-3-1-查询" class="headerlink" title="10.3.1 查询"></a>10.3.1 查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select @@innodb_buffer_pool_size;</span><br><span class="line">show engine innodb status\G</span><br><span class="line">innodb_buffer_pool_size </span><br><span class="line">一般建议最多是物理内存的 75-80%</span><br></pre></td></tr></table></figure><h3 id="10-4-innodb-flush-log-at-trx-commit-双一标准之一"><a href="#10-4-innodb-flush-log-at-trx-commit-双一标准之一" class="headerlink" title="10.4 innodb_flush_log_at_trx_commit (双一标准之一)"></a>10.4 innodb_flush_log_at_trx_commit (双一标准之一)</h3><h4 id="10-4-1-作用"><a href="#10-4-1-作用" class="headerlink" title="10.4.1 作用"></a>10.4.1 作用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要控制了innodb将<span class="built_in">log</span> buffer中的数据写入日志文件并flush磁盘的时间点，取值分别为0、1、2三个。</span><br></pre></td></tr></table></figure><h4 id="10-4-2-查询"><a href="#10-4-2-查询" class="headerlink" title="10.4.2 查询"></a>10.4.2 查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@innodb_flush_log_at_trx_commit;</span><br></pre></td></tr></table></figure><h4 id="10-4-3-参数说明"><a href="#10-4-3-参数说明" class="headerlink" title="10.4.3 参数说明:"></a>10.4.3 参数说明:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1，每次事物的提交都会引起日志文件写入、flush磁盘的操作，确保了事务的ACID；flush  到操作系统的文件系统缓存  fsync到物理磁盘.</span><br><span class="line">0，表示当事务提交时，不做日志写入操作，而是每秒钟将<span class="built_in">log</span> buffer中的数据写入文件系统缓存并且秒fsync磁盘一次；</span><br><span class="line">2，每次事务提交引起写入文件系统缓存,但每秒钟完成一次fsync磁盘操作。</span><br><span class="line">--------</span><br><span class="line">The default setting of 1 is required <span class="keyword">for</span> full ACID compliance. Logs are written and flushed to disk at each transaction commit.</span><br><span class="line">With a setting of 0, logs are written and flushed to disk once per second. Transactions <span class="keyword">for</span> <span class="built_in">which</span> logs have not been flushed can be lost <span class="keyword">in</span> a crash.</span><br><span class="line">With a setting of 2, logs are written after each transaction commit and flushed to disk once per second. Transactions <span class="keyword">for</span> <span class="built_in">which</span> logs have not been flushed can be lost <span class="keyword">in</span> a crash.</span><br><span class="line">-------</span><br></pre></td></tr></table></figure><h3 id="10-5-Innodb-flush-method-O-DIRECT-fdatasync"><a href="#10-5-Innodb-flush-method-O-DIRECT-fdatasync" class="headerlink" title="10.5. Innodb_flush_method=(O_DIRECT, fdatasync)"></a>10.5. Innodb_flush_method=(O_DIRECT, fdatasync)</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql13.png"  alt=""></p><p>[<a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_method]" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_flush_method]</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0 : 每秒刷os cache,同时flushed到磁盘</span><br><span class="line">1 : 每次事务commit,刷os cache,同时flushed到磁盘</span><br><span class="line">2 : 每次事务commit,刷os cache,1秒flushed到磁盘</span><br><span class="line"></span><br><span class="line">O_Direct :</span><br><span class="line">数据页刷新磁盘的时候,穿过OS Cache,直接刷磁盘,建议云盘或SSD,或者高速存储</span><br><span class="line">redo buffer , 先刷 os cache,再刷 磁盘 </span><br><span class="line">fsync :</span><br><span class="line">数据页和redo buffer 在刷新时都OS buffer ,再到磁盘</span><br></pre></td></tr></table></figure><h4 id="10-5-1-作用"><a href="#10-5-1-作用" class="headerlink" title="10.5.1  作用"></a>10.5.1  作用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控制的是,<span class="built_in">log</span> buffer 和data buffer,刷写磁盘的时候是否经过文件系统缓存</span><br></pre></td></tr></table></figure><h4 id="10-5-2-查看"><a href="#10-5-2-查看" class="headerlink" title="10.5.2 查看"></a>10.5.2 查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like <span class="string">'%innodb_flush%'</span>;</span><br></pre></td></tr></table></figure><h4 id="10-5-3-参数值说明"><a href="#10-5-3-参数值说明" class="headerlink" title="10.5.3 参数值说明"></a>10.5.3 参数值说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O_DIRECT  :数据缓冲区写磁盘,不走OS buffer</span><br><span class="line">fsync :日志和数据缓冲区写磁盘,都走OS buffer</span><br><span class="line">O_DSYNC  :日志缓冲区写磁盘,不走 OS buffer</span><br></pre></td></tr></table></figure><h4 id="10-5-4-使用建议"><a href="#10-5-4-使用建议" class="headerlink" title="10.5.4 使用建议"></a>10.5.4 使用建议</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">最高安全模式</span><br><span class="line">innodb_flush_log_at_trx_commit=1</span><br><span class="line">Innodb_flush_method=O_DIRECT</span><br><span class="line">最高性能:</span><br><span class="line">innodb_flush_log_at_trx_commit=0</span><br><span class="line">Innodb_flush_method=fsync</span><br></pre></td></tr></table></figure><h4 id="10-5-5-redo日志有关的参数"><a href="#10-5-5-redo日志有关的参数" class="headerlink" title="10.5.5 redo日志有关的参数"></a>10.5.5 redo日志有关的参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">innodb_log_buffer_size=16777216</span><br><span class="line">innodb_log_file_size=50331648</span><br><span class="line">innodb_log_files_in_group = 3</span><br></pre></td></tr></table></figure><h2 id="第11章-扩展"><a href="#第11章-扩展" class="headerlink" title="第11章 扩展"></a>第11章 扩展</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">RR模式(对索引进行删除时):</span><br><span class="line">GAP:          间隙锁</span><br><span class="line">next-lock:    下一键锁定</span><br><span class="line"></span><br><span class="line">例子:</span><br><span class="line">id（有索引）</span><br><span class="line">1 2 3 4 5 6 </span><br><span class="line">GAP：</span><br><span class="line">在对3这个值做变更时，会产生两种锁，一种是本行的行级锁，另一种会在2和4索引键上进行枷锁</span><br><span class="line">next-lock：</span><br><span class="line">对第六行变更时，一种是本行的行级锁，在索引末尾键进行加锁，6以后的值在这时是不能被插入的。</span><br><span class="line">总之：</span><br><span class="line">GAP、next lock都是为了保证RR模式下，不会出现幻读，降低隔离级别或取消索引，这两种锁都不会产生。</span><br><span class="line">IX IS X S是什么?</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
      <category term="存储引擎" scheme="http://linuxwf.com/tags/%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>4.索引及执行计划</title>
    <link href="http://linuxwf.com/2020/04/15/4-%E7%B4%A2%E5%BC%95%E5%8F%8A%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/"/>
    <id>http://linuxwf.com/2020/04/15/4-%E7%B4%A2%E5%BC%95%E5%8F%8A%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/</id>
    <published>2020-04-15T01:56:00.000Z</published>
    <updated>2020-04-15T01:58:23.845Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="索引及执行计划"><a href="#索引及执行计划" class="headerlink" title="索引及执行计划"></a>索引及执行计划</h1><h2 id="第1章-索引作用"><a href="#第1章-索引作用" class="headerlink" title="第1章 索引作用"></a>第1章 索引作用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提供了类似于书中目录的作用,目的是为了优化查询</span><br></pre></td></tr></table></figure><h2 id="第2章-索引的种类-算法"><a href="#第2章-索引的种类-算法" class="headerlink" title="第2章 索引的种类(算法)"></a>第2章 索引的种类(算法)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B树索引</span><br><span class="line">Hash索引</span><br><span class="line">R树</span><br><span class="line">Full text</span><br><span class="line">GIS</span><br></pre></td></tr></table></figure><h2 id="第3章-B树-基于不同的查找算法分类介绍"><a href="#第3章-B树-基于不同的查找算法分类介绍" class="headerlink" title="第3章 B树 基于不同的查找算法分类介绍"></a>第3章 B树 基于不同的查找算法分类介绍</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql09.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B-tree</span><br><span class="line">B+Tree 在范围查询方面提供了更好的性能(&gt; &lt; &gt;= &lt;= like)</span><br><span class="line">B*Tree</span><br></pre></td></tr></table></figure><h2 id="第4章-MySQL的各类索引是怎么构成BTREE结构的"><a href="#第4章-MySQL的各类索引是怎么构成BTREE结构的" class="headerlink" title="第4章 MySQL的各类索引是怎么构成BTREE结构的"></a>第4章 MySQL的各类索引是怎么构成BTREE结构的</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql10.png"  alt=""></p><h3 id="4-1-聚簇索引-聚集索引-集群索引"><a href="#4-1-聚簇索引-聚集索引-集群索引" class="headerlink" title="4.1 聚簇索引(聚集索引,集群索引)"></a>4.1 聚簇索引(聚集索引,集群索引)</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/Btree.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">介绍: </span><br><span class="line">如果有PK,MySQL默认使用PK作为聚簇索引</span><br><span class="line">将来存储数据时,能够保证所有数据行按照主键列的顺序存储到磁盘页中.</span><br><span class="line">自动生成聚集索引树</span><br><span class="line">如果没有PK,会自动选择唯一键(UK)</span><br><span class="line">什么都没有,会自动按照时间戳的<span class="built_in">hash</span>值作为聚簇索引.</span><br><span class="line">一张表中只能有一个聚簇索引.</span><br><span class="line">建议是数字的自增列最佳.</span><br><span class="line"></span><br><span class="line">构建过程: </span><br><span class="line">(1) 在建表时,设定了主键.MySQL InnoDB 自动将主键作为聚簇索引列</span><br><span class="line">(2) 在存储数据时,会按照聚簇索引组织存储数据</span><br><span class="line">(3) InnoDB引擎会将数据行所在的数据页作为叶子节点</span><br><span class="line">(5) 提取每个叶子节点的最小值,生成枝节点,保留叶子节点指针</span><br><span class="line">(6) 提取枝节点的最小值和指针,最终生成根节点</span><br></pre></td></tr></table></figure><h3 id="4-2-辅助索引-二级索引"><a href="#4-2-辅助索引-二级索引" class="headerlink" title="4.2 辅助索引(二级索引)"></a>4.2 辅助索引(二级索引)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">按照业务的查询特点,一般经常需要<span class="built_in">where</span>  group  order by 条件列</span><br><span class="line">创建辅助索引.</span><br><span class="line">构建过程:</span><br><span class="line">(1) 将索引键值进行自动排序(默认从小到大排序)</span><br><span class="line">(2) 将排好序的键值+PK,生成叶子节点(16KB)</span><br><span class="line">(3) 提取每个叶子节点的最小值,生成枝节点,保留叶子节点指针</span><br><span class="line">(4) 提取枝节点的最小值和指针,最终生成根节点</span><br><span class="line"></span><br><span class="line">查询过程:</span><br><span class="line">一旦我们拿索引键值作为条件发起查询</span><br><span class="line">(1) 按照Btree查找算法,找到辅助索引叶子节点,获取到PK值</span><br><span class="line">(2) 按照PK的值回表,通过聚簇索引Btree进一步找到具体数据行</span><br></pre></td></tr></table></figure><h2 id="第5章-辅助索引细分"><a href="#第5章-辅助索引细分" class="headerlink" title="第5章 辅助索引细分"></a>第5章 辅助索引细分</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.普通的单列辅助索引</span><br><span class="line">2.联合索引</span><br><span class="line">多个列作为索引条件,生成索引树,理论上设计的好的,可以减少大量的回表查询</span><br><span class="line">3.唯一索引</span><br><span class="line">索引列的值都是唯一的.</span><br></pre></td></tr></table></figure><h2 id="第6章-索引树的高度的影响因素"><a href="#第6章-索引树的高度的影响因素" class="headerlink" title="第6章 索引树的高度的影响因素"></a>第6章 索引树的高度的影响因素</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 数据量级, 解决方法:分表,分库,分布式</span><br><span class="line">2. 索引列值过长 , 解决方法:前缀索引</span><br><span class="line">3. 数据类型:</span><br><span class="line">变长长度字符串,使用了char,解决方案:变长字符串使用varchar</span><br><span class="line">enum类型的使用enum (<span class="string">'山东'</span>,<span class="string">'河北'</span>,<span class="string">'黑龙江'</span>,<span class="string">'吉林'</span>,<span class="string">'辽宁'</span>,<span class="string">'陕西'</span>......)</span><br><span class="line">                                         1      2      3</span><br></pre></td></tr></table></figure><h2 id="第7章-索引的基本管理"><a href="#第7章-索引的基本管理" class="headerlink" title="第7章 索引的基本管理"></a>第7章 索引的基本管理</h2><h3 id="7-1-索引建立前"><a href="#7-1-索引建立前" class="headerlink" title="7.1 索引建立前"></a>7.1 索引建立前</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db01 [world]&gt;desc city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field      | Type    | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO  | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO  |    |        |                |</span><br><span class="line">| CountryCode | char(3)  | NO  | MUL |        |                |</span><br><span class="line">| District    | char(20) | NO  |    |        |                |</span><br><span class="line">| Population  | int(11)  | NO  |    | 0      |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">Field :列名字</span><br><span class="line">key  :有没有索引,索引类型</span><br><span class="line">PRI: 主键索引</span><br><span class="line">UNI: 唯一索引</span><br><span class="line">MUL: 辅助索引(单列,联和,前缀)</span><br></pre></td></tr></table></figure><h3 id="7-2-索引的管理命令"><a href="#7-2-索引的管理命令" class="headerlink" title="7.2 索引的管理命令"></a>7.2 索引的管理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(1) 索引的查询 </span><br><span class="line">mysql&gt; desc city;</span><br><span class="line">mysql&gt; show index from city;</span><br><span class="line">(2) 索引创建 </span><br><span class="line">mysql&gt; alter table city add index idx_name(name);</span><br><span class="line">(3) 删除索引</span><br><span class="line">mysql&gt; alter table city drop index idx_name;</span><br><span class="line"></span><br><span class="line">(5) 联合索引创建 </span><br><span class="line">mysql&gt; alter table city add index idx_name_co(name,countrycode);</span><br><span class="line"></span><br><span class="line">(6) 前缀索引 </span><br><span class="line">mysql&gt; alter table city add index idx_name(name(10));</span><br><span class="line"></span><br><span class="line">(7) 唯一索引 </span><br><span class="line"> alter table t1  add unique index idx_tel(telnum);</span><br></pre></td></tr></table></figure><h3 id="7-3-压力测试"><a href="#7-3-压力测试" class="headerlink" title="7.3 压力测试"></a>7.3 压力测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">extra: </span><br><span class="line">filesort ,文件排序.</span><br><span class="line">SHOW INDEX FROM city;</span><br><span class="line">ALTER TABLE city ADD INDEX CountryCode(CountryCode);</span><br><span class="line">ALTER TABLE city DROP INDEX idx_c_p;</span><br><span class="line"></span><br><span class="line">DESC SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span>  ORDER BY population </span><br><span class="line"></span><br><span class="line">ALTER TABLE city ADD INDEX idx_(population);</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span>  ORDER BY population </span><br><span class="line">ALTER TABLE city ADD INDEX idx_c_p(countrycode,population);</span><br><span class="line">ALTER TABLE city DROP INDEX idx_;</span><br><span class="line">ALTER TABLE city DROP INDEX CountryCode;</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span>  ORDER BY population </span><br><span class="line"></span><br><span class="line">结论: </span><br><span class="line">1.当我们看到执行计划extra位置出现filesort,说明由文件排序出现</span><br><span class="line">2.观察需要排序(ORDER BY,GROUP BY ,DISTINCT )的条件,有没有索引</span><br><span class="line">3. 根据子句的执行顺序,去创建联合索引</span><br><span class="line"></span><br><span class="line">索引优化效果测试:</span><br><span class="line">优化前:</span><br><span class="line">[root@db01 ~]<span class="comment"># mysqlslap --defaults-file=/etc/my.cnf \</span></span><br><span class="line">&gt; --concurrency=100 --iterations=1 --create-schema=<span class="string">'oldboy'</span> \</span><br><span class="line">&gt; --query=<span class="string">"select * from oldboy.t_100w where k2='780P'"</span> engine=innodb \</span><br><span class="line">&gt; --number-of-queries=2000 -uroot -p123 -verbose</span><br><span class="line">mysqlslap: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Benchmark</span><br><span class="line">    Running <span class="keyword">for</span> engine rbose</span><br><span class="line">    Average number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Minimum number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Maximum number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Number of clients running queries: 100</span><br><span class="line">    Average number of queries per client: 20</span><br><span class="line"></span><br><span class="line">优化后:</span><br><span class="line">[root@db01 ~]<span class="comment"># mysqlslap --defaults-file=/etc/my.cnf --concurrency=100 --iterations=1 --create-schema='oldboy' --query="select * from oldboy.t_100w where k2='780P'" engine=innodb --number-of-queries=2000 -uroot -p123 -verbose</span></span><br><span class="line">mysqlslap: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Benchmark</span><br><span class="line">    Running <span class="keyword">for</span> engine rbose</span><br><span class="line">    Average number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Minimum number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Maximum number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Number of clients running queries: 100</span><br><span class="line">    Average number of queries per client: 20</span><br></pre></td></tr></table></figure><h2 id="第8章-执行计划-explain"><a href="#第8章-执行计划-explain" class="headerlink" title="第8章 执行计划(explain)"></a>第8章 执行计划(explain)</h2><h3 id="8-1-介绍"><a href="#8-1-介绍" class="headerlink" title="8.1 介绍"></a>8.1 介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">获取到的是优化器选择完成的,他认为代价最小的执行计划.</span><br><span class="line">作用: 语句执行前,先看执行计划信息,可以有效的防止性能较差的语句带来的性能问题.</span><br><span class="line">如果业务中出现了慢语句，我们也需要借助此命令进行语句的评估，分析优化方案。</span><br><span class="line">(2) select 获取数据的方法</span><br><span class="line">1. 全表扫描(应当尽量避免,因为性能低)</span><br><span class="line">2. 索引扫描</span><br><span class="line">3. 获取不到数据</span><br></pre></td></tr></table></figure><h3 id="8-2-获取优化器选择完的执行计划"><a href="#8-2-获取优化器选择完的执行计划" class="headerlink" title="8.2 获取优化器选择完的执行计划"></a>8.2 获取优化器选择完的执行计划</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc select * from world.city <span class="built_in">where</span> countrycode=<span class="string">'CHN'</span>;</span><br><span class="line">+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+</span><br><span class="line">| id | select_type | table | partitions | <span class="built_in">type</span> | possible_keys | key         | key_len | ref   | rows | filtered | Extra |</span><br><span class="line">+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+</span><br><span class="line">|  1 | SIMPLE      | city  | NULL       | ref  | CountryCode   | CountryCode | 3       | const |  363 |   100.00 | NULL  |</span><br><span class="line">+----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+-------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.10 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc select * from world.city <span class="built_in">where</span> countrycode=<span class="string">'CHN'</span> \G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           id: 1</span><br><span class="line">  select_type: SIMPLE</span><br><span class="line">        table: city          <span class="comment">#查询的表</span></span><br><span class="line">   partitions: NULL</span><br><span class="line">         <span class="built_in">type</span>: ref           <span class="comment">#查询类型</span></span><br><span class="line">possible_keys: CountryCode   <span class="comment">#可能走的索引</span></span><br><span class="line">          key: CountryCode   <span class="comment">#走的索引名</span></span><br><span class="line">      key_len: 3             <span class="comment">#应用索引的长度</span></span><br><span class="line">          ref: const</span><br><span class="line">         rows: 363           <span class="comment">#查询结果集的长度</span></span><br><span class="line">     filtered: 100.00</span><br><span class="line">        Extra: NULL          <span class="comment">#额外信息</span></span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="8-3-执行计划分析"><a href="#8-3-执行计划分析" class="headerlink" title="8.3 执行计划分析"></a>8.3 执行计划分析</h3><h4 id="8-3-1-重点关注的信息"><a href="#8-3-1-重点关注的信息" class="headerlink" title="8.3.1 重点关注的信息"></a>8.3.1 重点关注的信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select_type  <span class="comment">#查询类型 </span></span><br><span class="line">table        <span class="comment">#查询的表名.</span></span><br><span class="line"><span class="built_in">type</span>         <span class="comment">#索引应用级别</span></span><br><span class="line"><span class="comment">#全表扫描 : ALL </span></span><br><span class="line"><span class="comment">#索引扫描 : index,range,ref,eq_ref,const(system),NULL</span></span><br><span class="line">possible_keys <span class="comment">#有可能会用的索引.</span></span><br><span class="line">key           <span class="comment">#真正使用的索引名</span></span><br><span class="line">key_len       <span class="comment">#索引覆盖长度.主要针对联合索引.</span></span><br><span class="line">extra         <span class="comment">#file_sort 文件排序</span></span><br></pre></td></tr></table></figure><h4 id="8-3-2-type详解"><a href="#8-3-2-type详解" class="headerlink" title="8.3.2 type详解"></a>8.3.2 type详解</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">(1) ALL 全表扫描</span><br><span class="line">mysql&gt; desc  select * from city <span class="built_in">where</span> district=<span class="string">'guangdong'</span>;</span><br><span class="line">mysql&gt; desc  select * from city ;</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> countrycode like <span class="string">'%CH%'</span>;</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> countrycode not <span class="keyword">in</span> (<span class="string">'CHN'</span>,<span class="string">'USA'</span>);</span><br><span class="line"></span><br><span class="line">(2)index 全索引扫描</span><br><span class="line">mysql&gt; desc select  countrycode from city;</span><br><span class="line"></span><br><span class="line">(3)range 索引范围扫描 (优化的最低级别)</span><br><span class="line"> &gt; &lt; &gt;= &lt;=   like  <span class="keyword">in</span> or</span><br><span class="line">mysql&gt; desc  select * from city <span class="built_in">where</span> id&lt;10;</span><br><span class="line">mysql&gt; desc  select * from city <span class="built_in">where</span> countrycode like <span class="string">'CH%'</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt; desc  select * from city <span class="built_in">where</span> countrycode <span class="keyword">in</span> (<span class="string">'CHN'</span>,<span class="string">'USA'</span>);</span><br><span class="line">mysql&gt; desc  select * from city <span class="built_in">where</span> countrycode=<span class="string">'CHN'</span> or countrycode=<span class="string">'USA'</span>;</span><br><span class="line"></span><br><span class="line">desc  </span><br><span class="line"></span><br><span class="line">union all 不去重复</span><br><span class="line">select * from city <span class="built_in">where</span> countrycode=<span class="string">'CHN'</span></span><br><span class="line">union all </span><br><span class="line">select * from city <span class="built_in">where</span> countrycode=<span class="string">'USA'</span>;</span><br><span class="line"></span><br><span class="line">union去重复 </span><br><span class="line">select * from city <span class="built_in">where</span> countrycode=<span class="string">'CHN'</span></span><br><span class="line">union </span><br><span class="line">select * from city <span class="built_in">where</span> countrycode=<span class="string">'USA'</span>;</span><br><span class="line"></span><br><span class="line">注意: 特殊情况</span><br><span class="line">聚簇索引   &lt;&gt;  not <span class="keyword">in</span> </span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> id &lt;&gt; 10;</span><br><span class="line"></span><br><span class="line">(4)ref 辅助索引等值查询</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> countrycode = <span class="string">'CHN'</span>;</span><br><span class="line"></span><br><span class="line">(5)eq_ref</span><br><span class="line">多表查询,右表中的连接列是主键或者唯一键索引.</span><br><span class="line">mysql&gt; desc select city.name,country.name  from city </span><br><span class="line">    -&gt; join country</span><br><span class="line">    -&gt; on city.countrycode=country.code</span><br><span class="line">    -&gt; <span class="built_in">where</span> city.population&lt;100;</span><br><span class="line"></span><br><span class="line">(6)const(system)</span><br><span class="line">主键或者唯一键的等值查询</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> id=10;</span><br></pre></td></tr></table></figure><h4 id="8-3-3-key-len-计算方式"><a href="#8-3-3-key-len-计算方式" class="headerlink" title="8.3.3 key_len 计算方式"></a>8.3.3 key_len 计算方式</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/key_len.png"  alt=""></p><h4 id="8-3-4-联合索引应用细节"><a href="#8-3-4-联合索引应用细节" class="headerlink" title="8.3.4 联合索引应用细节"></a>8.3.4 联合索引应用细节</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">联合索引:</span><br><span class="line">1. SELECT * FROM t1  WHERE a=    b=   </span><br><span class="line">我们建立联合索引时:</span><br><span class="line">ALTER TABLE t1 ADD INDEX idx_a_b(a,b);  </span><br><span class="line">ALTER TABLE t1 ADD INDEX idx_b_a(b,a);  </span><br><span class="line">以上的查询不考虑索引的顺序,优化器会自动调整<span class="built_in">where</span>的条件顺序</span><br><span class="line">注意: 索引,我们在这种情况下建索引时,需要考虑哪个列的唯一值更多,哪个放在索引左边.</span><br><span class="line"></span><br><span class="line">2.  如果出现<span class="built_in">where</span> 条件中出现不等值查询条件</span><br><span class="line">DESC  SELECT * FROM t_100w WHERE num &lt;1000 AND k2=<span class="string">'DEEF'</span>;</span><br><span class="line">我们建索引时:</span><br><span class="line">ALTER TABLE t_100w ADD INDEX idx_2_n(k2,num);</span><br><span class="line">语句书写时</span><br><span class="line">DESC  SELECT * FROM t_100w WHERE  k2=<span class="string">'DEEF'</span>  AND  num &lt;1000 ;</span><br><span class="line">3. 如果查询中出现多子句</span><br><span class="line">我们要按照子句的执行顺序进行建立索引.</span><br></pre></td></tr></table></figure><h4 id="8-3-5-explain-desc-使用场景（面试题）"><a href="#8-3-5-explain-desc-使用场景（面试题）" class="headerlink" title="8.3.5 explain(desc)使用场景（面试题）"></a>8.3.5 explain(desc)使用场景（面试题）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">题目意思:  我们公司业务慢,请你从数据库的角度分析原因</span><br><span class="line">1.mysql出现性能问题,我总结有两种情况:</span><br><span class="line">（1）应急性的慢：突然夯住</span><br><span class="line">应急情况:数据库hang(卡了,资源耗尽)</span><br><span class="line">处理过程:</span><br><span class="line">1.show processlist;  获取到导致数据库hang的语句</span><br><span class="line">2. explain 分析SQL的执行计划,有没有走索引,索引的类型情况</span><br><span class="line">3. 建索引,改语句</span><br><span class="line">（2）一段时间慢(持续性的):</span><br><span class="line">(1)记录慢日志slowlog,分析slowlog</span><br><span class="line">(2)explain 分析SQL的执行计划,有没有走索引,索引的类型情况</span><br><span class="line">(3)建索引,改语句</span><br></pre></td></tr></table></figure><h2 id="第9章-索引应用规范"><a href="#第9章-索引应用规范" class="headerlink" title="第9章 索引应用规范"></a>第9章 索引应用规范</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">业务</span><br><span class="line">1.产品的功能</span><br><span class="line">2.用户的行为</span><br><span class="line"><span class="string">"热"</span>查询语句 ---&gt;较慢---&gt;slowlog</span><br><span class="line"><span class="string">"热"</span>数据</span><br></pre></td></tr></table></figure><h3 id="9-1-建索引原则"><a href="#9-1-建索引原则" class="headerlink" title="9.1 建索引原则"></a>9.1 建索引原则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1) 必须要有主键,如果没有可以做为主键条件的列,创建无关列</span><br><span class="line">(2) 经常做为<span class="built_in">where</span>条件列  order by  group by  join on, distinct 的条件(业务:产品功能+用户行为)</span><br><span class="line">(3) 最好使用唯一值多的列作为索引,如果索引列重复值较多,可以考虑使用联合索引</span><br><span class="line">(4) 列值长度较长的索引列,我们建议使用前缀索引.</span><br><span class="line">(5) 降低索引条目,一方面不要创建没用索引,不常使用的索引清理,percona toolkit(xxxxx)</span><br><span class="line">(6) 列值经常变化,没必要建索引,小表可以不用建索引.</span><br><span class="line">(7) 索引维护要避开业务繁忙期(pt-toolkit)</span><br></pre></td></tr></table></figure><h3 id="9-2-不走索引的情况（开发规范）"><a href="#9-2-不走索引的情况（开发规范）" class="headerlink" title="9.2 不走索引的情况（开发规范）"></a>9.2 不走索引的情况（开发规范）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(1) 语句本身就是全表扫描</span><br><span class="line">select *  from city;</span><br><span class="line">select * from city <span class="built_in">where</span> 1=1;</span><br><span class="line">(2) 查询条件没建索引</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> name=<span class="string">'dalian'</span>;</span><br><span class="line">(3) 查询条件不满足索引应用逻辑</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> countrycode like <span class="string">'%CH%'</span>;</span><br><span class="line">如果业务中有大量的需求,可以使用ES</span><br><span class="line">&lt;&gt;,not <span class="keyword">in</span>()</span><br><span class="line">(5) 查询条件中出现计算</span><br><span class="line">mysql&gt; desc select * from city <span class="built_in">where</span> id-1=9;</span><br><span class="line"></span><br><span class="line">(6) 出现隐式转换</span><br><span class="line">mysql&gt; desc select * from t1 <span class="built_in">where</span> telnum=110;</span><br><span class="line">mysql&gt; desc select * from t1 <span class="built_in">where</span> telnum=<span class="string">'110'</span>;</span><br><span class="line"></span><br><span class="line">(7) 统计信息不真实,导致索引失效.</span><br><span class="line">现象: 昨天查询功能 0.0.1秒,今天突然就慢了</span><br><span class="line">原因1: </span><br><span class="line">解决: 重建索引,重新收集统计信息</span><br><span class="line">mysql&gt; optimize table city;</span><br><span class="line">原因2: </span><br><span class="line">缓存失效:缓存击穿和雪崩</span><br><span class="line"></span><br><span class="line">(8) 查询结果集超过25%,有可能会出现全表扫描(<span class="built_in">read</span> ahead)</span><br><span class="line">解决方案: <span class="built_in">limit</span>, between and.</span><br></pre></td></tr></table></figure><h3 id="9-3-SQL优化思路"><a href="#9-3-SQL优化思路" class="headerlink" title="9.3 SQL优化思路"></a>9.3 SQL优化思路</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">3.1 应急性慢</span><br><span class="line">mysql -uroot -p</span><br><span class="line">show full processlist;</span><br><span class="line"><span class="built_in">kill</span> xxxx;</span><br><span class="line">explain select ;</span><br><span class="line"></span><br><span class="line">3.2 持续性</span><br><span class="line">slowlog 工具日志</span><br><span class="line">desc </span><br><span class="line">改语句</span><br><span class="line">index</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>3.SQL基础</title>
    <link href="http://linuxwf.com/2020/04/15/3-SQL%E5%9F%BA%E7%A1%80/"/>
    <id>http://linuxwf.com/2020/04/15/3-SQL%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-15T01:45:00.000Z</published>
    <updated>2020-04-15T01:47:32.949Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h1><h2 id="第1章-SQL介绍"><a href="#第1章-SQL介绍" class="headerlink" title="第1章 SQL介绍"></a>第1章 SQL介绍</h2><h3 id="1-1-SQL-标准"><a href="#1-1-SQL-标准" class="headerlink" title="1.1 SQL 标准"></a>1.1 SQL 标准</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)结构化查询语言</span><br><span class="line">(2)5.7 以后符合SQL92严格模式  (SQL86、SQL89、SQL92、SQL99)</span><br><span class="line">(3)通过sql_mode参数来控制</span><br></pre></td></tr></table></figure><h3 id="1-2-常用SQL分类"><a href="#1-2-常用SQL分类" class="headerlink" title="1.2 常用SQL分类"></a>1.2 常用SQL分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DDL(Data definition language)：数据定义语言</span><br><span class="line">DCL(Data control language)：数据控制语言</span><br><span class="line">DML(Data manipulation language)：数据操作语言</span><br><span class="line">DQL(Data query language)：数据的查询语言</span><br></pre></td></tr></table></figure><h3 id="1-3-怎么查看帮助"><a href="#1-3-怎么查看帮助" class="headerlink" title="1.3 怎么查看帮助"></a>1.3 怎么查看帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">help</span> contents;</span><br><span class="line">mysql&gt; <span class="built_in">help</span> Data Definition;</span><br><span class="line">mysql&gt; <span class="built_in">help</span>  DROP DATABASE;</span><br></pre></td></tr></table></figure><h3 id="1-4-工具"><a href="#1-4-工具" class="headerlink" title="1.4 工具"></a>1.4 工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlyog </span><br><span class="line">navicat</span><br><span class="line">workbench</span><br></pre></td></tr></table></figure><h3 id="1-5-mysql内置的功能"><a href="#1-5-mysql内置的功能" class="headerlink" title="1.5 mysql内置的功能"></a>1.5 mysql内置的功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ego       (\G) Send <span class="built_in">command</span> to mysql server, display result vertically.</span><br><span class="line"><span class="built_in">exit</span>      (\q) Exit mysql. Same as quit.</span><br><span class="line"><span class="built_in">source</span>    (\.) Execute an SQL script file. Takes a file name as an argument.</span><br><span class="line">system    (\!) Execute a system shell <span class="built_in">command</span>.</span><br><span class="line">tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.</span><br><span class="line">use       (\u) Use another database. Takes database name as argument.</span><br></pre></td></tr></table></figure><h2 id="第2章-SQL-DDL应用"><a href="#第2章-SQL-DDL应用" class="headerlink" title="第2章 SQL-DDL应用"></a>第2章 SQL-DDL应用</h2><h3 id="2-1-DDL-针对库的操作"><a href="#2-1-DDL-针对库的操作" class="headerlink" title="2.1 DDL - 针对库的操作"></a>2.1 DDL - 针对库的操作</h3><h4 id="2-1-2-建库"><a href="#2-1-2-建库" class="headerlink" title="2.1.2 建库"></a>2.1.2 建库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE guifan CHARSET utf8mb4 ;</span><br><span class="line"></span><br><span class="line">-- 说明:字符集及校对规则</span><br><span class="line">字符集: </span><br><span class="line">mysql&gt; SHOW CHARSET;</span><br><span class="line">utf8mb4(4个字节)  utf8(3字节)</span><br><span class="line">校对规则(排序规则):</span><br><span class="line">mysql&gt; SHOW COLLATION;</span><br><span class="line">utf8mb4_general_ci    不敏感(默认)</span><br><span class="line">utf8mb4_bin           敏感</span><br></pre></td></tr></table></figure><h4 id="2-1-2-删库-不代表生产操作"><a href="#2-1-2-删库-不代表生产操作" class="headerlink" title="2.1.2 删库(不代表生产操作)"></a>2.1.2 删库(不代表生产操作)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE oldguo;</span><br><span class="line">DROP DATABASE oldboy;</span><br></pre></td></tr></table></figure><h4 id="2-1-3-修改库"><a href="#2-1-3-修改库" class="headerlink" title="2.1.3 修改库"></a>2.1.3 修改库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE linux CHARSET utf8mb4;</span><br><span class="line">注意: 目标字符集是原字符集的严格超集.</span><br></pre></td></tr></table></figure><h4 id="2-1-4-查看库-不属于DDL"><a href="#2-1-4-查看库-不属于DDL" class="headerlink" title="2.1.4 查看库(不属于DDL)"></a>2.1.4 查看库(不属于DDL)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE linux;</span><br></pre></td></tr></table></figure><h4 id="2-1-5-总结"><a href="#2-1-5-总结" class="headerlink" title="2.1.5 总结"></a>2.1.5 总结</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE </span><br><span class="line">DROP DATABASE </span><br><span class="line">ALTER DATABASE </span><br><span class="line">SHOW CREATE DATABASE</span><br></pre></td></tr></table></figure><h4 id="2-1-6-建库规范"><a href="#2-1-6-建库规范" class="headerlink" title="2.1.6 建库规范"></a>2.1.6 建库规范</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1) 库名是小写</span><br><span class="line">(2) 不能是数字开头</span><br><span class="line">(3) 限制在16个字符以内</span><br><span class="line">(5) 库名和业务有关</span><br><span class="line">(6) 必须要加字符集</span><br><span class="line">(7) 不能用预留字符</span><br></pre></td></tr></table></figure><h3 id="2-2-DDL-针对表的管理"><a href="#2-2-DDL-针对表的管理" class="headerlink" title="2.2 DDL - 针对表的管理"></a>2.2 DDL - 针对表的管理</h3><h4 id="2-2-1-数据类型"><a href="#2-2-1-数据类型" class="headerlink" title="2.2.1 数据类型"></a>2.2.1 数据类型</h4><p><strong>数值类型</strong></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql05.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tinyint : 1字节,-128~127  ,0-255</span><br><span class="line">int     : 4字节,-2^31~2^31-1  , 0-2^32-1</span><br></pre></td></tr></table></figure><p><strong>字符类型</strong></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql06.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">char(M)    : </span><br><span class="line">char(10)最多存储10个字符(任意字符)</span><br><span class="line">M的值理论上最大255.</span><br><span class="line">定长字符类型: 不管你存多长字符,立即分配10个字符长度的存储空间</span><br><span class="line">varchar(M)</span><br><span class="line">varchar(10)最多存储10个字符(任意字符)</span><br><span class="line">M的值理论上最大65535</span><br><span class="line">变长字符类型:按需分配磁盘空间.</span><br><span class="line">每次存储数据时,都要算一下多长,然后分配空间</span><br><span class="line">并且需要单独1个字节存储字符长度(超过255字符,会占用2个字节)</span><br><span class="line"></span><br><span class="line">怎么选择:</span><br><span class="line">小于255,并且固定 长度的列,选择char</span><br><span class="line">大于255,或者变长 长度的列,选择varchar</span><br></pre></td></tr></table></figure><p><strong>时间类型</strong></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql07.png"  alt=""></p><p>列值不能为空，也是表设计的规范，尽可能将所有的列设置为非空。可以设置默认值为0</p><p><strong>unique key</strong> ：唯一键  列值不能重复</p><p><strong>unsigned</strong> ：无符号  针对数字列，非负数</p><p>其他属性:</p><p><strong>key</strong> :  索引 可以在某列上建立索引，来优化查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DATETIME </span><br><span class="line">范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。</span><br><span class="line">TIMESTAMP </span><br><span class="line">1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。</span><br><span class="line">timestamp会受到时区的影响</span><br></pre></td></tr></table></figure><p><strong>枚举类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">enum(<span class="string">'m'</span>,<span class="string">'f'</span>):枚举类型</span><br><span class="line">enum(<span class="string">'广东省'</span>,<span class="string">'广西省'</span>,<span class="string">'四川省'</span>,<span class="string">'湖南省'</span>,.....)</span><br><span class="line">       1         2        3         4</span><br></pre></td></tr></table></figure><p><strong>二进制类型</strong></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql08.png"  alt=""></p><h4 id="2-2-2-约束"><a href="#2-2-2-约束" class="headerlink" title="2.2.2 约束"></a>2.2.2 约束</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">primary key  主键 : 非空且唯一,一个表只能有一个主键</span><br><span class="line">not null     非空 : 列值必填</span><br><span class="line">unique key   唯一 : 列值不能重复 </span><br><span class="line">unsigned     无符号: 对于数字列,无符号</span><br></pre></td></tr></table></figure><h4 id="2-2-3-其他属性"><a href="#2-2-3-其他属性" class="headerlink" title="2.2.3 其他属性"></a>2.2.3 其他属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">comment    : 注释 </span><br><span class="line">default    : 默认值</span><br><span class="line">auto_increment : 自动增长</span><br></pre></td></tr></table></figure><h4 id="2-2-4-表属性"><a href="#2-2-4-表属性" class="headerlink" title="2.2.4 表属性"></a>2.2.4 表属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">存储引擎:</span><br><span class="line">InnoDB（默认的）</span><br><span class="line">字符集和排序规则:</span><br><span class="line">utf8       </span><br><span class="line">utf8mb4</span><br><span class="line">表的注释</span><br></pre></td></tr></table></figure><h4 id="2-2-5-列属性"><a href="#2-2-5-列属性" class="headerlink" title="2.2.5 列属性"></a>2.2.5 列属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">约束(一般建表时添加):</span><br><span class="line">**primary key** ：主键约束</span><br><span class="line">设置为主键的列，此列的值必须非空且唯一，主键在一个表中只能有一个，但是可以有多个列一起构成。</span><br><span class="line">**not null**      ：非空约束</span><br><span class="line">列值不能为空，也是表设计的规范，尽可能将所有的列设置为非空。可以设置默认值为0</span><br><span class="line">**unique key** ：唯一键</span><br><span class="line">列值不能重复</span><br><span class="line">**unsigned** ：无符号</span><br><span class="line">针对数字列，非负数。</span><br><span class="line"></span><br><span class="line">其他属性:</span><br><span class="line">**key** :索引</span><br><span class="line">可以在某列上建立索引，来优化查询,一般是根据需要后添加</span><br><span class="line">**default**           :默认值</span><br><span class="line">列中，没有录入值时，会自动使用default的值填充</span><br><span class="line">**auto_increment**:自增长</span><br><span class="line">针对数字列，顺序的自动填充数据（默认是从1开始，将来可以设定起始点和偏移量）</span><br><span class="line">**comment ** : 注释</span><br></pre></td></tr></table></figure><h3 id="2-3-DDL-表定义"><a href="#2-3-DDL-表定义" class="headerlink" title="2.3 DDL - 表定义"></a>2.3 DDL - 表定义</h3><p><strong>建表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE stu(</span><br><span class="line">id   INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT <span class="string">'学号'</span>,</span><br><span class="line">NAME VARCHAR(64) NOT NULL COMMENT <span class="string">'姓名'</span>,</span><br><span class="line">age TINYINT UNSIGNED NOT NULL DEFAULT 99 COMMENT <span class="string">'年龄'</span>,</span><br><span class="line">gender ENUM(<span class="string">'m'</span>,<span class="string">'f'</span>,<span class="string">'n'</span>) NOT NULL DEFAULT <span class="string">'n'</span> COMMENT <span class="string">'性别'</span>,</span><br><span class="line">telnum CHAR(11) NOT NULL DEFAULT <span class="string">'0'</span> COMMENT <span class="string">'手机号'</span>,</span><br><span class="line">intime DATETIME NOT NULL DEFAULT NOW() COMMENT <span class="string">'入学时间'</span></span><br><span class="line">) ENGINE=INNODB CHARSET=utf8mb4 COMMENT <span class="string">'学生表'</span>;</span><br><span class="line"></span><br><span class="line">扩展:</span><br><span class="line">create table t1 like stu;                   <span class="comment">#只克隆表结构</span></span><br><span class="line">create table user select * from mysql.user; <span class="comment">#表结构和数据都可用(索引不克隆)</span></span><br></pre></td></tr></table></figure><h3 id="2-4-建表规范总结"><a href="#2-4-建表规范总结" class="headerlink" title="2.4 建表规范总结"></a>2.4 建表规范总结</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(1) 表名要和业务有关</span><br><span class="line">(2) 表名不能有大写</span><br><span class="line">(3) 表名不能有数字开头</span><br><span class="line">(4) 表必须设置存储引擎</span><br><span class="line">(5) 表必须设置数据类型</span><br><span class="line">(6) 选择合适并简短的数据类型</span><br><span class="line">(7) 每个表要有主键,一般可以无关列</span><br><span class="line">(8) 每个列设置非空约束,设置默认值</span><br><span class="line">(9) 每个列和表要有注释</span><br><span class="line">(10) 不使用预留字符</span><br></pre></td></tr></table></figure><p>— 查看表结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">desc stu;</span><br><span class="line">show create table stu;</span><br></pre></td></tr></table></figure><p>— 删除表 (危险!!!)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop table user;</span><br></pre></td></tr></table></figure><p>— 修改表结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(1) 在stu表中添加qq列</span><br><span class="line">ALTER TABLE stu ADD qq VARCHAR(20) NOT NULL DEFAULT 0 COMMENT <span class="string">'QQ号'</span>;</span><br><span class="line">DESC stu;</span><br><span class="line"></span><br><span class="line">注意: </span><br><span class="line">1. 大表结构变更,会长时间锁表,肯定会影响到线上业务</span><br><span class="line">2. 8.0以后就自动解决了,8.0以前需要业务不繁忙期间或者使用PT-OSC工具</span><br><span class="line"></span><br><span class="line">(2) 在gender后加一个wechat列</span><br><span class="line">ALTER TABLE stu ADD wecht  VARCHAR(20) NOT NULL DEFAULT <span class="string">'0'</span>  COMMENT <span class="string">'微信号'</span> AFTER gender ;</span><br><span class="line">DESC stu;</span><br><span class="line"></span><br><span class="line">(3) 在首列添加sid列</span><br><span class="line">ALTER TABLE stu ADD sid  VARCHAR(20) NOT NULL DEFAULT <span class="string">'0'</span>  COMMENT <span class="string">'sid'</span> FIRST;</span><br><span class="line"></span><br><span class="line">(4) 删除列</span><br><span class="line">DESC stu;</span><br><span class="line">ALTER TABLE stu DROP sid;</span><br><span class="line">ALTER TABLE stu DROP qq;</span><br><span class="line">ALTER TABLE stu DROP wecht;</span><br><span class="line"></span><br><span class="line">(5) 修改列的属性</span><br><span class="line">ALTER TABLE stu MODIFY NAME VARCHAR(100) NOT NULL COMMENT <span class="string">'姓名'</span>;</span><br><span class="line">ALTER TABLE stu CHANGE NAME sname VARCHAR(64) NOT NULL COMMENT <span class="string">'姓名'</span>;</span><br><span class="line">--- 清空表(危险)</span><br><span class="line">TRUNCATE TABLE stu;</span><br></pre></td></tr></table></figure><h2 id="第3章-DCL"><a href="#第3章-DCL" class="headerlink" title="第3章 DCL"></a>第3章 DCL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant </span><br><span class="line">revoke</span><br></pre></td></tr></table></figure><h2 id="第4章-DML-表中的数据行"><a href="#第4章-DML-表中的数据行" class="headerlink" title="第4章 DML (表中的数据行)"></a>第4章 DML (表中的数据行)</h2><h3 id="4-1-INSERT"><a href="#4-1-INSERT" class="headerlink" title="4.1 INSERT"></a>4.1 INSERT</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法：INSERT INTO 表 VALUES(v1,v2,v3,....)</span></span><br><span class="line">(1) 最规范的写法</span><br><span class="line">DESC stu;</span><br><span class="line">INSERT INTO </span><br><span class="line">stu(sname,age,gender,telnum)</span><br><span class="line">VALUES</span><br><span class="line">(<span class="string">'张三'</span>,19,<span class="string">'m'</span>,<span class="string">'110'</span>),</span><br><span class="line">(<span class="string">'张四'</span>,17,<span class="string">'f'</span>,<span class="string">'119'</span>),</span><br><span class="line">(<span class="string">'张五'</span>,18,<span class="string">'m'</span>,<span class="string">'120'</span>);</span><br><span class="line"></span><br><span class="line">SELECT * FROM stu;</span><br><span class="line">(2) 简易的写法</span><br><span class="line">INSERT INTO stu</span><br><span class="line">VALUES(4,<span class="string">'李四'</span>,20,<span class="string">'m'</span>,<span class="string">'122'</span>,<span class="string">'2019-10-10 18:00:00'</span>);</span><br></pre></td></tr></table></figure><h3 id="4-2-UPDATE"><a href="#4-2-UPDATE" class="headerlink" title="4.2 UPDATE"></a>4.2 UPDATE</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表  SET 列=cc  WHERE 条件</span><br><span class="line">UPDATE stu SET age=29 WHERE sname=<span class="string">'张三'</span>;</span><br><span class="line">SELECT * FROM stu;</span><br></pre></td></tr></table></figure><h3 id="4-3-DELETE"><a href="#4-3-DELETE" class="headerlink" title="4.3 DELETE"></a>4.3 DELETE</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表 WHERE 条件</span><br><span class="line">DELETE FROM stu WHERE sname=<span class="string">'张五'</span>;</span><br><span class="line"></span><br><span class="line">DROP TABLE , TRUNCATE TABLE ,DELETE FROM TABLE  区别</span><br><span class="line">DROP TABLE : 表结构+数据全部(物理)删除</span><br><span class="line">TRUNCATE TABLE: 数据全部清空(物理),清空是区</span><br><span class="line">DELETE FROM TABLE :逐行删除表中所有数据,逻辑删除</span><br></pre></td></tr></table></figure><h3 id="4-4-伪删除"><a href="#4-4-伪删除" class="headerlink" title="4.4 伪删除"></a>4.4 伪删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用状态列标记一个行是否存在.</span><br><span class="line">UPDATE 替代 DELETE</span><br><span class="line">(1) 添加一个状态列(1代表删除,0代表未删除)</span><br><span class="line">ALTER TABLE stu ADD state CHAR(1) NOT NULL DEFAULT <span class="string">'0'</span> COMMENT <span class="string">'状态列:1代表删除,0代表未删除'</span>;</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line"></span><br><span class="line">(2) 删除张四数据行</span><br><span class="line">原语句:</span><br><span class="line">DELETE FROM stu WHERE sname=<span class="string">'张四'</span>;</span><br><span class="line">改写为:</span><br><span class="line">UPDATE stu SET state=<span class="string">'1'</span> WHERE sname=<span class="string">'张四'</span>;</span><br><span class="line">(3) 查询数据</span><br><span class="line">原查询语句:</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line">改写为:</span><br><span class="line">SELECT * FROM stu WHERE state=<span class="string">'0'</span>;</span><br></pre></td></tr></table></figure><h2 id="第5章-DQL应用-select"><a href="#第5章-DQL应用-select" class="headerlink" title="第5章 DQL应用(select )"></a>第5章 DQL应用(select )</h2><p>select : 查询表中的数据行(记录)</p><h3 id="5-1-单独使用-MySQL"><a href="#5-1-单独使用-MySQL" class="headerlink" title="5.1 单独使用(MySQL)"></a>5.1 单独使用(MySQL)</h3><h4 id="5-1-1-SELECT-参数名"><a href="#5-1-1-SELECT-参数名" class="headerlink" title="5.1.1 SELECT @@参数名"></a>5.1.1 SELECT @@参数名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- select @@参数名</span><br><span class="line">用来查询MySQL中设定的参数.</span><br><span class="line">SELECT @@port;</span><br><span class="line">SELECT @@datadir;</span><br><span class="line">SELECT @@server_id;</span><br><span class="line">SELECT @@innodb_flush_log_at_trx_commit;</span><br><span class="line">SHOW VARIABLES;</span><br><span class="line">SHOW VARIABLES LIKE <span class="string">'%trx%'</span>;</span><br></pre></td></tr></table></figure><h4 id="5-1-2-–-select-函数"><a href="#5-1-2-–-select-函数" class="headerlink" title="5.1.2 – select 函数();"></a>5.1.2 – select 函数();</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">USE world;</span><br><span class="line">SELECT DATABASE();</span><br><span class="line">SELECT NOW();</span><br><span class="line">SELECT CONCAT(<span class="string">"hello"</span>);</span><br></pre></td></tr></table></figure><h4 id="5-1-3-SELECT-计算功能"><a href="#5-1-3-SELECT-计算功能" class="headerlink" title="5.1.3 SELECT 计算功能"></a>5.1.3 SELECT 计算功能</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 3+5;</span><br><span class="line">+-----+</span><br><span class="line">| 3+5 |</span><br><span class="line">+-----+</span><br><span class="line">|   8 |</span><br><span class="line">+-----+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="5-2-SELECT-配合各种”子句”使用"><a href="#5-2-SELECT-配合各种”子句”使用" class="headerlink" title="5.2 SELECT 配合各种”子句”使用"></a>5.2 SELECT 配合各种”子句”使用</h3><h4 id="5-2-1-各子句的执行顺序"><a href="#5-2-1-各子句的执行顺序" class="headerlink" title="5.2.1 各子句的执行顺序"></a>5.2.1 各子句的执行顺序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列1,列2,列3 ,..</span><br><span class="line">FROM</span><br><span class="line">WHERE</span><br><span class="line">GROUP BY</span><br><span class="line">HAVING</span><br><span class="line">ORDER BY</span><br><span class="line">LIMIT</span><br></pre></td></tr></table></figure><h4 id="5-2-2-单表子句-from"><a href="#5-2-2-单表子句-from" class="headerlink" title="5.2.2 单表子句-from"></a>5.2.2 单表子句-from</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">world : 世界</span><br><span class="line">city  : 城市</span><br><span class="line">id          : 城市ID</span><br><span class="line">NAME        : 城市名 </span><br><span class="line">countrycode : 国家代码(CHN,USA)</span><br><span class="line">district    : 区域(省,州)</span><br><span class="line">population  : 人口</span><br><span class="line"></span><br><span class="line">例子: </span><br><span class="line">SELECT 列.... FROM  表;</span><br><span class="line">(1) 查询city表中的所有数据 </span><br><span class="line">SELECT  *  FROM city;</span><br><span class="line">(2) 查询city表中 name和population列的所有值</span><br><span class="line">SELECT NAME,population FROM city ;</span><br></pre></td></tr></table></figure><h4 id="5-2-3-单表子句-where"><a href="#5-2-3-单表子句-where" class="headerlink" title="5.2.3 单表子句-where"></a>5.2.3 单表子句-where</h4><p>SELECT 列…. FROM  表 WHERE 条件;<br>例子:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">--- WHERE 的等值条件查询</span><br><span class="line">(1) 查询city表中,中国所有的城市信息</span><br><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span>;</span><br><span class="line">--- WHERE 的 &gt; &lt; &gt;= &lt;= != &lt;&gt;</span><br><span class="line">(2) 查询人口数小于100人的城市.</span><br><span class="line">SELECT * FROM city WHERE Population&lt;100;</span><br><span class="line">--- WHERE 的 AND , OR </span><br><span class="line">(3) 查询中国,人口数量大于500w的城市</span><br><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span> AND population&gt;5000000;</span><br><span class="line">(4) 查询中国和美国的所有城市信息</span><br><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span> OR countrycode=<span class="string">'USA'</span> ;</span><br><span class="line">--- WHERE 配合 LIKE 的模糊查询</span><br><span class="line">(5) 查询CH开头的国家的城市信息</span><br><span class="line">SELECT * FROM city WHERE countrycode LIKE <span class="string">'CH%'</span>;</span><br><span class="line">--- WHERE 配合 IN 子句使用</span><br><span class="line">(6)查询中国和美国的所有城市信息</span><br><span class="line">SELECT * FROM city WHERE countrycode IN (<span class="string">'CHN'</span>,<span class="string">'USA'</span>);</span><br><span class="line">--- WHERE 配合 BETWEEN AND </span><br><span class="line">(7) 查询世界上人口数量在100w到200w之间的城市</span><br><span class="line">SELECT * FROM city  WHERE population &gt;=1000000 AND population&lt;=2000000;</span><br><span class="line">SELECT * FROM city  WHERE population BETWEEN 1000000 AND 2000000;</span><br></pre></td></tr></table></figure><h4 id="5-2-4-SELECT-配合-GROUP-BY-聚合函数应用"><a href="#5-2-4-SELECT-配合-GROUP-BY-聚合函数应用" class="headerlink" title="5.2.4 SELECT 配合 GROUP BY + 聚合函数应用"></a>5.2.4 SELECT 配合 GROUP BY + 聚合函数应用</h4><p>— 聚合函数(数据统计类的功能)<br>平均值  AVG()<br>最大值  MAX()<br>最小值  MIN()<br>总和    SUM()<br>计数    COUNT()<br>列转行  GROUP_CONCAT()</p><p>— GROUP BY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">例子:</span><br><span class="line">--- (1) 统计每个国家的总人口数量</span><br><span class="line">SELECT countrycode,SUM(population)</span><br><span class="line">FROM city</span><br><span class="line">GROUP BY countrycode;</span><br><span class="line"></span><br><span class="line">--- (2) 统计中国每个省的总人口数量</span><br><span class="line">SELECT district,SUM(population)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">GROUP BY district;</span><br><span class="line"></span><br><span class="line">--- (3) 统计中国每个省的城市个数和城市名称列表</span><br><span class="line">SELECT district , COUNT(NAME),GROUP_CONCAT(NAME)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">GROUP BY district;</span><br></pre></td></tr></table></figure><h4 id="5-2-5-select-配合-having-应用"><a href="#5-2-5-select-配合-having-应用" class="headerlink" title="5.2.5 select 配合 having 应用"></a>5.2.5 select 配合 having 应用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">例子:</span><br><span class="line">--- (1) 统计中国每个省的总人口数量大于10000000</span><br><span class="line">SELECT district,SUM(population)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span> </span><br><span class="line">GROUP BY district</span><br><span class="line">HAVING  SUM(population)&gt;10000000;</span><br></pre></td></tr></table></figure><h4 id="5-2-6-SELECT-配合-ORDER-BY-排序应用"><a href="#5-2-6-SELECT-配合-ORDER-BY-排序应用" class="headerlink" title="5.2.6 SELECT 配合 ORDER BY 排序应用"></a>5.2.6 SELECT 配合 ORDER BY 排序应用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">例子:</span><br><span class="line">--- (1) 查询中国所有城市,并按人口从小到大(从大到小)</span><br><span class="line">SELECT * FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">ORDER BY population DESC;</span><br><span class="line"></span><br><span class="line">--- (2) 统计中国每个省的总人口数量,并按总人口数从大到小排序</span><br><span class="line">SELECT district,SUM(population)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">GROUP BY district</span><br><span class="line">ORDER BY SUM(population) DESC;</span><br><span class="line"></span><br><span class="line">--- (3) 统计中国每个省的总人口数量,并查询总人口数超过500w的信息,按总人口降序排序</span><br><span class="line">SELECT district,SUM(population)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span> </span><br><span class="line">GROUP BY district</span><br><span class="line">HAVING  SUM(population)&gt;5000000</span><br><span class="line">ORDER BY SUM(population) DESC ;</span><br></pre></td></tr></table></figure><h4 id="5-2-7-SELECT-配合-LIMIT-使用"><a href="#5-2-7-SELECT-配合-LIMIT-使用" class="headerlink" title="5.2.7 SELECT 配合 LIMIT 使用"></a>5.2.7 SELECT 配合 LIMIT 使用</h4><ol><li>查看中国所有的城市，并按人口数进行排序(从大到小)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span> ORDER BY population DESC;</span><br></pre></td></tr></table></figure><ol><li>统计中国各个省的总人口数量，按照总人口从大到小排序</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT district <span class="keyword">AS</span> 省 ,SUM(Population) <span class="keyword">AS</span> 总人口</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode=<span class="string">'chn'</span></span><br><span class="line">GROUP BY district</span><br><span class="line">ORDER BY 总人口 DESC ;</span><br></pre></td></tr></table></figure><ol><li>统计中国,每个省的总人口,找出总人口大于500w的,并按总人口从大到小排序,只显示前三名</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SELECT  district, SUM(population)  FROM  city </span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">GROUP BY district </span><br><span class="line"><span class="function">HAVING <span class="title">SUM</span>(<span class="params">population</span>)&gt;5000000</span></span><br><span class="line"><span class="function">ORDER BY <span class="title">SUM</span>(<span class="params">population</span>) DESC</span></span><br><span class="line"><span class="function">LIMIT 3</span> ;</span><br><span class="line"></span><br><span class="line">LIMIT N ,M ---&gt;跳过N,显示一共M行</span><br><span class="line">LIMIT <span class="number">5</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line">SELECT  district, SUM(population)  FROM  city </span><br><span class="line">WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">GROUP BY district </span><br><span class="line"><span class="function">HAVING <span class="title">SUM</span>(<span class="params">population</span>)&gt;5000000</span></span><br><span class="line"><span class="function">ORDER BY <span class="title">SUM</span>(<span class="params">population</span>) DESC</span></span><br><span class="line"><span class="function">LIMIT 5,5</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-8-distinct：去重复"><a href="#5-2-8-distinct：去重复" class="headerlink" title="5.2.8 distinct：去重复"></a>5.2.8 distinct：去重复</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT countrycode FROM city ;</span><br><span class="line"><span class="function">SELECT <span class="title">DISTINCT</span><span class="params">(countrycode)</span> FROM city  </span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-9-联合查询-union-all"><a href="#5-2-9-联合查询-union-all" class="headerlink" title="5.2.9 联合查询- union all"></a>5.2.9 联合查询- union all</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 中国或美国城市信息</span><br><span class="line"></span><br><span class="line">SELECT * FROM city </span><br><span class="line"><span class="function">WHERE countrycode <span class="title">IN</span> (<span class="params"><span class="string">'CHN'</span> ,<span class="string">'USA'</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'CHN'</span></span><br><span class="line">UNION ALL</span><br><span class="line">SELECT * FROM city WHERE countrycode=<span class="string">'USA'</span></span><br><span class="line"></span><br><span class="line">说明:一般情况下,我们会将 IN 或者 OR 语句 改写成 UNION ALL,来提高性能</span><br><span class="line">UNION     去重复</span><br><span class="line">UNION ALL 不去重复</span><br></pre></td></tr></table></figure><h2 id="第6章-多表连接查询"><a href="#第6章-多表连接查询" class="headerlink" title="第6章 多表连接查询"></a>第6章 多表连接查询</h2><h3 id="6-1-案例准备"><a href="#6-1-案例准备" class="headerlink" title="6.1 案例准备"></a>6.1 案例准备</h3><p>按需求创建一下表结构:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">use school</span><br><span class="line">student ：学生表</span><br><span class="line">sno：    学号</span><br><span class="line">sname：学生姓名</span><br><span class="line">sage： 学生年龄</span><br><span class="line">ssex： 学生性别</span><br><span class="line"></span><br><span class="line">teacher ：教师表</span><br><span class="line">tno：     教师编号</span><br><span class="line">tname：教师名字</span><br><span class="line"></span><br><span class="line">course ：课程表</span><br><span class="line">cno：  课程编号</span><br><span class="line">cname：课程名字</span><br><span class="line">tno：  教师编号</span><br><span class="line"></span><br><span class="line">score  ：成绩表</span><br><span class="line">sno：  学号</span><br><span class="line">cno：  课程编号</span><br><span class="line">score：成绩</span><br><span class="line"></span><br><span class="line">-- 项目构建</span><br><span class="line">CREATE DATABASE school CHARSET utf8mb4;</span><br><span class="line">USE school</span><br><span class="line"></span><br><span class="line">CREATE TABLE student(</span><br><span class="line">sno INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT <span class="string">'学号'</span>,</span><br><span class="line">sname VARCHAR(20) NOT NULL COMMENT <span class="string">'姓名'</span>,</span><br><span class="line">sage TINYINT UNSIGNED  NOT NULL COMMENT <span class="string">'年龄'</span>,</span><br><span class="line">ssex  ENUM(<span class="string">'f'</span>,<span class="string">'m'</span>) NOT NULL DEFAULT <span class="string">'m'</span> COMMENT <span class="string">'性别'</span></span><br><span class="line">)ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE course(</span><br><span class="line">cno INT NOT NULL PRIMARY KEY COMMENT <span class="string">'课程编号'</span>,</span><br><span class="line">cname VARCHAR(20) NOT NULL COMMENT <span class="string">'课程名字'</span>,</span><br><span class="line">tno INT NOT NULL  COMMENT <span class="string">'教师编号'</span></span><br><span class="line">)ENGINE=INNODB CHARSET utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE sc (</span><br><span class="line">sno INT NOT NULL COMMENT <span class="string">'学号'</span>,</span><br><span class="line">cno INT NOT NULL COMMENT <span class="string">'课程编号'</span>,</span><br><span class="line">score INT  NOT NULL DEFAULT 0 COMMENT <span class="string">'成绩'</span></span><br><span class="line">)ENGINE=INNODB CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE teacher(</span><br><span class="line">tno INT NOT NULL PRIMARY KEY COMMENT <span class="string">'教师编号'</span>,</span><br><span class="line">tname VARCHAR(20) NOT NULL COMMENT <span class="string">'教师名字'</span></span><br><span class="line">)ENGINE=INNODB CHARSET utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO student(sno,sname,sage,ssex)</span><br><span class="line">VALUES</span><br><span class="line">(1,<span class="string">'zhang3'</span>,18,<span class="string">'m'</span>),</span><br><span class="line">(2,<span class="string">'zhang4'</span>,18,<span class="string">'m'</span>),</span><br><span class="line">(3,<span class="string">'li4'</span>,18,<span class="string">'m'</span>),</span><br><span class="line">(4,<span class="string">'wang5'</span>,19,<span class="string">'f'</span>),</span><br><span class="line">(5,<span class="string">'zh4'</span>,18,<span class="string">'m'</span>),</span><br><span class="line">(6,<span class="string">'zhao4'</span>,18,<span class="string">'m'</span>),</span><br><span class="line">(7,<span class="string">'ma6'</span>,19,<span class="string">'f'</span>),</span><br><span class="line">(8,<span class="string">'oldboy'</span>,20,<span class="string">'m'</span>),</span><br><span class="line">(9,<span class="string">'oldgirl'</span>,20,<span class="string">'f'</span>),</span><br><span class="line">(10,<span class="string">'oldp'</span>,25,<span class="string">'m'</span>);</span><br><span class="line"></span><br><span class="line">INSERT INTO teacher(tno,tname) VALUES</span><br><span class="line">(101,<span class="string">'haoge'</span>),</span><br><span class="line">(102,<span class="string">'yage'</span>),</span><br><span class="line">(103,<span class="string">'oldguo'</span>);</span><br><span class="line"></span><br><span class="line">DESC course;</span><br><span class="line">INSERT INTO course(cno,cname,tno)</span><br><span class="line">VALUES</span><br><span class="line">(1001,<span class="string">'linux'</span>,101),</span><br><span class="line">(1002,<span class="string">'python'</span>,102),</span><br><span class="line">(1003,<span class="string">'mysql'</span>,103);</span><br><span class="line"></span><br><span class="line">DESC sc;</span><br><span class="line">INSERT INTO sc(sno,cno,score)</span><br><span class="line">VALUES</span><br><span class="line">(1,1001,80),</span><br><span class="line">(1,1002,59),</span><br><span class="line">(2,1002,90),</span><br><span class="line">(2,1003,100),</span><br><span class="line">(3,1001,99),</span><br><span class="line">(3,1003,40),</span><br><span class="line">(4,1001,79),</span><br><span class="line">(4,1002,61),</span><br><span class="line">(4,1003,99),</span><br><span class="line">(5,1003,40),</span><br><span class="line">(6,1001,89),</span><br><span class="line">(6,1003,77),</span><br><span class="line">(7,1001,67),</span><br><span class="line">(7,1003,82),</span><br><span class="line">(8,1001,70),</span><br><span class="line">(9,1003,80),</span><br><span class="line">(10,1003,96);</span><br><span class="line"></span><br><span class="line">SELECT * FROM student;</span><br><span class="line">SELECT * FROM teacher;</span><br><span class="line">SELECT * FROM course;</span><br><span class="line">SELECT * FROM sc;</span><br></pre></td></tr></table></figure><h3 id="6-2-多表连接应用"><a href="#6-2-多表连接应用" class="headerlink" title="6.2 多表连接应用"></a>6.2 多表连接应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">1.查询一下世界上人口数量小于100人的城市名和国家名</span><br><span class="line">SELECT b.name ,a.name ,a.population</span><br><span class="line">FROM  city  AS a</span><br><span class="line">JOIN  country AS b</span><br><span class="line">ON    b.code=a.countrycode</span><br><span class="line">WHERE  a.Population&lt;100</span><br><span class="line">2.查询一下chengdu城市,人口数,所在的国家名,所在的大洲</span><br><span class="line">SELECT city.name,city.Population ,country.name,country.Continent</span><br><span class="line">FROM city </span><br><span class="line">JOIN country</span><br><span class="line">ON city.countrycode=country.code </span><br><span class="line">WHERE city.name=<span class="string">'chengdu'</span>;</span><br><span class="line">3.查询一下chengdu城市,人口数,所在的国家名,所在的大洲</span><br><span class="line">SELECT city.name,city.Population ,country.name,country.Continent</span><br><span class="line">FROM city </span><br><span class="line">JOIN country</span><br><span class="line">ON city.countrycode=country.code </span><br><span class="line">WHERE city.name=<span class="string">'chengdu'</span>;</span><br><span class="line">4.oldguo老师教的课程名称</span><br><span class="line">SELECT teacher.tname,course.cname</span><br><span class="line">FROM  teacher</span><br><span class="line">JOIN course</span><br><span class="line">ON teacher.tno=course.tno </span><br><span class="line">WHERE teacher.tname=<span class="string">'oldguo'</span>;</span><br><span class="line">5.每位老师,所教课程的平均分</span><br><span class="line">=========================</span><br><span class="line">oldguo   mysql   80</span><br><span class="line">yage     python  70 </span><br><span class="line">haoge    linux   75</span><br><span class="line">=========================</span><br><span class="line">SELECT teacher.tname,course.cname,AVG(sc.score)</span><br><span class="line">FROM teacher </span><br><span class="line">JOIN course</span><br><span class="line">ON teacher.tno=course.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON course.cno=sc.cno</span><br><span class="line">GROUP BY teacher.tname,course.cname;</span><br><span class="line">6.统计一下每位老师所教学生个数及学生名字</span><br><span class="line">SELECT teacher.tname,COUNT(student.sname),</span><br><span class="line">GROUP_CONCAT(CONCAT(student.sname,<span class="string">"_"</span>,student.sno))</span><br><span class="line">FROM teacher </span><br><span class="line">JOIN course</span><br><span class="line">ON teacher.tno=course.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON course.cno=sc.cno </span><br><span class="line">JOIN student</span><br><span class="line">ON sc.sno=student.sno </span><br><span class="line">GROUP BY teacher.tname</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">字符串拼接</span><br><span class="line">SELECT CONCAT(USER,<span class="string">"@"</span>,HOST) FROM mysql.user;</span><br><span class="line">SELECT USER,HOST FROM mysql.user;</span><br></pre></td></tr></table></figure><h3 id="6-3-别名"><a href="#6-3-别名" class="headerlink" title="6.3 别名"></a>6.3 别名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">--- 表别名 </span><br><span class="line">SELECT teacher.tname,COUNT(student.sname),GROUP_CONCAT(CONCAT(student.sname,<span class="string">"_"</span>,student.sno))</span><br><span class="line">FROM teacher </span><br><span class="line">JOIN course</span><br><span class="line">ON teacher.tno=course.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON course.cno=sc.cno </span><br><span class="line">JOIN student</span><br><span class="line">ON sc.sno=student.sno </span><br><span class="line">GROUP BY teacher.tname</span><br><span class="line"></span><br><span class="line">应用别名后:</span><br><span class="line">SELECT a.tname,COUNT(d.sname),GROUP_CONCAT(CONCAT(d.sname,<span class="string">"_"</span>,d.sno))</span><br><span class="line">FROM teacher AS a</span><br><span class="line">JOIN course AS b </span><br><span class="line">ON a.tno=b.tno</span><br><span class="line">JOIN sc AS c</span><br><span class="line">ON b.cno=c.cno </span><br><span class="line">JOIN student AS d </span><br><span class="line">ON c.sno=d.sno </span><br><span class="line">GROUP BY a.tname</span><br><span class="line"></span><br><span class="line">--- 列别名</span><br><span class="line">SELECT a.tname AS tname ,</span><br><span class="line">COUNT(d.sname) AS stu_count ,</span><br><span class="line">GROUP_CONCAT(CONCAT(d.sname,<span class="string">"_"</span>,d.sno)) AS stu_list</span><br><span class="line">FROM teacher AS a</span><br><span class="line">JOIN course AS b </span><br><span class="line">ON a.tno=b.tno</span><br><span class="line">JOIN sc AS c</span><br><span class="line">ON b.cno=c.cno </span><br><span class="line">JOIN student AS d </span><br><span class="line">ON c.sno=d.sno </span><br><span class="line">GROUP BY a.tname</span><br><span class="line"></span><br><span class="line">说明: 列别名只能在having或者order by中调用</span><br></pre></td></tr></table></figure><h2 id="第7章-练习"><a href="#第7章-练习" class="headerlink" title="第7章 练习"></a>第7章 练习</h2><p>统计zhang3,学习了几门课</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select student.sname,count(sc.cno) </span><br><span class="line">from student join sc on student.sno=sc.sno </span><br><span class="line"><span class="built_in">where</span> student.sname=<span class="string">'zhang3'</span> </span><br><span class="line">group by student.sname;</span><br></pre></td></tr></table></figure><p>查询zhang3,学习的课程名称有哪些</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select student.sname,group_concat(course.cname) </span><br><span class="line">from student </span><br><span class="line">join sc </span><br><span class="line">on student.sno=sc.snno </span><br><span class="line">join course </span><br><span class="line">on sc.cno=course.cno </span><br><span class="line"><span class="built_in">where</span> student.sname=<span class="string">'zhang3'</span> </span><br><span class="line">group by student.sname;</span><br></pre></td></tr></table></figure><p>查询oldguo所教课程的平均分数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select teacher.tname,course.cname,avg(sc.score) </span><br><span class="line">from teacher </span><br><span class="line">join course </span><br><span class="line">on teacher.tno=course.tno </span><br><span class="line">join sc </span><br><span class="line">on course.cno=sc.cno </span><br><span class="line"><span class="built_in">where</span> teacher.tname=<span class="string">'oldguo'</span> </span><br><span class="line">group by course.cno;</span><br></pre></td></tr></table></figure><p>查询所有老师所教学生不及格的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select teacher.tname , student.sname , course.cname , sc.score </span><br><span class="line">from teacher join course on teacher.tno=course.tno </span><br><span class="line">join sc on course.cno=sc.cno</span><br><span class="line">join student on sc.sno=student.sno</span><br><span class="line"><span class="built_in">where</span> sc.score&lt;60;</span><br></pre></td></tr></table></figure><p>查询oldguo所教的不及格的学生姓名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select teacher.tname,student.sname,course.cname,sc.score  </span><br><span class="line">from teacher </span><br><span class="line">join course </span><br><span class="line">on teacher.tno=course.tno  </span><br><span class="line">join sc </span><br><span class="line">on course.cno=sc.cno </span><br><span class="line">join student </span><br><span class="line">on sc.sno=student.sno </span><br><span class="line"><span class="built_in">where</span> teacher.tname=<span class="string">'oldguo'</span> and sc.score&lt;60 ;</span><br></pre></td></tr></table></figure><p>每位老师所教课程的平均分,并按平均分排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select teacher.tname , course.cname , avg(sc.score)  </span><br><span class="line">from teacher </span><br><span class="line">join course </span><br><span class="line">on teacher.tno=course.tno  </span><br><span class="line">join sc </span><br><span class="line">on course.cno=sc.cno</span><br><span class="line">group by course.cno ;</span><br></pre></td></tr></table></figure><p>查询平均成绩大于60分的同学的学号和平均成绩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select student.sno,avg(sc.score)</span><br><span class="line">from student </span><br><span class="line">join sc on student.sno=sc.sno </span><br><span class="line">group by sc.sno</span><br><span class="line">having avg(sc.score)&gt;60;</span><br></pre></td></tr></table></figure><p>查询所有同学的学号、姓名、选课数、总成绩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT student.sno,student.sname,COUNT(sc.cno),SUM(sc.score)</span><br><span class="line">FROM student</span><br><span class="line">JOIN sc</span><br><span class="line">ON student.sno=sc.sno</span><br><span class="line">GROUP BY student.sno;</span><br></pre></td></tr></table></figure><p>查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT sc.cno,MAX(sc.score),MIN(sc.score)</span><br><span class="line">FROM sc</span><br><span class="line">GROUP BY sc.cno;</span><br></pre></td></tr></table></figure><p>统计各位老师,所教课程的及格率</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT teacher.tname,course.cname,CONCAT(COUNT(sc.score&gt;60 OR NULL)/COUNT(sc.score)*100,<span class="string">"%"</span>) AS 及格率 </span><br><span class="line">FROM teacher </span><br><span class="line">JOIN course</span><br><span class="line">ON teacher.tno=course.tno </span><br><span class="line">JOIN sc</span><br><span class="line">ON course.cno=sc.cno </span><br><span class="line">GROUP BY sc.cno;</span><br></pre></td></tr></table></figure><p>查询每门课程被选修的学生数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT course.cname,COUNT(sc.sno)</span><br><span class="line">FROM course</span><br><span class="line">JOIN sc</span><br><span class="line">ON course.cno=sc.cno </span><br><span class="line">GROUP BY sc.cno;</span><br></pre></td></tr></table></figure><p>查询出只选修了一门课程的全部学生的学号和姓名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT student.sno,student.sname</span><br><span class="line">FROM student</span><br><span class="line">JOIN sc</span><br><span class="line">ON student.sno=sc.sno</span><br><span class="line">GROUP BY sc.sno</span><br><span class="line">HAVING COUNT(sc.cno)=1;</span><br></pre></td></tr></table></figure><p>查询选修课程门数超过1门的学生信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT student.sno,student.sname</span><br><span class="line">FROM student</span><br><span class="line">JOIN sc</span><br><span class="line">ON student.sno=sc.sno</span><br><span class="line">GROUP BY sc.sno</span><br><span class="line">HAVING COUNT(sc.cno)&gt;1;</span><br></pre></td></tr></table></figure><p>统计每门课程:优秀(85分以上),良好(70-85),一般(60-70),不及格(小于60)的学生列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT course.cname,GROUP_CONCAT(CASE WHEN sc.score&gt;85 THEN student.sname END) AS 优秀,</span><br><span class="line">GROUP_CONCAT(CASE WHEN sc.score&gt;70 AND sc.score&lt;85 THEN student.sname END) AS 良好,</span><br><span class="line">GROUP_CONCAT(CASE WHEN sc.score&gt;65 AND sc.score&lt;70 THEN student.sname END) AS 一般,</span><br><span class="line">GROUP_CONCAT(CASE WHEN sc.score&lt;65 THEN student.sname END) AS 不及格</span><br><span class="line">FROM student</span><br><span class="line">JOIN sc </span><br><span class="line">ON student.sno=sc.sno </span><br><span class="line">JOIN course</span><br><span class="line">ON sc.cno=course.cno </span><br><span class="line">GROUP BY course.cno;</span><br></pre></td></tr></table></figure><p>查询平均成绩大于85的所有学生的学号、姓名和平均成绩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT student.sno,student.sname,AVG(sc.score)</span><br><span class="line">FROM student</span><br><span class="line">JOIN sc</span><br><span class="line">ON student.sno=sc.sno</span><br><span class="line">GROUP BY sc.sno</span><br><span class="line">HAVING AVG(sc.score)&gt;85;</span><br></pre></td></tr></table></figure><h2 id="第8章-show"><a href="#第8章-show" class="headerlink" title="第8章 show"></a>第8章 show</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">show databases    </span><br><span class="line">show tables </span><br><span class="line">show tables from world</span><br><span class="line">show create database world </span><br><span class="line">show create table city </span><br><span class="line">show create table world.city </span><br><span class="line">show grants <span class="keyword">for</span> root@<span class="string">'localhost'</span></span><br><span class="line">show processlist</span><br><span class="line">show charset</span><br><span class="line">show collation</span><br><span class="line">show variables                   <span class="comment">#查看所有参数</span></span><br><span class="line">show variables like <span class="string">'%trx%'</span>      <span class="comment">#模糊查询参数</span></span><br><span class="line">show engines                     <span class="comment">#查询MySQL支持的所有存储引擎</span></span><br><span class="line">show status                      <span class="comment">#查看MySQL所有工作状态信息</span></span><br><span class="line">show status like <span class="string">'%innodb%'</span>      <span class="comment">#模糊查询MySQL的某些状态信息</span></span><br><span class="line">show engine innodb status \G     <span class="comment">#查看InnoDB引擎相关信息</span></span><br><span class="line">show index from city;            <span class="comment">#查看city表的排索引情况</span></span><br><span class="line">show binary logs;     <span class="comment">#所有二进制日志的列表 </span></span><br><span class="line">show binlog events <span class="keyword">in</span> <span class="string">'xxxx'</span>     <span class="comment">#查看二进制日志事件信息 </span></span><br><span class="line">show master status               <span class="comment">#二进制日志当前使用情况</span></span><br><span class="line">show slave status\G              <span class="comment">#查看从库状态信息</span></span><br><span class="line">show relaylog events <span class="keyword">in</span> <span class="string">'xxxx'</span>   <span class="comment">#查看从库的中继日志事件信息.</span></span><br></pre></td></tr></table></figure><h2 id="第9章-元数据"><a href="#第9章-元数据" class="headerlink" title="第9章 元数据"></a>第9章 元数据</h2><h3 id="9-1-元数据介绍"><a href="#9-1-元数据介绍" class="headerlink" title="9.1 元数据介绍"></a>9.1 元数据介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据字典信息(表结构信息),</span><br><span class="line">表属性(引擎,字符集,校对....),</span><br><span class="line">库属性</span><br><span class="line">权限,状态....</span><br></pre></td></tr></table></figure><h3 id="9-2-元数据控制"><a href="#9-2-元数据控制" class="headerlink" title="9.2 元数据控制"></a>9.2 元数据控制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"基表"</span> 存储</span><br><span class="line">DDL,DCL专用语句进行: 创建create,删除drop,修改alter</span><br><span class="line">show 语句 查询部分元数据</span><br><span class="line">information_schema.xxxx</span><br></pre></td></tr></table></figure><h3 id="9-3-information-schema-常用视图"><a href="#9-3-information-schema-常用视图" class="headerlink" title="9.3 information_schema 常用视图"></a>9.3 information_schema 常用视图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; DESC TABLES;</span><br><span class="line">TABLE_SCHEMA              <span class="comment">#表所在的库</span></span><br><span class="line">TABLE_NAME                <span class="comment">#表名</span></span><br><span class="line">ENGINE                    <span class="comment">#表引擎</span></span><br><span class="line">TABLE_ROWS                <span class="comment">#数据行</span></span><br><span class="line">AVG_ROW_LENGTH            <span class="comment">#平均行长度</span></span><br><span class="line">INDEX_LENGTH     <span class="comment">#索引长度</span></span><br></pre></td></tr></table></figure><p>1.查询world库下所有的表名信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_name FROM information_schema.tables </span><br><span class="line">WHERE table_schema=<span class="string">'world'</span>;</span><br><span class="line">SHOW TABLES FROM world;</span><br></pre></td></tr></table></figure><p>2.统计所有库下的表个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,COUNT(table_name)</span><br><span class="line">FROM information_schema.tables </span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure><p>3.统计每个数据库下的表的个数,名称</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,COUNT(table_name),GROUP_CONCAT(table_name)</span><br><span class="line">FROM information_schema.tables </span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure><p>4.统计每个数据库(生产库)下的表的个数,名称,要求表名后跟表注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#提示: NOT IN (sys,information_schema,performance_schema,mysql)</span></span><br><span class="line"></span><br><span class="line">SELECT table_schema,COUNT(table_name),GROUP_CONCAT(CONCAT(table_name,<span class="string">"("</span>,table_comment,<span class="string">")"</span>))</span><br><span class="line">FROM information_schema.tables </span><br><span class="line">WHERE table_schema NOT IN (<span class="string">'sys'</span>,<span class="string">'information_schema'</span>,<span class="string">'performance_schema'</span>,<span class="string">'mysql'</span>)</span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure><p>5.统计全库数据量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TABLE_ROWS                <span class="comment">#数据行</span></span><br><span class="line">AVG_ROW_LENGTH            <span class="comment">#平均行长度</span></span><br><span class="line">INDEX_LENGTH       <span class="comment">#索引长度</span></span><br><span class="line"></span><br><span class="line">SELECT SUM(TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)/1024/1024 AS total_size_mb</span><br><span class="line">FROM information_schema.tables ;</span><br></pre></td></tr></table></figure><p>6.统计每个业务库的总大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,SUM(TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)/1024/1024 AS total_size_mb</span><br><span class="line">FROM information_schema.tables</span><br><span class="line">WHERE table_schema NOT IN (<span class="string">'sys'</span>,<span class="string">'information_schema'</span>,<span class="string">'performance_schema'</span>,<span class="string">'mysql'</span>)</span><br><span class="line">GROUP BY table_schema ;</span><br></pre></td></tr></table></figure><p>7.统计下city表的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_name , (TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)/1024/1024 AS mb </span><br><span class="line">FROM information_schema.tables</span><br><span class="line">WHERE table_schema=<span class="string">'world'</span> AND table_name=<span class="string">'city'</span>;</span><br></pre></td></tr></table></figure><p>8.拼接:批量生成命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123 world city &gt;/backup/world_city.sql </span><br><span class="line">mysqldump -uroot -p123 world country &gt;/backup/world_country.sql </span><br><span class="line">mysqldump -uroot -p123 school student &gt;/backup/school_student.sql </span><br><span class="line"></span><br><span class="line">SELECT CONCAT(<span class="string">"mysqldump -uroot -p123 "</span>,table_schema,<span class="string">" "</span>,table_name,<span class="string">" &gt;/BACKUP/"</span>,table_schema,<span class="string">"_"</span>,table_name,<span class="string">".sql"</span>)</span><br><span class="line">FROM information_schema.tables INTO OUTFILE <span class="string">'/tmp/bak.sh'</span>;</span><br></pre></td></tr></table></figure><p><strong>columns (数据字典统计)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计school数据库下的表的数据字典信息</span></span><br><span class="line">SELECT table_name,column_name ,data_type,column_comment</span><br><span class="line">FROM information_schema.columns</span><br><span class="line">WHERE table_schema=<span class="string">'school'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>2.MySQL体系结构及管理</title>
    <link href="http://linuxwf.com/2020/04/15/2-MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%8F%8A%E7%AE%A1%E7%90%86/"/>
    <id>http://linuxwf.com/2020/04/15/2-MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%8F%8A%E7%AE%A1%E7%90%86/</id>
    <published>2020-04-15T01:35:00.000Z</published>
    <updated>2020-04-15T01:41:36.919Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="MySQL体系结构及管理"><a href="#MySQL体系结构及管理" class="headerlink" title="MySQL体系结构及管理"></a>MySQL体系结构及管理</h1><h2 id="第1章-C-S-客户端-服务端-模型介绍"><a href="#第1章-C-S-客户端-服务端-模型介绍" class="headerlink" title="第1章 C/S(客户端/服务端)模型介绍"></a>第1章 C/S(客户端/服务端)模型介绍</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql01.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">客户端-服务器端模型</span><br><span class="line">TCP/IP(网络连接串的方式):</span><br><span class="line">mysql -uadmin -p123 -h 10.0.1.51 -P 3306</span><br><span class="line">Scoket(仅能在本地连接):</span><br><span class="line">mysql -uroot -p123 -S /tmp/mysql.sock</span><br><span class="line">客户端程序:</span><br><span class="line">MySQL自带的</span><br><span class="line">navicat,sqlyog</span><br><span class="line">程序连接mysql的驱动程序</span><br></pre></td></tr></table></figure><h2 id="第2章-实例介绍"><a href="#第2章-实例介绍" class="headerlink" title="第2章 实例介绍"></a>第2章 实例介绍</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">实例=mysqld后台守护进程+Master Thread+干活的Thread+预分配的内存</span><br><span class="line">公司=老板+经理+员工+办公室</span><br></pre></td></tr></table></figure><h2 id="第3章-mysqld程序运行原理"><a href="#第3章-mysqld程序运行原理" class="headerlink" title="第3章 mysqld程序运行原理"></a>第3章 mysqld程序运行原理</h2><h3 id="3-1-什么SQL"><a href="#3-1-什么SQL" class="headerlink" title="3.1 什么SQL?"></a>3.1 什么SQL?</h3><p>MySQL中的专用的命令 结构化查询语言</p><h3 id="3-2-SQL-种类"><a href="#3-2-SQL-种类" class="headerlink" title="3.2 SQL 种类"></a>3.2 SQL 种类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DDL : 数据定义语言</span><br><span class="line">DCL : 数据控制语言</span><br><span class="line">DML : 数据操作语言</span><br><span class="line">DQL : 数据查询语言  (oldguo加的)</span><br></pre></td></tr></table></figure><h3 id="3-3-mysqld程序结构-一条SQL语句的执行过程"><a href="#3-3-mysqld程序结构-一条SQL语句的执行过程" class="headerlink" title="3.3 mysqld程序结构(一条SQL语句的执行过程)"></a>3.3 mysqld程序结构(一条SQL语句的执行过程)</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql02.png"  alt=""></p><p>例如: select user,host from mysql.user;</p><h4 id="3-3-1-连接层"><a href="#3-3-1-连接层" class="headerlink" title="3.3.1 连接层"></a>3.3.1 连接层</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(1) 提供连接协议</span><br><span class="line">TCP/IP连接协议</span><br><span class="line">Socket连接协议</span><br><span class="line">(2) 验证</span><br><span class="line">用户,密码,端口</span><br><span class="line">(3) 提供连接线程</span><br><span class="line">接收用户SQL语句</span><br><span class="line">返回用户结果</span><br><span class="line">与下层联系</span><br><span class="line">--skip-grant-tables </span><br><span class="line">--skip-networking</span><br></pre></td></tr></table></figure><h4 id="3-3-2-SQL层"><a href="#3-3-2-SQL层" class="headerlink" title="3.3.2 SQL层"></a>3.3.2 SQL层</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(1)语法检查，接收上层传送的SQL语句</span><br><span class="line">(2)语法验证模块：验证语句语法,是否满足SQL_MODE</span><br><span class="line">(3)语义检查：判断SQL语句的类型</span><br><span class="line">DDL ：数据定义语言</span><br><span class="line">DCL ：数据控制语言</span><br><span class="line">DML ：数据操作语言</span><br><span class="line">DQL： 数据查询语言</span><br><span class="line">...</span><br><span class="line">(4)权限检查</span><br><span class="line">(5)预处理(解析),生成解析树(执行计划)</span><br><span class="line">(6)优化器(基于代价算法):根据解析器得出的多种执行计划，进行判断，选择最优的执行计划</span><br><span class="line">        代价模型：资源（CPU IO MEM）的耗损评估性能好坏</span><br><span class="line">(7)执行器: 根据最优执行计划，执行SQL语句，产生执行结果</span><br><span class="line">执行结果：在磁盘的xxxx位置上</span><br><span class="line">(8)提供查询缓存（默认是没开启的），会使用redis tair替代查询缓存功能</span><br><span class="line">(9)提供日志记录（日志管理章节）：binlog，默认是没开启的。</span><br></pre></td></tr></table></figure><h4 id="3-3-3-存储引擎层"><a href="#3-3-3-存储引擎层" class="headerlink" title="3.3.3 存储引擎层"></a>3.3.3 存储引擎层</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(1)从此磁盘获得想要的数据.</span><br><span class="line">(2)取出的数据是2进制或16进制,SQL层结构化成表</span><br></pre></td></tr></table></figure><h2 id="第4章-MySQL的逻辑结构"><a href="#第4章-MySQL的逻辑结构" class="headerlink" title="第4章 MySQL的逻辑结构"></a>第4章 MySQL的逻辑结构</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql03.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">库: 库名+库属性      </span><br><span class="line">表  : 表名+表属性+表内容+表结构</span><br></pre></td></tr></table></figure><h2 id="第5章-MySQL物理结构引入"><a href="#第5章-MySQL物理结构引入" class="headerlink" title="第5章 MySQL物理结构引入"></a>第5章 MySQL物理结构引入</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/mysql04.png"  alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">宏观:</span><br><span class="line">库------&gt;   目录</span><br><span class="line">表------&gt;</span><br><span class="line">MyISAM(存储引擎):</span><br><span class="line">user.frm  : 表结构</span><br><span class="line">user.MYD  : 表数据</span><br><span class="line">user.MYI  : 索引</span><br><span class="line"></span><br><span class="line">InnoDB(存储引擎):</span><br><span class="line">5.5.8默认引擎是InnoDB</span><br><span class="line">time_zone.frm : 表结构</span><br><span class="line">time_zone.ibd : 数据和索引</span><br><span class="line"></span><br><span class="line">微观:</span><br><span class="line">段 segment :  一个表(非分区表),就是一个段,相当于一个文件系统</span><br><span class="line">区 extent  :  连续的64个页,大小是1M</span><br><span class="line">页 page    :  默认是连续的4个block,16K</span><br></pre></td></tr></table></figure><h2 id="第6章-连接管理"><a href="#第6章-连接管理" class="headerlink" title="第6章 连接管理"></a>第6章 连接管理</h2><p>说明:连接之前,用户要提前创建好</p><h3 id="6-1-自带客户端命令"><a href="#6-1-自带客户端命令" class="headerlink" title="6.1 自带客户端命令"></a>6.1 自带客户端命令</h3><p>例子: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TCP/IP:</span><br><span class="line">(1) 要求 root用户,密码123,通过10.0.1.%网段登录并管理MySQL</span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br><span class="line">[root@db01 ~]<span class="comment"># mysql -uroot -p -h10.0.1.51 -P3306</span></span><br><span class="line"></span><br><span class="line">Socket:</span><br><span class="line">(2) 要求 使用admin用户,密码123,通过本地Socket登录和管理MySQL</span><br><span class="line">mysql&gt; grant all on *.* to admin@<span class="string">'localhost'</span> identified by <span class="string">'123'</span>;</span><br><span class="line">[root@db01 ~]<span class="comment"># mysql -uadmin -p123 -S /tmp/mysql.sock</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Windows上的客户端程序应用"><a href="#6-2-Windows上的客户端程序应用" class="headerlink" title="6.2 Windows上的客户端程序应用"></a>6.2 Windows上的客户端程序应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlyog </span><br><span class="line">navicat </span><br><span class="line">workbench</span><br></pre></td></tr></table></figure><h2 id="第7章-初始化配置"><a href="#第7章-初始化配置" class="headerlink" title="第7章 初始化配置"></a>第7章 初始化配置</h2><h3 id="7-1-支持的方法"><a href="#7-1-支持的方法" class="headerlink" title="7.1 支持的方法"></a>7.1 支持的方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(1) 初始化配置文件(日常)  *****</span><br><span class="line">(2) 预编译时(编译安装)</span><br><span class="line">(3) 命令行启动(临时维护场景) ***</span><br><span class="line">3&gt;1&gt;2</span><br></pre></td></tr></table></figure><h3 id="7-2-初始化配置文件应用"><a href="#7-2-初始化配置文件应用" class="headerlink" title="7.2 初始化配置文件应用"></a>7.2 初始化配置文件应用</h3><h4 id="7-2-1-作用"><a href="#7-2-1-作用" class="headerlink" title="7.2.1 作用"></a>7.2.1 作用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)影响数据库的启动</span><br><span class="line">(2)影响到数据库的客户端连接</span><br><span class="line">(3)影响到数据初始化的功能</span><br></pre></td></tr></table></figure><h4 id="7-2-2-初始化配置文件格式"><a href="#7-2-2-初始化配置文件格式" class="headerlink" title="7.2.2 初始化配置文件格式"></a>7.2.2 初始化配置文件格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[标签] : </span><br><span class="line">[server]: [mysqld],[mysqld_safe]</span><br><span class="line">[client]: [mysql],[mysqladmin],[mysqldump]</span><br><span class="line"></span><br><span class="line">配置信息:</span><br><span class="line">xxx=yyy</span><br></pre></td></tr></table></figure><h4 id="7-2-3-mysql读取配置文件读取顺序"><a href="#7-2-3-mysql读取配置文件读取顺序" class="headerlink" title="7.2.3 mysql读取配置文件读取顺序"></a>7.2.3 mysql读取配置文件读取顺序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqld --help --verbose |grep my.cnf</span></span><br><span class="line">/etc/my.cnf  -&gt; /etc/mysql/my.cnf -&gt; /usr/<span class="built_in">local</span>/mysql/etc/my.cnf -&gt; ~/.my.cnf </span><br><span class="line">socket=/tmp/mysql.sock socket=/tmp/mysql1.sock   socket=/tmp/mysql2.sock  socket=/tmp/mysql3.sock </span><br><span class="line">说明:如果有重复配置,以最后读取到的参数为准</span><br><span class="line">注:</span><br><span class="line">默认情况下，MySQL启动时，会依次读取以上配置文件，如果有重复选项，会以最后一个文件设置的为准。</span><br><span class="line">但是，如果启动时加入了--defaults-file=xxxx时，以上的所有文件都不会读取</span><br></pre></td></tr></table></figure><h4 id="7-2-4-基础配置文件模板说明"><a href="#7-2-4-基础配置文件模板说明" class="headerlink" title="7.2.4 基础配置文件模板说明"></a>7.2.4 基础配置文件模板说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># cat /etc/my.cnf </span></span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql                     <span class="comment"># MySQL的管理用户</span></span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql       <span class="comment"># MySQL软件安装路径</span></span><br><span class="line">datadir=/data/mysql/data       <span class="comment"># MySQL数据路径</span></span><br><span class="line">server_id=51                   <span class="comment"># 在主从复制必须的参数</span></span><br><span class="line">port=3306</span><br><span class="line">socket=/tmp/mysql.sock         <span class="comment"># socket文件生成位置</span></span><br><span class="line">[mysql]    </span><br><span class="line">socket=/tmp/mysql.sock</span><br></pre></td></tr></table></figure><h2 id="第8章-启动关闭"><a href="#第8章-启动关闭" class="headerlink" title="第8章 启动关闭"></a>第8章 启动关闭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">通过命令行控制启动</span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mysqld</span></span><br><span class="line">[root@db01 ~]<span class="comment"># /etc/init.d/mysqld start</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqld_safe --skip-grant-tables --skip-networking &amp;</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqld  --defaults-file=/tmp/a.txt &amp;</span></span><br><span class="line"></span><br><span class="line">关闭数据库方法:</span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl stop mysqld</span></span><br><span class="line">[root@db01 ~]<span class="comment"># /etc/init.d/mysqld stop</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin -uroot -p1 shutdown</span></span><br></pre></td></tr></table></figure><h2 id="第9章-多实例的应用"><a href="#第9章-多实例的应用" class="headerlink" title="第9章 多实例的应用"></a>第9章 多实例的应用</h2><h3 id="9-1-创建相关目录-并授权"><a href="#9-1-创建相关目录-并授权" class="headerlink" title="9.1 创建相关目录,并授权"></a>9.1 创建相关目录,并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mkdir -p /data/330&#123;7,8,9&#125;/data</span></span><br><span class="line">[root@db01 ~]<span class="comment"># chown -R mysql.mysql /data</span></span><br></pre></td></tr></table></figure><h3 id="9-2-分别初始化数据"><a href="#9-2-分别初始化数据" class="headerlink" title="9.2 分别初始化数据"></a>9.2 分别初始化数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/3307/data</span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/3308/data</span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/3309/data</span><br></pre></td></tr></table></figure><h3 id="9-3-准备配置文件"><a href="#9-3-准备配置文件" class="headerlink" title="9.3 准备配置文件"></a>9.3 准备配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /data/3307/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql                    </span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql       </span><br><span class="line">datadir=/data/3307/data       </span><br><span class="line">server_id=7                   </span><br><span class="line">socket=/data/3307/mysql.sock</span><br><span class="line">port=3307         </span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; /data/3308/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql                    </span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql       </span><br><span class="line">datadir=/data/3308/data       </span><br><span class="line">server_id=8                   </span><br><span class="line">socket=/data/3308/mysql.sock  </span><br><span class="line">port=3308       </span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; /data/3309/my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql                    </span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql       </span><br><span class="line">datadir=/data/3309/data       </span><br><span class="line">server_id=9                  </span><br><span class="line">socket=/data/3309/mysql.sock  </span><br><span class="line">port=3309       </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="9-4-systemd管理多实例"><a href="#9-4-systemd管理多实例" class="headerlink" title="9.4 systemd管理多实例"></a>9.4 systemd管理多实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/systemd/system/mysqld3307.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mysql/bin/mysqld --defaults-file=/data/3307/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/systemd/system/mysqld3308.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mysql/bin/mysqld --defaults-file=/data/3308/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/systemd/system/mysqld3309.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mysql/bin/mysqld --defaults-file=/data/3309/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="9-5-启动多实例"><a href="#9-5-启动多实例" class="headerlink" title="9.5 启动多实例"></a>9.5 启动多实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 system]<span class="comment"># systemctl start mysqld3307</span></span><br><span class="line">[root@db01 system]<span class="comment"># systemctl start mysqld3308</span></span><br><span class="line">[root@db01 system]<span class="comment"># systemctl start mysqld3309</span></span><br></pre></td></tr></table></figure><h3 id="9-6-连接测试"><a href="#9-6-连接测试" class="headerlink" title="9.6 连接测试"></a>9.6 连接测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 system]<span class="comment"># mysql -S /data/3307/mysql.sock </span></span><br><span class="line">[root@db01 system]<span class="comment"># mysql -S /data/3308/mysql.sock </span></span><br><span class="line">[root@db01 system]<span class="comment"># mysql -S /data/3309/mysql.sock</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
      <category term="mysql多实例" scheme="http://linuxwf.com/tags/mysql%E5%A4%9A%E5%AE%9E%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>1.数据库介绍和MySQL安装</title>
    <link href="http://linuxwf.com/2020/04/15/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D%E5%92%8CMySQL%E5%AE%89%E8%A3%85/"/>
    <id>http://linuxwf.com/2020/04/15/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BB%8B%E7%BB%8D%E5%92%8CMySQL%E5%AE%89%E8%A3%85/</id>
    <published>2020-04-15T01:25:00.000Z</published>
    <updated>2020-04-15T01:26:31.234Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="数据库介绍和MySQL安装"><a href="#数据库介绍和MySQL安装" class="headerlink" title="数据库介绍和MySQL安装"></a>数据库介绍和MySQL安装</h1><h2 id="第1章-数据库管理系统（DBMS）"><a href="#第1章-数据库管理系统（DBMS）" class="headerlink" title="第1章 数据库管理系统（DBMS）"></a>第1章 数据库管理系统（DBMS）</h2><h3 id="1-1-关系型数据库（RDBMS）"><a href="#1-1-关系型数据库（RDBMS）" class="headerlink" title="1.1 关系型数据库（RDBMS）"></a>1.1 关系型数据库（RDBMS）</h3><p>关系型数据库最典型的数据结构是表，由二维表及其之间的联系所组成的一个数据组织</p><p>代表：<code>ORACLE</code> 、<code>MySQL</code> 、<code>MSSQL</code> 、<code>PG</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/01.png"  alt=""></p><p><strong>优点：</strong></p><p>1、易于维护：都是使用表结构，格式一致；</p><p>2、使用方便：SQL语言通用，可用于复杂查询；</p><p>3、复杂操作：支持SQL，可用于一个表以及多个表之间非常复杂的查询。</p><p>缺点：</p><p>1、读写性能比较差，尤其是海量数据的高效率读写；</p><p>2、固定的表结构，灵活度稍欠；</p><p>3、高并发读写需求，传统关系型数据库来说，硬盘I/O是一个很大的瓶颈。</p><h3 id="1-2-非关系型数据库（NoSQL）"><a href="#1-2-非关系型数据库（NoSQL）" class="headerlink" title="1.2 非关系型数据库（NoSQL）"></a>1.2 非关系型数据库（NoSQL）</h3><p>非关系型数据库严格上不是一种数据库，应该是一种数据结构化存储方法的集合，可以是文档或者键值对等。五结构化 KV(Redis,memcache,Tair)  、  json(MongoDB,ES)</p><p>代表：<code>Redis</code> 、 <code>MongoDB</code>  、 <code>ES</code>  、<code>HBASE</code> 、<code>Hadoop</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/02.png"  alt=""></p><p><strong>优点：</strong></p><p>1、格式灵活：存储数据的格式可以是key,value形式、文档形式、图片形式等等，文档形式、图片形式等等，使用灵活，应用场景广泛，而关系型数据库则只支持基础类型。</p><p>2、速度快：nosql可以使用硬盘或者随机存储器作为载体，而关系型数据库只能使用硬盘；</p><p>3、高扩展性；</p><p>4、成本低：nosql数据库部署简单，基本都是开源软件。</p><p>缺点：</p><p>1、不提供sql支持，学习和使用成本较高；</p><p>2、无事务处理；</p><p>3、数据结构相对复杂，复杂查询方面稍欠。</p><h3 id="1-3-非关系型数据库的分类和比较："><a href="#1-3-非关系型数据库的分类和比较：" class="headerlink" title="1.3 非关系型数据库的分类和比较："></a>1.3 非关系型数据库的分类和比较：</h3><p>1、文档型</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/03.png"  alt=""></p><p>2、key-value型</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/04.png"  alt=""></p><p>3、列式数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/05.png"  alt=""></p><p>4、图形数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/mysql/06.png"  alt=""></p><h2 id="第2章-数据库架构演变"><a href="#第2章-数据库架构演变" class="headerlink" title="第2章 数据库架构演变"></a>第2章 数据库架构演变</h2><p><strong>数据库架构演变:</strong></p><p>第一代: RDBMS </p><p>第二代: RDBMS+NoSQL +分布式</p><p>第三代: NewSQL(分布式)</p><pre><code>AliSQL(网站) + OB(蚂蚁金服)+ openstack+ Docker + K8sRDS + PolarDB </code></pre><h2 id="第3章-MySQL简介及产品线"><a href="#第3章-MySQL简介及产品线" class="headerlink" title="第3章 MySQL简介及产品线"></a>第3章 MySQL简介及产品线</h2><h3 id="3-1-MySQL行业主流版本"><a href="#3-1-MySQL行业主流版本" class="headerlink" title="3.1 MySQL行业主流版本"></a>3.1 MySQL行业主流版本</h3><p>5.6  : 5.6.34,5.6.36,5.6.38,5.6.40</p><p>5.7  : 5.7.18,5.7.20,5.7.21,5.7.22,5.7.24 ,5.7.26<br>5.6.38,5.7.20 ====&gt; 2017-09-13</p><p>8.0  ：(现在开始研究新特性)<br>8.0.11 ,8.0.12 …..8.0.17</p><h3 id="3-2-企业版本选择-MySQL分支版本-笔试题"><a href="#3-2-企业版本选择-MySQL分支版本-笔试题" class="headerlink" title="3.2 企业版本选择(MySQL分支版本),笔试题"></a>3.2 企业版本选择(MySQL分支版本),笔试题</h3><p>Oracle:<br>      MySQL官方版</p><p>红帽  :<br>      MariaDB: 5.5 ,10.X</p><p>Percona:<br>      PerconaDB </p><h3 id="3-3-版本选择建议要上新环境"><a href="#3-3-版本选择建议要上新环境" class="headerlink" title="3.3 版本选择建议要上新环境"></a>3.3 版本选择建议要上新环境</h3><ol><li>一般选择官方主流版本:5.6,5.7 </li><li>GA（稳定发布版）</li><li>6-12月的产品版本</li></ol><p>面试题:</p><p>你们公司用什么版本数据库? 具体什么小版本号?</p><p>5.6.20 5.6.34 5.6.36  5.6.38  5.6.40<br>5.7.18  5.7.20  5.7.22</p><h2 id="第4章-MySQL二进制安装"><a href="#第4章-MySQL二进制安装" class="headerlink" title="第4章 MySQL二进制安装"></a>第4章 MySQL二进制安装</h2><h3 id="4-1-下载并上传解压MySQL软件"><a href="#4-1-下载并上传解压MySQL软件" class="headerlink" title="4.1 下载并上传解压MySQL软件"></a>4.1 下载并上传解压MySQL软件</h3><p>官网下载地址     <a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">tar xf mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz  <span class="comment">#解压软件</span></span><br><span class="line">mv mysql-5.7.26-linux-glibc2.12-x86_64 mysql</span><br></pre></td></tr></table></figure><h3 id="4-2-修改环境变量"><a href="#4-2-修改环境变量" class="headerlink" title="4.2 修改环境变量"></a>4.2 修改环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/mysql/bin:<span class="variable">$PATH</span>   <span class="comment">#添加到最后一行</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">mysql -V <span class="comment">#检验环境变量生效</span></span><br></pre></td></tr></table></figure><h3 id="4-3-创建用户"><a href="#4-3-创建用户" class="headerlink" title="4.3 创建用户"></a>4.3 创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum remove mariadb-libs -y</span><br><span class="line">useradd -s /sbin/nologin mysql</span><br></pre></td></tr></table></figure><h3 id="4-4-创建相关目录并授权"><a href="#4-4-创建相关目录并授权" class="headerlink" title="4.4 创建相关目录并授权"></a>4.4 创建相关目录并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/mysql/data   <span class="comment">#存放数据</span></span><br><span class="line">mkdir -p /data/binlog       <span class="comment">#存放二进制日志</span></span><br><span class="line">chown -R mysql.mysql /data /usr/<span class="built_in">local</span>/mysql</span><br></pre></td></tr></table></figure><h3 id="4-5-数据初始化（建库）"><a href="#4-5-数据初始化（建库）" class="headerlink" title="4.5 数据初始化（建库）"></a>4.5 数据初始化（建库）</h3><p>（1）5.7+版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libaio-devel</span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><p>说明：</p><p>(1) –initialize</p><pre><code>密码长度,至少12位.密码复杂度4种 密码过期时间180天 自动生成一个临时密码</code></pre><p>(2) –initialize-insecure</p><pre><code>没有限制</code></pre><p>（2）5.6+版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/mysql/scripts/mysql_install_db  --user=mysql --basedir=/usr/<span class="built_in">local</span>/mysql --datadir=/data/mysql/data</span><br></pre></td></tr></table></figure><h3 id="4-6-准备启动脚本和配置文件"><a href="#4-6-准备启动脚本和配置文件" class="headerlink" title="4.6 准备启动脚本和配置文件"></a>4.6 准备启动脚本和配置文件</h3><h4 id="0-配置文件"><a href="#0-配置文件" class="headerlink" title="(0) 配置文件"></a>(0) 配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;my.cnf &lt;&lt;EOF</span><br><span class="line">[mysqld]</span><br><span class="line">basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data</span><br><span class="line">socket&#x3D;&#x2F;tmp&#x2F;mysql.sock</span><br><span class="line">server_id&#x3D;51</span><br><span class="line">port&#x3D;3306</span><br><span class="line">secure-file-priv&#x3D;&#x2F;tmp</span><br><span class="line">autocommit&#x3D;0</span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;binlog&#x2F;mysql-bin</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line">gtid-mode&#x3D;on</span><br><span class="line">enforce-gtid-consistency&#x3D;true</span><br><span class="line">log-slave-updates&#x3D;1</span><br><span class="line">[mysql]</span><br><span class="line">prompt&#x3D;db01 [\\d]&gt;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="1-sys-v-centos6"><a href="#1-sys-v-centos6" class="headerlink" title="(1) sys-v (centos6)"></a>(1) sys-v (centos6)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/support-files</span><br><span class="line">cp mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@db01 ~]<span class="comment"># cat /etc/my.cnf   #配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/<span class="built_in">local</span>/mysql</span><br><span class="line">datadir=/data/mysql/data</span><br><span class="line">server_id=51</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[mysql]</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">[root@db01 ~]<span class="comment"># service mysqld start  #启动服务</span></span><br></pre></td></tr></table></figure><h4 id="2-使用systemd管理mysql"><a href="#2-使用systemd管理mysql" class="headerlink" title="(2) 使用systemd管理mysql"></a>(2) 使用systemd管理mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># cat /etc/systemd/system/mysqld.service </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User=mysql</span><br><span class="line">Group=mysql</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mysql/bin/mysqld --defaults-file=/etc/my.cnf</span><br><span class="line">LimitNOFILE = 5000</span><br><span class="line"></span><br><span class="line">注意：将原来模式启动mysqld先关闭，然后再用systemd管理。</span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start/stop/restart/status mysqld   #启动服务</span></span><br></pre></td></tr></table></figure><h4 id="如何确实MySQL数据库是否启动-至少两种"><a href="#如何确实MySQL数据库是否启动-至少两种" class="headerlink" title="如何确实MySQL数据库是否启动(至少两种)?"></a>如何确实MySQL数据库是否启动(至少两种)?</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql直接登录</span><br><span class="line">mysqladmin ping</span><br><span class="line">netstat -lntup|grep mysqld</span><br><span class="line">ps -ef|grep mysqld</span><br><span class="line">ss</span><br></pre></td></tr></table></figure><h3 id="4-7-设置管理员初始密码"><a href="#4-7-设置管理员初始密码" class="headerlink" title="4.7 设置管理员初始密码"></a>4.7 设置管理员初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqladmin -uroot -p password 123   #创建初始密码</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin -uroot -p123 password abcd #修改密码</span></span><br><span class="line"></span><br><span class="line">mysql&gt; alter user root@localhost identified by <span class="string">'456'</span>; <span class="comment">#登录到数据库改密码</span></span><br><span class="line">mysql&gt; desc mysql.user;   <span class="comment">#查看列信息</span></span><br><span class="line">mysql&gt; select user,host ,authentication_string from mysql.user; <span class="comment">#查询用户信息</span></span><br><span class="line">mysql&gt; select user,host ,password from mysql.user;  <span class="comment">#（5.6以前的）</span></span><br></pre></td></tr></table></figure><h3 id="4-8-本地管理员密码忘记处理"><a href="#4-8-本地管理员密码忘记处理" class="headerlink" title="4.8 本地管理员密码忘记处理"></a>4.8 本地管理员密码忘记处理</h3><p>(1) 关闭数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>(2) 启动到”安全模式”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysqld --skip-grant-tables --skip-networking &amp;</span></span><br></pre></td></tr></table></figure><p>(3) 刷新授权表,改密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; alter user root@<span class="string">'localhost'</span> identified by <span class="string">'123456'</span>;</span><br></pre></td></tr></table></figure><p>(4) 正常启动数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># pkill mysqld</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mysqld</span></span><br></pre></td></tr></table></figure><h2 id="第5章-MySQL基础管理"><a href="#第5章-MySQL基础管理" class="headerlink" title="第5章 MySQL基础管理"></a>第5章 MySQL基础管理</h2><h3 id="5-1-用户管理"><a href="#5-1-用户管理" class="headerlink" title="5.1 用户管理"></a>5.1 用户管理</h3><h4 id="5-1-1-用户的定义"><a href="#5-1-1-用户的定义" class="headerlink" title="5.1.1 用户的定义"></a>5.1.1 用户的定义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Linux: 用户名字表示用户,例如oldguo等</span><br><span class="line">MySQL: 用户名@<span class="string">'白名单'</span>,例如:root@<span class="string">'localhost'</span></span><br><span class="line">白名单: 在白名单出现的IP,网段,主机名域名,才能登录数据库</span><br><span class="line">例子:</span><br><span class="line">oldguo@<span class="string">'localhost'</span>  <span class="comment">#本机</span></span><br><span class="line">oldguo@<span class="string">'%'</span>         <span class="comment">#所有主机</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.51'</span>  <span class="comment">#独立IP</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.%'</span>   <span class="comment">#10.0.1.x/24 网段</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.0/255.255.254.0'</span> <span class="comment">#10.0.1.0/255.255.254.0网段</span></span><br><span class="line">oldguo@<span class="string">'10.0.1.5%'</span> <span class="comment">#10.0.1.50-59</span></span><br></pre></td></tr></table></figure><h4 id="5-1-2-用户的作用"><a href="#5-1-2-用户的作用" class="headerlink" title="5.1.2  用户的作用"></a>5.1.2  用户的作用</h4><p>Linux : </p><pre><code>登录系统管理系统对象(文件,目录.....)</code></pre><p>MySQL :</p><pre><code>登录数据库数据库对象(库,表,.....)</code></pre><h4 id="5-1-3-用户的管理命令"><a href="#5-1-3-用户的管理命令" class="headerlink" title="5.1.3 用户的管理命令"></a>5.1.3 用户的管理命令</h4><p>(1) 创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user oldguo@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; create user oldboy@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>(2) 查询用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host,authentication_string from mysql.user;</span><br></pre></td></tr></table></figure><p>(3) 修改用户 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user oldguo@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>(5) 删除用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user oldboy@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; drop user oldguo@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure><h3 id="5-2-权限管理"><a href="#5-2-权限管理" class="headerlink" title="5.2 权限管理"></a>5.2 权限管理</h3><h4 id="5-2-1-权限的定义"><a href="#5-2-1-权限的定义" class="headerlink" title="5.2.1 权限的定义"></a>5.2.1 权限的定义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Linux :  R   W   X</span><br><span class="line">MySQL :  </span><br><span class="line">ALL </span><br><span class="line">SELECT,INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE,</span><br><span class="line">REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES,</span><br><span class="line">LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT,</span><br><span class="line">CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, </span><br><span class="line">EVENT, TRIGGER, CREATE TABLESPACE</span><br><span class="line">with grant option</span><br><span class="line"></span><br><span class="line">说明:</span><br><span class="line">8.0新特性加入了role功能</span><br></pre></td></tr></table></figure><h4 id="5-2-2-权限的作用"><a href="#5-2-2-权限的作用" class="headerlink" title="5.2.2 权限的作用"></a>5.2.2 权限的作用</h4><p>权限的作用 : 控制用户,能够对数据库对象做哪些操作.</p><h4 id="5-2-3-授权"><a href="#5-2-3-授权" class="headerlink" title="5.2.3 授权"></a>5.2.3 授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#格式</span></span><br><span class="line">grant 权限 on 对象 to 用户 identified by <span class="string">'密码'</span>;</span><br><span class="line">grant all on *.* to wordpress@<span class="string">'%'</span> identified by <span class="string">'123'</span>;</span><br><span class="line"></span><br><span class="line">说明: </span><br><span class="line">以上命令只能8.0以前使用.</span><br><span class="line">如果用户不存在,会自动被创建出来,并且能够自动设置密码.</span><br><span class="line">8.0+版本,必须先见用户再授权.修改密码功能取消.</span><br><span class="line">8.0的用户,密码,权限的新特性,自己了解一下.</span><br><span class="line"></span><br><span class="line">*.*                /</span><br><span class="line">wordpress.*        /wordpress/*</span><br><span class="line">wordpress.t1       /wordpress/t1</span><br><span class="line"></span><br><span class="line">例子: </span><br><span class="line">(1) 创建和授权一个管理员用户admin,能够通过10.0.1.%网段管理数据库</span><br><span class="line">mysql&gt; grant all on *.* to admin@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span> with grant option;</span><br><span class="line">(2) 授权一个业务用户oldboy,能够通过10.0.1%网段访问oldguo库下的所有表</span><br><span class="line">mysql&gt; grant select,update,insert,delete on oldguo.* to oldboy@<span class="string">'10.0.1.%'</span> identified by <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-4-查询权限"><a href="#5-2-4-查询权限" class="headerlink" title="5.2.4 查询权限"></a>5.2.4 查询权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show grants <span class="keyword">for</span> oldboy@<span class="string">'10.0.1.%'</span>;</span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> admin@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure><h4 id="5-2-5-回收权限"><a href="#5-2-5-回收权限" class="headerlink" title="5.2.5 回收权限"></a>5.2.5 回收权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke grant option on *.* from admin@<span class="string">'10.0.1.%'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://linuxwf.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://linuxwf.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>17.zabbix监控</title>
    <link href="http://linuxwf.com/2020/04/13/17-zabbix%E7%9B%91%E6%8E%A7/"/>
    <id>http://linuxwf.com/2020/04/13/17-zabbix%E7%9B%91%E6%8E%A7/</id>
    <published>2020-04-13T09:22:00.000Z</published>
    <updated>2020-04-13T09:33:52.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="zabbix监控"><a href="#zabbix监控" class="headerlink" title="zabbix监控"></a>zabbix监控</h1><h2 id="第1章-监控知识基本概述"><a href="#第1章-监控知识基本概述" class="headerlink" title="第1章 监控知识基本概述"></a>第1章 监控知识基本概述</h2><h3 id="1-1-为什么要使用监控"><a href="#1-1-为什么要使用监控" class="headerlink" title="1.1 为什么要使用监控"></a>1.1 为什么要使用监控</h3><ol><li>对系统不间断实时监控</li><li>实时反馈系统当前状态</li><li>保证服务可靠性安全性</li><li>保证业务持续稳定运行</li></ol><h3 id="1-2-如何进行监控，比如我们需要监控磁盘的使用率"><a href="#1-2-如何进行监控，比如我们需要监控磁盘的使用率" class="headerlink" title="1.2 如何进行监控，比如我们需要监控磁盘的使用率"></a>1.2 如何进行监控，比如我们需要监控磁盘的使用率</h3><ol><li><p>如何查看磁盘使用率 df -h</p></li><li><p>监控磁盘的那些指标 block、 inode</p></li><li><p>如何获取具体的信息 df -h</p></li><li><p>获取的数值到达多少报警 80%</p></li></ol><h3 id="1-3-流行的监控工具"><a href="#1-3-流行的监控工具" class="headerlink" title="1.3 流行的监控工具"></a>1.3 流行的监控工具</h3><ol><li><p>Zabbix</p></li><li><p>Lepus(天兔)数据库监控系统</p></li><li><p>Open-Falcon 小米</p></li><li><p>Prometheus(普罗米修斯， Docker、 K8s)</p></li></ol><h3 id="1-4-如果去到一家新公司，如何入手监控"><a href="#1-4-如果去到一家新公司，如何入手监控" class="headerlink" title="1.4 如果去到一家新公司，如何入手监控"></a>1.4 如果去到一家新公司，如何入手监控</h3><ol><li><p>硬件监控 路由器、交换机、防火墙</p></li><li><p>系统监控 CPU、内存、磁盘、网络、进程、 TCP</p></li><li><p>服务监控 nginx、 php、 tomcat、 redis、 memcache、 mysql</p></li><li><p>Web 监控 请求时间、响应时间、加载时间、</p></li><li><p>日志监控 ELk（收集、存储、分析、展示） 日志易</p></li><li><p>安全监控 Firewalld、 WAF(Nginx+lua)、安全宝、牛盾云、安全狗</p></li><li><p>网络监控 smokeping 多机房</p></li><li><p>业务监控 活动引入多少流量、产生多少注册量、带来多大价值</p></li></ol><h2 id="第2章-单机时代如何监控"><a href="#第2章-单机时代如何监控" class="headerlink" title="第2章 单机时代如何监控"></a>第2章 单机时代如何监控</h2><p><code>CPU</code> 监控命令: w、 top、 htop、 glances</p><p>%Cpu(s): 0.3 us, 0.3 sy, 0.0 ni, 99.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st us 用户态: 跟用户的操作有关 35% sy 系统态: 跟内核的处理有关 60% id CPU 空闲:</p><p>内存监控命令: <code>free</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]*<span class="comment"># free -h*              total        used        free      shared  buff/cache   available Mem:           976M        396M        125M        7.4M        454M        392M Swap:            0B          0B          0B</span></span><br></pre></td></tr></table></figure><p>磁盘监控命令: <code>df</code>、<code>iotop</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn</span><br><span class="line">sda 0.80 25.32 33.36 221034 291193</span><br><span class="line">设备名 每秒传输次数 每秒读大小 每秒写大小 读的总大小 写的总大小</span><br></pre></td></tr></table></figure><p>网络监控命令: <code>ifconfig</code>、 <code>route</code>、 <code>glances</code>、 <code>iftop</code>、 <code>nethogs</code>、 <code>netstat</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单位换算</span><br><span class="line">Mbps 100Mbps/8</span><br><span class="line">MB 12MB</span><br><span class="line">iftop 中间的&lt;= =&gt;这两个左右箭头，表示的是流量的方向。</span><br><span class="line">TX：发送流量、 RX：接收流量、 TOTAL：总流量</span><br><span class="line"><span class="comment">#查看 TCP11 中状态</span></span><br><span class="line">netstat -an|grep ESTABLISHED</span><br><span class="line">netstat -rn <span class="comment"># 查看路由信息</span></span><br><span class="line">netstat -lntup</span><br></pre></td></tr></table></figure><p>2.随着时间的推移，用户不断的增多，服务随时可能扛不住会被 oom(out of memory)，当系统内存不足的时候，会 触发 oom</p><ol><li><p>当系统内存不足的时候就会大量使用 swap</p></li><li><p>当系统大量使用 swap 的时候，系统会特别卡</p></li></ol><p>注意: 有时可能内存还有剩余 300Mb-500Mb，但会发现 swap 依然被使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ZabbixServer ~]<span class="comment"># dd if=/dev/zero of=/dev/null bs=800M</span></span><br><span class="line">[root@ZabbixServer ~]<span class="comment"># tail -f /var/log/messages</span></span><br><span class="line">Out of memory: Kill process 2227 (dd) score 778 or sacrifice child</span><br><span class="line">Killed process 2227 (dd) total-vm:906724kB, anon-rss:798820kB, file-rss:0kB</span><br></pre></td></tr></table></figure><p>3.那单机时代，如何使用 shell 脚本来实现服务器的监控</p><p>需求: 每隔 1 分钟监控一次内存,当你的可用内存低于 100m,发邮件报警,要求显示剩余内存</p><ol><li><p>怎么获取内存可用的值 free -m|awk ‘/^Mem/{print $NF}’</p></li><li><p>获取到内存可用的值如何和设定的阈值进行比较</p></li><li><p>比较如果大于 100m 则不处理，如果小于 100 则报警</p></li><li><p>如何每隔 1 分钟执行一次</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ZabbixServer ~]<span class="comment"># cat free.sh</span></span><br><span class="line"><span class="meta">#!/usr/bin/bash</span></span><br><span class="line">HostName=$(hostname)_$(hostname -i)</span><br><span class="line">Date=$(date +%F)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">Free=$(free -m|awk <span class="string">'/^Mem/&#123;print $NF&#125;'</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Free</span> -le 100 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$Date</span>: <span class="variable">$HostName</span> Mem Is &lt; <span class="variable">$&#123;Free&#125;</span>MB"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sleep 5</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="第3章-zabbix-监控快速安装"><a href="#第3章-zabbix-监控快速安装" class="headerlink" title="第3章 zabbix 监控快速安装"></a>第3章 zabbix 监控快速安装</h2><h3 id="1-配置zabbix仓库"><a href="#1-配置zabbix仓库" class="headerlink" title="1.配置zabbix仓库"></a>1.配置zabbix仓库</h3><p>官方RHEL 7：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>阿里源：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="2-安装-Zabbix-程序包，以及MySQL、-Zabbix-agent"><a href="#2-安装-Zabbix-程序包，以及MySQL、-Zabbix-agent" class="headerlink" title="2.安装 Zabbix 程序包，以及MySQL、 Zabbix-agent"></a>2.安装 <code>Zabbix</code> 程序包，以及<code>MySQL</code>、 <code>Zabbix-agent</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb-server</span></span><br><span class="line">[root@m01 ~]<span class="comment"># systemctl start mariadb.service &amp;&amp; systemctl enable mariadb.service</span></span><br></pre></td></tr></table></figure><h3 id="3-创建-Zabbix-数据库以及用户"><a href="#3-创建-Zabbix-数据库以及用户" class="headerlink" title="3.创建 Zabbix 数据库以及用户"></a>3.创建 Zabbix 数据库以及用户</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># mysqladmin password 123456</span></span><br><span class="line">[root@m01 ~]<span class="comment"># mysql -uroot -p123456</span></span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">MariaDB [(none)]&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="4-导入-Zabbix-数据至数据库中"><a href="#4-导入-Zabbix-数据至数据库中" class="headerlink" title="4.导入 Zabbix 数据至数据库中"></a>4.导入 Zabbix 数据至数据库中</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cat /usr/share/doc/zabbix-server-mysql-4.0.11/create.sql.gz | mysql -uzabbix -pzabbix zabbix</span></span><br></pre></td></tr></table></figure><h3 id="5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置"><a href="#5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置" class="headerlink" title="5 编辑/etc/zabbix/zabbix_server.conf 文件，修改数据库配置"></a>5 编辑/etc/zabbix/zabbix_server.conf 文件，修改数据库配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "^DB" /etc/zabbix/zabbix_server.conf </span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h3 id="6-启动-Zabbix-服务进程，并加入开机自启"><a href="#6-启动-Zabbix-服务进程，并加入开机自启" class="headerlink" title="6.启动 Zabbix 服务进程，并加入开机自启"></a>6.启动 Zabbix 服务进程，并加入开机自启</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start zabbix-server.service</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server.service</span><br></pre></td></tr></table></figure><h3 id="7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区"><a href="#7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区" class="headerlink" title="7.配置 Apache 的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区"></a>7.配置 Apache 的配置文件/etc/httpd/conf.d/zabbix.conf，修改时区</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "Shanghai" /etc/httpd/conf.d/zabbix.conf </span></span><br><span class="line">        php_value date.timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="8-重启-Apache-Web-服务器"><a href="#8-重启-Apache-Web-服务器" class="headerlink" title="8.重启 Apache Web 服务器"></a>8.重启 Apache Web 服务器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd</span><br></pre></td></tr></table></figure><h2 id="第4章-WEB界面安装步骤"><a href="#第4章-WEB界面安装步骤" class="headerlink" title="第4章 WEB界面安装步骤"></a>第4章 WEB界面安装步骤</h2><p>1.浏览器打开地址：<a href="http://10.0.1.61/zabbix/setup.php" target="_blank" rel="noopener">http://10.0.1.61/zabbix/setup.php</a></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-de0031ee7eba1dd9.png"  alt=""></p><p>2.检查依赖项是否存在异常</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-10ac1dccf1f446c9.png"  alt=""></p><p>3.配置zabbix连接数据库</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/3-zabbix.png"  alt=""></p><p>4.配置 ZabbixServer 服务器的信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/4-zabbix.png"  alt=""></p><p>5.最终确认检查</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/5-zabbix.png"  alt=""></p><p>6.安装成功</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/6-zabbix.png"  alt=""></p><p>7.登陆zabbix</p><p>默认登陆 ZabbixWeb 的用户名 Admin，密码 zabbix</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/7-zabbix.png"  alt=""></p><p>8.调整字符集为中文</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/8-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/9-zabbix.png"  alt=""></p><p>9.修复中文乱码</p><p>打开图形之后会发现语言为乱码，原因是缺少字体</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/10-zabbix.png"  alt=""></p><p>解决方法:安装字体并替换现有字体</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install wqy-microhei-fonts -y</span><br><span class="line">cp /usr/share/fonts/wqy-microhei/wqy-microhei.ttc /usr/share/zabbix/assets/fonts/graphfont.ttf</span><br></pre></td></tr></table></figure><p>再次刷新发现已经变成中文了</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/11-zabbix.png"  alt=""></p><p><strong>第5章 Zabbix 监控基础架构</strong></p><p>zabbix-agent(数据采集)—&gt;zabbix-server(数据分析|报警)—&gt; 数据库(数据存储)&lt;—zabbix web(数据展示)</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/12-zabbix.png"  alt=""></p><h2 id="第6章-zabbix-快速监控主机"><a href="#第6章-zabbix-快速监控主机" class="headerlink" title="第6章 zabbix 快速监控主机"></a>第6章 zabbix 快速监控主机</h2><h3 id="6-1-安装zabbix-agent"><a href="#6-1-安装zabbix-agent" class="headerlink" title="6.1 安装zabbix-agent"></a>6.1 安装zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://mirror.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-agent-4.0.11-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="6-2-配置zabbix-agent"><a href="#6-2-配置zabbix-agent" class="headerlink" title="6.2 配置zabbix-agent"></a>6.2 配置zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.conf    </span></span><br><span class="line">PidFile=/var/run/zabbix/zabbix_agentd.pid</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_agentd.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">Server=10.01.61</span><br><span class="line">ServerActive=127.0.0.1</span><br><span class="line">Hostname=Zabbix server</span><br><span class="line">Include=/etc/zabbix/zabbix_agentd.d/*.conf</span><br></pre></td></tr></table></figure><h3 id="6-3-启动zabbix-agent并检查"><a href="#6-3-启动zabbix-agent并检查" class="headerlink" title="6.3 启动zabbix-agent并检查"></a>6.3 启动zabbix-agent并检查</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start zabbix-agent.service </span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable zabbix-agent.service</span></span><br><span class="line">[root@web01 ~]<span class="comment"># netstat -lntup|grep 10050</span></span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      10351/zabbix_agentd </span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      10351/zabbix_agentd</span><br></pre></td></tr></table></figure><h3 id="6-4-zabbix-web界面，添加主机"><a href="#6-4-zabbix-web界面，添加主机" class="headerlink" title="6.4 zabbix-web界面，添加主机"></a>6.4 zabbix-web界面，添加主机</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/13-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/15-zabbix.png"  alt=""></p><h2 id="第7章-自定义监控主机小试身手"><a href="#第7章-自定义监控主机小试身手" class="headerlink" title="第7章 自定义监控主机小试身手"></a>第7章 自定义监控主机小试身手</h2><h3 id="1-监控需求"><a href="#1-监控需求" class="headerlink" title="1.监控需求"></a>1.监控需求</h3><p>监控TCP11种状态集</p><h3 id="2-命令行实现"><a href="#2-命令行实现" class="headerlink" title="2.命令行实现"></a>2.命令行实现</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 ~]<span class="comment"># netstat -ant|grep -c TIME_WAIT</span></span><br><span class="line">31</span><br><span class="line">[root@web01-7 ~]<span class="comment"># netstat -ant|grep -c LISTEN</span></span><br><span class="line">19</span><br></pre></td></tr></table></figure><h3 id="3-编写zabbix监控文件-传参形式"><a href="#3-编写zabbix监控文件-传参形式" class="headerlink" title="3.编写zabbix监控文件(传参形式)"></a>3.编写zabbix监控文件(传参形式)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 ~]<span class="comment"># cd /etc/zabbix/zabbix_agentd.d/</span></span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat TCP.conf </span></span><br><span class="line">UserParameter=TIME_WAIT, netstat -ant|grep -c TIME_WAIT</span><br><span class="line">UserParameter=LISTEN, netstat -ant|grep -c LISTEN</span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><h3 id="4-server端进行测试"><a href="#4-server端进行测试" class="headerlink" title="4.server端进行测试"></a>4.server端进行测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-get-4.0.1-1.el7.x86_64.rpm</span></span><br><span class="line">[root@m01-61 ~]<span class="comment"># yum -y install zabbix-get.x86_64</span></span><br><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k TIME_WAIT</span></span><br><span class="line">34</span><br><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k LISTEN</span></span><br><span class="line">19</span><br></pre></td></tr></table></figure><h3 id="5-web端添加"><a href="#5-web端添加" class="headerlink" title="5.web端添加"></a>5.web端添加</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/16-zabbix.png"  alt=""></p><h3 id="6-克隆监控项"><a href="#6-克隆监控项" class="headerlink" title="6.克隆监控项"></a>6.克隆监控项</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/17-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/18-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/19-zabbix.png"  alt=""></p><h3 id="7-创建图形"><a href="#7-创建图形" class="headerlink" title="7.创建图形"></a>7.创建图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/21-zabbix.png"  alt=""></p><h3 id="8-查看图形"><a href="#8-查看图形" class="headerlink" title="8.查看图形"></a>8.查看图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/22-zabbix.png"  alt=""></p><h3 id="9-设置触发器"><a href="#9-设置触发器" class="headerlink" title="9.设置触发器"></a>9.设置触发器</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/23-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/24-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/25-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/26-zabbix.png"  alt=""></p><h2 id="第8章-邮件报警"><a href="#第8章-邮件报警" class="headerlink" title="第8章 邮件报警"></a>第8章 邮件报警</h2><h3 id="1-定义发件人"><a href="#1-定义发件人" class="headerlink" title="1.定义发件人"></a>1.定义发件人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/27-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/28-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/29-zabbix.png"  alt=""></p><h3 id="2-定义收件人"><a href="#2-定义收件人" class="headerlink" title="2.定义收件人"></a>2.定义收件人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/30-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="C:%5CUsers%5Cxinian%5CAppData%5CLocal%5CYNote%5Cdata%5Cwf3512638@126.com%5C2e6556d944e54e51812f355c997893cd%5Celftksuqmcc.jpeg"  alt="img"></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/31-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/32-zabbix.png"  alt=""></p><h3 id="3-自定义报警内容过"><a href="#3-自定义报警内容过" class="headerlink" title="3.自定义报警内容过"></a>3.自定义报警内容过</h3><p>定制报警内容：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.zabbix.com%2Fdocumentation%2F4.0%2Fzh%2Fmanual%2Fappendix%2Fmacros%2Fsupported_by_location" target="_blank" rel="noopener">https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location</a></p><p>参考博客：<a href="https://www.cnblogs.com/bixiaoyu/p/7302541.html" target="_blank" rel="noopener">https://www.cnblogs.com/bixiaoyu/p/7302541.html</a></p><p><code>发送警告</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">报警邮件标题可以使用默认信息，亦可使用如下中文报警内容</span><br><span class="line">名称：Action-Email</span><br><span class="line">默认标题：故障&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;发生: &#123;TRIGGER.NAME&#125;故障!</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><p><code>恢复警告</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">恢复标题：恢复&#123;TRIGGER.STATUS&#125;, 服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">恢复信息：</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><h2 id="第9章-微信报警"><a href="#第9章-微信报警" class="headerlink" title="第9章 微信报警"></a>第9章 微信报警</h2><h3 id="1-查看配置文件里的脚本目录路径"><a href="#1-查看配置文件里的脚本目录路径" class="headerlink" title="1.查看配置文件里的脚本目录路径"></a>1.查看配置文件里的脚本目录路径</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># grep "^AlertScriptsPath" /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br></pre></td></tr></table></figure><h3 id="2-将weixin-py放在zabbix特定目录"><a href="#2-将weixin-py放在zabbix特定目录" class="headerlink" title="2.将weixin.py放在zabbix特定目录"></a>2.将weixin.py放在zabbix特定目录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 /usr/lib/zabbix/alertscripts]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rwxr-xr-x 1 root root 1227 Aug  8 07:40 weixin.py</span><br></pre></td></tr></table></figure><h3 id="3-配置发信人"><a href="#3-配置发信人" class="headerlink" title="3.配置发信人"></a>3.配置发信人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/33-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/34-zabbix.png"  alt=""></p><h3 id="4-配置收信人"><a href="#4-配置收信人" class="headerlink" title="4.配置收信人"></a>4.配置收信人</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/35-zabbix.png"  alt=""></p><h3 id="5-登陆企业微信公众号添加账户"><a href="#5-登陆企业微信公众号添加账户" class="headerlink" title="5.登陆企业微信公众号添加账户"></a>5.登陆企业微信公众号添加账户</h3><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwork.weixin.qq.com%2Fwework_admin%2Floginpage_wx" target="_blank" rel="noopener">https://work.weixin.qq.com/wework_admin/loginpage_wx</a></p><p>1.登陆后在企业号上新建应用</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/36-zabbix.png"  alt=""></p><p>2.上传logo，填写应用名称 ，应用介绍等</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/37-zabbix.png"  alt=""></p><p>3.查看启动应用</p><p>同时会生成应用的AgentId以及Secret，这个在后面步骤会有用</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/38-zabbix.png"  alt=""></p><p>4.接口调用测试</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwork.weixin.qq.com%2Fapi%2Fdevtools%2Fdevtool.php" target="_blank" rel="noopener">http://work.weixin.qq.com/api/devtools/devtool.php</a></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/39-zabbix.png"  alt=""></p><p>这里的corpid为公司ID</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/40-zabbix.png"  alt=""></p><p>Corpsecret就是刚才创建应用生成的Secrt，确认没问题填写进去然后下一步</p><p>如果没问题会显示200状态码</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/41-zabbix.png"  alt=""></p><h3 id="6-添加成员"><a href="#6-添加成员" class="headerlink" title="6.添加成员"></a>6.添加成员</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/42-zabbix.png"  alt=""></p><h3 id="7-关注公众号"><a href="#7-关注公众号" class="headerlink" title="7.关注公众号"></a>7.关注公众号</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/43-zabbix.png"  alt=""></p><h3 id="8-查看自己的账号"><a href="#8-查看自己的账号" class="headerlink" title="8.查看自己的账号"></a>8.查看自己的账号</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/44-zabbix.png"  alt=""></p><h3 id="9-修改脚本里的信息"><a href="#9-修改脚本里的信息" class="headerlink" title="9.修改脚本里的信息"></a>9.修改脚本里的信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 /usr/lib/zabbix/alertscripts]<span class="comment"># cat weixin.py </span></span><br><span class="line">..............</span><br><span class="line">corpid=<span class="string">'微信企业号corpid'</span></span><br><span class="line">appsecret=<span class="string">'应用的Secret'</span></span><br><span class="line">agentid=应用的id</span><br><span class="line">..............</span><br></pre></td></tr></table></figure><h3 id="10-发信测试"><a href="#10-发信测试" class="headerlink" title="10.发信测试"></a>10.发信测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 /usr/lib/zabbix/alertscripts]<span class="comment"># python  weixin.py  你的账号  '发信测试'  ‘微信测试消息’</span></span><br></pre></td></tr></table></figure><h3 id="11-微信号上查看"><a href="#11-微信号上查看" class="headerlink" title="11.微信号上查看"></a>11.微信号上查看</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/45-zabbix.png"  alt=""></p><h2 id="第10章-自定义模版"><a href="#第10章-自定义模版" class="headerlink" title="第10章 自定义模版"></a>第10章 自定义模版</h2><h3 id="1-监控TCP11种状态"><a href="#1-监控TCP11种状态" class="headerlink" title="1.监控TCP11种状态"></a>1.监控TCP11种状态</h3><p>编写zabbix配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat tcp_status.conf</span></span><br><span class="line">UserParameter=ESTABLISHED,netstat -ant|grep  -c <span class="string">'ESTABLISHED'</span></span><br><span class="line">UserParameter=SYN_SENT,netstat -ant|grep  -c <span class="string">'SYN_SENT'</span></span><br><span class="line">UserParameter=SYN_RECV,netstat -ant|grep  -c <span class="string">'SYN_RECV'</span></span><br><span class="line">UserParameter=FIN_WAIT1,netstat -ant|grep  -c <span class="string">'FIN_WAIT1'</span></span><br><span class="line">UserParameter=FIN_WAIT2,netstat -ant|grep  -c <span class="string">'FIN_WAIT2'</span></span><br><span class="line">UserParameter=TIME_WAIT,netstat -ant|grep  -c <span class="string">'TIME_WAIT'</span></span><br><span class="line">UserParameter=CLOSE,netstat -ant|grep  -c <span class="string">'CLOSE'</span></span><br><span class="line">UserParameter=CLOSE_WAIT,netstat -ant|grep  -c <span class="string">'CLOSE_WAIT'</span></span><br><span class="line">UserParameter=LAST_ACK,netstat -ant|grep  -c <span class="string">'LAST_ACK'</span></span><br><span class="line">UserParameter=LISTEN,netstat -ant|grep  -c <span class="string">'LISTEN'</span></span><br><span class="line">UserParameter=CLOSING,netstat -ant|grep  -c <span class="string">'CLOSING'</span></span><br></pre></td></tr></table></figure><p>或者另一种写法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat tcp_status.conf </span></span><br><span class="line">UserParameter=tcp_status[*],netstat -ant|grep -c <span class="variable">$1</span></span><br></pre></td></tr></table></figure><h3 id="2-重启zabbix-agent"><a href="#2-重启zabbix-agent" class="headerlink" title="2.重启zabbix-agent"></a>2.重启zabbix-agent</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart zabbix-agent.service</span><br></pre></td></tr></table></figure><h3 id="3-测试监控项"><a href="#3-测试监控项" class="headerlink" title="3.测试监控项"></a>3.测试监控项</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01-61 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k tcp_status[TIME_WAIT]</span></span><br><span class="line">147</span><br></pre></td></tr></table></figure><h3 id="4-导入模版文件"><a href="#4-导入模版文件" class="headerlink" title="4.导入模版文件"></a>4.导入模版文件</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/46-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/47-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/48-zabbix.png"  alt=""></p><h3 id="5-主机关联模版文件"><a href="#5-主机关联模版文件" class="headerlink" title="5.主机关联模版文件"></a>5.主机关联模版文件</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/49-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/50-zabbix.png"  alt=""></p><h3 id="6-查看最新数据"><a href="#6-查看最新数据" class="headerlink" title="6.查看最新数据"></a>6.查看最新数据</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/51-zabbix.png"  alt=""></p><h3 id="7-查看图形"><a href="#7-查看图形" class="headerlink" title="7.查看图形"></a>7.查看图形</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/52-zabbix.png"  alt=""></p><h2 id="第11章-自定义模版监控nginx状态"><a href="#第11章-自定义模版监控nginx状态" class="headerlink" title="第11章 自定义模版监控nginx状态"></a>第11章 自定义模版监控nginx状态</h2><h3 id="1-开启监控页面并访问测试"><a href="#1-开启监控页面并访问测试" class="headerlink" title="1.开启监控页面并访问测试"></a>1.开启监控页面并访问测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/nginx/conf.d]<span class="comment"># cat status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01-7 /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 95 95 111 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><h3 id="2-准备nginx监控状态脚本"><a href="#2-准备nginx监控状态脚本" class="headerlink" title="2.准备nginx监控状态脚本"></a>2.准备nginx监控状态脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat nginx_monitor.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">NGINX_COMMAND=<span class="variable">$1</span></span><br><span class="line">CACHEFILE=<span class="string">"/tmp/nginx_status.txt"</span></span><br><span class="line">CMD=<span class="string">"/usr/bin/curl curl status.oldboy.com"</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CACHEFILE</span>  ];<span class="keyword">then</span></span><br><span class="line">   <span class="variable">$CMD</span> &gt;<span class="variable">$CACHEFILE</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Check and run the script</span></span><br><span class="line">TIMEFLM=`<span class="built_in">stat</span> -c %Y <span class="variable">$CACHEFILE</span>`</span><br><span class="line">TIMENOW=`date +%s`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ `expr <span class="variable">$TIMENOW</span> - <span class="variable">$TIMEFLM</span>` -gt 60 ]; <span class="keyword">then</span></span><br><span class="line">    rm -f <span class="variable">$CACHEFILE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$CACHEFILE</span>  ];<span class="keyword">then</span></span><br><span class="line">   <span class="variable">$CMD</span> &gt;<span class="variable">$CACHEFILE</span> 2&gt;/dev/null</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_active</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Active'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_reading</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Reading'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Writing'</span> <span class="variable">$CACHEFILE</span> | awk <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line"> grep <span class="string">'Waiting'</span> <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $6&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $1&#125;'</span> </span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $2&#125;'</span> </span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line"> awk NR==3 <span class="variable">$CACHEFILE</span>| awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">         <span class="built_in">exit</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$NGINX_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">    active)</span><br><span class="line">        nginx_active;</span><br><span class="line">        ;;</span><br><span class="line">    reading)</span><br><span class="line">        nginx_reading;</span><br><span class="line">        ;;</span><br><span class="line">    writing)</span><br><span class="line">        nginx_writing;</span><br><span class="line">        ;;</span><br><span class="line">    waiting)</span><br><span class="line">        nginx_waiting;</span><br><span class="line">        ;;</span><br><span class="line">    accepts)</span><br><span class="line">        nginx_accepts;</span><br><span class="line">        ;;</span><br><span class="line">    handled)</span><br><span class="line">        nginx_handled;</span><br><span class="line">        ;;</span><br><span class="line">    requests)</span><br><span class="line">        nginx_requests;</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Invalid credentials'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 2;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="3-编写zabbix监控配置文件"><a href="#3-编写zabbix监控配置文件" class="headerlink" title="3.编写zabbix监控配置文件"></a>3.编写zabbix监控配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat nginx_status.conf </span></span><br><span class="line">UserParameter=nginx_status[*],/bin/bash /etc/zabbix/zabbix_agentd.d/nginx_monitor.sh <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><h3 id="4-使用zabbix-get取值"><a href="#4-使用zabbix-get取值" class="headerlink" title="4.使用zabbix_get取值"></a>4.使用zabbix_get取值</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k nginx_status[accepts]</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="5-导入模版"><a href="#5-导入模版" class="headerlink" title="5.导入模版"></a>5.导入模版</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/53-zabbix.png"  alt=""></p><h3 id="6-链接模版"><a href="#6-链接模版" class="headerlink" title="6.链接模版"></a>6.链接模版</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/54-zabbix.png"  alt=""></p><h3 id="7-查看数据"><a href="#7-查看数据" class="headerlink" title="7.查看数据"></a>7.查看数据</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/55-zabbix.png"  alt=""></p><h2 id="第12章-自定义模版监控php状态"><a href="#第12章-自定义模版监控php状态" class="headerlink" title="第12章 自定义模版监控php状态"></a>第12章 自定义模版监控php状态</h2><h3 id="1-开启监控页面"><a href="#1-开启监控页面" class="headerlink" title="1.开启监控页面"></a>1.开启监控页面</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -1 /etc/php-fpm.d/www.conf    </span></span><br><span class="line">pm.status_path = /php_status</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/conf.d/status.conf    </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name localhost;</span><br><span class="line">   location /nginx_status &#123;</span><br><span class="line">       stub_status on;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location /php_status &#123;</span><br><span class="line">       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">       fastcgi_index index.php;</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME html<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">       include fastcgi_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart nginx.service php-fpm.service</span></span><br></pre></td></tr></table></figure><h3 id="2-访问测试"><a href="#2-访问测试" class="headerlink" title="2.访问测试"></a>2.访问测试</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl 127.0.0.1/php_status</span></span><br><span class="line">pool:                 www</span><br><span class="line">process manager:      dynamic</span><br><span class="line">start time:           08/Aug/2019:22:31:27 +0800</span><br><span class="line">start since:          37</span><br><span class="line">accepted conn:        1</span><br><span class="line">listen queue:         0</span><br><span class="line">max listen queue:     0</span><br><span class="line">listen queue len:     128</span><br><span class="line">idle processes:       4</span><br><span class="line">active processes:     1</span><br><span class="line">total processes:      5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests:        0</span><br></pre></td></tr></table></figure><h3 id="3-准备访问脚本"><a href="#3-准备访问脚本" class="headerlink" title="3.准备访问脚本"></a>3.准备访问脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat fpm.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># Zabbix monitoring script</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># php-fpm:</span></span><br><span class="line"><span class="comment">#  - anything available via FPM status page</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># Contact:</span></span><br><span class="line"><span class="comment">#  vincent.viallet@gmail.com</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment"># ChangeLog:</span></span><br><span class="line"><span class="comment">#  20100922VVinitial creation</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Zabbix requested parameter</span></span><br><span class="line">ZBX_REQ_DATA=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">ZBX_REQ_DATA_URL=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx defaults</span></span><br><span class="line">NGINX_STATUS_DEFAULT_URL=<span class="string">"http://localhost/fpm/status"</span></span><br><span class="line">WGET_BIN=<span class="string">"/usr/bin/wget"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Error handling:</span></span><br><span class="line"><span class="comment">#  - need to be displayable in Zabbix (avoid NOT_SUPPORTED)</span></span><br><span class="line"><span class="comment">#  - items need to be of type "float" (allow negative + float)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">ERROR_NO_ACCESS_FILE=<span class="string">"-0.91"</span></span><br><span class="line">ERROR_NO_ACCESS=<span class="string">"-0.92"</span></span><br><span class="line">ERROR_WRONG_PARAM=<span class="string">"-0.93"</span></span><br><span class="line">ERROR_DATA=<span class="string">"-0.94"</span> <span class="comment"># either can not connect /bad host / bad port</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle host and port if non-default</span></span><br><span class="line"><span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ZBX_REQ_DATA_URL</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  URL=<span class="string">"<span class="variable">$ZBX_REQ_DATA_URL</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  URL=<span class="string">"<span class="variable">$NGINX_STATUS_DEFAULT_URL</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># save the nginx stats in a variable for future parsing</span></span><br><span class="line">NGINX_STATS=$(<span class="variable">$WGET_BIN</span> -q <span class="variable">$URL</span> -O - 2&gt;/dev/null)</span><br><span class="line"></span><br><span class="line"><span class="comment"># error during retrieve</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 -o -z <span class="string">"<span class="variable">$NGINX_STATS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$ERROR_DATA</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Extract data from nginx stats</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#RESULT=$(echo "$NGINX_STATS" | awk 'print $0;match($0, "^'"$ZBX_REQ_DATA"':[[:space:]]+(.*)", a) &#123; print a[1] &#125;')</span></span><br><span class="line"><span class="comment">#RESULT=$(echo "$NGINX_STATS" | grep "$ZBX_REQ_DATA" | awk -F : '&#123;print $2&#125;')</span></span><br><span class="line">RESULT=$(<span class="built_in">echo</span> <span class="string">"<span class="variable">$NGINX_STATS</span>"</span> | awk -F : <span class="string">"&#123;if(\$1==\"<span class="variable">$ZBX_REQ_DATA</span>\") print \$2&#125;"</span>)</span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 -o -z <span class="string">"<span class="variable">$RESULT</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$ERROR_WRONG_PARAM</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$RESULT</span></span><br></pre></td></tr></table></figure><h3 id="4-准备zabbix配置文件"><a href="#4-准备zabbix配置文件" class="headerlink" title="4.准备zabbix配置文件"></a>4.准备zabbix配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01-7 /etc/zabbix/zabbix_agentd.d]<span class="comment"># cat fpm.conf </span></span><br><span class="line">UserParameter=php-fpm[*],/etc/zabbix/zabbix_agentd.d/fpm.sh <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$2</span>"</span></span><br></pre></td></tr></table></figure><h3 id="5-使用zabbix-get取值"><a href="#5-使用zabbix-get取值" class="headerlink" title="5.使用zabbix_get取值"></a>5.使用zabbix_get取值</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k php-fpm["total processes",http://127.0.0.1/php_status]</span></span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="6-导入模版"><a href="#6-导入模版" class="headerlink" title="6.导入模版"></a>6.导入模版</h3><p>导入之后需要修改一下模版里的宏配置</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/56-zabbix.png"  alt=""></p><h2 id="第13章-WEB监控"><a href="#第13章-WEB监控" class="headerlink" title="第13章 WEB监控"></a>第13章 WEB监控</h2><p>需求，监控页面状态码</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/57-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/58-zabbix.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/59-zabbix.png"  alt=""></p><h2 id="第14章-故障记录"><a href="#第14章-故障记录" class="headerlink" title="第14章 故障记录"></a>第14章 故障记录</h2><h3 id="故障1"><a href="#故障1" class="headerlink" title="故障1"></a>故障1</h3><p>故障现象：</p><p>提示<code>zabbix-server is not running</code></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/60-zabbix.png"  alt=""></p><p>报错日志：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">34983:20190807:202215.171 database is down: reconnecting <span class="keyword">in</span> 10 seconds</span><br><span class="line">34983:20190807:202225.172 [Z3001] connection to database <span class="string">'zabbix'</span> failed: [1045] Access denied <span class="keyword">for</span> user <span class="string">'zabbix'</span>@<span class="string">'localhost'</span> (using password: NO)</span><br></pre></td></tr></table></figure><p>故障原因：</p><blockquote><p>zabbix-server的配置文件里配有配置数据库密码</p></blockquote><p>故障解决：</p><blockquote><p>添加正确的数据库账号密码信息</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># grep "^DB" /etc/zabbix/zabbix_server.conf     </span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br></pre></td></tr></table></figure><h3 id="故障2"><a href="#故障2" class="headerlink" title="故障2"></a>故障2</h3><blockquote><p>故障现象：微信报警失败</p></blockquote><p>报错日志：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># tail -f /var/log/zabbix/zabbix_server.log </span></span><br><span class="line">Problem name: TIME_WAIT过多</span><br><span class="line">Host: web01</span><br><span class="line">Severity: Average</span><br><span class="line"></span><br><span class="line">Original problem ID: 51</span><br><span class="line"><span class="string">'": Traceback (most recent call last):</span></span><br><span class="line"><span class="string">  File "/usr/lib/zabbix/alertscripts/weixin.py", line 7, in &lt;module&gt;</span></span><br><span class="line"><span class="string">    import requests</span></span><br><span class="line"><span class="string">ImportError: No module named requests</span></span><br></pre></td></tr></table></figure><blockquote><p>问题原因：</p><p>缺少模块 requests</p></blockquote><p>问题解决：</p><p>安装缺失的依赖包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install requests</span><br></pre></td></tr></table></figure><h3 id="故障3"><a href="#故障3" class="headerlink" title="故障3"></a>故障3</h3><blockquote><p>故障现象：</p></blockquote><p>在server端使用zabbix_get命令测试键值命令时提示警告</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.7 -k ESTABLISHED  </span></span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">2</span><br></pre></td></tr></table></figure><blockquote><p>问题原因：</p></blockquote><p>zabbix_agent是以普通用户<code>zabbix</code>运行的，而普通用户执行<code>netstat -antp</code>时会有警告，网上查找发现只要不是用p参数就可以以普通用户运行</p><blockquote><p>解决方案：</p></blockquote><p>监控脚本里的命令修改为<code>netstat -ant</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="系统监控" scheme="http://linuxwf.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="zabbix" scheme="http://linuxwf.com/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>16.HTTPS域名证书</title>
    <link href="http://linuxwf.com/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>http://linuxwf.com/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/</id>
    <published>2020-04-13T07:25:00.000Z</published>
    <updated>2020-04-13T07:28:26.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTPS域名证书"><a href="#HTTPS域名证书" class="headerlink" title="HTTPS域名证书"></a>HTTPS域名证书</h1><h2 id="第1章-HTTPS-安全证书基本概述"><a href="#第1章-HTTPS-安全证书基本概述" class="headerlink" title="第1章 HTTPS 安全证书基本概述"></a>第1章 HTTPS 安全证书基本概述</h2><p>为什么需要使用HTTPS, 因为HTTP 不安全。当我们使用http 网站时，经常会遇到包遭到劫持和篡改，如果采用https 协议，那么数据在传输过程中是加密的，所以黑客无法窃取或者篡改数据报文信息。<br>https 主要解决了什么问题，避免网站传输时信息泄露，避免网站传输时内容不被劫持和篡改。<br>下面我们来了解一下HTTPS 证书类型</p><p>HTTPS 证书购买选择：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单个域名      www</span><br><span class="line">多个域名      www images cdn <span class="built_in">test</span> m</span><br><span class="line">通配符域名    *.oldboy.com    <span class="comment"># 只支持二级域名</span></span><br></pre></td></tr></table></figure><p>HTTPS 注意事项</p><p>Https 不支持续费,证书到期需重新申请新并进行替换.<br>Https 如果是通配符域名，二级域名和三级域名需要分别购买，如test.m.oldboy.com<br>Https 显示绿色, 说明整个网站的URL 都是https 的。<br>Https 显示黄色, 因为网站代码中包含http的不安全连接。<br>Https 显示红色, 要么证书是假的，要么证书过期</p><h2 id="第2章-Nginx-单台实现HTTPS-实战"><a href="#第2章-Nginx-单台实现HTTPS-实战" class="headerlink" title="第2章 Nginx 单台实现HTTPS 实战"></a>第2章 Nginx 单台实现HTTPS 实战</h2><p>1.环境准备:</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>web01-7</td><td>10.0.1.7</td><td>nginx+php+ssl</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nginx 必须有ssl 模块</span></span><br><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br><span class="line">--with-http_ssl_module</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建存放ssl 证书的路径</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/ssl_key</span></span><br><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>2.生成证书:</p><p>使用openssl 命令充当CA 权威机构创建证书(生产不使用此方式生成证书，因为不会被互联网认可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">... +++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line"></span><br><span class="line"><span class="comment">#记住配置密码, 我这里是1234</span></span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">Verifying - Enter pass phrase <span class="keyword">for</span> server.key:</span><br></pre></td></tr></table></figure><p>3.生成自签证书，同时去掉私钥的密码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># req --&gt;用于创建新的证书</span></span><br><span class="line"><span class="string"># new --&gt;表示创建的是新证书</span></span><br><span class="line"><span class="string"># x509 --&gt;表示定义证书的格式为标准格式</span></span><br><span class="line"><span class="string"># key --&gt;表示调用的私钥文件信息</span></span><br><span class="line"><span class="string"># out --&gt;表示输出证书文件信息</span></span><br><span class="line"><span class="string"># days --&gt;表示证书的有效期</span></span><br></pre></td></tr></table></figure><p>4.证书申请完成后需要了解Nginx 如何配置Https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否开始ssl 支持</span></span><br><span class="line">Syntax: ssl on | off;</span><br><span class="line">Default: ssl off;</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl crt 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl key 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate_key file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br></pre></td></tr></table></figure><p>5.配置Nginx 配置Https 实例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">nginx: [warn] the <span class="string">"ssl"</span> directive is deprecated, use the <span class="string">"listen ... ssl"</span> directive instead <span class="keyword">in</span> /etc/nginx/conf.d/ssl.conf:4</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"><span class="comment">#有个报警提示，告诉我们需要使用listen ... ssl这样的格式</span></span><br></pre></td></tr></table></figure><p>6.浏览器输入<a href="https://www.oldboy.com访问" target="_blank" rel="noopener">https://www.oldboy.com访问</a>, 由于该证书非第三方权威机构颁发，而是我们自己签发的，所以浏览器会警告</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565165285234.png"  alt=""></p><p>7.以上配置如果用户忘记在浏览器地址栏输入https:// 那么将不会跳转至https，建议配置将用户访问http 请求强制跳转https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx-集群实现HTTPS-实践"><a href="#第3章-Nginx-集群实现HTTPS-实践" class="headerlink" title="第3章 Nginx 集群实现HTTPS 实践"></a>第3章 Nginx 集群实现HTTPS 实践</h2><p>实战Nginx 负载均衡+Nginx WEB 配置HTTPS 安全</p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>外网IP</th><th>内网IP</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>eth0: 10.0.1.5 VIP: 10.0.1.3</td><td>eth1: 172.16.1.5</td><td>nginx-proxy-ssl</td></tr><tr><td>web01-7</td><td>eth0: 10.0.1.7</td><td>eth1: 172.16.1.7</td><td>nginx-web01</td></tr><tr><td>web02-8</td><td>eth0: 10.0.1.8</td><td>eth1: 172.16.1.8</td><td>nginx-web02</td></tr></tbody></table><p>2.配置后端两台web 节点监听80 端口, 如已配置则无需修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_param  HTTPS on;           <span class="comment">#wordpress的https生效</span></span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.启动两台后端web 节点Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web02 ~]<span class="comment"># systemctl start nginx</span></span><br></pre></td></tr></table></figure><p>4.lb01负载均衡先生成证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl/ssh_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># cd /etc/nginx/ssl_key/</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br></pre></td></tr></table></figure><p>5.lb01负载均衡配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line"><span class="comment"># 定义后端资源池</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line">upstream zh_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户http请求跳转至https</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  blog.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://server_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://zh_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  zh.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://zh_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.重启Nginx 负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>8.wordpress和wecenter配置https</p><p>wordpress后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565167178799.png"  alt=""></p><p>注意：wordpress要使用https生效，后台源wordpress配置文件必须增加一条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    ...</span><br><span class="line">    fastcgi_param  HTTPS on;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wecenter在后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565184511851.png"  alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="https" scheme="http://linuxwf.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>15.keepalived高可用</title>
    <link href="http://linuxwf.com/2020/04/13/15-keepalived/"/>
    <id>http://linuxwf.com/2020/04/13/15-keepalived/</id>
    <published>2020-04-13T07:21:00.000Z</published>
    <updated>2020-04-13T07:22:10.620Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="keepalived高可用"><a href="#keepalived高可用" class="headerlink" title="keepalived高可用"></a>keepalived高可用</h1><h2 id="第1章-keepalived介绍"><a href="#第1章-keepalived介绍" class="headerlink" title="第1章 keepalived介绍"></a>第1章 keepalived介绍</h2><p><code>keepalived</code>软件起初是专为LVS负载均衡软件设计的,用来管理并监控LVS集群系统中各个服务节点状态,后来又加入了可以实现高可用的VRRP功能.此,keepalived除了能够管理LVS软件外,还可以作为其他服务(例如:Nginx,Haproxy,MySQL等)的高可用解决方案软件.</p><p><code>keepalived</code>软件主要是通过<code>VRRP</code>协议实现高可用功能的.<code>VRRP</code>是<code>Virtual Router Redundancy</code> Protocol(虚拟路由器冗余协议)的缩写,VRRP出现的目的就是为了解决静态路由单点故障问题的,他能够保证当个别节点宕机时,整个网络可以不间断地运行.Keepalived一方面具有配置管理LVS的功能,同时还具有对LVS下面节点进行健康检查的功能,另一方面也可实现系统网络服务的高可用功能,</p><h2 id="第2章-keepalived服务的重要功能"><a href="#第2章-keepalived服务的重要功能" class="headerlink" title="第2章 keepalived服务的重要功能"></a>第2章 keepalived服务的重要功能</h2><h3 id="2-1-作为系统网络服务的高可用功能-failover"><a href="#2-1-作为系统网络服务的高可用功能-failover" class="headerlink" title="2.1 作为系统网络服务的高可用功能(failover)"></a>2.1 作为系统网络服务的高可用功能(failover)</h3><p><code>keepalived</code>可以实现任意两台主机之间,例如Master和Backup主机之间的故障转移和自动切换,这个主机可以使普通的不能停机的业务服务器,也可以是LVS负载均衡,Nginx反向代理这样的服务器.</p><p><code>keepalived</code>高可用功能实现的基本原理为:<br> 两台主机同时安装好keepalived软件并启动服务,开始正常工作时<br> 角色为Master的主机获得所有资源并对用户提供服务<br> 角色为Backup的主机作为Master主机的热备;</p><p>当角色为Master的主机失效或出现故障时<br> 角色为Backup的主机将自动接管Master主机的所有工作,包括接管VIP资源及相应资源服务</p><p>而当角色为Master的主机故障修复后,又会自动接管回他原来处理的工作<br> 角色为Backup的主机则同时释放Master主机失效时他接管的工作<br> 此时,两台主机将恢复到启动时各自的原始角色及工作状态</p><h3 id="2-2-什么是VRRP"><a href="#2-2-什么是VRRP" class="headerlink" title="2.2 什么是VRRP"></a>2.2 什么是VRRP</h3><p><code>VRRP</code>,全称<code>Virtual Router Redundancy Protocol</code>,中文名为<code>虚拟路由冗余协议</code><br> <code>VRRP</code>的出现就是为了解决静态路由的单点故障问题<br> <code>VRRP</code>是通过一种竞选机制来将路由的任务交给某台VRRP路由器的.</p><p><code>VRRP</code>通过竞选机制来实现虚拟路由器的功能,所有的协议报文都是通过IP多播(Multicast)包(默认的多播地址<code>224.0.0.18</code>)形式发送的<br> 虚拟路由器由VRID(范围0-255)和一组IP地址组成,对外表现为一个周知的MAC地址,:00-00-5E-00-01-{VRID}.<br> 所以,在一个虚拟路由器中,不管谁是Master,对外都是相同的MAC和IP(称之为VIP).<br> 客户端主机并不需要因Master的改变修改自己的路由配置.对它们来说,这种切换是透明的.</p><p>在一组虚拟路由器中,只有作为Master的VRRP路由器会一直发送VRRP广播包,此时Backup不会抢占Master<br> 当Master不可用时,Backup就收不到来自Master的广播包了,此时多台Backup中优先级最高的路由器会抢占为Master.<br> 这种抢占是非常快速的(可能只有1秒甚至更少),以保证服务的连续性,处于安全性考虑,VRRP数据包使用了加密协议进行了加密.</p><h3 id="2-3-面试的时候怎么说"><a href="#2-3-面试的时候怎么说" class="headerlink" title="2.3 面试的时候怎么说"></a>2.3 面试的时候怎么说</h3><p><code>keepalived</code>高可用对之间是通过<code>VRRP</code>通信的,因此,我从VRRP开始给您讲起.</p><ul><li>1)VRRP,全称Virtual Router Reduancy Protocol,中文名为虚拟路由器冗余协议,VRRP的出现是为了解决静态路由的单点故障,</li><li>2)VRRP是通过一种竞选协议来将路由任务交给某台VRRP路由器的,</li><li>3)VRRP用IP多播的方式,(默认多播地址(<code>224.0.0.18</code>))实现高可用对之间通信.</li><li>4)工作时主节点发包,备节点接包,当备节点接收不到主节点发的包的时候,就启动接管程序接管主节点的资源.备节点可以有多个,通过优先级竞选,但一般keepalived系统运维工作中都是一对.</li><li>5)VRRP使用了加密协议加密数据,但keepalived官方目前还是推荐用明文的方式配置认证类型和密码.</li></ul><p>介绍完了VRRP,接下来我在介绍一下keepalived服务的工作原理;<br>keepalived高可用对之间是通过VRRP进行通信的,VRRP是通过竞选机制来确定主备的,主的优先级高于备,因此,工作时会优先获得所有的资源,备节点处于等待状态,当主挂了的时候,备节点就会接管主节点的资源,然后顶替主节点对外提供服务.</p><p>在keepalived服务对之间,只有作为主的服务器会一直发送VRRP广播包,告诉备他还活着,此时备不会抢占主,当主不可用时,即备监听不到主发送的广播包时,就会启动相关服务接管资源,保证业务的连续性,接管速度最快可以小于一秒</p><h2 id="第3章-keepalived高可用服务搭建准备"><a href="#第3章-keepalived高可用服务搭建准备" class="headerlink" title="第3章 keepalived高可用服务搭建准备"></a>第3章 keepalived高可用服务搭建准备</h2><h3 id="3-1-安装keepalived环境说明"><a href="#3-1-安装keepalived环境说明" class="headerlink" title="3.1 安装keepalived环境说明"></a>3.1 安装keepalived环境说明</h3><p>这里使用前面已经搭建完成的Nginx负载均衡的系统环境来安装Keepalived服务,因为后面的实战案例是实现Nginx负载均衡的高可用案例.<br>安装Keepalived的基础准备环境如下:<br>准备5台物理服务器两台做Keepalived服务,3台做测试的web节点</p><p>Keepalived高可用实验环境准备</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>Keepalived主服务器(Nginx主负载均衡器)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>Keepalived备服务器(Nginx备负载均衡器)</td></tr><tr><td>web01</td><td>10.0.1.7</td><td>web01服务器</td></tr><tr><td>web02</td><td>10.0.1.8</td><td>web02服务器</td></tr><tr><td>web03</td><td>10.0.1.9</td><td>web03服务器</td></tr></tbody></table><h3 id="3-2-安装keepalived软件"><a href="#3-2-安装keepalived软件" class="headerlink" title="3.2 安装keepalived软件"></a>3.2 安装keepalived软件</h3><p>注意:lb01和lb02都需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># yum install keepalived -y</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qa keepalived</span></span><br><span class="line">keepalived-1.3.5-8.el7_6.x86_64</span><br><span class="line">[root@lb02 ~]<span class="comment"># yum install keepalived -y</span></span><br></pre></td></tr></table></figure><h3 id="3-3-启动keepalived服务并检查"><a href="#3-3-启动keepalived服务并检查" class="headerlink" title="3.3 启动keepalived服务并检查"></a>3.3 启动keepalived服务并检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ps -ef |grep  keep</span></span><br><span class="line">root       1601      1  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1602   1601  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1603   1601  0 10:33 ?        00:00:03 /usr/sbin/keepalived -D</span><br><span class="line"><span class="comment">###提示:启动后有三个keepalived进程表示安装正确</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip a|grep 192.168</span></span><br><span class="line">    inet 192.168.200.16/32 scope global eth0</span><br><span class="line">    inet 192.168.200.17/32 scope global eth0</span><br><span class="line">    inet 192.168.200.18/32 scope global eth0</span><br><span class="line"><span class="comment">###提示:默认情况会启动三个VIP地址</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived</span></span><br><span class="line"><span class="comment">###提示: 测试完毕后关闭服务,上述测试需要在lb01和lb02两台服务器上进行</span></span><br></pre></td></tr></table></figure><h3 id="3-4-keepalived配置文件说明"><a href="#3-4-keepalived配置文件说明" class="headerlink" title="3.4 keepalived配置文件说明"></a>3.4 keepalived配置文件说明</h3><p>和其他yum安装的软件一样,keepalived软件的配置文件默认路径及配置文件名为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qc keepalived</span></span><br><span class="line">/etc/keepalived/keepalived.conf</span><br><span class="line">/etc/sysconfig/keepalived</span><br></pre></td></tr></table></figure><p>这里的具备高可用功能keepalived.conf配置文件包含了两个重要区块,下面分别说明:</p><p>(1)全局变量(Global Definitions)部分<br>这部分主要用来设置keepalived的故障通知机制和Router ID标识.示例配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf.bak -n</span></span><br><span class="line">     1! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">     2</span><br><span class="line">     3global_defs &#123;</span><br><span class="line">     4   notification_email &#123;</span><br><span class="line">     5     acassen@firewall.loc</span><br><span class="line">     6     failover@firewall.loc</span><br><span class="line">     7     sysadmin@firewall.loc</span><br><span class="line">     8   &#125;</span><br><span class="line">     9   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">    10   smtp_server 192.168.200.1</span><br><span class="line">    11   smtp_connect_timeout 30</span><br><span class="line">    12   router_id LVS_DEVEL</span><br><span class="line">    13   vrrp_skip_check_adv_addr</span><br><span class="line">    14   vrrp_strict</span><br><span class="line">    15   vrrp_garp_interval 0</span><br><span class="line">    16   vrrp_gna_interval 0</span><br><span class="line">    17&#125;</span><br></pre></td></tr></table></figure><p>基础参数说明:</p><ul><li>第1行是注释,!开头和#号开头一样,都是注释</li><li>第2行是空行</li><li>第3行~8行是定义故障服务报警的Email地址.作用是服务发生切换或RS节点等有故障时,需要发送的Email地址,可以有多个,每行一个.</li><li>第9行是制定发送邮件的发送人,即发送人地址,也是可选配置</li><li>第10行smtp_server指定发送邮件的smtp服务器,如果本机开启了sendmail或postfix.就可以使用上面默认配置实现邮件发送,也是可选配置.</li><li>第11行smtp_connect_timeout是连接smtp的超时时间,也是可选配置</li><li>第12行是Keepalived服务器的路由标识{route_id}.在一个局域网内,这个标识{route_id}应该是唯一的.</li><li>大括号{}.用来区分区块,要成对出现.如果楼写了半个大括号,keepalived运行时,不会报错,但是也不会得到预期的结果.另外,由于区块间存在多层嵌套关系,因此很容易遗漏区块结尾处的大括号,需要特别注意.</li></ul><p>(2)VRRP实例定义区域(VRRP instance(s))部分.<br> 这部分主要用来定义具体服务实例配置,包括Keepalived主备状态,接口,优先级,认证方式和IP信息等,配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">19vrrp_instance VI_1 &#123;</span><br><span class="line">    20    state MASTER</span><br><span class="line">    21    interface eth0</span><br><span class="line">    22    virtual_router_id 51</span><br><span class="line">    23    priority 100</span><br><span class="line">    24    advert_int 1</span><br><span class="line">    25    authentication &#123;</span><br><span class="line">    26        auth_type PASS</span><br><span class="line">    27        auth_pass 1111</span><br><span class="line">    28    &#125;</span><br><span class="line">    29    virtual_ipaddress &#123;</span><br><span class="line">    30        192.168.200.16</span><br><span class="line">    31        192.168.200.17</span><br><span class="line">    32        192.168.200.18</span><br><span class="line">    33    &#125;</span><br><span class="line">    34&#125;</span><br></pre></td></tr></table></figure><p>参数说明:</p><ul><li><p>第19行表示定义一个vrrp_instance实例,名字为VI_1,每个vrrp_instance实例可以认为是Keepalived服务的一个实例或者作为一个业务服务,在Keepalived服务配置中,这样的vrrp_instance实例可以有多个.注意,存在于主节点中的vrrp_isntance实例在备节点也要存在,这样才能实现故障切换接管.</p></li><li><p>第20行state MASTER表示当前示例VI_1的角色状态,当前角色为MASTER,这个状态只能有MASTER和BACKUP两种状态,并且需要大写这些字符.其中MASTER为正式工作的状态,BACKUP为备用的状态.当MASTER所在的服务器故障或失效时,BACKUP所在的服务器会接管故障的MASTER继续提供服务.</p></li><li><p>第21行interface为网路通信接口.为对外提供服务的网络接口,如eth0,eth1当前主流的服务器都有2~4个网络接口,在选择服务接口时,要搞清楚.</p></li><li><p>第22行virtual_router_id为虚拟路由ID标识,这个标识最好是一个数字</p></li><li><p>第23行priority为优先级,其后面的数值也是一个数字,数字越大,表示实例优先级越高.在同一个vrrp_instance实例里,MASTER的优先级配置要高于BACKUP的.若MASTER的priority值为150,那么BACKUP的priority必须小于150,一般建议隔50以上为佳.</p></li><li><p>第24行advent_int为同步通知间隔.MASTER与BACKUP之间通信检查的时间间隔,默认为1秒.</p></li><li><p>第25-27行authentication为权限认证配置.包含认证类型(auth_type)和认证密码(auth_pass)认证类型有PASS(simple passwd),AH(IPSEC)两种,官方推荐使用的类型为PASS.验证密码为明文方式,最好长度不能超过8个字符,建议四位数字,同一vrrp实例的MASTER与BACKUP使用相同的密码才能正常通信.</p></li><li><p>第29-32行virtual_ipaddress为虚拟IP地址.可以配置多个IP地址,每个地址占一行,配置时最好明确指定子网掩码以及虚拟IP绑定的网络接口.否则,子网掩码默认是32位,绑定的接口和前面的interface参数配置的一致.注意,这里的虚拟IP就是在工作中需要和域名绑定的IP,即和配置的高可用服务监听的IP要保持一致.</p></li></ul><h2 id="第4章-配置keepalived实现单IP自动漂移接管"><a href="#第4章-配置keepalived实现单IP自动漂移接管" class="headerlink" title="第4章 配置keepalived实现单IP自动漂移接管"></a>第4章 配置keepalived实现单IP自动漂移接管</h2><p>实际上可以将高可用对的两台机器应用服务同时开启,但是只让VIP一段的服务器提供服务,若主的服务器宕机,VIP会自动漂移到备用服务器,此时用户的请求直接发送到备用服务器上,而无须临时启动对应服务(事先开启应用服务).下面来讲解VIP自动漂移实战案例.</p><h3 id="4-1-实战配置keepalived主服务器lb01-MASTER"><a href="#4-1-实战配置keepalived主服务器lb01-MASTER" class="headerlink" title="4.1 实战配置keepalived主服务器lb01 MASTER"></a>4.1 实战配置keepalived主服务器lb01 MASTER</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后,启动keepalived服务,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>出现上述带有vip:10.0.0.3行的结果表示lb01的keepalived服务单实例配置成功.</p><h3 id="4-2-实战配置keepalived备服务器lb02-BACKUP"><a href="#4-2-实战配置keepalived备服务器lb02-BACKUP" class="headerlink" title="4.2 实战配置keepalived备服务器lb02 BACKUP"></a>4.2 实战配置keepalived备服务器lb02 BACKUP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕,启动keepalived服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|egrep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>这里没有返回任何结果就对了,因为lb02为BACKUP,当主节点活着的时候,他不会接管VIP 10.0.1.3</p><p>出现上述无任何结果的现象,表示lb02的keepailved服务单实例配置成功.如果lv02的配置过滤后有10.0.1.3的IP,则表示keepalived工作不正,同一个IP地址同一时刻应该只能出现在一台服务器上.</p><p>如果查看BACKUP备节点VIP有,说明高可用裂脑了,裂脑是两台服务器争抢统一资源导致的,例如:两边都配置了同一个VIP地址.</p><h3 id="4-3-出现裂脑后的排查"><a href="#4-3-出现裂脑后的排查" class="headerlink" title="4.3 出现裂脑后的排查"></a>4.3 出现裂脑后的排查</h3><p>出现上述两台服务器争抢同一IP资源问题,一般要先考虑排查两个地方:</p><p>(1)主备两台服务器之间是否通讯正常,如果不正常是否有iptables防火墙阻挡?</p><p>(2)主备两台服务器对应的keepalived.conf配置文件是否有错误?例如是否同一实例的virtual_router_id配置不一样.</p><h3 id="4-4-进行高可用主备服务器切换"><a href="#4-4-进行高可用主备服务器切换" class="headerlink" title="4.4 进行高可用主备服务器切换"></a>4.4 进行高可用主备服务器切换</h3><p>停掉主服务器上的keepalived服务或关闭主服务器,操作并检查步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>可以看到VIP 10.0.0.3消失了,此时查看BACKUP备服务器,看是否会有VIP 10.0.0.3出现,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>可以看到备节点lb02已经接管绑定了10.0.1.3这个VIP,这期间备节点还会发送ARP广播,让所有的客户端更新本地的ARP表,以便客户端访问接管VIP服务的节点.</p><p>此时如果再启动主服务器的keepalived服务,主服务器就会接管回VIP 10.0.1.3启动后可以观察下主备的IP漂移情况,备服务器是否释放了IP?主服务器是否又接管了IP ?</p><p>主节点启动keepalived服务后,发现很快就又接管了VIP 10.0.1.3,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>与此同时,备节点上的VIP 10.0.0.3则被释放了,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><h3 id="4-5-单实例主备模式keeplibed配置文件对比"><a href="#4-5-单实例主备模式keeplibed配置文件对比" class="headerlink" title="4.5 单实例主备模式keeplibed配置文件对比"></a>4.5 单实例主备模式keeplibed配置文件对比</h3><p>可以看到,上述keepalived单实例MASTER和BACKUP节点的配置差别项,只有3项是不同的</p><table><thead><tr><th>Keepalived配置参数</th><th>MASTER节点特殊参数</th><th>BACKUP节点特殊参数</th></tr></thead><tbody><tr><td>router_id(唯一标识)</td><td>router_id lb01</td><td>router_id lb02</td></tr><tr><td>state(角色状态)</td><td>state MASTER</td><td>state BACKUP</td></tr><tr><td>priority(竞选优先级)</td><td>priority 100</td><td>priority 50</td></tr></tbody></table><h2 id="第5章-keepalived高可用服务器的裂脑问题"><a href="#第5章-keepalived高可用服务器的裂脑问题" class="headerlink" title="第5章 keepalived高可用服务器的裂脑问题"></a>第5章 keepalived高可用服务器的裂脑问题</h2><h3 id="5-1-什么是裂脑"><a href="#5-1-什么是裂脑" class="headerlink" title="5.1 什么是裂脑"></a>5.1 什么是裂脑</h3><p>由于某些原因,导致两台高可用服务器对在指定时间内,无法检测到对方的心跳消息,各自取得资源及服务</p><p>的所有权,而此时的两台高可用服务器都还活着并在正常运行,这样就会导致同一个IP或服务在两端同时</p><p>存在而发生冲突,最严重的是两台服务器占用同一个VIP地址,当用户写入数据时可能会分别写入到两端,</p><p>这可能会导致服务器两端的数据不一致或造成数据丢失,这种情况就被成为裂脑.</p><h3 id="5-2-导致裂脑发生的原因"><a href="#5-2-导致裂脑发生的原因" class="headerlink" title="5.2 导致裂脑发生的原因"></a>5.2 导致裂脑发生的原因</h3><p>一般来说,裂脑的发生,有以下几种原因<br>   高可用服务器对之间心跳线链路发生故障,导致无法正常通信<br>   心跳线坏了(包括断了,老化)<br>   网卡及相关驱动坏了,IP配置及冲突问题(网卡直连)<br>   心跳线之间连接的设备故障(网卡及交换机)<br>   仲裁的机器出问题了(采用总裁的方案)<br>   高可用服务器上开启了iptables防火墙阻挠了心跳信息传输<br>   高可用服务器上心跳网卡地址等信息配置不正确,导致发送心跳失败<br>   其他服务配置不当等原因,如心跳方式不同,心跳广播冲突,软件bug等.</p><h3 id="5-3-解决裂脑的常见方法"><a href="#5-3-解决裂脑的常见方法" class="headerlink" title="5.3 解决裂脑的常见方法"></a>5.3 解决裂脑的常见方法</h3><p>在实际成产环境中,我们可以从以下几个方面来防止裂脑问题发生:</p><p>同时使用串行电缆和以太网电缆连接,同时用两条心跳线,这样一条线路坏了,另一个还是好的,依然能传送心跳信息.</p><p>当检测到裂脑时强行关闭一个心跳节点(这个功能需要特殊设备支持,如stonith,fence)相当于备节点接收不到心跳信息,通过单独的线路发送命令关闭主节点的电源.</p><p>做好对裂脑的监控报警(如邮件及手机短信等或值班),在问题发生时人为第一时间介入仲裁,降低损失.</p><h3 id="5-4-解决keepalived裂脑的常见方案"><a href="#5-4-解决keepalived裂脑的常见方案" class="headerlink" title="5.4 解决keepalived裂脑的常见方案"></a>5.4 解决keepalived裂脑的常见方案</h3><p>作为互联网应用服务器的高可用,特别是前端web负载均衡器的高可用,裂脑的问题对普遍业务的影响是可容忍的,如果是数据库或者存储的业务,一般出现裂脑问题就非常严重了.因此,通过增加冗余心跳线来避免裂脑问题发生,同时加强了对系统的监控.</p><p>如果开启防火墙,一定要让心跳消息通过.一般通过允许IP段的形式解决<br> 可以拉一条以太网网线或者串口线作为主备节点心跳线路的冗余<br> 开发检测程序通过监控软件检测裂脑,如zabbix检测如果主备都有VIP就报警.<br> 比较严谨的判断,备节点出现对应VIP,并且主节点及对应服务(如果能远程连接主节点看是否有VIP就更好了)还活着,就说明发生裂脑了.</p><p>具体监控系统裂脑的脚本见文章结尾”开发检测keepalived裂脑的脚本”</p><h3 id="5-5-模拟keepalived裂脑场景"><a href="#5-5-模拟keepalived裂脑场景" class="headerlink" title="5.5 模拟keepalived裂脑场景"></a>5.5 模拟keepalived裂脑场景</h3><p>抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><p>开启防火墙 firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface eth0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span></span><br></pre></td></tr></table></figure><p>iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -i eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br><span class="line">iptables -I OUTPUT -o eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br></pre></td></tr></table></figure><p>再次抓包查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx负载均衡配合keepalived双主模式实战"><a href="#第6章-Nginx负载均衡配合keepalived双主模式实战" class="headerlink" title="第6章 Nginx负载均衡配合keepalived双主模式实战"></a>第6章 Nginx负载均衡配合keepalived双主模式实战</h2><p>结合前面介绍的Nginx负载均衡的环境,调整好住负载均衡器lb01,备用负载均衡器lb02服务器上Nginx负载均衡环境,两台服务器的安装基础环境一模一样.</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>VIP:10.0.1.2(用于绑定A服务<a href="http://www.oldboy.com域名" target="_blank" rel="noopener">www.oldboy.com域名</a>)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>VIP:10.0.1.3(用于绑定B服务zh.oldboy.com域名)</td></tr><tr><td>web01-7</td><td>10.0.1.7</td><td>Nginx web服务器1</td></tr><tr><td>web02-8</td><td>10.0.1.8</td><td>Nginx web 服务器2</td></tr></tbody></table><h3 id="6-1-配置keepalived双主"><a href="#6-1-配置keepalived双主" class="headerlink" title="6.1 配置keepalived双主"></a>6.1 配置keepalived双主</h3><p>lb01配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><p>lb02配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Nginx负载均衡"><a href="#6-2-Nginx负载均衡" class="headerlink" title="6.2 Nginx负载均衡"></a>6.2 Nginx负载均衡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 10.0.1.7;</span><br><span class="line">        server 10.0.1.8;</span><br><span class="line">        server 10.0.1.9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.3:80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.2:80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-重启nginx和keepalived"><a href="#6-3-重启nginx和keepalived" class="headerlink" title="6.3 重启nginx和keepalived"></a>6.3 重启nginx和keepalived</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart keepalived</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="6-4-配置windows解析"><a href="#6-4-配置windows解析" class="headerlink" title="6.4 配置windows解析"></a>6.4 配置windows解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.3 blog.oldboy.com</span><br><span class="line">10.0.1.2 zh.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="6-5-访问测试"><a href="#6-5-访问测试" class="headerlink" title="6.5 访问测试"></a>6.5 访问测试</h3><h3 id="6-6-模拟keepalived故障"><a href="#6-6-模拟keepalived故障" class="headerlink" title="6.6 模拟keepalived故障"></a>6.6 模拟keepalived故障</h3><p>此时停掉lb01服务器或停止keepalived服务器，观察结果是否正常<br>然后观察lb02备点是否接管了VIP 10.0.1.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><h3 id="6-7-恢复lb01的keelived服务"><a href="#6-7-恢复lb01的keelived服务" class="headerlink" title="6.7 恢复lb01的keelived服务"></a>6.7 恢复lb01的keelived服务</h3><p>查看是否恢复正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.5/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br></pre></td></tr></table></figure><h2 id="第7章-开发监控keepalived裂脑的脚本"><a href="#第7章-开发监控keepalived裂脑的脚本" class="headerlink" title="第7章  开发监控keepalived裂脑的脚本"></a>第7章  开发监控keepalived裂脑的脚本</h2><p>检测思路,VIP什么时候 什么条件 才会飘走<br>由于某些原因，导致两台 keepalived 高可用服务器在指定时间内，无法检测到对方的心跳消息，各自取得资源及服务的所有权，而此时的两台高可用服务器又都还活着。<br>服务器网线松动等网络故障<br>服务器硬件故障发生损坏现象而崩溃<br>主备都开启 firewalld 防火墙<br>Nginx 服务死掉等</p><h3 id="7-1-lb01检查web脚本"><a href="#7-1-lb01检查web脚本" class="headerlink" title="7.1 lb01检查web脚本"></a>7.1 lb01检查web脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># mkdir /server/scripts -p</span></span><br><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat check_web.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line"><span class="comment">#1.判断 Nginx 是否存活,如果不存活则尝试启动 Nginx</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    systemctl start nginx</span><br><span class="line">    sleep 3</span><br><span class="line">    <span class="comment">#2.等待 3 秒后再次获取一次 Nginx 状态</span></span><br><span class="line">    nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line">    <span class="comment">#3.再次进行判断, 如 Nginx 还不存活则停止 Keepalived,让地址进行漂移,并退出脚本</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_web &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_web.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">      track_script &#123;</span><br><span class="line">        check_web</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-lb02脚本"><a href="#7-2-lb02脚本" class="headerlink" title="7.2 lb02脚本"></a>7.2 lb02脚本</h3><p>检查vip脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment">#  mkdir /server/scripts -p</span></span><br><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat check_backup_keep.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">lb01_vip=10.0.1.3</span><br><span class="line">lb01_nginx=$(curl -x 10.0.1.5:80 -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  blog.oldzhang.com)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ping -c 1 -W 1 $&#123;lb01_ip&#125; &amp;&gt;/dev/null</span></span><br><span class="line"><span class="comment">#如果lb01的IP能ping通,但是我自己也存在VIP,我就认为发生裂脑了,我就把自己的keep干掉</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;lb01_nginx&#125;</span> -eq 200 -a `ip add|grep <span class="string">"<span class="variable">$lb01_vip</span>"</span>|wc -l` -eq 1 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is bad"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line">    systemctl stop keepalived</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is ok"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_backup_keep &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_backup_keep.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">     track_script &#123;</span><br><span class="line">     check_backup_keep</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="keepalived" scheme="http://linuxwf.com/tags/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>14.反向代理负载均衡</title>
    <link href="http://linuxwf.com/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://linuxwf.com/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2020-04-13T07:11:00.000Z</published>
    <updated>2020-04-13T07:17:30.201Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="反向代理负载均衡"><a href="#反向代理负载均衡" class="headerlink" title="反向代理负载均衡"></a>反向代理负载均衡</h1><h2 id="第1章-反向代理"><a href="#第1章-反向代理" class="headerlink" title="第1章 反向代理"></a>第1章 反向代理</h2><h3 id="Nginx代理服务基本概述"><a href="#Nginx代理服务基本概述" class="headerlink" title="Nginx代理服务基本概述"></a>Nginx代理服务基本概述</h3><p>说到代理，首先我们要明确一个概念，所谓代理就是一个代表、一个渠道；</p><p>此时就设计到两个角色，一个是被代理角色，一个是目标角色，被代理角色通过这个代理访问目标角色完成一些任务的过程称为代理操作过程；如同生活中的专卖店~客人到adidas专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是adidas厂家，目标角色就是用户</p><p>1.代理一词往往并不陌生, 该服务我们常常用到如(代理理财、代理租房、代理收货等等)，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.png"  alt=""></p><p>2.在没有代理模式的情况下，客户端和 Nginx 服务端，都是客户端直接请求服务端，服务端直接响应客户端。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.png"  alt=""></p><p>3.那么在互联网请求里面, 客户端往往无法直接向服务端发起请求, 那么就需要用到代理服务, 来实现客户端和服务通信，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/03.png"  alt=""></p><h3 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h3><p>以访问Goo为例，客户端连接到VPN相当于正向代理<br>VPN代理请求访问后端服务器并返回属于反向代理</p><h3 id="Nginx代理服务支持的协议"><a href="#Nginx代理服务支持的协议" class="headerlink" title="Nginx代理服务支持的协议"></a>Nginx代理服务支持的协议</h3><p>1.Nginx 作为代理服务，可支持的代理协议非常的多，具体如下图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_01.png"  alt=""></p><p>2.如果将 Nginx 作为反向代理服务，常常会用到如下几种代理协议，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_02.png"  alt=""></p><p>3.反向代理模式与 Nginx 代理模块总结如表格所示</p><table><thead><tr><th>反向代理模式</th><th>nginx配置模块</th></tr></thead><tbody><tr><td>http、websocket、https</td><td>ngx_http_proxy_module</td></tr><tr><td>fastcgi</td><td>ngx_http_fastcgi_module</td></tr><tr><td>uwsgi</td><td>ngx_http_uwsgi_module</td></tr><tr><td>grpc</td><td>ngx_http_v2_module</td></tr></tbody></table><h3 id="Nginx反向代理配置语法"><a href="#Nginx反向代理配置语法" class="headerlink" title="Nginx反向代理配置语法"></a>Nginx反向代理配置语法</h3><p>1.Nginx代理配置语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_pass URL;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location, limit_except</span><br><span class="line">http://localhost:8000/uri/</span><br><span class="line">http://192.168.56.11:8000/uri/</span><br><span class="line">http://unix:/tmp/backend.socket:/uri/</span><br></pre></td></tr></table></figure><p>2.添加传递给后端服务器的请求头信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_set_header field value;</span><br><span class="line">Default: proxy_set_header Host <span class="variable">$proxy_host</span>;</span><br><span class="line">proxy_set_header Connection close;</span><br><span class="line">Context: http, server, location</span><br><span class="line"><span class="comment"># 用户请求的时候 HOST 的值是 www.oldboy.com, 那么代理服务会像后端传递请求的还是 www.oldboy.com</span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"><span class="comment"># 将$remote_addr 的值放进变量 X-Real-IP 中， $remote_addr 的值为客户端的 ip</span></span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="comment"># 客户端通过代理服务访问后端服务, 后端服务通过该变量会记录真实客户端地址</span></span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br></pre></td></tr></table></figure><p>3.代理到后端的TCP连接数，响应，返回等超时时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nginx 代理与后端服务器连接超时时间(代理连接超时)</span><br><span class="line">Syntax: proxy_connect_timeout time;</span><br><span class="line">Default: proxy_connect_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//nginx 代理等待后端服务器的响应时间</span><br><span class="line">Syntax: proxy_read_timeout time;</span><br><span class="line">Default: proxy_read_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//后端服务器数据回传给 nginx 代理超时时间</span><br><span class="line">Syntax: proxy_send_timeout time;</span><br><span class="line">Default: proxy_send_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>4.代理缓冲区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nignx 会把后端返回的内容先放到缓冲区当中，然后再返回给客户端,边收边传, 不是全部接收完再传给客户端</span><br><span class="line">Syntax: proxy_buffering on | off;</span><br><span class="line">Default: proxy_buffering on;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//设置 nginx 代理保存用户头信息的缓冲区大小</span><br><span class="line">Syntax: proxy_buffer_size size;</span><br><span class="line">Default: proxy_buffer_size 4k|8k;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//proxy_buffers 缓冲区</span><br><span class="line">Syntax: proxy_buffers number size;</span><br><span class="line">Default: proxy_buffers 8 4k|8k;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>5.proxy代理网站常用配置<br>将配置写入新文件，调用时使用include引用即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># cat /etc/nginx/proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br></pre></td></tr></table></figure><p>6.代理配置location时调用，方便后面多个location重复使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nginx反向代理实战"><a href="#Nginx反向代理实战" class="headerlink" title="Nginx反向代理实战"></a>Nginx反向代理实战</h3><p>配置关系图：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_03.png"  alt=""></p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>IP</th><th>服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>web服务器</td></tr><tr><td>lb01</td><td>10.0.1.5</td><td>代理服务器</td></tr></tbody></table><p>2.web01服务器配置<br>配置一个网站，监听在 8080，此时网站仅 172 网段的用户能访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/conf.d/</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.0/24;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 conf.d]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 conf.d]<span class="comment"># echo "web01-7" &gt;/code/index.html</span></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>3.配置lb01代理服务器<br>配置监听 eth0 的 80 端口，使 10.0.1.0 网段的用户，能够通过代理服务器访问到后端的172.16.1.7 的 8080 端口站点内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx]<span class="comment"># cat proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat www.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://172.16.1.7:8080;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h2 id="第2章-负载均衡"><a href="#第2章-负载均衡" class="headerlink" title="第2章 负载均衡"></a>第2章 负载均衡</h2><h3 id="Nginx负载均衡概述"><a href="#Nginx负载均衡概述" class="headerlink" title="Nginx负载均衡概述"></a>Nginx负载均衡概述</h3><h3 id="2-1-为什么需要负载均衡"><a href="#2-1-为什么需要负载均衡" class="headerlink" title="2.1 为什么需要负载均衡"></a>2.1 为什么需要负载均衡</h3><p>我们的 Web 服务器直接面向用户，往往要承载大量并发请求，单台服务器难以负荷，我使用多台 WEB 服务器组成集群，前端使用 Nginx 负载均衡，将请求分散的打到我们的后端服务器集群中，实现负载的分发。那么会大大提升系统的吞吐率、请求性能、高容灾</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai.png"  alt=""></p><p>往往我们接触的最多的是 SLB(Server Load Balance)负载均衡，实现最多的也是 SLB、那么 SLB 它的调度节点和服务节点通常是在一个地域里面。那么它在这个小的逻辑地域里面决定了他对部分服务的实时性、响应性是非常好的。<br>所以说当海量用户请求过来以后，它同样是请求调度节点，调度节点将用户的请求转发给后端对应的服务节点，服务节点处理完请求后在转发给调度节点，调度节点最后响应给用户节点。这样也能实现一个均衡的作用，那么Nginx 则是一个典型的 SLB</p><h3 id="2-2-Nginx负载均衡配置场景"><a href="#2-2-Nginx负载均衡配置场景" class="headerlink" title="2.2 Nginx负载均衡配置场景"></a>2.2 Nginx负载均衡配置场景</h3><h4 id="2-2-1-四层负载均衡"><a href="#2-2-1-四层负载均衡" class="headerlink" title="2.2.1 四层负载均衡"></a>2.2.1 四层负载均衡</h4><p>所谓四层负载均衡指的是 OSI 七层模型中的传输层，那么传输层 Nginx 已经能支持 TCP/IP 的控制，所以只需要对客户端的请求进行 TCP/IP 协议的包转发就可以实现负载均衡，那么它的好处是性能非常快、只需要底层进行应用处理，而不需要进行一些复杂的逻辑</p><h4 id="2-2-2-七层负载均衡"><a href="#2-2-2-七层负载均衡" class="headerlink" title="2.2.2 七层负载均衡"></a>2.2.2 七层负载均衡</h4><p>七层负载均衡它是在应用层，那么它可以完成很多应用方面的协议请求，比如我们说的 http 应用的负载均衡，它可以实现 http 信息的改写、头信息的改写、安全应用规则控制、 URL 匹配规则控制、以及转发、 rewrite 等等的规则，所以在应用层的服务里面，我们可以做的内容就更多，那么 Nginx 则是一个典型的七层负载均衡 SLB</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai02.png"  alt=""></p><h4 id="2-2-3-四层负载均衡与七层负载均衡区别"><a href="#2-2-3-四层负载均衡与七层负载均衡区别" class="headerlink" title="2.2.3 四层负载均衡与七层负载均衡区别"></a>2.2.3 四层负载均衡与七层负载均衡区别</h4><p>四层负载均衡数据包在底层就进行了分发，而七层负载均衡数据包则是在最顶层进行分发、由此可以看出，七层负载均衡效率没有四负载均衡高。<br> 但七层负载均衡更贴近于服务，如:http 协议就是七层协议，我们可以用 Nginx 可以作会话保持， URL 路径规则匹配、 head 头改写等等，这些是四层负载均衡无法实现的</p><h4 id="Nginx负载均衡调度算法"><a href="#Nginx负载均衡调度算法" class="headerlink" title="Nginx负载均衡调度算法"></a>Nginx负载均衡调度算法</h4><table><thead><tr><th>调度算法</th><th>概述</th></tr></thead><tbody><tr><td>轮询</td><td>按时间顺序逐一分配到不同的后端服务器（默认）</td></tr><tr><td>weight</td><td>加权轮询，weight值越大，分配到的访问几率越高</td></tr><tr><td>ip_hash</td><td>每个请求按访问IP的hash结果分配，这样来自同一IP的固定访问一个后端服务器</td></tr><tr><td>url_hash</td><td>按照访问URL的hash结果来分配请求，是每个URL定向到同一个后端服务器</td></tr><tr><td>least_conn</td><td>z最少链接数，那个机器链接数少就分发</td></tr></tbody></table><h4 id="Nginx负载均衡配置参数"><a href="#Nginx负载均衡配置参数" class="headerlink" title="Nginx负载均衡配置参数"></a>Nginx负载均衡配置参数</h4><table><thead><tr><th>状态</th><th>概述</th></tr></thead><tbody><tr><td>down</td><td>当前的server暂时不参与负载均衡</td></tr><tr><td>backup</td><td>预留的备份服务器</td></tr><tr><td>max_fails</td><td>允许请求失败的次数</td></tr><tr><td>fail_timeout</td><td>经过max_fails失败后，服务暂停时间</td></tr><tr><td>max_conns</td><td>限制最大的接受链接数</td></tr></tbody></table><h3 id="2-3-Nginx负载均衡实战"><a href="#2-3-Nginx负载均衡实战" class="headerlink" title="2.3 Nginx负载均衡实战"></a>2.3 Nginx负载均衡实战</h3><p>1.部署准备    </p><table><thead><tr><th>/static</th><th>10.0.1.7:8080</th><th>static静态服务器</th></tr></thead><tbody><tr><td>/upload</td><td>10.0.1.8:8080</td><td>upload服务器</td></tr><tr><td>/</td><td>10.0.1.9:8080</td><td>默认服务器</td></tr></tbody></table><p>2.创建地址池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream upload_pools&#123;</span><br><span class="line">    server 10.0.0.8:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static_pools&#123;</span><br><span class="line">    server 10.0.0.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream defaule_pools&#123;</span><br><span class="line">    server 10.0.0.9:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.匹配条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location /static/ &#123; </span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###将符合upload的请求交给上传服务器池upload_pools,配置如下</span></span><br><span class="line">location /upload/ &#123; </span><br><span class="line">    proxy_pass http://upload_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###不符合上述规则的请求,默认全交给动态服务器池default_pools,配置如下:</span></span><br><span class="line">location / &#123; </span><br><span class="line">    proxy_pass http://default_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.组合在一起</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>5.创建代码环境</p><p>每个虚拟机存放的网页路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.oldboy.com/index.html</span><br><span class="line">www.oldboy.com/upload/index.html</span><br><span class="line">www.oldboy.com/static/index.html</span><br></pre></td></tr></table></figure><p>创建目录及测试页面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /code/www/&#123;upload,static&#125;</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> default"</span> &gt;/code/www//index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> upload"</span> &gt;/code/www/upload/index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> static"</span> &gt;/code/www/static/index.html </span><br><span class="line">chown -R www.www /code</span><br></pre></td></tr></table></figure><p>6.进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/index.html</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/static/</span></span><br><span class="line">web01 static</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/upload/</span></span><br><span class="line">web02-8 upload</span><br></pre></td></tr></table></figure><h2 id="第3章-根据条件转发实战"><a href="#第3章-根据条件转发实战" class="headerlink" title="第3章 根据条件转发实战"></a>第3章 根据条件转发实战</h2><h3 id="3-1-根据文件类型转发"><a href="#3-1-根据文件类型转发" class="headerlink" title="3.1 根据文件类型转发"></a>3.1 根据文件类型转发</h3><p>转发需求</p><p>只需修改nginx.conf的配置文件中的loaction区块代码即可</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*.(gif|jpg|jpeg|png|bmp|swf|css|js)$ &#123;</span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">    upstream server_pools &#123;</span><br><span class="line">        server 10.0.0.7 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.8 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.9 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-动静分离"><a href="#3-2-动静分离" class="headerlink" title="3.2 动静分离"></a>3.2 动静分离</h3><p>转发需求</p><p>动态资源转发到php服务器<br>静态资源转发到静态服务器</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-3-根据客户端转发"><a href="#3-3-根据客户端转发" class="headerlink" title="3.3 根据客户端转发"></a>3.3 根据客户端转发</h3><p>转发需求</p><p>手机和电脑 访问相同的网站—-结果不同</p><p>lb01代理服务器配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream iphone_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream android_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Iphone"</span>) &#123;</span><br><span class="line">            proxy_pass http://iphone_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Android"</span>)&#123;</span><br><span class="line">            proxy_pass http://android_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"msie"</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>访问测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/www]<span class="comment"># echo "web01 iphone" &gt; index.html </span></span><br><span class="line">[root@web02-8 /code/www]<span class="comment"># echo "web02 android" &gt; index.html</span></span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "chrome" www.oldboy.com</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "iphone" www.oldboy.com</span></span><br><span class="line">web01 iphone</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "android" www.oldboy.com</span></span><br><span class="line">web02 android</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="proxy" scheme="http://linuxwf.com/tags/proxy/"/>
    
      <category term="upstream" scheme="http://linuxwf.com/tags/upstream/"/>
    
      <category term="反向代理" scheme="http://linuxwf.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
      <category term="负载均衡" scheme="http://linuxwf.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>13.LNPM数据库拆分</title>
    <link href="http://linuxwf.com/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/"/>
    <id>http://linuxwf.com/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/</id>
    <published>2020-04-13T06:56:00.000Z</published>
    <updated>2020-04-13T07:08:06.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNPM数据库拆分"><a href="#LNPM数据库拆分" class="headerlink" title="LNPM数据库拆分"></a>LNPM数据库拆分</h1><h2 id="第1章-环境搭建准备"><a href="#第1章-环境搭建准备" class="headerlink" title="第1章 环境搭建准备"></a>第1章 环境搭建准备</h2><table><thead><tr><th>主机名</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>nginx+php</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>mysql</td></tr></tbody></table><h2 id="第2章-数据库拆分详细步骤"><a href="#第2章-数据库拆分详细步骤" class="headerlink" title="第2章 数据库拆分详细步骤"></a>第2章 数据库拆分详细步骤</h2><h3 id="2-1-web01上备份数据库并拷贝到db01上"><a href="#2-1-web01上备份数据库并拷贝到db01上" class="headerlink" title="2.1 web01上备份数据库并拷贝到db01上"></a>2.1 web01上备份数据库并拷贝到db01上</h3><p>备份 web01 上的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqldump -uroot -p'oldboy' -A --single-transaction &gt; /tmp/web01.sql</span></span><br></pre></td></tr></table></figure><p>将 web01 上备份的数据库拷贝至 db01 服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># scp /tmp/web01.sql 172.16.1.51:/tmp</span></span><br></pre></td></tr></table></figure><h3 id="2-2-db01服务器恢复数据库"><a href="#2-2-db01服务器恢复数据库" class="headerlink" title="2.2 db01服务器恢复数据库"></a>2.2 db01服务器恢复数据库</h3><p>安装数据库，并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># yum install mariadb mariadb-server -y</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl enable mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br></pre></td></tr></table></figure><p>将web01.sql导入到db01的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysql -uroot -p'oldboy' &lt; /tmp/web01.sql</span></span><br><span class="line"></span><br><span class="line">[root@db01-51 /tmp]<span class="comment"># mysql -uroot -p'oldboy' -e "show databases;"</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="2-3-db01数据库进行授权"><a href="#2-3-db01数据库进行授权" class="headerlink" title="2.3 db01数据库进行授权"></a>2.3 db01数据库进行授权</h3><p>在新数据库上授权, 允许所有网段, 通过 all 账户连接并操作该数据库<br>授权所有权限 grant all privileges<br>授权所有库所有表 <em>.</em><br>将授权赋予给哪个用户，这个用户只能通过哪个网段过来(%所有) ‘all’@’%’<br>授权该用户登录的密码 identified by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01-51 ~]<span class="comment"># mysql -uroot -p'oldboy'</span></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on *.* to <span class="string">'all'</span>@<span class="string">'%'</span> identified by <span class="string">'oldboy'</span>;</span><br><span class="line">&gt; flush privileges; </span><br><span class="line">&gt;<span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-测试使用IP地址能不能登陆"><a href="#2-4-测试使用IP地址能不能登陆" class="headerlink" title="2.4 测试使用IP地址能不能登陆"></a>2.4 测试使用IP地址能不能登陆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uall -poldboy -h 172.16.1.51</span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="2-5-web01修改PHP代码连接到新数据库"><a href="#2-5-web01修改PHP代码连接到新数据库" class="headerlink" title="2.5 web01修改PHP代码连接到新数据库"></a>2.5 web01修改PHP代码连接到新数据库</h3><p>修改wordpress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/ </span></span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># find . -type f|xargs grep oldboy   #查找密码所在文件</span></span><br><span class="line">./wp-config.php:define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># vim wp-config.php </span></span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'all'</span>);</span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'172.16.1.51'</span>);</span><br></pre></td></tr></table></figure><p>修改wecenter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh/</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># find . -type f|xargs grep oldboy</span></span><br><span class="line">./system/config/database.php:  <span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br><span class="line">[root@web01 /code/zh]<span class="comment"># vim system/config/database.php</span></span><br><span class="line"><span class="string">'host'</span> =&gt; <span class="string">'172.16.1.51'</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; <span class="string">'all'</span>,</span><br><span class="line"><span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br></pre></td></tr></table></figure><h3 id="2-6-停止web01上的数据库，测试网页是否正常"><a href="#2-6-停止web01上的数据库，测试网页是否正常" class="headerlink" title="2.6 停止web01上的数据库，测试网页是否正常"></a>2.6 停止web01上的数据库，测试网页是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/zh]<span class="comment"># systemctl stop mariadb.service</span></span><br></pre></td></tr></table></figure><p>此时如果打开网页没有问题则表明数据库拆分完成</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第3章-拓展WEB服务器"><a href="#第3章-拓展WEB服务器" class="headerlink" title="第3章 拓展WEB服务器"></a>第3章 拓展WEB服务器</h2><h3 id="3-1-为什么要拓展多台web节点"><a href="#3-1-为什么要拓展多台web节点" class="headerlink" title="3.1 为什么要拓展多台web节点"></a>3.1 为什么要拓展多台web节点</h3><p>单台 web 服务器能抗住的访问量是有限的，配置多台 web 服务器能提升更高的访问速度</p><h3 id="3-2-拓展多台web解决了什么问题"><a href="#3-2-拓展多台web解决了什么问题" class="headerlink" title="3.2 拓展多台web解决了什么问题"></a>3.2 拓展多台web解决了什么问题</h3><p>1.单台 web 节点如果故障，会导致业务 down 机<br>2.多台 web 节点能保证业务的持续稳定，扩展性高<br>3.多台 web 节点能有效的提升用户访问网站的速度</p><h3 id="3-3-多台web服务器架构组成"><a href="#3-3-多台web服务器架构组成" class="headerlink" title="3.3 多台web服务器架构组成"></a>3.3 多台web服务器架构组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145927.png"  alt=""></p><h3 id="3-4-多台web服务器思路"><a href="#3-4-多台web服务器思路" class="headerlink" title="3.4 多台web服务器思路"></a>3.4 多台web服务器思路</h3><p>1.可以使用ansible批量部署多台web服务器<br>2.配置内网私有yum仓库<br>3 按照web01的步骤安装好nginx和php，然后远程拷贝代码到新机器</p><h3 id="3-5-部署步骤"><a href="#3-5-部署步骤" class="headerlink" title="3.5 部署步骤"></a>3.5 部署步骤</h3><h4 id="3-5-1-web02-创建用户名密码"><a href="#3-5-1-web02-创建用户名密码" class="headerlink" title="3.5.1 web02 创建用户名密码"></a>3.5.1 web02 创建用户名密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br></pre></td></tr></table></figure><h4 id="2-5-2-web02安装Nginx-PHP"><a href="#2-5-2-web02安装Nginx-PHP" class="headerlink" title="2.5.2 web02安装Nginx+PHP"></a>2.5.2 web02安装Nginx+PHP</h4><p>可以直接从web01上拷贝yum源到本机yum目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/yum.repos.d/* /etc/yum.repos.d/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/pki/rpm-gpg/* /etc/pki/rpm-gpg/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install nginx</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-拷贝web01的nginx和php配置文件到web02"><a href="#3-2-3-拷贝web01的nginx和php配置文件到web02" class="headerlink" title="3.2.3 拷贝web01的nginx和php配置文件到web02"></a>3.2.3 拷贝web01的nginx和php配置文件到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/nginx /etc/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/php-fpm.d /etc/</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-拷贝代码目录到web02"><a href="#3-2-4-拷贝代码目录到web02" class="headerlink" title="3.2.4 拷贝代码目录到web02"></a>3.2.4 拷贝代码目录到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tar zcf code.tar.gz /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># scp code.tar.gz root@172.16.1.8:/tmp</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-web02上将代码解压到相应目录"><a href="#3-2-5-web02上将代码解压到相应目录" class="headerlink" title="3.2.5 web02上将代码解压到相应目录"></a>3.2.5 web02上将代码解压到相应目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tar xf /tmp/code.tar.gz -C /</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># ll -d /code/</span></span><br><span class="line">drwxr-xr-x 4 www www 112 Aug  1 17:02 /code/</span><br></pre></td></tr></table></figure><h4 id="3-2-6-web02上启动nginx和php-fpm并加入开机自启动"><a href="#3-2-6-web02上启动nginx和php-fpm并加入开机自启动" class="headerlink" title="3.2.6 web02上启动nginx和php-fpm并加入开机自启动"></a>3.2.6 web02上启动nginx和php-fpm并加入开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># systemctl start nginx php-fpm.service </span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable nginx php-fpm.service</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-web访问测试"><a href="#3-2-7-web访问测试" class="headerlink" title="3.2.7 web访问测试"></a>3.2.7 web访问测试</h4><p>修改windows的hosts为web02的地址，然后浏览器访问测试</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第4章-将静态资源挂载到共享存储"><a href="#第4章-将静态资源挂载到共享存储" class="headerlink" title="第4章 将静态资源挂载到共享存储"></a>第4章 将静态资源挂载到共享存储</h2><h3 id="4-1-为什么要拆分静态资源到独立服务器"><a href="#4-1-为什么要拆分静态资源到独立服务器" class="headerlink" title="4.1 为什么要拆分静态资源到独立服务器"></a>4.1 为什么要拆分静态资源到独立服务器</h3><p>当后端的 web 节点出现多台时，会导致用户上传的图片、视频附件等内容仅上传至一台 web 服务器，那么其他的web 服务器则无法访问到该图片</p><h3 id="4-2-新增一台nfs存储解决了什么问题"><a href="#4-2-新增一台nfs存储解决了什么问题" class="headerlink" title="4.2 新增一台nfs存储解决了什么问题"></a>4.2 新增一台nfs存储解决了什么问题</h3><p>1.保证了多台 web 节点静态资源一致。<br>2.有效节省多台 web 节点的存储空间。<br>3.统一管理静态资源，便于后期推送至 CDN 进行静态资源加速</p><h3 id="4-3-多台web节点架构环境准备"><a href="#4-3-多台web节点架构环境准备" class="headerlink" title="4.3 多台web节点架构环境准备"></a>4.3 多台web节点架构环境准备</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150124.png"  alt=""></p><table><thead><tr><th>服务器</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>Nginx+PHP</td></tr><tr><td>web02</td><td>172.16.1.8</td><td>Nginx+PHP</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>MySQL</td></tr><tr><td>nfs</td><td>172.16.1.31</td><td>NFS</td></tr></tbody></table><h3 id="4-4-NFS服务器端配置"><a href="#4-4-NFS服务器端配置" class="headerlink" title="4.4 NFS服务器端配置"></a>4.4 NFS服务器端配置</h3><h4 id="4-4-1安装配置NFS"><a href="#4-4-1安装配置NFS" class="headerlink" title="4.4.1安装配置NFS"></a>4.4.1安装配置NFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum -y install nfs-utils</span></span><br><span class="line">[root@nfs ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data/blog 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/data/zh 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="4-4-2-创建共享目录并进行授权"><a href="#4-4-2-创建共享目录并进行授权" class="headerlink" title="4.4.2 创建共享目录并进行授权"></a>4.4.2 创建共享目录并进行授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># mkdir /data/&#123;blog,zh&#125;</span></span><br><span class="line">[root@nfs ~]<span class="comment"># chown -R www.www /data/</span></span><br></pre></td></tr></table></figure><h4 id="4-4-3-启动nfs服务并加入开机自启"><a href="#4-4-3-启动nfs服务并加入开机自启" class="headerlink" title="4.4.3 启动nfs服务并加入开机自启"></a>4.4.3 启动nfs服务并加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># systemctl start nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl restart rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># showmount -e</span></span><br><span class="line">Export list <span class="keyword">for</span> nfs:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h3 id="4-5-web01端操作步骤如下"><a href="#4-5-web01端操作步骤如下" class="headerlink" title="4.5 web01端操作步骤如下"></a>4.5 web01端操作步骤如下</h3><h4 id="4-5-1-web01安装nfs"><a href="#4-5-1-web01安装nfs" class="headerlink" title="4.5.1 web01安装nfs"></a>4.5.1 web01安装nfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nfs-utils rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web01 ~]<span class="comment"># showmount -e 172.16.1.31   #查看nfs共享信息</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h4 id="4-5-2-查找Wordpress-静态资源存放的位置"><a href="#4-5-2-查找Wordpress-静态资源存放的位置" class="headerlink" title="4.5.2 查找Wordpress 静态资源存放的位置"></a>4.5.2 查找Wordpress 静态资源存放的位置</h4><p>在wordpress的文章里添加一张图片，然后查看图片URL资源</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150201.png"  alt=""></p><p>或者</p><p>复制图片地址打开，查看静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-04-40.png"  alt=""></p><h4 id="4-5-3-备份web01服务器上Wordpress-的静态资源"><a href="#4-5-3-备份web01服务器上Wordpress-的静态资源" class="headerlink" title="4.5.3 备份web01服务器上Wordpress 的静态资源"></a>4.5.3 备份web01服务器上Wordpress 的静态资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/wp-content</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 www www   28 Jan  9  2012 index.php</span><br><span class="line">drwxr-xr-x 4 www www 4096 Feb  8  2018 languages</span><br><span class="line">drwxr-xr-x 3 www www   55 Aug  2 10:59 plugins</span><br><span class="line">drwxr-xr-x 5 www www   88 Aug  2 10:59 themes</span><br><span class="line">drwxr-xr-x 2 www www    6 Aug  1 16:32 upgrade</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads.bak</span><br></pre></td></tr></table></figure><h4 id="4-5-4-备份web01服务器上zh的静态资源"><a href="#4-5-4-备份web01服务器上zh的静态资源" class="headerlink" title="4.5.4 备份web01服务器上zh的静态资源"></a>4.5.4 备份web01服务器上zh的静态资源</h4><p>复制图片地址，找到静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-06-29.png"  alt=""></p><p>备份静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><h4 id="4-5-5-web01客户端执行挂载操作"><a href="#4-5-5-web01客户端执行挂载操作" class="headerlink" title="4.5.5 web01客户端执行挂载操作"></a>4.5.5 web01客户端执行挂载操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><h4 id="4-5-6-将挂载信息加入开机自启"><a href="#4-5-6-将挂载信息加入开机自启" class="headerlink" title="4.5.6 将挂载信息加入开机自启"></a>4.5.6 将挂载信息加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web01 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure><h3 id="4-6-web02端操作与web01一样"><a href="#4-6-web02端操作与web01一样" class="headerlink" title="4.6 web02端操作与web01一样"></a>4.6 web02端操作与web01一样</h3><p>安装配置NFS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install rpcbind nfs-utils</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>备份web02服务器上Wordpress 的静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web02-8 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><p>web02客户端执行挂载操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data/blog   39G  1.8G   38G   5% /code/wordpress/wp-content/uploads</span><br><span class="line">172.16.1.31:/data/zh     39G  1.8G   38G   5% /code/zh/uploads</span><br></pre></td></tr></table></figure><p>拷贝备份的静态资源数据到挂载点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><p>将挂载信息加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web02-8 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="lnmp" scheme="http://linuxwf.com/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>12.LNMP架构</title>
    <link href="http://linuxwf.com/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/"/>
    <id>http://linuxwf.com/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/</id>
    <published>2020-04-13T06:27:00.000Z</published>
    <updated>2020-04-13T06:36:23.860Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNMP架构"><a href="#LNMP架构" class="headerlink" title="LNMP架构"></a>LNMP架构</h1><h2 id="第1章-LNMP架构概述"><a href="#第1章-LNMP架构概述" class="headerlink" title="第1章 LNMP架构概述"></a>第1章 LNMP架构概述</h2><h3 id="1-1-什么是LNMP"><a href="#1-1-什么是LNMP" class="headerlink" title="1.1 什么是LNMP"></a>1.1 什么是LNMP</h3><p><code>LNMP</code> 是一套技术的组合， L=Linux、 N=Nginx、 M<del>=MySQL、 P</del>=PHP</p><h3 id="1-2-LNMP架构是如何工作的"><a href="#1-2-LNMP架构是如何工作的" class="headerlink" title="1.2 LNMP架构是如何工作的"></a>1.2 LNMP架构是如何工作的</h3><p>首先 Nginx 服务是不能处理动态请求，那么当用户发起动态请求时, Nginx 又是如何进行处理的。<br>当用户发起 http 请求，请求会被 Nginx 处理，如果是静态资源请求 Nginx 则直接返回，如果是动态请求 Nginx 则通过 fastcgi 协议转交给后端的 PHP 程序处理，具体如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/lnmp.png"  alt=""></p><h3 id="1-3-Nginx与Fast-CGI工作流程"><a href="#1-3-Nginx与Fast-CGI工作流程" class="headerlink" title="1.3 Nginx与Fast-CGI工作流程"></a>1.3 Nginx与Fast-CGI工作流程</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx-fast-cgi.png"  alt=""></p><ul><li>1.用户通过 http 协议发起请求，请求会先抵达 LNMP 架构中的 Nginx</li><li>2.Nginx 会根据用户的请求进行判断，这个判断是有 Location 进行完成</li><li>3.判断用户请求的是静态页面， Nginx 直接进行处理</li><li>4.判断用户请求的是动态页面， Nginx 会将该请求交给 fastcgi 协议下发</li><li>5.fastgi 会将请求交给 php-fpm 管理进程, php-fpm 管理进程接收到后会调用具体的工作进程 warrap</li><li>6.warrap 进程会调用 php 程序进行解析,如果只是解析代码 php 直接返回</li><li>7.如果有查询数据库操作，则由 php 连接数据库(用户 密码 IP)发起查询的操作</li><li>8.最终数据由 mysql-&gt;php-&gt;php-fpm-&gt;fastcgi-&gt;nginx-&gt;http-&gt;user</li></ul><h2 id="第2章-LNMP安装部署"><a href="#第2章-LNMP安装部署" class="headerlink" title="第2章 LNMP安装部署"></a>第2章 LNMP安装部署</h2><h3 id="2-1-创建www统一用户"><a href="#2-1-创建www统一用户" class="headerlink" title="2.1 创建www统一用户"></a>2.1 创建www统一用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h3 id="2-2-使用官方仓库安装nginx"><a href="#2-2-使用官方仓库安装nginx" class="headerlink" title="2.2 使用官方仓库安装nginx"></a>2.2 使用官方仓库安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># ps -ef|grep nginx   #更改nginx工作用户为www</span></span><br><span class="line">root       1291      1  0 15:05 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">www        1292   1291  0 15:05 ?        00:00:00 nginx: worker process</span><br><span class="line">root       1697   1517  0 15:20 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure><h3 id="2-3-启动Nginx并加入开机自启动"><a href="#2-3-启动Nginx并加入开机自启动" class="headerlink" title="2.3 启动Nginx并加入开机自启动"></a>2.3 启动Nginx并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h3 id="2-4-使用第三方拓展源安装php7-1"><a href="#2-4-使用第三方拓展源安装php7-1" class="headerlink" title="2.4  使用第三方拓展源安装php7.1"></a>2.4  使用第三方拓展源安装php7.1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum remove php-mysql-5.4 php php-fpm php-common</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h3 id="2-5-配置php-fpm用户与nginx用户保持一致"><a href="#2-5-配置php-fpm用户与nginx用户保持一致" class="headerlink" title="2.5 配置php-fpm用户与nginx用户保持一致"></a>2.5 配置php-fpm用户与nginx用户保持一致</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^user/c user = www' /etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^group/c group = www' /etc/php-fpm.d/www.conf</span></span><br></pre></td></tr></table></figure><h3 id="2-6-启动php-fpm并加入开机自启动"><a href="#2-6-启动php-fpm并加入开机自启动" class="headerlink" title="2.6 启动php-fpm并加入开机自启动"></a>2.6 启动php-fpm并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start php-fpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable php-fpm</span></span><br></pre></td></tr></table></figure><h3 id="2-7-安装Mariadb数据库"><a href="#2-7-安装Mariadb数据库" class="headerlink" title="2.7 安装Mariadb数据库"></a>2.7 安装Mariadb数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install mariadb-server mariadb -y</span></span><br></pre></td></tr></table></figure><h3 id="2-8-启动Mariadb数据库并加入开机自启动"><a href="#2-8-启动Mariadb数据库并加入开机自启动" class="headerlink" title="2.8 启动Mariadb数据库并加入开机自启动"></a>2.8 启动Mariadb数据库并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable mariadb</span></span><br></pre></td></tr></table></figure><h3 id="2-9-配置Mariadb账号密码"><a href="#2-9-配置Mariadb账号密码" class="headerlink" title="2.9 配置Mariadb账号密码"></a>2.9 配置Mariadb账号密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><h3 id="2-10-mysql基础命令"><a href="#2-10-mysql基础命令" class="headerlink" title="2.10 mysql基础命令"></a>2.10 mysql基础命令</h3><p>#登录mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><p>#查看当前mysql有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">|      | localhost |</span><br><span class="line">| root | localhost |</span><br><span class="line">|      | web01     |</span><br><span class="line">| root | web01     |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><p>#使用指定IP登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy -h127.0.0.1</span></span><br></pre></td></tr></table></figure><p>#查看当前有哪些数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.10 sec)</span><br></pre></td></tr></table></figure><p>#查看库里面有哪些表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show tables from mysql;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>#退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="第3章-LNMP环境配置"><a href="#第3章-LNMP环境配置" class="headerlink" title="第3章 LNMP环境配置"></a>第3章 LNMP环境配置</h2><h3 id="3-1-Fastcgi语法"><a href="#3-1-Fastcgi语法" class="headerlink" title="3.1 Fastcgi语法"></a>3.1 Fastcgi语法</h3><p>设置 fastcgi 服务器的地址，该地址可以指定为域名或 IP 地址，以及端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_pass address;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_pass localhost:9000;</span><br><span class="line">fastcgi_pass unix:/tmp/fastcgi.socket;</span><br></pre></td></tr></table></figure><p>设置 fastcgi 默认的首页文件，需要结合 fastcgi_param 一起设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_index name;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>通过 fastcgi_param 设置变量，并将设置的变量传递到后端的 fastcgi 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_param parameter value [if_not_empty];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /code<span class="variable">$fastcgi_script_name</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-最终Nginx连接FastCGI服务器配置如下"><a href="#3-2-最终Nginx连接FastCGI服务器配置如下" class="headerlink" title="3.2 最终Nginx连接FastCGI服务器配置如下"></a>3.2 最终Nginx连接FastCGI服务器配置如下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/conf.d/php.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    server_name php.oldboy.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    root /code;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/php.access.log  main;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-在-code目录下创建index-php文件并访问测试"><a href="#3-3-在-code目录下创建index-php文件并访问测试" class="headerlink" title="3.3 在/code目录下创建index.php文件并访问测试"></a>3.3 在/code目录下创建index.php文件并访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># chown -R www:www /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># cat index.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-检查nginx语法并重加载"><a href="#3-4-检查nginx语法并重加载" class="headerlink" title="3.4 检查nginx语法并重加载"></a>3.4 检查nginx语法并重加载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /code]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-5-绑定hosts然后在浏览器访问"><a href="#3-5-绑定hosts然后在浏览器访问" class="headerlink" title="3.5 绑定hosts然后在浏览器访问"></a>3.5 绑定hosts然后在浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647768645.png"  alt=""></p><h3 id="3-6-测试php和数据库访问是否正常"><a href="#3-6-测试php和数据库访问是否正常" class="headerlink" title="3.6 测试php和数据库访问是否正常"></a>3.6 测试php和数据库访问是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># cat mysql.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">"localhost"</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">"root"</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">"oldboy"</span>;</span><br><span class="line"></span><br><span class="line">    // 创建连接</span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">    // // 检测连接</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">        die(<span class="string">"Connection failed: "</span> . mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"php 连接 MySQL 数据库成功"</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-通过浏览器访问数据库页面"><a href="#3-7-通过浏览器访问数据库页面" class="headerlink" title="3.7 通过浏览器访问数据库页面"></a>3.7 通过浏览器访问数据库页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647969919.png"  alt=""></p><h2 id="第4章-部署博客Wordpress"><a href="#第4章-部署博客Wordpress" class="headerlink" title="第4章 部署博客Wordpress"></a>第4章 部署博客Wordpress</h2><h3 id="4-1-配置Nginx虚拟主机站点"><a href="#4-1-配置Nginx虚拟主机站点" class="headerlink" title="4.1 配置Nginx虚拟主机站点"></a>4.1 配置Nginx虚拟主机站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-重启nginx"><a href="#4-2-重启nginx" class="headerlink" title="4.2 重启nginx"></a>4.2 重启nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="4-3-下载解压wordpress到代码目录"><a href="#4-3-下载解压wordpress到代码目录" class="headerlink" title="4.3 下载解压wordpress到代码目录"></a>4.3 下载解压wordpress到代码目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span></span><br><span class="line">[root@web01 /code]<span class="comment"># tar xf wordpress-4.9.4-zh_CN.tar.gz </span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www:www /code/wordpress</span></span><br></pre></td></tr></table></figure><h3 id="4-4-创建wordpress数据库"><a href="#4-4-创建wordpress数据库" class="headerlink" title="4.4 创建wordpress数据库"></a>4.4 创建wordpress数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database wordpress CHARSET utf8mb4;</span><br><span class="line">&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="4-5-浏览器访问wordpress并部署"><a href="#4-5-浏览器访问wordpress并部署" class="headerlink" title="4.5 浏览器访问wordpress并部署"></a>4.5 浏览器访问wordpress并部署</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649445731.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649478708.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649527536.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649576779.png"  alt=""></p><h2 id="第5章-部署问答网站Wecenter"><a href="#第5章-部署问答网站Wecenter" class="headerlink" title="第5章 部署问答网站Wecenter"></a>第5章 部署问答网站Wecenter</h2><h3 id="5-1-配置Nginx虚拟站点"><a href="#5-1-配置Nginx虚拟站点" class="headerlink" title="5.1 配置Nginx虚拟站点"></a>5.1 配置Nginx虚拟站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wecenter.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    root /code/zh;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;   </span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/zh;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-2-下载解压wecenter并授权"><a href="#5-2-下载解压wecenter并授权" class="headerlink" title="5.2 下载解压wecenter并授权"></a>5.2 下载解压wecenter并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mkdir zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 10393660 Aug  1 11:57 WeCenter_3-3-2.zip</span><br><span class="line">[root@web01 /code]<span class="comment"># unzip WeCenter_3-3-2.zip -d /code/zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www.www /code/</span></span><br></pre></td></tr></table></figure><h3 id="5-3-创建zh数据库"><a href="#5-3-创建zh数据库" class="headerlink" title="5.3 创建zh数据库"></a>5.3 创建zh数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database zh;</span><br><span class="line">&gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="5-4-浏览器访问"><a href="#5-4-浏览器访问" class="headerlink" title="5.4 浏览器访问"></a>5.4 浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650838149.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650873995.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650919599.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650968909.png"  alt=""></p><h3 id="5-5-清除首页安装文件"><a href="#5-5-清除首页安装文件" class="headerlink" title="5.5 清除首页安装文件"></a>5.5 清除首页安装文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rm -rf /code/zh/install</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="lnmp" scheme="http://linuxwf.com/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>11.Nginx常用模块</title>
    <link href="http://linuxwf.com/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
    <id>http://linuxwf.com/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</id>
    <published>2020-04-13T06:22:00.000Z</published>
    <updated>2020-04-13T06:26:09.745Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx常用模块"><a href="#Nginx常用模块" class="headerlink" title="Nginx常用模块"></a>Nginx常用模块</h1><h2 id="第1章-目录索引"><a href="#第1章-目录索引" class="headerlink" title="第1章 目录索引"></a>第1章 目录索引</h2><h3 id="1-1-应用场景"><a href="#1-1-应用场景" class="headerlink" title="1.1 应用场景"></a>1.1 应用场景</h3><p>可以使用nginx作为简易的文件下载服务器</p><h3 id="1-2-参数说明"><a href="#1-2-参数说明" class="headerlink" title="1.2 参数说明"></a>1.2 参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Syntax: autoindex on | off;</span><br><span class="line">Default: autoindex off;</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment"># autoindex 常用参数</span></span><br><span class="line">autoindex_exact_size off;</span><br><span class="line">默认为 on， 显示出文件的确切大小，单位是 bytes。</span><br><span class="line">修改为 off，显示出文件的大概大小，单位是 kB 或者 MB 或者 GB。</span><br><span class="line"></span><br><span class="line">autoindex_localtime on;</span><br><span class="line">默认为 off，显示的文件时间为 GMT 时间。</span><br><span class="line">修改为 on， 显示的文件时间为文件的服务器时间。</span><br><span class="line"></span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">默认中文目录乱码，添加上解决乱码</span><br></pre></td></tr></table></figure><h3 id="1-3-配置文件"><a href="#1-3-配置文件" class="headerlink" title="1.3 配置文件"></a>1.3 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat download.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name download.wufei.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/download;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        autoindex on;</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="1-4-创建测试数据"><a href="#1-4-创建测试数据" class="headerlink" title="1.4 创建测试数据"></a>1.4 创建测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /usr/share/nginx/html/download]<span class="comment"># ll</span></span><br><span class="line">total 948</span><br><span class="line">-rw-r--r-- 1 root root 763172 Jun  4 11:07 01.jpg</span><br><span class="line">-rw-r--r-- 1 root root 200027 Jun  4 00:29 02.jpg</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 10.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 1.txt</span><br><span class="line">-rw-r--r-- 1 root root     13 Jul 31 12:07 2.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 3.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 4.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 5.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 6.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 7.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 8.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 9.txt</span><br><span class="line">drwxr-xr-x 2 root root     24 Jul 31 11:50 mdeia</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 11:56 天天.txt</span><br></pre></td></tr></table></figure><h3 id="1-5-访问页面"><a href="#1-5-访问页面" class="headerlink" title="1.5 访问页面"></a>1.5 访问页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564563327944.png"  alt=""></p><h2 id="第2章-状态监控"><a href="#第2章-状态监控" class="headerlink" title="第2章 状态监控"></a>第2章 状态监控</h2><h3 id="2-1-状态字段解释"><a href="#2-1-状态字段解释" class="headerlink" title="2.1 状态字段解释"></a>2.1 状态字段解释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Active connections <span class="comment"># 当前活动的连接数</span></span><br><span class="line">accepts <span class="comment"># 当前的总连接数 TCP</span></span><br><span class="line">handled <span class="comment"># 成功的连接数 TCP</span></span><br><span class="line">requests <span class="comment"># 总的 http 请求数</span></span><br><span class="line">Reading <span class="comment"># 请求</span></span><br><span class="line">Writing <span class="comment"># 响应</span></span><br><span class="line">Waiting <span class="comment"># 等待的请求数，开启了 keepalive</span></span><br><span class="line"><span class="comment"># 注意, 一次 TCP 的连接，可以发起多次 http 的请求, 如下参数可配置进行验证</span></span><br><span class="line">keepalive_timeout 0; <span class="comment"># 类似于关闭长连接</span></span><br><span class="line">keepalive_timeout 65; <span class="comment"># 65s 没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h3 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat /etc/nginx/conf.d/status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-访问测试"><a href="#2-3-访问测试" class="headerlink" title="2.3 访问测试"></a>2.3 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 32 32 31 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><h2 id="第3章-访问控制"><a href="#第3章-访问控制" class="headerlink" title="第3章 访问控制"></a>第3章 访问控制</h2><h3 id="3-1-基于IP的访问控制"><a href="#3-1-基于IP的访问控制" class="headerlink" title="3.1 基于IP的访问控制"></a>3.1 基于IP的访问控制</h3><h4 id="3-1-1-配置语法"><a href="#3-1-1-配置语法" class="headerlink" title="3.1.1 配置语法"></a>3.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许配置语法</span></span><br><span class="line">Syntax: allow address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝配置语法</span></span><br><span class="line">Syntax: deny address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-1-2-案例一：拒绝windwos访问www域名"><a href="#3-1-2-案例一：拒绝windwos访问www域名" class="headerlink" title="3.1.2 案例一：拒绝windwos访问www域名"></a>3.1.2 案例一：拒绝windwos访问www域名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.1;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-windows访问测试403"><a href="#3-1-3-windows访问测试403" class="headerlink" title="3.1.3 windows访问测试403"></a>3.1.3 windows访问测试403</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559603770.png"  alt=""></p><h4 id="3-1-4-使用curl访问测试ok"><a href="#3-1-4-使用curl访问测试ok" class="headerlink" title="3.1.4 使用curl访问测试ok"></a>3.1.4 使用curl访问测试ok</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br></pre></td></tr></table></figure><h4 id="3-1-5-案例二：只允许windows访问，其他全部拒绝"><a href="#3-1-5-案例二：只允许windows访问，其他全部拒绝" class="headerlink" title="3.1.5 案例二：只允许windows访问，其他全部拒绝"></a>3.1.5 案例二：只允许windows访问，其他全部拒绝</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        allow 10.0.1.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-6-windows访问测试ok"><a href="#3-1-6-windows访问测试ok" class="headerlink" title="3.1.6 windows访问测试ok"></a>3.1.6 windows访问测试ok</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559807100.png"  alt=""></p><h4 id="3-1-7-curl访问测试403"><a href="#3-1-7-curl访问测试403" class="headerlink" title="3.1.7 curl访问测试403"></a>3.1.7 curl访问测试403</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.16.0&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-基于用户认证的访问控制"><a href="#3-2-基于用户认证的访问控制" class="headerlink" title="3.2 基于用户认证的访问控制"></a>3.2 基于用户认证的访问控制</h3><h4 id="3-2-1-配置语法"><a href="#3-2-1-配置语法" class="headerlink" title="3.2.1 配置语法"></a>3.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问提示字符串</span></span><br><span class="line">Syntax: auth_basic string| off;</span><br><span class="line">Default: auth_basic off;</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#账户密码文件</span></span><br><span class="line">Syntax: auth_basic_user_file file;</span><br><span class="line">Default: -</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-2-2-配置文件"><a href="#3-2-2-配置文件" class="headerlink" title="3.2.2 配置文件"></a>3.2.2 配置文件</h4><p>安装httpd-tools,该包中携带了 htpasswd 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install httpd-tools</span></span><br></pre></td></tr></table></figure><p>创建新的密码文件, -c 创建新文件 -b 允许命令行输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># htpasswd -b -c /etc/nginx/auth_conf wufei 123456 </span></span><br><span class="line">Adding password <span class="keyword">for</span> user wufei</span><br></pre></td></tr></table></figure><p>nginx 配置调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        auth_basic <span class="string">"Auth access Blog Input your Passwd!"</span>;</span><br><span class="line">        auth_basic_user_file auth_conf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx3.2.3 访问测试</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-访问测试"><a href="#3-2-3-访问测试" class="headerlink" title="3.2.3 访问测试"></a>3.2.3 访问测试</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564560409082.png"  alt=""></p><h2 id="第4章-访问限制"><a href="#第4章-访问限制" class="headerlink" title="第4章 访问限制"></a>第4章 访问限制</h2><p>经常会遇到这种情况，服务器流量异常，负载过大等等。对于大流量恶意的攻击访问， 会带来带宽的浪费，服务器压力，影响业务，往往考虑对同一个 ip 的连接数，请求数、进行限制。<br>ngx_http_limit_conn_module 模块可以根据定义的 key 来限制每个键值的连接数，如同一个 IP 来源的连接数。<br>limit_conn_module 连接频率限制<br>limit_req_module 请求频率限制</p><h3 id="4-1-连接限制"><a href="#4-1-连接限制" class="headerlink" title="4.1 连接限制"></a>4.1 连接限制</h3><h4 id="4-1-1-配置语法"><a href="#4-1-1-配置语法" class="headerlink" title="4.1.1 配置语法"></a>4.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_conn_module</span></span><br><span class="line">Syntax: limit_conn_zone key zone=name:size;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-1-2-配置文件"><a href="#4-1-2-配置文件" class="headerlink" title="4.1.2 配置文件"></a>4.1.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http 标签段定义连接限制</span></span><br><span class="line">http&#123;</span><br><span class="line">      limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># server标签里引用条件</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    limit_conn conn_zone 1;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-1-3-访问测试"><a href="#4-1-3-访问测试" class="headerlink" title="4.1.3 访问测试"></a>4.1.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-1-4-查看日志"><a href="#4-1-4-查看日志" class="headerlink" title="4.1.4 查看日志"></a>4.1.4 查看日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:15:55 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h3 id="4-2请求限制"><a href="#4-2请求限制" class="headerlink" title="4.2请求限制"></a>4.2请求限制</h3><h4 id="4-2-1-配置语法"><a href="#4-2-1-配置语法" class="headerlink" title="4.2.1 配置语法"></a>4.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_req_module</span></span><br><span class="line">Syntax: limit_req_zone key zone=name:size rate=rate;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number [burst=number] [nodelay];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-2-2-配置文件"><a href="#4-2-2-配置文件" class="headerlink" title="4.2.2 配置文件"></a>4.2.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=req_zone:10m rate=1r/s;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    <span class="comment">#limit_conn conn_zone 1;</span></span><br><span class="line"></span><br><span class="line">    limit_req zone=req_zone burst=3 nodelay;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-2-3-访问测试"><a href="#4-2-3-访问测试" class="headerlink" title="4.2.3 访问测试"></a>4.2.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-2-4-查看访问日志"><a href="#4-2-4-查看访问日志" class="headerlink" title="4.2.4 查看访问日志"></a>4.2.4 查看访问日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h5 id="4-2-5-查看错误日志"><a href="#4-2-5-查看错误日志" class="headerlink" title="4.2.5 查看错误日志"></a>4.2.5 查看错误日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -5 /var/log/nginx/error.log</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *191 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *192 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *193 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *194 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *195 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-为什么限制请求的效果更好"><a href="#4-3-为什么限制请求的效果更好" class="headerlink" title="4.3 为什么限制请求的效果更好"></a>4.3 为什么限制请求的效果更好</h3><p>我们先来回顾一下 http 协议的连接与请求</p><p>首先 HTTP 是建立在 TCP 基础之上, 在完成 HTTP 请求需要先建立TCP 三次握手（称为 TCP 连接） ,在连接的基础上在完成 HTTP 的请求。<br>所以多个 HTTP 请求可以建立在一次 TCP 连接之上, 那么我们对请求的精度限制，当然比对一个连接的限制会更加的有效，因为同一时刻只允许一个 TCP 连接进入, 但是同一时刻多个 HTTP 请求可以通过一个 TCP 连接进入。所以针对 HTTP 的请求限制才是比较优的解决方案。</p><h2 id="第5章-location"><a href="#第5章-location" class="headerlink" title="第5章 location"></a>第5章 location</h2><p>使用 Nginx Location 可以控制访问网站的路径, 但一个 server 可以有多个 location 配置, 多个 location 的优先级该如何区分</p><h3 id="5-1-location语法介绍"><a href="#5-1-location语法介绍" class="headerlink" title="5.1 location语法介绍"></a>5.1 location语法介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">location [=|^~|~|~*|!~|!~*|/] /uri/ &#123; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-location语法优先级"><a href="#5-2-location语法优先级" class="headerlink" title="5.2 location语法优先级"></a>5.2 location语法优先级</h3><table><thead><tr><th>匹配符</th><th>匹配规则</th><th>优先级</th></tr></thead><tbody><tr><td>=</td><td>精确匹配</td><td>1</td></tr><tr><td>^~</td><td>以某个字符串开头</td><td>2</td></tr><tr><td>~</td><td>区分大小写的正则匹配</td><td>3</td></tr><tr><td>~*</td><td>不区分大小写的正则匹配</td><td>4</td></tr><tr><td>!~</td><td>区分大小写不匹配的正则</td><td>5</td></tr><tr><td>!~*</td><td>不区分大小写不匹配的正则</td><td>6</td></tr><tr><td>/</td><td>通用匹配，任何请求都会匹配到</td><td>7</td></tr></tbody></table><h3 id="5-3-配置location匹配规则实战"><a href="#5-3-配置location匹配规则实战" class="headerlink" title="5.3 配置location匹配规则实战"></a>5.3 配置location匹配规则实战</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf</span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">           <span class="built_in">return</span> 200  <span class="string">"location / \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location = / &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location = \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /documents/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location /documents/ \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ /images/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ^~ /images/ \n"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ~* \.(gif|jpg|jpeg) \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-4-测试location匹配规则"><a href="#5-4-测试location匹配规则" class="headerlink" title="5.4 测试location匹配规则"></a>5.4 测试location匹配规则</h3><p>#精确匹配=/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">location =</span><br></pre></td></tr></table></figure><p>#没有满足的请求，所以匹配了/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#匹配了/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.html</span></span><br><span class="line">location /documents/</span><br></pre></td></tr></table></figure><p>#没有满足的条件，匹配/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy/documents/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#正则匹配了jpg文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#~*匹配正则不区分大小写优先于/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#^<del>优先匹配于</del>*</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/images/oldboy.jpg</span></span><br><span class="line">location ^~ /images/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nginx" scheme="http://linuxwf.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>10.Nginx服务一</title>
    <link href="http://linuxwf.com/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/"/>
    <id>http://linuxwf.com/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/</id>
    <published>2020-04-13T06:11:00.000Z</published>
    <updated>2020-04-13T06:13:02.660Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx服务一"><a href="#Nginx服务一" class="headerlink" title="Nginx服务一"></a>Nginx服务一</h1><h2 id="第1章-Nginx介绍"><a href="#第1章-Nginx介绍" class="headerlink" title="第1章 Nginx介绍"></a>第1章 Nginx介绍</h2><h3 id="1-1-什么是Nginx？"><a href="#1-1-什么是Nginx？" class="headerlink" title="1.1 什么是Nginx？"></a>1.1 什么是Nginx？</h3><p>Nginx 是一个开源且高性能、可靠的 Http Web 服务、代理服务。<br>开源: 直接获取源代码<br>高性能: 支持海量并发<br>可靠: 服务稳定</p><h3 id="1-2-为什么选择-Nginx-服务"><a href="#1-2-为什么选择-Nginx-服务" class="headerlink" title="1.2 为什么选择 Nginx 服务"></a>1.2 为什么选择 Nginx 服务</h3><p>Nginx 非常轻量<br>功能模块少 (源代码仅保留 http 与核心模块代码,其余不够核心代码会作为插件来安装)<br>代码模块化 (易读，便于二次开发，对于开发人员非常友好)<br>互联网公司都选择 Nginx</p><ul><li>1.Nginx 技术成熟，具备的功能是企业最常使用而且最需要的</li><li>2.适合当前主流架构趋势, 微服务、云架构、中间层</li><li>3.统一技术栈, 降低维护成本, 降低技术更新成本。</li></ul><h3 id="1-3-Nginx重要特性"><a href="#1-3-Nginx重要特性" class="headerlink" title="1.3 Nginx重要特性"></a>1.3 Nginx重要特性</h3><p>Nginx 采用 Epool 网络模型， Apache 采用 Select 模型<br>Select: 当用户发起一次请求， select 模型就会进行一次遍历扫描，从而导致性能低下。<br>Epool: 当用户发起请求， epool 模型会直接进行处理，效率高效，并无连接限制</p><h3 id="1-4-Nginx应用场景"><a href="#1-4-Nginx应用场景" class="headerlink" title="1.4 Nginx应用场景"></a>1.4 Nginx应用场景</h3><p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx.webp.jpg"  alt=""></p><h2 id="第2章-Nginx安装部署"><a href="#第2章-Nginx安装部署" class="headerlink" title="第2章 Nginx安装部署"></a>第2章 Nginx安装部署</h2><p>Nginx分为几种</p><ul><li>1.源码编译(1.版本随意 2.安装复杂 3.升级繁琐)</li><li>2.epel仓库(1.版本较低 2.安装简单 3.配置不易读)</li><li>3.官方仓库(1.版本较新 2.安装简单 3.配置易读，(推荐)</li></ul><p>下面分别介绍编译安装和yum安装方法</p><h3 id="2-1-编译安装方法"><a href="#2-1-编译安装方法" class="headerlink" title="2.1 编译安装方法"></a>2.1 编译安装方法</h3><h4 id="创建www用户"><a href="#创建www用户" class="headerlink" title="创建www用户"></a>创建www用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel gcc gcc+ -y</span></span><br></pre></td></tr></table></figure><h4 id="下载解压软件包"><a href="#下载解压软件包" class="headerlink" title="下载解压软件包"></a>下载解压软件包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /data/soft -p</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># wget http://nginx.org/download/nginx-1.16.0.tar.gz</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># tar zxvf nginx-1.16.0.tar.gz</span></span><br></pre></td></tr></table></figure><h4 id="配置编译参数"><a href="#配置编译参数" class="headerlink" title="配置编译参数"></a>配置编译参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/nginx-1.16.0/</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --help</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --user=www --group=www --prefix=/opt/nginx-1.16.0/ --with-http_stub_status_module --with-http_ssl_module --with-pcre</span></span><br></pre></td></tr></table></figure><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h4 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ln -s /opt/nginx-1.16.0/ /opt/nginx</span></span><br><span class="line">[root@web01 /opt]<span class="comment"># ll</span></span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx  1 root root  12 Jul 30 10:13 nginx -&gt; nginx-1.16.0</span><br><span class="line">drwxr-xr-x 11 root root 151 Jul 30 10:14 nginx-1.16.0</span><br></pre></td></tr></table></figure><h4 id="检查语法"><a href="#检查语法" class="headerlink" title="检查语法"></a>检查语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx -t</span></span><br><span class="line">nginx: the configuration file /opt/nginx-1.16.0//conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /opt/nginx-1.16.0//conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure><h4 id="检查测试"><a href="#检查测试" class="headerlink" title="检查测试"></a>检查测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># netstat -lntup|grep nginx</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      12828/nginx: master </span><br><span class="line">[root@web01 /opt/nginx]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h3 id="2-2-YUM安装方法"><a href="#2-2-YUM安装方法" class="headerlink" title="2.2 YUM安装方法"></a>2.2 YUM安装方法</h3><h4 id="安装依赖包-1"><a href="#安装依赖包-1" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel -y</span></span><br></pre></td></tr></table></figure><h4 id="配置官方yum源"><a href="#配置官方yum源" class="headerlink" title="配置官方yum源"></a>配置官方yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><h4 id="安装nginx服务"><a href="#安装nginx服务" class="headerlink" title="安装nginx服务"></a>安装nginx服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nginx</span></span><br></pre></td></tr></table></figure><h4 id="启动服务并配置开机自启动"><a href="#启动服务并配置开机自启动" class="headerlink" title="启动服务并配置开机自启动"></a>启动服务并配置开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h4 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h4 id="Nginx启动方式说明"><a href="#Nginx启动方式说明" class="headerlink" title="Nginx启动方式说明"></a>Nginx启动方式说明</h4><p>编译安装启动管理方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -t  <span class="comment">#检查语法</span></span><br><span class="line">nginx     <span class="comment">#启动服务</span></span><br><span class="line">nginx -s reload  <span class="comment">#重新加载服务</span></span><br><span class="line">nginx -s stop    <span class="comment">#关闭服务</span></span><br></pre></td></tr></table></figure><p>yum安装启动管理方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx -t                  <span class="comment">#检查语法</span></span><br><span class="line">systemctl start nginx     <span class="comment">#启动服务</span></span><br><span class="line">systemctl reload nginx    <span class="comment">#重新加载服务</span></span><br><span class="line">systemctl restart nginx   <span class="comment">#重启服务</span></span><br><span class="line">systemctl stop  nginx     <span class="comment">#停止服务</span></span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx重要配置文件说明"><a href="#第3章-Nginx重要配置文件说明" class="headerlink" title="第3章 Nginx重要配置文件说明"></a>第3章 Nginx重要配置文件说明</h2><h3 id="3-1-查看配置文件"><a href="#3-1-查看配置文件" class="headerlink" title="3.1 查看配置文件"></a>3.1 查看配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rpm -ql nginx </span></span><br><span class="line">...................................................                     </span><br><span class="line">/etc/logrotate.d/nginx                     <span class="comment">#nginx日志切割的配置文件</span></span><br><span class="line">/etc/nginx/nginx.conf                      <span class="comment">#nginx主配置文件 </span></span><br><span class="line">/etc/nginx/conf.d                          <span class="comment">#子配置文件</span></span><br><span class="line">/etc/nginx/conf.d/default.conf             <span class="comment">#默认展示的页面一样 </span></span><br><span class="line">/etc/nginx/mime.types                      <span class="comment">#媒体类型 （http协议中的文件类型）</span></span><br><span class="line">/etc/sysconfig/nginx                       <span class="comment">#systemctl 管理 nginx的使用的文件</span></span><br><span class="line">/usr/lib/systemd/system/nginx.service      <span class="comment">#systemctl 管理nginx（开 关 重启 reload)配置文件       </span></span><br><span class="line">/usr/sbin/nginx                            <span class="comment">#nginx命令</span></span><br><span class="line">/usr/share/nginx/html                      <span class="comment">#站点目录 网站的根目录 </span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx                             <span class="comment">#nginx日志 access.log 访问日志</span></span><br><span class="line">...................................................</span><br></pre></td></tr></table></figure><h3 id="3-2-查看已经编译的模块"><a href="#3-2-查看已经编译的模块" class="headerlink" title="3.2 查看已经编译的模块"></a>3.2 查看已经编译的模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br></pre></td></tr></table></figure><h3 id="3-3-配置文件注解"><a href="#3-3-配置文件注解" class="headerlink" title="3.3 配置文件注解"></a>3.3 配置文件注解</h3><p>Nginx 主配置文件/etc/nginx/nginx.conf 是一个纯文本类型的文件，整个配置文件是以区块的形式组织的。一般，每个区块以一对大括号{}来表示开始与结束。<br>Nginx 主配置文件整体分为三块进行学习，分别是<br>CoreModule(核心模块)<br>EventModule(事件驱动模块)<br>HttpCoreModule(http 内核模块)</p><h4 id="3-3-1-第一部分：配置文件主区域配置"><a href="#3-3-1-第一部分：配置文件主区域配置" class="headerlink" title="3.3.1 第一部分：配置文件主区域配置"></a>3.3.1 第一部分：配置文件主区域配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;                    <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  1;            <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;             <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;                        <span class="comment">#nginx运行pid</span></span><br></pre></td></tr></table></figure><h4 id="3-3-2-第二部分：配置文件事件区域"><a href="#3-3-2-第二部分：配置文件事件区域" class="headerlink" title="3.3.2 第二部分：配置文件事件区域"></a>3.3.2 第二部分：配置文件事件区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;  <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-第三部分：配置http区域"><a href="#3-3-3-第三部分：配置http区域" class="headerlink" title="3.3.3 第三部分：配置http区域"></a>3.3.3 第三部分：配置http区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;          <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;                             <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;                       </span></span><br><span class="line">    keepalive_timeout  65;                          <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="comment">#gzip  on;                                      #开启压缩</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;               <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-4-第四部分：子配置文件内容"><a href="#3-3-4-第四部分：子配置文件内容" class="headerlink" title="3.3.4 第四部分：子配置文件内容"></a>3.3.4 第四部分：子配置文件内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># egrep -v "#|^$" /etc/nginx/conf.d/default.conf     </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;             <span class="comment">#指定监听端口</span></span><br><span class="line">    server_name  localhost;      <span class="comment">#指定监听的域名</span></span><br><span class="line">    location / &#123;              </span><br><span class="line">        root   /usr/share/nginx/html;     <span class="comment">#定义站点的目录</span></span><br><span class="line">        index  index.html index.htm;      <span class="comment">#定义首页文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;    <span class="comment">#优雅显示页面信息</span></span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http server location 扩展了解项<br>http{}层下允许有多个 Server{}层，一个 Server{}层下又允许有多个 Location<br>http{} 标签主要用来解决用户的请求与响应。<br>server{} 标签主要用来响应具体的某一个网站。<br>location{} 标签主要用于匹配网站具体 URL 路径</p><h2 id="第4章-Nginx虚拟主机配置实战"><a href="#第4章-Nginx虚拟主机配置实战" class="headerlink" title="第4章 Nginx虚拟主机配置实战"></a>第4章 Nginx虚拟主机配置实战</h2><h3 id="4-1-基于域名的虚拟主机"><a href="#4-1-基于域名的虚拟主机" class="headerlink" title="4.1 基于域名的虚拟主机"></a>4.1 基于域名的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-基于端口的虚拟主机"><a href="#4-2-基于端口的虚拟主机" class="headerlink" title="4.2 基于端口的虚拟主机"></a>4.2 基于端口的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       82;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-基于IP的虚拟主机"><a href="#4-3-基于IP的虚拟主机" class="headerlink" title="4.3 基于IP的虚拟主机"></a>4.3 基于IP的虚拟主机</h3><p>添加第二IP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.1.11/24 dev eth0</span><br></pre></td></tr></table></figure><p>配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/nginx.conf    </span></span><br><span class="line"></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.7:81;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.11:82;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第5章-Nginx虚拟主机配置优化"><a href="#第5章-Nginx虚拟主机配置优化" class="headerlink" title="第5章 Nginx虚拟主机配置优化"></a>第5章 Nginx虚拟主机配置优化</h2><p>所有配置都写入一个配置文件维护起来比较麻烦，如果修改错了，影响整个服务起不来，所以我们应该拆分nginx的配置文件为各个子配置</p><h3 id="5-1-Nginx主配置文件"><a href="#5-1-Nginx主配置文件" class="headerlink" title="5.1 Nginx主配置文件"></a>5.1 Nginx主配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;    <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-编辑子配置文件www、blog、bbs"><a href="#5-2-编辑子配置文件www、blog、bbs" class="headerlink" title="5.2 编辑子配置文件www、blog、bbs"></a>5.2 编辑子配置文件www、blog、bbs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 02-blog.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/blog;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-创建代码目录及首页"><a href="#5-3-创建代码目录及首页" class="headerlink" title="5.3 创建代码目录及首页"></a>5.3 创建代码目录及首页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># mkdir /usr/share/nginx/html/&#123;www,blog,bbs&#125;</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "www" &gt; /usr/share/nginx/html/www/index.html</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "blog" &gt; /usr/share/nginx/html/blog/index.html </span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "bbs" &gt; /usr/share/nginx/html/bbs/index.html</span></span><br></pre></td></tr></table></figure><h3 id="5-4-检查语法重启服务"><a href="#5-4-检查语法重启服务" class="headerlink" title="5.4 检查语法重启服务"></a>5.4 检查语法重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-5-配置-etc-hosts文件"><a href="#5-5-配置-etc-hosts文件" class="headerlink" title="5.5 配置/etc/hosts文件"></a>5.5 配置/etc/hosts文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="5-6-访问测试"><a href="#5-6-访问测试" class="headerlink" title="5.6 访问测试"></a>5.6 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br><span class="line">[root@web01 ~]<span class="comment"># curl blog.oldboy.com</span></span><br><span class="line">blog</span><br><span class="line">[root@web01 ~]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">bbs</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx状态模块"><a href="#第6章-Nginx状态模块" class="headerlink" title="第6章 Nginx状态模块"></a>第6章 Nginx状态模块</h2><p>nginx状态模块： –with-http_stub_status_module</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># tail -1 /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com  status.oldboy.com</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 25 25 22 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><p>nginx状态信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Active connections  <span class="comment">#当前活动的连接数</span></span><br><span class="line">accepts             <span class="comment">#当前连接总数TCP</span></span><br><span class="line">handled             <span class="comment">#成功的连接数TCP</span></span><br><span class="line">requests            <span class="comment">#总的HTTP请求数</span></span><br><span class="line"></span><br><span class="line">Reading             <span class="comment">#请求</span></span><br><span class="line">Writing             <span class="comment">#响应</span></span><br><span class="line">Waiting             <span class="comment">#等待的请求数，开启了keepalive</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：一次TCP的连接，可以发起多次的http请求，如下参数可配置验证</span></span><br><span class="line">keepalive——timeout 0;   <span class="comment">#类似与关闭长连接</span></span><br><span class="line">keepalive——timeout 65;  <span class="comment">#65s没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h2 id="第7章-Nginx日志"><a href="#第7章-Nginx日志" class="headerlink" title="第7章 Nginx日志"></a>第7章 Nginx日志</h2><p>日志字段解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$remote_addr</span> <span class="comment"># 记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$remote_user</span> <span class="comment"># 记录客户端用户名</span></span><br><span class="line"><span class="variable">$time_local</span> <span class="comment"># 记录通用的本地时间</span></span><br><span class="line"><span class="variable">$time_iso8601</span> <span class="comment"># 记录 ISO8601 标准格式下的本地时间</span></span><br><span class="line"><span class="variable">$request</span> <span class="comment"># 记录请求的方法以及请求的 http 协议</span></span><br><span class="line"><span class="variable">$status</span> <span class="comment"># 记录请求状态码(用于定位错误信息)</span></span><br><span class="line"><span class="variable">$body_bytes_sent</span> <span class="comment"># 发送给客户端的资源字节数，不包括响应头的大小</span></span><br><span class="line"><span class="variable">$bytes_sent</span> <span class="comment"># 发送给客户端的总字节数</span></span><br><span class="line"><span class="variable">$msec</span> <span class="comment"># 日志写入时间。单位为秒，精度是毫秒。</span></span><br><span class="line"><span class="variable">$http_referer</span> <span class="comment"># 记录从哪个页面链接访问过来的</span></span><br><span class="line"><span class="variable">$http_user_agent</span> <span class="comment"># 记录客户端浏览器相关信息</span></span><br><span class="line"><span class="variable">$http_x_forwarded_for</span> <span class="comment">#记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$request_length</span> <span class="comment"># 请求的长度（包括请求行， 请求头和请求正文）。</span></span><br><span class="line"><span class="variable">$request_time</span> <span class="comment"># 请求花费的时间，单位为秒，精度毫秒</span></span><br><span class="line"><span class="comment"># 注:如果 Nginx 位于负载均衡器， nginx 反向代理之后， web 服务器无法直接获取到客 户端真实的 IP 地址。</span></span><br><span class="line"><span class="comment"># $remote_addr 获取的是反向代理的 IP 地址。 反向代理服务器在转发请求的 http 头信息中，</span></span><br><span class="line"><span class="comment"># 增加 X-Forwarded-For 信息，用来记录客户端 IP 地址和客户端请求的服务器地址。</span></span><br></pre></td></tr></table></figure><p>nginx不停服务进行切割日志：</p><ol><li><p>编辑切割日志脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># cat nginx_log.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#01.设置日志文件存放目录</span></span><br><span class="line">log_path=/var/<span class="built_in">log</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.设置日志命令变量</span></span><br><span class="line">YESTERDAY=`date -d <span class="string">"yesterday"</span> +%Y-%m-%d_%S`</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.日志命令变量</span></span><br><span class="line">nginx_cmd=<span class="string">"/usr/sbin/nginx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#04.重命令日志文件</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/access.log <span class="variable">$&#123;log_path&#125;</span>/access.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/error.log  <span class="variable">$&#123;log_path&#125;</span>/error.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#05.重新打开一个新的日志文件</span></span><br><span class="line"><span class="variable">$&#123;nginx_cmd&#125;</span> -s reopen</span><br></pre></td></tr></table></figure></li><li><p>设置定时任务，每天晚12点切割</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#定时切割nginx日志文件</span></span><br><span class="line">0 0 * * * /bin/bash /server/scripts/nginx_log.sh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nginx" scheme="http://linuxwf.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>9.HTTP服务</title>
    <link href="http://linuxwf.com/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://linuxwf.com/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-04-13T06:02:00.000Z</published>
    <updated>2020-04-13T09:28:14.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTP服务"><a href="#HTTP服务" class="headerlink" title="HTTP服务"></a>HTTP服务</h1><h2 id="第1章-用户访问流程"><a href="#第1章-用户访问流程" class="headerlink" title="第1章 用户访问流程"></a>第1章 用户访问流程</h2><p>在浏览器输入想要访问的<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名</a>之后，浏览器会进行<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名解析</a>获得IP地址，在经过TCP的连接，实现数据的传输就会有两种报文，及请求报文和响应报文。最终才能实现通信。因此想要实现通信，就得先弄懂DNS的解析原理以及TCP连接通道的流程。</p><p>访问网站流程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">00. 客户端  浏览器输入网址信息点击回车(www.oldboyedu.com)</span><br><span class="line">01. 客户端  完成域名的解析过程(DNS) </span><br><span class="line">02. 客户端  直接访问相应网站服务器  建立TCP三次握手过程</span><br><span class="line">03. 客户端  访问网站服务器         发送HTTP请求报文  多次</span><br><span class="line">04. 服务端  响应客户端请求         回复HTTP响应报文  多次</span><br><span class="line">05. 客户端  浏览器看到网站页面</span><br><span class="line">06. 客户端  结束访问网站过程       完成TCP四次挥手过程</span><br></pre></td></tr></table></figure><p>关键名词</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.域名</span><br><span class="line">2.DNS域名解析</span><br><span class="line">3.TCP三次握手</span><br><span class="line">4.TCP四次挥手</span><br><span class="line">5.HTTP请求报文</span><br><span class="line">6.HTTP响应报文</span><br></pre></td></tr></table></figure><h2 id="第2章-DNS域名解析"><a href="#第2章-DNS域名解析" class="headerlink" title="第2章 DNS域名解析"></a>第2章 DNS域名解析</h2><h3 id="2-1-DNS-介绍"><a href="#2-1-DNS-介绍" class="headerlink" title="2.1 DNS 介绍"></a>2.1 DNS 介绍</h3><p><code>域名系统 (Domain Name Server)</code>。在Internet上域名与IP地址之间是一一对应的，域名虽然便于人们记忆，但机器之间只能互相认识IP地址，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，DNS就是进行域名解析的服务器。</p><p>它的主要作用是负责把网站域名解析为对应的IP地址<br>例如:把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a>解析为对应的IP地址记录如1.1.1.1,这个从域名到IP的解析过程称为A记录,即Address Record<br>DNS常用记录类型主要有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@记录</span><br><span class="line">A记录</span><br><span class="line">CNAME记录</span><br></pre></td></tr></table></figure><p>阿里云的DNS解析界面</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-445161470b1607f5.webp.jpg"  alt=""></p><p>DNS解析流程图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/DNS.webp.jpg"  alt=""></p><p>使用dig命令追踪DNS解析过程</p><p>安装dig命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="built_in">bind</span>-utils -y</span><br></pre></td></tr></table></figure><p>使用dig命令追踪：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei ~]<span class="comment"># dig www.baidu.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-74.el7_6.1 &lt;&lt;&gt;&gt; www.baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 61542</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 5, ADDITIONAL: 5</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.baidu.com.5INCNAMEwww.a.shifen.com.</span><br><span class="line">www.a.shifen.com.5INA14.215.177.38</span><br><span class="line">www.a.shifen.com.5INA14.215.177.39</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">a.shifen.com.5INNSns3.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns4.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns2.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns5.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns1.a.shifen.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns1.a.shifen.com.5INA61.135.165.224</span><br><span class="line">ns2.a.shifen.com.5INA220.181.33.32</span><br><span class="line">ns3.a.shifen.com.5INA112.80.255.253</span><br><span class="line">ns4.a.shifen.com.5INA14.215.177.229</span><br><span class="line">ns5.a.shifen.com.5INA180.76.76.95</span><br><span class="line"></span><br><span class="line">;; Query time: 2 msec</span><br><span class="line">;; SERVER: 10.0.1.254<span class="comment">#53(10.0.1.254)</span></span><br><span class="line">;; WHEN: Tue Jul 30 15:01:32 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 260</span><br></pre></td></tr></table></figure><h3 id="2-2-DNS-解析流程"><a href="#2-2-DNS-解析流程" class="headerlink" title="2.2 DNS 解析流程"></a>2.2 DNS 解析流程</h3><p>1) 第一步:</p><p>客户端用户在浏览器里输入<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>网址后回车,系统首先会查找系统本地的DNS缓存及host文件信息,确定是否存在<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的IP解析记录,如果有就直接获取到IP地址,然后去访问这个IP地址对应的<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的服务器.一般第一次请求时,DNS缓存是没有解析记录的,而hosts多为内部临时测试使用.</p><p>2) 第二步:</p><p>如果客户端本地DNS缓存及本地hosts文件没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,那么,系统会把浏览器的解析请求发送给在客户端本地设置的DNS服务器地址解析,通常称次DNS为LDNS即local DNS,如果LDNS服务器的本地缓存存有对应的解析记录就会直接返回给IP地址给客户端:如果没有,则LDNS会负责继续请求其他的DNS服务器.</p><p>3) 第三步:</p><p>LDNS从DNS系统的(“.”)根开始请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,根DNS服务器在全球一共有13台,根服务器下面是没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名解析记录的,但是根下面有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的顶级域名.com的解析记录,因此,根会把.com对应的DNS服务器地址返回给LDNS.</p><p>4) 第四步:</p><p>LDNS获取到.com对应的DNS服务器地址后,就会去.com服务器请求<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,.而com服务器下面也没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,但是有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名的解析记录,因此.com服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址返回给DNS.</p><p>5) 第五步:</p><p>同理,LDNS获取到<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址后,就会去<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>服务器请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名对应的DNS服务器是该域名的授权DNS服务器,这个DNS服务器正是企业购买域名时用于管理解析的服务器,这个服务器会有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的解析记录,如果此时没有,就表示企业还没有对这个域名做解析,即网站服务器还没有架设好.</p><p>6) 第六步:</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名DNS服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给LDNS.</p><p>7) 第七步:</p><p>LDNS把来自授权DNS服务器的与<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给客户端浏览器,并且LDNS会在本地把域名和IP对应解析记录缓存起来,以便下一次更快的返回相同解析请求的记录.至此,整个DNS的解析流程就完成了.</p><h2 id="第3章-TCP-IP-协议"><a href="#第3章-TCP-IP-协议" class="headerlink" title="第3章 TCP/IP 协议"></a>第3章 TCP/IP 协议</h2><h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IP7.webp.jpg"  alt=""></p><h3 id="TCP-IP四层模型"><a href="#TCP-IP四层模型" class="headerlink" title="TCP/IP四层模型"></a>TCP/IP四层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564471603972.png"  alt=""></p><h3 id="TCP-IP每层包含的协议"><a href="#TCP-IP每层包含的协议" class="headerlink" title="TCP/IP每层包含的协议"></a>TCP/IP每层包含的协议</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IPxieyi.webp.jpg"  alt=""></p><h3 id="TCP报文格式"><a href="#TCP报文格式" class="headerlink" title="TCP报文格式"></a>TCP报文格式</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCPbaowen.webp.jpg"  alt=""></p><h3 id="TCP-IP三次握手"><a href="#TCP-IP三次握手" class="headerlink" title="TCP/IP三次握手"></a>TCP/IP三次握手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_3woshou.webp.jpg"  alt=""></p><h3 id="TCP-IP四次挥手"><a href="#TCP-IP四次挥手" class="headerlink" title="TCP/IP四次挥手"></a>TCP/IP四次挥手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_4huishou.webp.jpg"  alt=""></p><h2 id="第4章-HTTP协议"><a href="#第4章-HTTP协议" class="headerlink" title="第4章 HTTP协议"></a>第4章 HTTP协议</h2><p>URL：全称为Uniform Resource Location，中文翻译为统一资源定位符</p><p>URI：全称为Uniform Resource Identifier，中文翻译为统一资源标识符</p><p>URL和URI关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docs.ansible.com   / ansible/latest/user_guide/playbooks_reuse_roles.html</span><br><span class="line">URL                  URI</span><br></pre></td></tr></table></figure><h3 id="4-1-静态资源"><a href="#4-1-静态资源" class="headerlink" title="4.1 静态资源"></a>4.1 静态资源</h3><p>特点说明:</p><p>1)  网页内容是固定不变的，因此，容易被搜索引擎收录（容易被用户找到）（优点）。<br>2)  因为网页没有数据库的支持，所以在网站制作和维护方面的工作量较大，当网站信息量很大时，<br>完全依靠静态网页比较困难（缺点）。<br>3)  网页的交互性较差，在程序的功能实现方面有较大的限制（缺点）。<br>4)  当客户端向服务器请求数据时，服务器会直接从磁盘文件系统上返回数据（不做任何解析）。</p><h3 id="4-2-动态资源"><a href="#4-2-动态资源" class="headerlink" title="4.2 动态资源"></a>4.2 动态资源</h3><p>要什么信息,需要进行查询数据库进行解析后发送给客户端<br>查看班级人员信息表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">班级   人名   年龄   学历</span><br><span class="line">sz-01  张三   18     高中   ---&gt; 数据库中 oldboy=123  &lt;--- post </span><br><span class="line">sz-01  李四   20     大专   </span><br><span class="line"></span><br><span class="line">班级   人员   年龄   学历</span><br><span class="line">代码信息直接调用数据库的内容</span><br><span class="line">1) 采用动态网页技术的网站可以实现更多的功能，如用户注册、用户登录、在线调查、</span><br><span class="line">   投票、用户管理、订单处理、发博文等。</span><br><span class="line">2) 动态资源页面会出现 <span class="string">"?"</span> <span class="string">"&amp;"</span>, 不便于被搜索引擎收录</span><br><span class="line">3) 接收到用户请求,需要让动态服务和数据库服务进行处理</span><br></pre></td></tr></table></figure><h3 id="4-3-伪静态资源-动态页面"><a href="#4-3-伪静态资源-动态页面" class="headerlink" title="4.3 伪静态资源(动态页面)"></a>4.3 伪静态资源(动态页面)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 可以便于搜索引擎进行收录</span><br><span class="line">2. 有数据库服务支持,实现网页交互功能</span><br></pre></td></tr></table></figure><h2 id="第5章-HTTP请求方法"><a href="#第5章-HTTP请求方法" class="headerlink" title="第5章 HTTP请求方法"></a>第5章 HTTP请求方法</h2><table><thead><tr><th>HTTP 方法</th><th>作用描述</th></tr></thead><tbody><tr><td>GET</td><td>客户端请制定资源信息，服务器返回指定资源</td></tr><tr><td>HEAD</td><td>只请求响应报文中的HTTP首部</td></tr><tr><td>POST</td><td>将客户端的数据提交到服务器，例如：注册表单</td></tr><tr><td>PUT</td><td>用从客户端向服务器传送的数据取代指定的文档内容</td></tr><tr><td>DELETE</td><td>请求服务器删除Request-URL 所标识的资源</td></tr><tr><td>MOVE</td><td>请求服务器将指定的页面移至另一个网络地址</td></tr></tbody></table><h2 id="第6章HTTP响应状态码"><a href="#第6章HTTP响应状态码" class="headerlink" title="第6章HTTP响应状态码"></a>第6章HTTP响应状态码</h2><h3 id="6-1-响应状态码分类"><a href="#6-1-响应状态码分类" class="headerlink" title="6.1 响应状态码分类"></a>6.1 响应状态码分类</h3><table><thead><tr><th>状态码范围</th><th>作用描述</th></tr></thead><tbody><tr><td>100-199</td><td>用于指定客户端相应的某些动作</td></tr><tr><td>200-299</td><td>用于表示请求成功</td></tr><tr><td>300-399</td><td>用于已经移动的文件，并且常被包含在定位头信息中指定新的地址信息</td></tr><tr><td>400-499</td><td>用于指定客户端的错误</td></tr><tr><td>500-599</td><td>用于指定服务器的错误</td></tr></tbody></table><h3 id="6-2-常见响应状态码解释"><a href="#6-2-常见响应状态码解释" class="headerlink" title="6.2 常见响应状态码解释"></a>6.2 常见响应状态码解释</h3><table><thead><tr><th>状态代码</th><th>详细描述</th></tr></thead><tbody><tr><td>200-OK</td><td>服务器成功返回网页，这是成功的HTTP请求返回的标注状态码</td></tr><tr><td>301-Moved Permanently</td><td>永久跳转，请求的页面已永久移动到新位置。服务器返回此响应（对GET和HEAD请求的响应）时，会自动将请求者转到新位置</td></tr><tr><td>403-Forbidden</td><td>（禁止）服务器拒绝请求，一般为服务器或服务权限不足所致</td></tr><tr><td>404-Not Found</td><td>（未找到）服务器找不到请求的网页,可能是客户端了服务器上不存在的资源所致</td></tr><tr><td>500-Internal Server Error</td><td>（服务器内部错误）服务器遇到错误，无法完成请求</td></tr><tr><td>502-Bad Gateway</td><td>（错误网关）服务器作为网关和代理，从上游服务器收到无效响应</td></tr><tr><td>503-Server Unavailable</td><td>（服务器不可用）服务器目前无法使用（由于超载或者停机维护）。通常，这只是暂时状态</td></tr></tbody></table><p>使用curl查看状态码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="第7章-HTTP请求报文"><a href="#第7章-HTTP请求报文" class="headerlink" title="第7章 HTTP请求报文"></a>第7章 HTTP请求报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>请求行</td><td>请求方法 URL 协议版本</td></tr><tr><td>请求头</td><td>字段名 1：值 1<br />字段名 2：值 2<br />例如：<br />Accept:image/gif image/jpeg<br />Accept-Language:zh-cn</td></tr><tr><td>空行</td><td>空白无内容</td></tr><tr><td>请求报文主体</td><td>GET 方法没有请求报文主体，POST方法才有</td></tr></tbody></table><h3 id="7-1-请求行"><a href="#7-1-请求行" class="headerlink" title="7.1 请求行"></a>7.1 请求行</h3><table><thead><tr><th>请求方法字段示例</th><th>URL 字段示例</th><th>HTTP 协议版本</th></tr></thead><tbody><tr><td>GET</td><td>/index.html</td><td>HTTP/1.1</td></tr></tbody></table><h3 id="7-2-请求头"><a href="#7-2-请求头" class="headerlink" title="7.2 请求头"></a>7.2 请求头</h3><table><thead><tr><th>请求头部信息</th><th>说明</th></tr></thead><tbody><tr><td>Accpet:image/gif,image/jpeg</td><td>媒体类型</td></tr><tr><td>Accpet-Language:zh-ch</td><td>语言类型</td></tr><tr><td>Accpet-Encoding:gzip,deflate</td><td>支持压缩</td></tr><tr><td>User-Agent:Mozilla/4.0(comatible;MSIE6.0;Window NT)</td><td>客户端类型</td></tr><tr><td>Host:<a href="http://www.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a></td><td>主机名</td></tr></tbody></table><h3 id="7-3-空行"><a href="#7-3-空行" class="headerlink" title="7.3 空行"></a>7.3 空行</h3><p>无内容</p><h3 id="7-4-请求主体"><a href="#7-4-请求主体" class="headerlink" title="7.4 请求主体"></a>7.4 请求主体</h3><h2 id="第8章-HTTP响应报文"><a href="#第8章-HTTP响应报文" class="headerlink" title="第8章 HTTP响应报文"></a>第8章 HTTP响应报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>起始行</td><td>协议及版本号，数字状态码，状态信息</td></tr><tr><td>响应头部</td><td>字段名 1：值 1<br />字段名 2：值 2</td></tr><tr><td>空行</td><td>无内容</td></tr><tr><td>响应报文主体</td><td><html><br />……<br /></html></td></tr></tbody></table><h3 id="8-1-起始行"><a href="#8-1-起始行" class="headerlink" title="8.1 起始行"></a>8.1 起始行</h3><p>响应报文的起始行也叫状态行,用来说明服务器相应客户端请求的状态,一般为协议及版本号,数字状态码,状态情况,例如:HTTP/1.1 200 OK</p><h3 id="8-2-响应头部"><a href="#8-2-响应头部" class="headerlink" title="8.2 响应头部"></a>8.2 响应头部</h3><p>和请求报文类似,起始行的后面一般有若干个头部字段,每隔头部字段都包含一个名字和一个值,两者之间用冒号分隔.头部结尾也是以空行结束.常见的头部信息有</p><h3 id="8-3-空行"><a href="#8-3-空行" class="headerlink" title="8.3 空行"></a>8.3 空行</h3><p>无内容</p><h3 id="8-4-响应主体"><a href="#8-4-响应主体" class="headerlink" title="8.4 响应主体"></a>8.4 响应主体</h3><p>响应报文主体装载了要返回给客户端的数据,这些数据可以是文本,也可以使二进制的图片视频,下面是响应报文主体的html格式文本</p><h2 id="第9章-用户访问网站流程总结"><a href="#第9章-用户访问网站流程总结" class="headerlink" title="第9章 用户访问网站流程总结"></a>第9章 用户访问网站流程总结</h2><ol><li>用户输入域名-&gt;浏览器跳转-&gt;浏览器缓存-&gt;Hosts 文件-&gt;DNS 解析( 递归查询 | 迭代查询 )<br>客户端向服务端发起查询-&gt;递归查询<br>服务端向服务端发起查询-&gt;迭代查询</li><li>由浏览器向服务端发起 TCP 连接（三次握手）</li></ol><ul><li>客户端 –&gt;请求包连接-syn=1 seq=x 服务端</li><li>服务端 –&gt;向应客户端 syn=1 ack=x+1 seq=y 客户端</li><li>客户端 –&gt;建立连接 ack=y+1 seq=x+1 服务端</li></ul><ol start="3"><li>客户端发起 http 请求：</li></ol><ul><li>1）请求的方法是什么： Get 获取</li><li>2）请求的 Host 主机是： <a href="http://www.oldboyedu.com" target="_blank" rel="noopener">www.oldboyedu.com</a></li><li>3）请求的资源是什么： /index.html</li><li>4）请求的端口是什么： 默认 http 是 80 https 443</li><li>5）请求携带的参数是： 属性（请求的类型、压缩、认证、浏览器信息、等等）</li><li>6）请求最后的空行</li></ul><ol start="4"><li>服务端响应的内容是：</li></ol><ul><li>1）服务端响应使用的 WEB 服务软件</li><li>2）服务端响应请求文件的类型</li><li>3）服务端响应请求的文件是否进行压缩</li><li>4）服务端响应请求的主机是否进行长连接</li><li>5）客户端向服务端发起 TCP 断开（四次挥手）</li></ul><ol start="5"><li>客户端向服务端发起 TCP 断开（四次挥手）</li></ol><ul><li>客户端 –&gt; 断开请求 fin=1 seq=x –&gt; 服务端</li><li>服务端 –&gt; 响应断开 fin=1 ack=x+1 seq=y –&gt; 客户端</li><li>服务端 –&gt; 断开连接 fin=1 ack=x+1 seq=z –&gt; 客户端</li><li>客户端 –&gt; 确认断开 fin=1 ack=z+1 seq=sj –&gt; 服务端</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="http" scheme="http://linuxwf.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>8.Ansible roles 角色</title>
    <link href="http://linuxwf.com/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/"/>
    <id>http://linuxwf.com/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/</id>
    <published>2020-04-13T05:50:00.000Z</published>
    <updated>2020-04-13T05:51:25.618Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="第9课-Ansible-roles-角色（7-25）"><a href="#第9课-Ansible-roles-角色（7-25）" class="headerlink" title="第9课 Ansible roles 角色（7/25）"></a>第9课 Ansible roles 角色（7/25）</h1><h2 id="第1章-ansible-roles-介绍"><a href="#第1章-ansible-roles-介绍" class="headerlink" title="第1章 ansible roles 介绍"></a>第1章 ansible roles 介绍</h2><p>官方地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html</a></p><h2 id="第2章-角色目录结构"><a href="#第2章-角色目录结构" class="headerlink" title="第2章 角色目录结构"></a>第2章 角色目录结构</h2><h3 id="2-1-目录说明"><a href="#2-1-目录说明" class="headerlink" title="2.1 目录说明"></a>2.1 目录说明</h3><p>官方的目录结构定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment">#  cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── nfs                   <span class="comment">#角色名称</span></span><br><span class="line">│   ├── files             <span class="comment">#存放需要copy的文件</span></span><br><span class="line">│   ├── handlers          <span class="comment">#触发任务剧本</span></span><br><span class="line">│   ├── tasks             <span class="comment">#具体任务剧本</span></span><br><span class="line">│   ├── templates         <span class="comment">#模版文件</span></span><br><span class="line">│   └── vars              <span class="comment">#存放变量文件</span></span><br></pre></td></tr></table></figure><h3 id="2-2-创建项目目录"><a href="#2-2-创建项目目录" class="headerlink" title="2.2 创建项目目录"></a>2.2 创建项目目录</h3><p>因为每台服务器都需要创建用户组，用户，安装服务等，所以我们可以将这些相同的任务单独创建一个init初始化角色。</p><p>角色规划：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.init      <span class="comment">#初始化任务</span></span><br><span class="line">2.rsync     <span class="comment">#rsync服务</span></span><br><span class="line">3.nfs       <span class="comment">#nfs服务</span></span><br><span class="line">4.lsyncd    <span class="comment">#lsyncd服务</span></span><br></pre></td></tr></table></figure><p>创建角色目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># mkdir &#123;init,nfs,rsync,lsyncd&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p </span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── lsyncd</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── nfs</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">└── rsync</span><br><span class="line">    ├── files</span><br><span class="line">    ├── handlers</span><br><span class="line">    ├── tasks</span><br><span class="line">    ├── templates</span><br><span class="line">    └── vars</span><br><span class="line"></span><br><span class="line">24 directories, 0 files</span><br></pre></td></tr></table></figure><h2 id="第3章-编写init角色剧本"><a href="#第3章-编写init角色剧本" class="headerlink" title="第3章 编写init角色剧本"></a>第3章 编写init角色剧本</h2><h3 id="3-1-创建项目目录"><a href="#3-1-创建项目目录" class="headerlink" title="3.1 创建项目目录"></a>3.1 创建项目目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br></pre></td></tr></table></figure><h3 id="3-2-编写tasks任务剧本"><a href="#3-2-编写tasks任务剧本" class="headerlink" title="3.2 编写tasks任务剧本"></a>3.2 编写tasks任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.关闭SElinux</span></span><br><span class="line">- name: 01_disabled_selinux</span><br><span class="line">  selinux:</span><br><span class="line">    state: disabled</span><br><span class="line">  tags: 01_disabled_selinux</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.关闭防火墙</span></span><br><span class="line">- name: 02_disabled_firewalld</span><br><span class="line">  service: </span><br><span class="line">    name: firewalld</span><br><span class="line">    enabled: no</span><br><span class="line">  tags: 02_disabled_firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.优化yum源</span></span><br><span class="line">- name: 03_configure_yum</span><br><span class="line">  get_url:  </span><br><span class="line">    url: <span class="string">"&#123;&#123; item.url &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/Centos-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/CentOS-Base.repo'</span> &#125;</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/epel-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/epel.repo'</span> &#125;</span><br><span class="line"></span><br><span class="line">  tags: 03_configure_yum</span><br><span class="line">  </span><br><span class="line"><span class="comment">#04.安装常用软件</span></span><br><span class="line">- name: 04_install_service</span><br><span class="line">  yum: </span><br><span class="line">    name: <span class="string">"&#123;&#123; packages &#125;&#125;"</span></span><br><span class="line">  vars:</span><br><span class="line">    packages:</span><br><span class="line">    - wget</span><br><span class="line">    - tree</span><br><span class="line">    - ntpdate</span><br><span class="line">    - vim</span><br><span class="line">    - bash-completion</span><br><span class="line">    - bash-completion-extras</span><br><span class="line">    - lrzsz</span><br><span class="line">    - net-tools</span><br><span class="line">    - sysstat</span><br><span class="line">    - iotop</span><br><span class="line">    - iftop</span><br><span class="line">    - htop</span><br><span class="line">    - unzip</span><br><span class="line">    - telnet</span><br><span class="line">  tags: 04_install_service</span><br><span class="line"></span><br><span class="line"><span class="comment">#05.创建用户组</span></span><br><span class="line">- name: 05_create_group</span><br><span class="line">  group: </span><br><span class="line">    name: www</span><br><span class="line">    gid: 666</span><br><span class="line">  tags: 05_create_group</span><br><span class="line"></span><br><span class="line"><span class="comment">#06.创建用户</span></span><br><span class="line">- name: 06_create_user</span><br><span class="line">  user: </span><br><span class="line">    name: www</span><br><span class="line">    uid: 666</span><br><span class="line">    group: www</span><br><span class="line">    shell: /sbin/nologin</span><br><span class="line">    create_home: no</span><br><span class="line">  tags: 06_create_user</span><br><span class="line"></span><br><span class="line"><span class="comment">#07.创建目录</span></span><br><span class="line">- name: 07_create_dir</span><br><span class="line">  file:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    state: directory</span><br><span class="line">    mode: 0755</span><br><span class="line">    owner: www</span><br><span class="line">    group: www</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span> &#125;</span><br><span class="line">  tags: 07_create_dir</span><br><span class="line"></span><br><span class="line"><span class="comment">#08.创建时间同步任务</span></span><br><span class="line">- name: 08_cron_ntpdate</span><br><span class="line">  cron: </span><br><span class="line">    name: Time_Update</span><br><span class="line">    minute: <span class="string">"*/5"</span></span><br><span class="line">    job: <span class="string">'/sbin/ntpdate ntp1.aliyun.com &gt;/dev/null 2&gt;&amp;1'</span></span><br><span class="line">  tags: 08_cron_ntpdate    </span><br><span class="line"></span><br><span class="line"><span class="comment">#09.优化ssh</span></span><br><span class="line">- name: 09_copy_ssh</span><br><span class="line">  template: </span><br><span class="line">    src: sshd_config.j2</span><br><span class="line">    dest: /etc/ssh/sshd_config </span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart sshd</span><br><span class="line">  tags: 09_copy_ssh</span><br></pre></td></tr></table></figure><h3 id="3-3-编写jinja模版文件"><a href="#3-3-编写jinja模版文件" class="headerlink" title="3.3 编写jinja模版文件"></a>3.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">└── sshd_config.j2</span><br></pre></td></tr></table></figure><h3 id="3-4-编写handlers文件"><a href="#3-4-编写handlers文件" class="headerlink" title="3.4 编写handlers文件"></a>3.4 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart sshd </span><br><span class="line">  service: </span><br><span class="line">    name: sshd </span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="3-5-写主任务文件"><a href="#3-5-写主任务文件" class="headerlink" title="3.5 写主任务文件"></a>3.5 写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat init.yml </span></span><br><span class="line">- hosts: webserver </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br></pre></td></tr></table></figure><h3 id="3-6-最终目录"><a href="#3-6-最终目录" class="headerlink" title="3.6 最终目录"></a>3.6 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree init</span></span><br><span class="line">init</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── sshd_config.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 43 Jul 25 22:06 init.yml</span><br></pre></td></tr></table></figure><h2 id="第4章-编写rsync角色剧本"><a href="#第4章-编写rsync角色剧本" class="headerlink" title="第4章 编写rsync角色剧本"></a>第4章 编写rsync角色剧本</h2><h3 id="4-1-创建对应目录"><a href="#4-1-创建对应目录" class="headerlink" title="4.1 创建对应目录"></a>4.1 创建对应目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/rsync_server/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><p>服务器端</p><h3 id="4-2-编写任务剧本"><a href="#4-2-编写任务剧本" class="headerlink" title="4.2 编写任务剧本"></a>4.2 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.拷贝rsync配置文件和密码文件</span></span><br><span class="line">- name: 01_backup &amp; copy</span><br><span class="line">  template:</span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"/etc/&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">    mode: <span class="string">"&#123;&#123; item.mode &#125;&#125;"</span></span><br><span class="line">    backup: yes</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; src: <span class="string">'rsyncd.conf.j2'</span>,  dest: <span class="string">'rsyncd.conf'</span>,  mode: <span class="string">'0644'</span> &#125;</span><br><span class="line">    - &#123; src: <span class="string">'rsync.passwd.j2'</span>, dest: <span class="string">'rsync.passwd'</span>, mode: <span class="string">'0600'</span> &#125;</span><br><span class="line">  notify: </span><br><span class="line">    - restart rsyncd</span><br><span class="line">  tags: 01_copy_rsync.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rsyncd服务</span></span><br><span class="line">- name: 02_start_rsyncd</span><br><span class="line">  service:</span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rsyncd</span><br></pre></td></tr></table></figure><h3 id="4-3-编写jinja模版文件"><a href="#4-3-编写jinja模版文件" class="headerlink" title="4.3 编写jinja模版文件"></a>4.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── rsyncd.conf.j2</span><br><span class="line">└── rsync.passwd.j2</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsyncd.conf.j2 </span></span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsync.passwd.j2 </span></span><br><span class="line">&#123;&#123; rsync_user &#125;&#125;:&#123;&#123; rsync_passwd &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-编写变量文件"><a href="#4-4-编写变量文件" class="headerlink" title="4.4 编写变量文件"></a>4.4 编写变量文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/vars]<span class="comment"># cat main.yml </span></span><br><span class="line">rsync_user: rsync_backup</span><br><span class="line">rsync_passwd: oldboy</span><br></pre></td></tr></table></figure><h3 id="4-5-编写handlers文件"><a href="#4-5-编写handlers文件" class="headerlink" title="4.5 编写handlers文件"></a>4.5 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/handlers]<span class="comment"># cat main.yml</span></span><br><span class="line">- name: restart rsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-6-编写主任务文件"><a href="#4-6-编写主任务文件" class="headerlink" title="4.6 编写主任务文件"></a>4.6 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat rsync_server.yml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - rsync_server</span><br></pre></td></tr></table></figure><h3 id="4-7-最终目录"><a href="#4-7-最终目录" class="headerlink" title="4.7 最终目录"></a>4.7 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 rsync_server</span></span><br><span class="line">rsync_server</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   ├── rsyncd.conf.j2</span><br><span class="line">│   └── rsync.passwd.j2</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 61 Jul 25 23:08 rsync_server.yml</span><br></pre></td></tr></table></figure><h2 id="第5章-编写nfs角色剧本"><a href="#第5章-编写nfs角色剧本" class="headerlink" title="第5章 编写nfs角色剧本"></a>第5章 编写nfs角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/&#123;nfs_server,nfs_client&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="5-1-nfs服务器端"><a href="#5-1-nfs服务器端" class="headerlink" title="5.1 nfs服务器端"></a>5.1 nfs服务器端</h3><h4 id="5-1-1-编写任务剧本"><a href="#5-1-1-编写任务剧本" class="headerlink" title="5.1.1 编写任务剧本"></a>5.1.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs服务</span></span><br><span class="line">- name: 01_install_nfs_utils</span><br><span class="line">  yum: </span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs_utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02. copy conf</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: exports.j2</span><br><span class="line">    dest: /etc/exports</span><br><span class="line">    mode: 0600</span><br><span class="line">  notify:</span><br><span class="line">    - reloaded nfs</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动rpc nfs服务</span></span><br><span class="line">- name: 03_start_rpc_nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  loop:</span><br><span class="line">    - rpcbind</span><br><span class="line">    - nfs-server</span><br><span class="line">  tags: 03_start_rpc_nfs</span><br></pre></td></tr></table></figure><h4 id="5-1-2-编写jinja模版文件"><a href="#5-1-2-编写jinja模版文件" class="headerlink" title="5.1.2 编写jinja模版文件"></a>5.1.2 编写jinja模版文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/templates]<span class="comment"># cat exports.j2 </span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/backup 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="5-1-3-编写handlers文件"><a href="#5-1-3-编写handlers文件" class="headerlink" title="5.1.3 编写handlers文件"></a>5.1.3 编写handlers文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: reloaded nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item.name &#125;&#125;"</span></span><br><span class="line">    state: <span class="string">"&#123;&#123; item.state &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; name: <span class="string">'rpcbind'</span>, state: <span class="string">'restarted'</span> &#125;</span><br><span class="line">    - &#123; name: <span class="string">'nfs-server'</span>, state: <span class="string">'reloaded'</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-编写主任务文件"><a href="#5-1-4-编写主任务文件" class="headerlink" title="5.1.4 编写主任务文件"></a>5.1.4 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_server.yml</span></span><br><span class="line">- hosts: nfs_server </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - nfs_server</span><br></pre></td></tr></table></figure><h4 id="5-1-5-最终目录"><a href="#5-1-5-最终目录" class="headerlink" title="5.1.5 最终目录"></a>5.1.5 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_server/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_server/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">│   └── exports.j2</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 59 Jul 25 23:53 nfs_server.yml</span><br></pre></td></tr></table></figure><h3 id="5-2-nfs客户端"><a href="#5-2-nfs客户端" class="headerlink" title="5.2 nfs客户端"></a>5.2 nfs客户端</h3><h4 id="5-2-1-编写任务剧本"><a href="#5-2-1-编写任务剧本" class="headerlink" title="5.2.1 编写任务剧本"></a>5.2.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_client/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs</span></span><br><span class="line">- name: 01_install_nfs-utils</span><br><span class="line">  yum:</span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rpc服务</span></span><br><span class="line">- name: 02_start_rpc</span><br><span class="line">  service: </span><br><span class="line">    name: rpcbind</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rpc</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">- name: 03_mount_dir</span><br><span class="line">  mount:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    fstype: nfs</span><br><span class="line">    opts: defaults</span><br><span class="line">    state: mounted</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span>,   src: <span class="string">'172.16.1.31:/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span>, src: <span class="string">'172.16.1.31:/backup'</span> &#125;</span><br><span class="line">  tags: 03_mount_dir</span><br></pre></td></tr></table></figure><h4 id="5-2-2-编写主任务文件"><a href="#5-2-2-编写主任务文件" class="headerlink" title="5.2.2 编写主任务文件"></a>5.2.2 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_client.yml</span></span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  roles:</span><br><span class="line">   <span class="comment"># - init</span></span><br><span class="line">    - nfs_client</span><br></pre></td></tr></table></figure><h4 id="5-2-3-最终目录"><a href="#5-2-3-最终目录" class="headerlink" title="5.2.3 最终目录"></a>5.2.3 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_client/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_client/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 58 Jul 26 00:33 nfs_client.yml</span><br></pre></td></tr></table></figure><h2 id="第6章-编写lsyncd角色剧本"><a href="#第6章-编写lsyncd角色剧本" class="headerlink" title="第6章 编写lsyncd角色剧本"></a>第6章 编写lsyncd角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/lsyncd/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="6-1-编写任务剧本"><a href="#6-1-编写任务剧本" class="headerlink" title="6.1 编写任务剧本"></a>6.1 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装lsyncd服务</span></span><br><span class="line">- name: 01_install_lsyncd</span><br><span class="line">  yum:</span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_lsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.copy lsyncd的配置文件</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: lsyncd.conf.j2</span><br><span class="line">    dest: /etc/lsyncd.conf</span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart lsyncd</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动lsyncd服务</span></span><br><span class="line">- name: 03_start_lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: started</span><br><span class="line">  tags: 03_start_lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-2-编写jinja模版文件"><a href="#6-2-编写jinja模版文件" class="headerlink" title="6.2 编写jinja模版文件"></a>6.2 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd]<span class="comment"># tree templates/</span></span><br><span class="line">templates/</span><br><span class="line">└── lsyncd.conf.j2</span><br><span class="line"></span><br><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/templates]<span class="comment"># cat lsyncd.conf.j2 </span></span><br><span class="line">settings &#123;</span><br><span class="line">  logfile = <span class="string">"/var/log/lsyncd/lsyncd.log"</span>,</span><br><span class="line">  statusFile = <span class="string">"/var/log/lsyncd/lsyncd.status"</span>,</span><br><span class="line">  inotifyMode = <span class="string">"CloseWrite"</span>,</span><br><span class="line">  maxProcesses = 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/data"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::data"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/backup"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::backup"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-编写handlers文件"><a href="#6-3-编写handlers文件" class="headerlink" title="6.3 编写handlers文件"></a>6.3 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="6-4-编写主任务文件"><a href="#6-4-编写主任务文件" class="headerlink" title="6.4 编写主任务文件"></a>6.4 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat lsyncd.yml </span></span><br><span class="line">- hosts: lsyncd_server</span><br><span class="line">  roles:</span><br><span class="line">    <span class="comment">#- init</span></span><br><span class="line">    - lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-5-最终目录"><a href="#6-5-最终目录" class="headerlink" title="6.5 最终目录"></a>6.5 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 lsyncd</span></span><br><span class="line">lsyncd</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── lsyncd.conf.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 56 Jul 26 01:20 lsyncd.yml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ansible" scheme="http://linuxwf.com/tags/ansible/"/>
    
      <category term="ansible roles" scheme="http://linuxwf.com/tags/ansible-roles/"/>
    
  </entry>
  
  <entry>
    <title>7.Ansible playbook 剧本</title>
    <link href="http://linuxwf.com/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/"/>
    <id>http://linuxwf.com/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/</id>
    <published>2020-04-13T04:52:00.000Z</published>
    <updated>2020-04-13T04:53:50.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Ansible-playbook-剧本"><a href="#Ansible-playbook-剧本" class="headerlink" title="Ansible playbook 剧本"></a>Ansible playbook 剧本</h1><h2 id="第1章-playbook剧本简介"><a href="#第1章-playbook剧本简介" class="headerlink" title="第1章 playbook剧本简介"></a>第1章 playbook剧本简介</h2><h3 id="1-1-什么是playbook剧本？"><a href="#1-1-什么是playbook剧本？" class="headerlink" title="1.1 什么是playbook剧本？"></a>1.1 什么是playbook剧本？</h3><p> <code>Playbooks</code>与Ad-Hoc相比，是一种完全不同的运用Ansible的方式，而且是非常之强大的；也是系统ansible命令的集合，其利用yaml语言编写，运行过程，<code>ansbile-playbook</code>命令根据自上而下的顺序依次执行。<br>简单来说，Playbooks 是一种简单的配置管理系统与多机器部署系统的基础。与现有的其他系统有不同之处，且非常适合于复杂应用的部署。</p><p><code>playbook</code>翻译过来就是“剧本”， 那 <code>playbook</code> 组成如下</p><ul><li>play: 定义的是主机的角色</li><li>task: 定义的是具体执行的任务</li><li>playbook: 由一个或多个 play 组成，一个 play 可以包含多个 task 任务。简单理解为: 使用不同的模块完成一件事情</li></ul><h3 id="1-2-playbook的优势"><a href="#1-2-playbook的优势" class="headerlink" title="1.2 playbook的优势"></a>1.2 playbook的优势</h3><ol><li>功能比ansible命令更强大</li><li>能很好的控制先后执行顺序, 以及依赖关系</li><li>语法展现更加的直观</li><li>ansible命令无法持久使用， playbook 可以持久使用</li></ol><h2 id="第2章-playbook剧本的书写格式"><a href="#第2章-playbook剧本的书写格式" class="headerlink" title="第2章 playbook剧本的书写格式"></a>第2章 playbook剧本的书写格式</h2><h3 id="2-1-剧本的组成"><a href="#2-1-剧本的组成" class="headerlink" title="2.1 剧本的组成"></a>2.1 剧本的组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-86ef95f63d01ed09.webp"  alt=""></p><h3 id="2-2-注意缩进"><a href="#2-2-注意缩进" class="headerlink" title="2.2 注意缩进"></a>2.2 注意缩进</h3><ol><li>合理的信息缩进，两个空格表示一个缩进关系</li><li>一定不要使用tab</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题一</span><br><span class="line">_ _ 标题二</span><br><span class="line">_ _ _ _ 标题三</span><br></pre></td></tr></table></figure><h3 id="2-3-冒号"><a href="#2-3-冒号" class="headerlink" title="2.3 冒号"></a>2.3 冒号</h3><p>所有冒号后面都要加上空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name=www gid=666</span><br></pre></td></tr></table></figure><h3 id="2-4-短横线-列表功能"><a href="#2-4-短横线-列表功能" class="headerlink" title="2.4 短横线 - 列表功能"></a>2.4 短横线 - 列表功能</h3><p>使用短横线构成列表信息,短横线后面需要有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 老张</span><br><span class="line">  男</span><br><span class="line">- 爱好</span><br><span class="line">  游泳</span><br></pre></td></tr></table></figure><h2 id="第3章-剧本书写"><a href="#第3章-剧本书写" class="headerlink" title="第3章 剧本书写"></a>第3章 剧本书写</h2><h3 id="3-1-剧本文件名格式"><a href="#3-1-剧本文件名格式" class="headerlink" title="3.1 剧本文件名格式"></a>3.1 剧本文件名格式</h3><p>剧本文件拓展名为xxx.yaml<br>1.方便识别文件是一个剧本文件<br>2.文件编写时会有颜色提示</p><h3 id="3-2-创建剧本"><a href="#3-2-创建剧本" class="headerlink" title="3.2 创建剧本"></a>3.2 创建剧本</h3><p>练习: 写一个剧本，使用yum/copy/service等模块安装部署启动rsync服务</p><h4 id="3-2-1-服务端操作步骤"><a href="#3-2-1-服务端操作步骤" class="headerlink" title="3.2.1 服务端操作步骤"></a>3.2.1 服务端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.备份/etc/rsyncd.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes"</span></span><br></pre></td></tr></table></figure><p>3.copy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"src=/server/scripts/rsyncd.conf dest=/etc/"</span></span><br></pre></td></tr></table></figure><p>4.创建www组和www用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.41 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>5.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><p>6.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"content='rsync_backup:oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>7.启动服务，加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m service -a <span class="string">"name=rsyncd state=started enabled=yes"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-客户端操作步骤"><a href="#3-2-2-客户端操作步骤" class="headerlink" title="3.2.2 客户端操作步骤"></a>3.2.2 客户端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m copy -a <span class="string">"content='oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>3.创建用户和组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.31 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>4.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-rsync剧本"><a href="#3-2-3-rsync剧本" class="headerlink" title="3.2.3 rsync剧本"></a>3.2.3 rsync剧本</h4><p>服务端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br></pre></td></tr></table></figure><p>客户端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinet.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-create passwd</span><br><span class="line">    copy: content=<span class="string">'oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 06-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br></pre></td></tr></table></figure><h4 id="3-2-4-NFS剧本"><a href="#3-2-4-NFS剧本" class="headerlink" title="3.2.4 NFS剧本"></a>3.2.4 NFS剧本</h4><p>NFS服务器端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-copy nfs exports</span><br><span class="line">    copy: src=/server/scripts/playbook/exports dest=/etc/</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=<span class="string">'666'</span></span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 06-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started</span><br><span class="line">  - name: 07-start nfs</span><br><span class="line">    service: name=nfs state=started</span><br><span class="line">  - name: 08-enable rpcbind                                                                                                                                      </span><br><span class="line">    systemd: name=rpcbind enabled=yes</span><br><span class="line">  - name: 09-enable nfs </span><br><span class="line">    systemd: name=nfs enabled=yes</span><br></pre></td></tr></table></figure><p>NFS客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_client.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 03-add user</span><br><span class="line">    user: name=www create_home=no shell=/sbin/nologin group=www uid=666</span><br><span class="line">  - name: 04-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 05-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started enabled=yes</span><br><span class="line">  - name: 06-mount data</span><br><span class="line">    mount: path=/data src=172.16.1.31:/data fstype=nfs opts=defaults state=mounted</span><br></pre></td></tr></table></figure><h3 id="3-3-检查剧本语法"><a href="#3-3-检查剧本语法" class="headerlink" title="3.3 检查剧本语法"></a>3.3 检查剧本语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-4-模拟执行剧本（常用）"><a href="#3-4-模拟执行剧本（常用）" class="headerlink" title="3.4 模拟执行剧本（常用）"></a>3.4 模拟执行剧本（常用）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-5-执行剧本"><a href="#3-5-执行剧本" class="headerlink" title="3.5 执行剧本"></a>3.5 执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook nfs_client.yaml</span><br></pre></td></tr></table></figure><h2 id="第4章-剧本高级-特性"><a href="#第4章-剧本高级-特性" class="headerlink" title="第4章 剧本高级 特性"></a>第4章 剧本高级 特性</h2><p>我们已经体验了使用剧本来安装服务，但是上述的简单ansible剧本存在一定的局限性<br>1.全部写成一行虽然看起来整洁，但是有一些特性没办法使用<br>2.比如同时需要创建多个目录，启动多个服务，需要重复写多条语句<br>3.参数不直观，不好修改<br>4.剧本里写的是启动服务，如果配置文件发生变化，重复执行不会重启服务</p><p>不过没有关系，等学习了下面的高级特性，然后我们可以换一种写法</p><h3 id="4-1-循环"><a href="#4-1-循环" class="headerlink" title="4.1 循环"></a>4.1 循环</h3><p>官方网址: </p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html</a></p><p>使用情景：<br>1.需要创建多个目录<br>2.需要启动多个服务<br>具体实现：</p><p>1.同时创建2个目录/data和/backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat loops.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-create dir data and backuo</span><br><span class="line">    file:</span><br><span class="line">      path: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop: </span><br><span class="line">    - /data</span><br><span class="line">    - /backup</span><br></pre></td></tr></table></figure><p>2.同时启动2个服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat service.yaml </span></span><br><span class="line">- hosts: 172.16.1.31</span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-start rpcbind nfs service</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs</span><br></pre></td></tr></table></figure><h3 id="4-2-变量"><a href="#4-2-变量" class="headerlink" title="4.2 变量"></a>4.2 变量</h3><p>官方网址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html</a></p><p>使用情景：<br>1.自定义某个名称，在任务中会多次引用<br>2.从主机收集的系统信息中提取某个变量并引用，例如网卡信息</p><p>具体实现：</p><p>1.自定义一个文件名变量，创建文件时引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat vars.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  vars:</span><br><span class="line">    file_name: oldboy</span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-use vars create dir</span><br><span class="line">    file: </span><br><span class="line">      path: <span class="string">"/root/&#123;&#123; file_name &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br></pre></td></tr></table></figure><p>2.使用变量获取主机的eth1地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat ip.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-get ip address</span><br><span class="line">    shell: <span class="string">"echo &#123;&#123; ansible_facts.eth1.ipv4.address &#125;&#125; &gt; /root/ip_eth1.txt"</span></span><br></pre></td></tr></table></figure><p>3.在主机hosts中指定变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br><span class="line"></span><br><span class="line">[backup:vars]</span><br><span class="line">file_name=<span class="string">"oldzhang"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-注册变量"><a href="#4-3-注册变量" class="headerlink" title="4.3 注册变量"></a>4.3 注册变量</h3><p>使用情景：将配置文件的状态注册成一个变量，方便其他任务引用</p><p>具体实现：<br>1.将配置文件的状态注册成一个服务变量并打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat register.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-register rsync status</span><br><span class="line">    shell: netstat -lntp|grep rsync</span><br><span class="line">    register: rsync_port</span><br><span class="line"></span><br><span class="line">  - name: 02-out rsync status</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; rsync_port.stdout_lines &#125;&#125;"</span></span><br></pre></td></tr></table></figure><p>2.打印多个信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- hosts: nfs</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-echo hostname</span><br><span class="line">    shell: <span class="built_in">echo</span> $(hostname)</span><br><span class="line">    register: nfs_hostname    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">  - name: debug nfs_hostname</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; item &#125;&#125;"</span>      <span class="comment">#</span></span><br><span class="line">    loop:</span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.stdout &#125;&#125;"</span></span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.cmd &#125;&#125;"</span></span><br></pre></td></tr></table></figure><h3 id="4-4-服务管理"><a href="#4-4-服务管理" class="headerlink" title="4.4 服务管理"></a>4.4 服务管理</h3><p>官网地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change</a></p><p>使用情景：如果配置文件发生了变化，就重启服务，否则什么都不操作<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># </span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-5-标签"><a href="#4-5-标签" class="headerlink" title="4.5 标签"></a>4.5 标签</h3><p>使用情景：从我们指定的任务开始执行，而不是从头到尾执行一遍<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">    tags: 01-install-rsync</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">    tags: 02-backup-rsyncd.conf</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">    tags: 03-copy-rsyncd.conf</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">    tags: 04-create-passwd</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">    tags: 05-add-group</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">    tags: 06-add-user</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">    tags: 07-create-backup-dir</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">    tags: 08-create-data-dir</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br><span class="line">    tags: 09-start-rsyncd</span><br></pre></td></tr></table></figure><p>调用标签：<br>1.打印出playbook里要执行的所有标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --list-tags rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>2.指定运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>3.指定运行多个标签，使用逗号隔开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd,07-create-backup-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>4.指定不运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --skip-tags=08-create-data-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><h2 id="第5章-运行检查规范"><a href="#第5章-运行检查规范" class="headerlink" title="第5章 运行检查规范"></a>第5章 运行检查规范</h2><h3 id="5-1-检查剧本拼写规范"><a href="#5-1-检查剧本拼写规范" class="headerlink" title="5.1 检查剧本拼写规范"></a>5.1 检查剧本拼写规范</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check check.yam</span><br></pre></td></tr></table></figure><h3 id="5-2-检查这个任务执行的主机对象"><a href="#5-2-检查这个任务执行的主机对象" class="headerlink" title="5.2 检查这个任务执行的主机对象"></a>5.2 检查这个任务执行的主机对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-host check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-3-检查这个剧本需要执行哪些任务"><a href="#5-3-检查这个剧本需要执行哪些任务" class="headerlink" title="5.3 检查这个剧本需要执行哪些任务"></a>5.3 检查这个剧本需要执行哪些任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tasks check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-4-检查这个剧本执行哪些tag"><a href="#5-4-检查这个剧本执行哪些tag" class="headerlink" title="5.4 检查这个剧本执行哪些tag"></a>5.4 检查这个剧本执行哪些tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tags check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-5-模拟执行剧本"><a href="#5-5-模拟执行剧本" class="headerlink" title="5.5 模拟执行剧本"></a>5.5 模拟执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C check.yaml</span><br></pre></td></tr></table></figure><h2 id="第6章-实战剧本部署rsync-nfs-lsyncd"><a href="#第6章-实战剧本部署rsync-nfs-lsyncd" class="headerlink" title="第6章 实战剧本部署rsync/nfs/lsyncd"></a>第6章 实战剧本部署rsync/nfs/lsyncd</h2><h3 id="6-1-rsync-脚本"><a href="#6-1-rsync-脚本" class="headerlink" title="6.1 rsync 脚本"></a>6.1 rsync 脚本</h3><p>rsync 服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  vars:</span><br><span class="line">    rsync_conf_path: <span class="string">'/server/scripts/playbook/rsyncd.conf'</span></span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">    tags: 02-copy</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line">      </span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-create-passwd</span><br><span class="line">    copy: </span><br><span class="line">      content: <span class="string">'rsync_backup:oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 06-create-passwd</span><br><span class="line">  </span><br><span class="line">  - name: 07-start-rsynd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd </span><br><span class="line">      state: started </span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 07-start-rsynd</span><br><span class="line"></span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>rsync 客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinetV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-create-passwd</span><br><span class="line">    copy:</span><br><span class="line">      content: <span class="string">'oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 02-create-passwd</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br></pre></td></tr></table></figure><h3 id="6-2-NFS-脚本"><a href="#6-2-NFS-脚本" class="headerlink" title="6.2 NFS 脚本"></a>6.2 NFS 脚本</h3><p>NFS服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  vars:</span><br><span class="line">    exports_path: <span class="string">'/server/scripts/playbook/exports'</span></span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum: </span><br><span class="line">      name: nfs-utils </span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-yum-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-nfs-exports</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; exports_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">    notify:</span><br><span class="line">      - restart rpcbind</span><br><span class="line">      - restart nfs-server</span><br><span class="line">    tags: 02-copy-nfs-exports</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file:</span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-start-rpc &amp; nfs</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs-server</span><br><span class="line">    tags: 06-start-rpc-nfs</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart rpcbind</span><br><span class="line">    service:</span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: restarted</span><br><span class="line">  - name: restart nfs-server</span><br><span class="line">    service:</span><br><span class="line">      name: nfs-server</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>NFS客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_clientV2.yaml</span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum:</span><br><span class="line">      name: nfs-utils</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 02-create-group</span><br><span class="line">  </span><br><span class="line">  - name: 03-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 03-create-user</span><br><span class="line"></span><br><span class="line">  - name: 04-create-dir</span><br><span class="line">    file: </span><br><span class="line">      path: /data</span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    tags: 04-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 05-start-rpcbind</span><br><span class="line">    service: </span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 05-start-rpcbind</span><br><span class="line"></span><br><span class="line">  - name: 06-mount-data</span><br><span class="line">    mount:</span><br><span class="line">      path: /data</span><br><span class="line">      src: 172.16.1.31:/data</span><br><span class="line">      fstype: nfs</span><br><span class="line">      opts: defaults</span><br><span class="line">      state: mounted</span><br><span class="line">    tags: 06-mount-data</span><br></pre></td></tr></table></figure><h3 id="6-3-lsync-脚本"><a href="#6-3-lsync-脚本" class="headerlink" title="6.3 lsync 脚本"></a>6.3 lsync 脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat lsyncd.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs</span><br><span class="line">  vars: </span><br><span class="line">    lsyncd_conf_path: <span class="string">'/server/scripts/playbook/lsyncd.conf'</span></span><br><span class="line">  tasks:</span><br><span class="line"></span><br><span class="line">  - name: 01-install-lsyncd</span><br><span class="line">    yum:</span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-lsyncd</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-lsyncd.conf</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; lsyncd_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart lsyncd</span><br><span class="line">    tags: 02-copy-lsyncd.conf</span><br><span class="line"></span><br><span class="line">  - name: 03-start-lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 03-start-lsyncd</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ansible" scheme="http://linuxwf.com/tags/ansible/"/>
    
      <category term="ansible playbook" scheme="http://linuxwf.com/tags/ansible-playbook/"/>
    
  </entry>
  
</feed>
