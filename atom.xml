<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WF&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linuxwf.com/"/>
  <updated>2020-04-13T07:28:26.560Z</updated>
  <id>http://linuxwf.com/</id>
  
  <author>
    <name>Wu Fei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>16.HTTPS域名证书</title>
    <link href="http://linuxwf.com/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>http://linuxwf.com/2020/04/13/16-HTTPS%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/</id>
    <published>2020-04-13T07:25:00.000Z</published>
    <updated>2020-04-13T07:28:26.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTPS域名证书"><a href="#HTTPS域名证书" class="headerlink" title="HTTPS域名证书"></a>HTTPS域名证书</h1><h2 id="第1章-HTTPS-安全证书基本概述"><a href="#第1章-HTTPS-安全证书基本概述" class="headerlink" title="第1章 HTTPS 安全证书基本概述"></a>第1章 HTTPS 安全证书基本概述</h2><p>为什么需要使用HTTPS, 因为HTTP 不安全。当我们使用http 网站时，经常会遇到包遭到劫持和篡改，如果采用https 协议，那么数据在传输过程中是加密的，所以黑客无法窃取或者篡改数据报文信息。<br>https 主要解决了什么问题，避免网站传输时信息泄露，避免网站传输时内容不被劫持和篡改。<br>下面我们来了解一下HTTPS 证书类型</p><p>HTTPS 证书购买选择：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单个域名      www</span><br><span class="line">多个域名      www images cdn <span class="built_in">test</span> m</span><br><span class="line">通配符域名    *.oldboy.com    <span class="comment"># 只支持二级域名</span></span><br></pre></td></tr></table></figure><p>HTTPS 注意事项</p><p>Https 不支持续费,证书到期需重新申请新并进行替换.<br>Https 如果是通配符域名，二级域名和三级域名需要分别购买，如test.m.oldboy.com<br>Https 显示绿色, 说明整个网站的URL 都是https 的。<br>Https 显示黄色, 因为网站代码中包含http的不安全连接。<br>Https 显示红色, 要么证书是假的，要么证书过期</p><h2 id="第2章-Nginx-单台实现HTTPS-实战"><a href="#第2章-Nginx-单台实现HTTPS-实战" class="headerlink" title="第2章 Nginx 单台实现HTTPS 实战"></a>第2章 Nginx 单台实现HTTPS 实战</h2><p>1.环境准备:</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>web01-7</td><td>10.0.1.7</td><td>nginx+php+ssl</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#nginx 必须有ssl 模块</span></span><br><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br><span class="line">--with-http_ssl_module</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建存放ssl 证书的路径</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/ssl_key</span></span><br><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>2.生成证书:</p><p>使用openssl 命令充当CA 权威机构创建证书(生产不使用此方式生成证书，因为不会被互联网认可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus</span><br><span class="line">... +++</span><br><span class="line">e is 65537 (0x10001)</span><br><span class="line"></span><br><span class="line"><span class="comment">#记住配置密码, 我这里是1234</span></span><br><span class="line">Enter pass phrase <span class="keyword">for</span> server.key:</span><br><span class="line">Verifying - Enter pass phrase <span class="keyword">for</span> server.key:</span><br></pre></td></tr></table></figure><p>3.生成自签证书，同时去掉私钥的密码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># req --&gt;用于创建新的证书</span></span><br><span class="line"><span class="string"># new --&gt;表示创建的是新证书</span></span><br><span class="line"><span class="string"># x509 --&gt;表示定义证书的格式为标准格式</span></span><br><span class="line"><span class="string"># key --&gt;表示调用的私钥文件信息</span></span><br><span class="line"><span class="string"># out --&gt;表示输出证书文件信息</span></span><br><span class="line"><span class="string"># days --&gt;表示证书的有效期</span></span><br></pre></td></tr></table></figure><p>4.证书申请完成后需要了解Nginx 如何配置Https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否开始ssl 支持</span></span><br><span class="line">Syntax: ssl on | off;</span><br><span class="line">Default: ssl off;</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl crt 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl key 文件存放位置</span></span><br><span class="line">Syntax: ssl_certificate_key file;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server</span><br></pre></td></tr></table></figure><p>5.配置Nginx 配置Https 实例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">nginx: [warn] the <span class="string">"ssl"</span> directive is deprecated, use the <span class="string">"listen ... ssl"</span> directive instead <span class="keyword">in</span> /etc/nginx/conf.d/ssl.conf:4</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"><span class="comment">#有个报警提示，告诉我们需要使用listen ... ssl这样的格式</span></span><br></pre></td></tr></table></figure><p>6.浏览器输入<a href="https://www.oldboy.com访问" target="_blank" rel="noopener">https://www.oldboy.com访问</a>, 由于该证书非第三方权威机构颁发，而是我们自己签发的，所以浏览器会警告</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565165285234.png"  alt=""></p><p>7.以上配置如果用户忘记在浏览器地址栏输入https:// 那么将不会跳转至https，建议配置将用户访问http 请求强制跳转https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line"></span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    ssl_certificate ssl_key/server.crt;</span><br><span class="line">    ssl_certificate_key ssl_key/server.key;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx-集群实现HTTPS-实践"><a href="#第3章-Nginx-集群实现HTTPS-实践" class="headerlink" title="第3章 Nginx 集群实现HTTPS 实践"></a>第3章 Nginx 集群实现HTTPS 实践</h2><p>实战Nginx 负载均衡+Nginx WEB 配置HTTPS 安全</p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>外网IP</th><th>内网IP</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>eth0: 10.0.1.5 VIP: 10.0.1.3</td><td>eth1: 172.16.1.5</td><td>nginx-proxy-ssl</td></tr><tr><td>web01-7</td><td>eth0: 10.0.1.7</td><td>eth1: 172.16.1.7</td><td>nginx-web01</td></tr><tr><td>web02-8</td><td>eth0: 10.0.1.8</td><td>eth1: 172.16.1.8</td><td>nginx-web02</td></tr></tbody></table><p>2.配置后端两台web 节点监听80 端口, 如已配置则无需修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    <span class="comment">#rewrite 跳转方式</span></span><br><span class="line">    rewrite ^(.*) https://<span class="variable">$server_name</span><span class="variable">$1</span> redirect;</span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="comment">#return 302 https://$server_name$request_uri;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_param  HTTPS on;           <span class="comment">#wordpress的https生效</span></span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.启动两台后端web 节点Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web02 ~]<span class="comment"># systemctl start nginx</span></span><br></pre></td></tr></table></figure><p>4.lb01负载均衡先生成证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl/ssh_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># mkdir /etc/nginx/ssl_key -p</span></span><br><span class="line">[root@lb01 ~]<span class="comment"># cd /etc/nginx/ssl_key/</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl genrsa -idea -out server.key 2048</span></span><br><span class="line">[root@lb01 /etc/nginx/ssl_key]<span class="comment"># openssl req -days 36500 -x509 -sha256 -nodes -newkey rsa:2048 -keyout server.key -out server.crt</span></span><br><span class="line">Generating a 2048 bit RSA private key</span><br><span class="line">....................+++</span><br><span class="line">..........+++</span><br><span class="line">writing new private key to <span class="string">'server.key'</span></span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:SZ</span><br><span class="line">Locality Name (eg, city) [Default City]:SZ</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:oldboy</span><br><span class="line">Organizational Unit Name (eg, section) []:oldboy  </span><br><span class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:SA</span></span><br><span class="line"><span class="string">Email Address []:wufei008@qq.com</span></span><br></pre></td></tr></table></figure><p>5.lb01负载均衡配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line"><span class="comment"># 定义后端资源池</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line">upstream zh_pools &#123;</span><br><span class="line">        server 172.16.1.7:80;</span><br><span class="line">        server 172.16.1.8:80;</span><br><span class="line">        server 172.16.1.9:80;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户http请求跳转至https</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  blog.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://server_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name  zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">    <span class="comment">#rewrite ^(.*) https://$server_name$1 redirect;</span></span><br><span class="line">    <span class="comment">#return 跳转方式</span></span><br><span class="line">    <span class="built_in">return</span> 302 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://zh_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#https配置</span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 443 ssl;</span><br><span class="line">   server_name  zh.oldboy.com;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line">   ssl_certificate ssl_key/server.crt;</span><br><span class="line">   ssl_certificate_key ssl_key/server.key;</span><br><span class="line">   location / &#123; </span><br><span class="line">       proxy_pass http://zh_pools;</span><br><span class="line">       include proxy_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.重启Nginx 负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>8.wordpress和wecenter配置https</p><p>wordpress后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565167178799.png"  alt=""></p><p>注意：wordpress要使用https生效，后台源wordpress配置文件必须增加一条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    ...</span><br><span class="line">    fastcgi_param  HTTPS on;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wecenter在后台配置：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1565184511851.png"  alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="https" scheme="http://linuxwf.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>15.keepalived高可用</title>
    <link href="http://linuxwf.com/2020/04/13/15-keepalived/"/>
    <id>http://linuxwf.com/2020/04/13/15-keepalived/</id>
    <published>2020-04-13T07:21:00.000Z</published>
    <updated>2020-04-13T07:22:10.620Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="keepalived高可用"><a href="#keepalived高可用" class="headerlink" title="keepalived高可用"></a>keepalived高可用</h1><h2 id="第1章-keepalived介绍"><a href="#第1章-keepalived介绍" class="headerlink" title="第1章 keepalived介绍"></a>第1章 keepalived介绍</h2><p><code>keepalived</code>软件起初是专为LVS负载均衡软件设计的,用来管理并监控LVS集群系统中各个服务节点状态,后来又加入了可以实现高可用的VRRP功能.此,keepalived除了能够管理LVS软件外,还可以作为其他服务(例如:Nginx,Haproxy,MySQL等)的高可用解决方案软件.</p><p><code>keepalived</code>软件主要是通过<code>VRRP</code>协议实现高可用功能的.<code>VRRP</code>是<code>Virtual Router Redundancy</code> Protocol(虚拟路由器冗余协议)的缩写,VRRP出现的目的就是为了解决静态路由单点故障问题的,他能够保证当个别节点宕机时,整个网络可以不间断地运行.Keepalived一方面具有配置管理LVS的功能,同时还具有对LVS下面节点进行健康检查的功能,另一方面也可实现系统网络服务的高可用功能,</p><h2 id="第2章-keepalived服务的重要功能"><a href="#第2章-keepalived服务的重要功能" class="headerlink" title="第2章 keepalived服务的重要功能"></a>第2章 keepalived服务的重要功能</h2><h3 id="2-1-作为系统网络服务的高可用功能-failover"><a href="#2-1-作为系统网络服务的高可用功能-failover" class="headerlink" title="2.1 作为系统网络服务的高可用功能(failover)"></a>2.1 作为系统网络服务的高可用功能(failover)</h3><p><code>keepalived</code>可以实现任意两台主机之间,例如Master和Backup主机之间的故障转移和自动切换,这个主机可以使普通的不能停机的业务服务器,也可以是LVS负载均衡,Nginx反向代理这样的服务器.</p><p><code>keepalived</code>高可用功能实现的基本原理为:<br> 两台主机同时安装好keepalived软件并启动服务,开始正常工作时<br> 角色为Master的主机获得所有资源并对用户提供服务<br> 角色为Backup的主机作为Master主机的热备;</p><p>当角色为Master的主机失效或出现故障时<br> 角色为Backup的主机将自动接管Master主机的所有工作,包括接管VIP资源及相应资源服务</p><p>而当角色为Master的主机故障修复后,又会自动接管回他原来处理的工作<br> 角色为Backup的主机则同时释放Master主机失效时他接管的工作<br> 此时,两台主机将恢复到启动时各自的原始角色及工作状态</p><h3 id="2-2-什么是VRRP"><a href="#2-2-什么是VRRP" class="headerlink" title="2.2 什么是VRRP"></a>2.2 什么是VRRP</h3><p><code>VRRP</code>,全称<code>Virtual Router Redundancy Protocol</code>,中文名为<code>虚拟路由冗余协议</code><br> <code>VRRP</code>的出现就是为了解决静态路由的单点故障问题<br> <code>VRRP</code>是通过一种竞选机制来将路由的任务交给某台VRRP路由器的.</p><p><code>VRRP</code>通过竞选机制来实现虚拟路由器的功能,所有的协议报文都是通过IP多播(Multicast)包(默认的多播地址<code>224.0.0.18</code>)形式发送的<br> 虚拟路由器由VRID(范围0-255)和一组IP地址组成,对外表现为一个周知的MAC地址,:00-00-5E-00-01-{VRID}.<br> 所以,在一个虚拟路由器中,不管谁是Master,对外都是相同的MAC和IP(称之为VIP).<br> 客户端主机并不需要因Master的改变修改自己的路由配置.对它们来说,这种切换是透明的.</p><p>在一组虚拟路由器中,只有作为Master的VRRP路由器会一直发送VRRP广播包,此时Backup不会抢占Master<br> 当Master不可用时,Backup就收不到来自Master的广播包了,此时多台Backup中优先级最高的路由器会抢占为Master.<br> 这种抢占是非常快速的(可能只有1秒甚至更少),以保证服务的连续性,处于安全性考虑,VRRP数据包使用了加密协议进行了加密.</p><h3 id="2-3-面试的时候怎么说"><a href="#2-3-面试的时候怎么说" class="headerlink" title="2.3 面试的时候怎么说"></a>2.3 面试的时候怎么说</h3><p><code>keepalived</code>高可用对之间是通过<code>VRRP</code>通信的,因此,我从VRRP开始给您讲起.</p><ul><li>1)VRRP,全称Virtual Router Reduancy Protocol,中文名为虚拟路由器冗余协议,VRRP的出现是为了解决静态路由的单点故障,</li><li>2)VRRP是通过一种竞选协议来将路由任务交给某台VRRP路由器的,</li><li>3)VRRP用IP多播的方式,(默认多播地址(<code>224.0.0.18</code>))实现高可用对之间通信.</li><li>4)工作时主节点发包,备节点接包,当备节点接收不到主节点发的包的时候,就启动接管程序接管主节点的资源.备节点可以有多个,通过优先级竞选,但一般keepalived系统运维工作中都是一对.</li><li>5)VRRP使用了加密协议加密数据,但keepalived官方目前还是推荐用明文的方式配置认证类型和密码.</li></ul><p>介绍完了VRRP,接下来我在介绍一下keepalived服务的工作原理;<br>keepalived高可用对之间是通过VRRP进行通信的,VRRP是通过竞选机制来确定主备的,主的优先级高于备,因此,工作时会优先获得所有的资源,备节点处于等待状态,当主挂了的时候,备节点就会接管主节点的资源,然后顶替主节点对外提供服务.</p><p>在keepalived服务对之间,只有作为主的服务器会一直发送VRRP广播包,告诉备他还活着,此时备不会抢占主,当主不可用时,即备监听不到主发送的广播包时,就会启动相关服务接管资源,保证业务的连续性,接管速度最快可以小于一秒</p><h2 id="第3章-keepalived高可用服务搭建准备"><a href="#第3章-keepalived高可用服务搭建准备" class="headerlink" title="第3章 keepalived高可用服务搭建准备"></a>第3章 keepalived高可用服务搭建准备</h2><h3 id="3-1-安装keepalived环境说明"><a href="#3-1-安装keepalived环境说明" class="headerlink" title="3.1 安装keepalived环境说明"></a>3.1 安装keepalived环境说明</h3><p>这里使用前面已经搭建完成的Nginx负载均衡的系统环境来安装Keepalived服务,因为后面的实战案例是实现Nginx负载均衡的高可用案例.<br>安装Keepalived的基础准备环境如下:<br>准备5台物理服务器两台做Keepalived服务,3台做测试的web节点</p><p>Keepalived高可用实验环境准备</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>Keepalived主服务器(Nginx主负载均衡器)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>Keepalived备服务器(Nginx备负载均衡器)</td></tr><tr><td>web01</td><td>10.0.1.7</td><td>web01服务器</td></tr><tr><td>web02</td><td>10.0.1.8</td><td>web02服务器</td></tr><tr><td>web03</td><td>10.0.1.9</td><td>web03服务器</td></tr></tbody></table><h3 id="3-2-安装keepalived软件"><a href="#3-2-安装keepalived软件" class="headerlink" title="3.2 安装keepalived软件"></a>3.2 安装keepalived软件</h3><p>注意:lb01和lb02都需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># yum install keepalived -y</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qa keepalived</span></span><br><span class="line">keepalived-1.3.5-8.el7_6.x86_64</span><br><span class="line">[root@lb02 ~]<span class="comment"># yum install keepalived -y</span></span><br></pre></td></tr></table></figure><h3 id="3-3-启动keepalived服务并检查"><a href="#3-3-启动keepalived服务并检查" class="headerlink" title="3.3 启动keepalived服务并检查"></a>3.3 启动keepalived服务并检查</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ps -ef |grep  keep</span></span><br><span class="line">root       1601      1  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1602   1601  0 10:33 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class="line">root       1603   1601  0 10:33 ?        00:00:03 /usr/sbin/keepalived -D</span><br><span class="line"><span class="comment">###提示:启动后有三个keepalived进程表示安装正确</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip a|grep 192.168</span></span><br><span class="line">    inet 192.168.200.16/32 scope global eth0</span><br><span class="line">    inet 192.168.200.17/32 scope global eth0</span><br><span class="line">    inet 192.168.200.18/32 scope global eth0</span><br><span class="line"><span class="comment">###提示:默认情况会启动三个VIP地址</span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived</span></span><br><span class="line"><span class="comment">###提示: 测试完毕后关闭服务,上述测试需要在lb01和lb02两台服务器上进行</span></span><br></pre></td></tr></table></figure><h3 id="3-4-keepalived配置文件说明"><a href="#3-4-keepalived配置文件说明" class="headerlink" title="3.4 keepalived配置文件说明"></a>3.4 keepalived配置文件说明</h3><p>和其他yum安装的软件一样,keepalived软件的配置文件默认路径及配置文件名为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># rpm -qc keepalived</span></span><br><span class="line">/etc/keepalived/keepalived.conf</span><br><span class="line">/etc/sysconfig/keepalived</span><br></pre></td></tr></table></figure><p>这里的具备高可用功能keepalived.conf配置文件包含了两个重要区块,下面分别说明:</p><p>(1)全局变量(Global Definitions)部分<br>这部分主要用来设置keepalived的故障通知机制和Router ID标识.示例配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf.bak -n</span></span><br><span class="line">     1! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line">     2</span><br><span class="line">     3global_defs &#123;</span><br><span class="line">     4   notification_email &#123;</span><br><span class="line">     5     acassen@firewall.loc</span><br><span class="line">     6     failover@firewall.loc</span><br><span class="line">     7     sysadmin@firewall.loc</span><br><span class="line">     8   &#125;</span><br><span class="line">     9   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">    10   smtp_server 192.168.200.1</span><br><span class="line">    11   smtp_connect_timeout 30</span><br><span class="line">    12   router_id LVS_DEVEL</span><br><span class="line">    13   vrrp_skip_check_adv_addr</span><br><span class="line">    14   vrrp_strict</span><br><span class="line">    15   vrrp_garp_interval 0</span><br><span class="line">    16   vrrp_gna_interval 0</span><br><span class="line">    17&#125;</span><br></pre></td></tr></table></figure><p>基础参数说明:</p><ul><li>第1行是注释,!开头和#号开头一样,都是注释</li><li>第2行是空行</li><li>第3行~8行是定义故障服务报警的Email地址.作用是服务发生切换或RS节点等有故障时,需要发送的Email地址,可以有多个,每行一个.</li><li>第9行是制定发送邮件的发送人,即发送人地址,也是可选配置</li><li>第10行smtp_server指定发送邮件的smtp服务器,如果本机开启了sendmail或postfix.就可以使用上面默认配置实现邮件发送,也是可选配置.</li><li>第11行smtp_connect_timeout是连接smtp的超时时间,也是可选配置</li><li>第12行是Keepalived服务器的路由标识{route_id}.在一个局域网内,这个标识{route_id}应该是唯一的.</li><li>大括号{}.用来区分区块,要成对出现.如果楼写了半个大括号,keepalived运行时,不会报错,但是也不会得到预期的结果.另外,由于区块间存在多层嵌套关系,因此很容易遗漏区块结尾处的大括号,需要特别注意.</li></ul><p>(2)VRRP实例定义区域(VRRP instance(s))部分.<br> 这部分主要用来定义具体服务实例配置,包括Keepalived主备状态,接口,优先级,认证方式和IP信息等,配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">19vrrp_instance VI_1 &#123;</span><br><span class="line">    20    state MASTER</span><br><span class="line">    21    interface eth0</span><br><span class="line">    22    virtual_router_id 51</span><br><span class="line">    23    priority 100</span><br><span class="line">    24    advert_int 1</span><br><span class="line">    25    authentication &#123;</span><br><span class="line">    26        auth_type PASS</span><br><span class="line">    27        auth_pass 1111</span><br><span class="line">    28    &#125;</span><br><span class="line">    29    virtual_ipaddress &#123;</span><br><span class="line">    30        192.168.200.16</span><br><span class="line">    31        192.168.200.17</span><br><span class="line">    32        192.168.200.18</span><br><span class="line">    33    &#125;</span><br><span class="line">    34&#125;</span><br></pre></td></tr></table></figure><p>参数说明:</p><ul><li><p>第19行表示定义一个vrrp_instance实例,名字为VI_1,每个vrrp_instance实例可以认为是Keepalived服务的一个实例或者作为一个业务服务,在Keepalived服务配置中,这样的vrrp_instance实例可以有多个.注意,存在于主节点中的vrrp_isntance实例在备节点也要存在,这样才能实现故障切换接管.</p></li><li><p>第20行state MASTER表示当前示例VI_1的角色状态,当前角色为MASTER,这个状态只能有MASTER和BACKUP两种状态,并且需要大写这些字符.其中MASTER为正式工作的状态,BACKUP为备用的状态.当MASTER所在的服务器故障或失效时,BACKUP所在的服务器会接管故障的MASTER继续提供服务.</p></li><li><p>第21行interface为网路通信接口.为对外提供服务的网络接口,如eth0,eth1当前主流的服务器都有2~4个网络接口,在选择服务接口时,要搞清楚.</p></li><li><p>第22行virtual_router_id为虚拟路由ID标识,这个标识最好是一个数字</p></li><li><p>第23行priority为优先级,其后面的数值也是一个数字,数字越大,表示实例优先级越高.在同一个vrrp_instance实例里,MASTER的优先级配置要高于BACKUP的.若MASTER的priority值为150,那么BACKUP的priority必须小于150,一般建议隔50以上为佳.</p></li><li><p>第24行advent_int为同步通知间隔.MASTER与BACKUP之间通信检查的时间间隔,默认为1秒.</p></li><li><p>第25-27行authentication为权限认证配置.包含认证类型(auth_type)和认证密码(auth_pass)认证类型有PASS(simple passwd),AH(IPSEC)两种,官方推荐使用的类型为PASS.验证密码为明文方式,最好长度不能超过8个字符,建议四位数字,同一vrrp实例的MASTER与BACKUP使用相同的密码才能正常通信.</p></li><li><p>第29-32行virtual_ipaddress为虚拟IP地址.可以配置多个IP地址,每个地址占一行,配置时最好明确指定子网掩码以及虚拟IP绑定的网络接口.否则,子网掩码默认是32位,绑定的接口和前面的interface参数配置的一致.注意,这里的虚拟IP就是在工作中需要和域名绑定的IP,即和配置的高可用服务监听的IP要保持一致.</p></li></ul><h2 id="第4章-配置keepalived实现单IP自动漂移接管"><a href="#第4章-配置keepalived实现单IP自动漂移接管" class="headerlink" title="第4章 配置keepalived实现单IP自动漂移接管"></a>第4章 配置keepalived实现单IP自动漂移接管</h2><p>实际上可以将高可用对的两台机器应用服务同时开启,但是只让VIP一段的服务器提供服务,若主的服务器宕机,VIP会自动漂移到备用服务器,此时用户的请求直接发送到备用服务器上,而无须临时启动对应服务(事先开启应用服务).下面来讲解VIP自动漂移实战案例.</p><h3 id="4-1-实战配置keepalived主服务器lb01-MASTER"><a href="#4-1-实战配置keepalived主服务器lb01-MASTER" class="headerlink" title="4.1 实战配置keepalived主服务器lb01 MASTER"></a>4.1 实战配置keepalived主服务器lb01 MASTER</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕后,启动keepalived服务,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>出现上述带有vip:10.0.0.3行的结果表示lb01的keepalived服务单实例配置成功.</p><h3 id="4-2-实战配置keepalived备服务器lb02-BACKUP"><a href="#4-2-实战配置keepalived备服务器lb02-BACKUP" class="headerlink" title="4.2 实战配置keepalived备服务器lb02 BACKUP"></a>4.2 实战配置keepalived备服务器lb02 BACKUP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完毕,启动keepalived服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl start keepalived</span></span><br></pre></td></tr></table></figure><p>然后检查配置结果,查看是否有虚拟IP 10.0.0.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|egrep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>这里没有返回任何结果就对了,因为lb02为BACKUP,当主节点活着的时候,他不会接管VIP 10.0.1.3</p><p>出现上述无任何结果的现象,表示lb02的keepailved服务单实例配置成功.如果lv02的配置过滤后有10.0.1.3的IP,则表示keepalived工作不正,同一个IP地址同一时刻应该只能出现在一台服务器上.</p><p>如果查看BACKUP备节点VIP有,说明高可用裂脑了,裂脑是两台服务器争抢统一资源导致的,例如:两边都配置了同一个VIP地址.</p><h3 id="4-3-出现裂脑后的排查"><a href="#4-3-出现裂脑后的排查" class="headerlink" title="4.3 出现裂脑后的排查"></a>4.3 出现裂脑后的排查</h3><p>出现上述两台服务器争抢同一IP资源问题,一般要先考虑排查两个地方:</p><p>(1)主备两台服务器之间是否通讯正常,如果不正常是否有iptables防火墙阻挡?</p><p>(2)主备两台服务器对应的keepalived.conf配置文件是否有错误?例如是否同一实例的virtual_router_id配置不一样.</p><h3 id="4-4-进行高可用主备服务器切换"><a href="#4-4-进行高可用主备服务器切换" class="headerlink" title="4.4 进行高可用主备服务器切换"></a>4.4 进行高可用主备服务器切换</h3><p>停掉主服务器上的keepalived服务或关闭主服务器,操作并检查步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><p>可以看到VIP 10.0.0.3消失了,此时查看BACKUP备服务器,看是否会有VIP 10.0.0.3出现,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>可以看到备节点lb02已经接管绑定了10.0.1.3这个VIP,这期间备节点还会发送ARP广播,让所有的客户端更新本地的ARP表,以便客户端访问接管VIP服务的节点.</p><p>此时如果再启动主服务器的keepalived服务,主服务器就会接管回VIP 10.0.1.3启动后可以观察下主备的IP漂移情况,备服务器是否释放了IP?主服务器是否又接管了IP ?</p><p>主节点启动keepalived服务后,发现很快就又接管了VIP 10.0.1.3,操作及检查步骤如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><p>与此同时,备节点上的VIP 10.0.0.3则被释放了,如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># ip addr|grep 10.0.1.3</span></span><br></pre></td></tr></table></figure><h3 id="4-5-单实例主备模式keeplibed配置文件对比"><a href="#4-5-单实例主备模式keeplibed配置文件对比" class="headerlink" title="4.5 单实例主备模式keeplibed配置文件对比"></a>4.5 单实例主备模式keeplibed配置文件对比</h3><p>可以看到,上述keepalived单实例MASTER和BACKUP节点的配置差别项,只有3项是不同的</p><table><thead><tr><th>Keepalived配置参数</th><th>MASTER节点特殊参数</th><th>BACKUP节点特殊参数</th></tr></thead><tbody><tr><td>router_id(唯一标识)</td><td>router_id lb01</td><td>router_id lb02</td></tr><tr><td>state(角色状态)</td><td>state MASTER</td><td>state BACKUP</td></tr><tr><td>priority(竞选优先级)</td><td>priority 100</td><td>priority 50</td></tr></tbody></table><h2 id="第5章-keepalived高可用服务器的裂脑问题"><a href="#第5章-keepalived高可用服务器的裂脑问题" class="headerlink" title="第5章 keepalived高可用服务器的裂脑问题"></a>第5章 keepalived高可用服务器的裂脑问题</h2><h3 id="5-1-什么是裂脑"><a href="#5-1-什么是裂脑" class="headerlink" title="5.1 什么是裂脑"></a>5.1 什么是裂脑</h3><p>由于某些原因,导致两台高可用服务器对在指定时间内,无法检测到对方的心跳消息,各自取得资源及服务</p><p>的所有权,而此时的两台高可用服务器都还活着并在正常运行,这样就会导致同一个IP或服务在两端同时</p><p>存在而发生冲突,最严重的是两台服务器占用同一个VIP地址,当用户写入数据时可能会分别写入到两端,</p><p>这可能会导致服务器两端的数据不一致或造成数据丢失,这种情况就被成为裂脑.</p><h3 id="5-2-导致裂脑发生的原因"><a href="#5-2-导致裂脑发生的原因" class="headerlink" title="5.2 导致裂脑发生的原因"></a>5.2 导致裂脑发生的原因</h3><p>一般来说,裂脑的发生,有以下几种原因<br>   高可用服务器对之间心跳线链路发生故障,导致无法正常通信<br>   心跳线坏了(包括断了,老化)<br>   网卡及相关驱动坏了,IP配置及冲突问题(网卡直连)<br>   心跳线之间连接的设备故障(网卡及交换机)<br>   仲裁的机器出问题了(采用总裁的方案)<br>   高可用服务器上开启了iptables防火墙阻挠了心跳信息传输<br>   高可用服务器上心跳网卡地址等信息配置不正确,导致发送心跳失败<br>   其他服务配置不当等原因,如心跳方式不同,心跳广播冲突,软件bug等.</p><h3 id="5-3-解决裂脑的常见方法"><a href="#5-3-解决裂脑的常见方法" class="headerlink" title="5.3 解决裂脑的常见方法"></a>5.3 解决裂脑的常见方法</h3><p>在实际成产环境中,我们可以从以下几个方面来防止裂脑问题发生:</p><p>同时使用串行电缆和以太网电缆连接,同时用两条心跳线,这样一条线路坏了,另一个还是好的,依然能传送心跳信息.</p><p>当检测到裂脑时强行关闭一个心跳节点(这个功能需要特殊设备支持,如stonith,fence)相当于备节点接收不到心跳信息,通过单独的线路发送命令关闭主节点的电源.</p><p>做好对裂脑的监控报警(如邮件及手机短信等或值班),在问题发生时人为第一时间介入仲裁,降低损失.</p><h3 id="5-4-解决keepalived裂脑的常见方案"><a href="#5-4-解决keepalived裂脑的常见方案" class="headerlink" title="5.4 解决keepalived裂脑的常见方案"></a>5.4 解决keepalived裂脑的常见方案</h3><p>作为互联网应用服务器的高可用,特别是前端web负载均衡器的高可用,裂脑的问题对普遍业务的影响是可容忍的,如果是数据库或者存储的业务,一般出现裂脑问题就非常严重了.因此,通过增加冗余心跳线来避免裂脑问题发生,同时加强了对系统的监控.</p><p>如果开启防火墙,一定要让心跳消息通过.一般通过允许IP段的形式解决<br> 可以拉一条以太网网线或者串口线作为主备节点心跳线路的冗余<br> 开发检测程序通过监控软件检测裂脑,如zabbix检测如果主备都有VIP就报警.<br> 比较严谨的判断,备节点出现对应VIP,并且主节点及对应服务(如果能远程连接主节点看是否有VIP就更好了)还活着,就说明发生裂脑了.</p><p>具体监控系统裂脑的脚本见文章结尾”开发检测keepalived裂脑的脚本”</p><h3 id="5-5-模拟keepalived裂脑场景"><a href="#5-5-模拟keepalived裂脑场景" class="headerlink" title="5.5 模拟keepalived裂脑场景"></a>5.5 模拟keepalived裂脑场景</h3><p>抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><p>开启防火墙 firewalld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface eth0 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span></span><br></pre></td></tr></table></figure><p>iptables</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -i eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br><span class="line">iptables -I OUTPUT -o eth0 -d 224.0.0.0/8 -p vrrp -j ACCEPT</span><br></pre></td></tr></table></figure><p>再次抓包查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -nn -c 20 -i any host 224.0.0.18</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx负载均衡配合keepalived双主模式实战"><a href="#第6章-Nginx负载均衡配合keepalived双主模式实战" class="headerlink" title="第6章 Nginx负载均衡配合keepalived双主模式实战"></a>第6章 Nginx负载均衡配合keepalived双主模式实战</h2><p>结合前面介绍的Nginx负载均衡的环境,调整好住负载均衡器lb01,备用负载均衡器lb02服务器上Nginx负载均衡环境,两台服务器的安装基础环境一模一样.</p><table><thead><tr><th>主机名</th><th>IP地址</th><th>说明</th></tr></thead><tbody><tr><td>lb01-5</td><td>10.0.1.5</td><td>VIP:10.0.1.2(用于绑定A服务<a href="http://www.oldboy.com域名" target="_blank" rel="noopener">www.oldboy.com域名</a>)</td></tr><tr><td>lb02-6</td><td>10.0.1.6</td><td>VIP:10.0.1.3(用于绑定B服务zh.oldboy.com域名)</td></tr><tr><td>web01-7</td><td>10.0.1.7</td><td>Nginx web服务器1</td></tr><tr><td>web02-8</td><td>10.0.1.8</td><td>Nginx web 服务器2</td></tr></tbody></table><h3 id="6-1-配置keepalived双主"><a href="#6-1-配置keepalived双主" class="headerlink" title="6.1 配置keepalived双主"></a>6.1 配置keepalived双主</h3><p>lb01配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># cat keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/keepalived]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><p>lb02配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb02-6 ~]<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Nginx负载均衡"><a href="#6-2-Nginx负载均衡" class="headerlink" title="6.2 Nginx负载均衡"></a>6.2 Nginx负载均衡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf</span></span><br><span class="line">upstream server_pools &#123;</span><br><span class="line">        server 10.0.1.7;</span><br><span class="line">        server 10.0.1.8;</span><br><span class="line">        server 10.0.1.9;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.3:80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 10.0.1.2:80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://server_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-重启nginx和keepalived"><a href="#6-3-重启nginx和keepalived" class="headerlink" title="6.3 重启nginx和keepalived"></a>6.3 重启nginx和keepalived</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart keepalived</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="6-4-配置windows解析"><a href="#6-4-配置windows解析" class="headerlink" title="6.4 配置windows解析"></a>6.4 配置windows解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.3 blog.oldboy.com</span><br><span class="line">10.0.1.2 zh.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="6-5-访问测试"><a href="#6-5-访问测试" class="headerlink" title="6.5 访问测试"></a>6.5 访问测试</h3><h3 id="6-6-模拟keepalived故障"><a href="#6-6-模拟keepalived故障" class="headerlink" title="6.6 模拟keepalived故障"></a>6.6 模拟keepalived故障</h3><p>此时停掉lb01服务器或停止keepalived服务器，观察结果是否正常<br>然后观察lb02备点是否接管了VIP 10.0.1.3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl stop keepalived.service</span></span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br></pre></td></tr></table></figure><h3 id="6-7-恢复lb01的keelived服务"><a href="#6-7-恢复lb01的keelived服务" class="headerlink" title="6.7 恢复lb01的keelived服务"></a>6.7 恢复lb01的keelived服务</h3><p>查看是否恢复正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># systemctl start keepalived.service </span></span><br><span class="line">[root@lb01-5 ~]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.5/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.3/32 scope global eth0</span><br><span class="line">[root@lb02-6 /etc/nginx/conf.d]<span class="comment"># ip addr|grep 10.0.1</span></span><br><span class="line">    inet 10.0.1.6/24 brd 10.0.1.255 scope global eth0</span><br><span class="line">    inet 10.0.1.2/32 scope global eth0</span><br></pre></td></tr></table></figure><h2 id="第7章-开发监控keepalived裂脑的脚本"><a href="#第7章-开发监控keepalived裂脑的脚本" class="headerlink" title="第7章  开发监控keepalived裂脑的脚本"></a>第7章  开发监控keepalived裂脑的脚本</h2><p>检测思路,VIP什么时候 什么条件 才会飘走<br>由于某些原因，导致两台 keepalived 高可用服务器在指定时间内，无法检测到对方的心跳消息，各自取得资源及服务的所有权，而此时的两台高可用服务器又都还活着。<br>服务器网线松动等网络故障<br>服务器硬件故障发生损坏现象而崩溃<br>主备都开启 firewalld 防火墙<br>Nginx 服务死掉等</p><h3 id="7-1-lb01检查web脚本"><a href="#7-1-lb01检查web脚本" class="headerlink" title="7.1 lb01检查web脚本"></a>7.1 lb01检查web脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 ~]<span class="comment"># mkdir /server/scripts -p</span></span><br><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat check_web.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line"><span class="comment">#1.判断 Nginx 是否存活,如果不存活则尝试启动 Nginx</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    systemctl start nginx</span><br><span class="line">    sleep 3</span><br><span class="line">    <span class="comment">#2.等待 3 秒后再次获取一次 Nginx 状态</span></span><br><span class="line">    nginxpid=$(ps -C nginx --no-header|wc -l)</span><br><span class="line">    <span class="comment">#3.再次进行判断, 如 Nginx 还不存活则停止 Keepalived,让地址进行漂移,并退出脚本</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$nginxpid</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_web &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_web.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">      track_script &#123;</span><br><span class="line">        check_web</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-lb02脚本"><a href="#7-2-lb02脚本" class="headerlink" title="7.2 lb02脚本"></a>7.2 lb02脚本</h3><p>检查vip脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 ~]<span class="comment">#  mkdir /server/scripts -p</span></span><br><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat check_backup_keep.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">lb01_vip=10.0.1.3</span><br><span class="line">lb01_nginx=$(curl -x 10.0.1.5:80 -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  blog.oldzhang.com)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ping -c 1 -W 1 $&#123;lb01_ip&#125; &amp;&gt;/dev/null</span></span><br><span class="line"><span class="comment">#如果lb01的IP能ping通,但是我自己也存在VIP,我就认为发生裂脑了,我就把自己的keep干掉</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;lb01_nginx&#125;</span> -eq 200 -a `ip add|grep <span class="string">"<span class="variable">$lb01_vip</span>"</span>|wc -l` -eq 1 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is bad"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line">    systemctl stop keepalived</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ha is ok"</span> &gt;&gt; /tmp/check.txt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>keepalived配置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@lb02-6 /server/scripts]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id lb02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_backup_keep &#123;</span><br><span class="line">    script <span class="string">"/server/scripts/check_backup_keep.sh"</span></span><br><span class="line">    interval 5</span><br><span class="line">    weight 50</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 50</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.3</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.1.2</span><br><span class="line">    &#125;</span><br><span class="line">     track_script &#123;</span><br><span class="line">     check_backup_keep</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="keepalived" scheme="http://linuxwf.com/tags/keepalived/"/>
    
  </entry>
  
  <entry>
    <title>14.反向代理负载均衡</title>
    <link href="http://linuxwf.com/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://linuxwf.com/2020/04/13/14-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</id>
    <published>2020-04-13T07:11:00.000Z</published>
    <updated>2020-04-13T07:17:30.201Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="反向代理负载均衡"><a href="#反向代理负载均衡" class="headerlink" title="反向代理负载均衡"></a>反向代理负载均衡</h1><h2 id="第1章-反向代理"><a href="#第1章-反向代理" class="headerlink" title="第1章 反向代理"></a>第1章 反向代理</h2><h3 id="Nginx代理服务基本概述"><a href="#Nginx代理服务基本概述" class="headerlink" title="Nginx代理服务基本概述"></a>Nginx代理服务基本概述</h3><p>说到代理，首先我们要明确一个概念，所谓代理就是一个代表、一个渠道；</p><p>此时就设计到两个角色，一个是被代理角色，一个是目标角色，被代理角色通过这个代理访问目标角色完成一些任务的过程称为代理操作过程；如同生活中的专卖店~客人到adidas专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是adidas厂家，目标角色就是用户</p><p>1.代理一词往往并不陌生, 该服务我们常常用到如(代理理财、代理租房、代理收货等等)，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.png"  alt=""></p><p>2.在没有代理模式的情况下，客户端和 Nginx 服务端，都是客户端直接请求服务端，服务端直接响应客户端。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.png"  alt=""></p><p>3.那么在互联网请求里面, 客户端往往无法直接向服务端发起请求, 那么就需要用到代理服务, 来实现客户端和服务通信，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/03.png"  alt=""></p><h3 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h3><p>以访问Goo为例，客户端连接到VPN相当于正向代理<br>VPN代理请求访问后端服务器并返回属于反向代理</p><h3 id="Nginx代理服务支持的协议"><a href="#Nginx代理服务支持的协议" class="headerlink" title="Nginx代理服务支持的协议"></a>Nginx代理服务支持的协议</h3><p>1.Nginx 作为代理服务，可支持的代理协议非常的多，具体如下图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_01.png"  alt=""></p><p>2.如果将 Nginx 作为反向代理服务，常常会用到如下几种代理协议，如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_02.png"  alt=""></p><p>3.反向代理模式与 Nginx 代理模块总结如表格所示</p><table><thead><tr><th>反向代理模式</th><th>nginx配置模块</th></tr></thead><tbody><tr><td>http、websocket、https</td><td>ngx_http_proxy_module</td></tr><tr><td>fastcgi</td><td>ngx_http_fastcgi_module</td></tr><tr><td>uwsgi</td><td>ngx_http_uwsgi_module</td></tr><tr><td>grpc</td><td>ngx_http_v2_module</td></tr></tbody></table><h3 id="Nginx反向代理配置语法"><a href="#Nginx反向代理配置语法" class="headerlink" title="Nginx反向代理配置语法"></a>Nginx反向代理配置语法</h3><p>1.Nginx代理配置语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_pass URL;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location, limit_except</span><br><span class="line">http://localhost:8000/uri/</span><br><span class="line">http://192.168.56.11:8000/uri/</span><br><span class="line">http://unix:/tmp/backend.socket:/uri/</span><br></pre></td></tr></table></figure><p>2.添加传递给后端服务器的请求头信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_set_header field value;</span><br><span class="line">Default: proxy_set_header Host <span class="variable">$proxy_host</span>;</span><br><span class="line">proxy_set_header Connection close;</span><br><span class="line">Context: http, server, location</span><br><span class="line"><span class="comment"># 用户请求的时候 HOST 的值是 www.oldboy.com, 那么代理服务会像后端传递请求的还是 www.oldboy.com</span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line"><span class="comment"># 将$remote_addr 的值放进变量 X-Real-IP 中， $remote_addr 的值为客户端的 ip</span></span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="comment"># 客户端通过代理服务访问后端服务, 后端服务通过该变量会记录真实客户端地址</span></span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br></pre></td></tr></table></figure><p>3.代理到后端的TCP连接数，响应，返回等超时时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nginx 代理与后端服务器连接超时时间(代理连接超时)</span><br><span class="line">Syntax: proxy_connect_timeout time;</span><br><span class="line">Default: proxy_connect_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//nginx 代理等待后端服务器的响应时间</span><br><span class="line">Syntax: proxy_read_timeout time;</span><br><span class="line">Default: proxy_read_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//后端服务器数据回传给 nginx 代理超时时间</span><br><span class="line">Syntax: proxy_send_timeout time;</span><br><span class="line">Default: proxy_send_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>4.代理缓冲区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//nignx 会把后端返回的内容先放到缓冲区当中，然后再返回给客户端,边收边传, 不是全部接收完再传给客户端</span><br><span class="line">Syntax: proxy_buffering on | off;</span><br><span class="line">Default: proxy_buffering on;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//设置 nginx 代理保存用户头信息的缓冲区大小</span><br><span class="line">Syntax: proxy_buffer_size size;</span><br><span class="line">Default: proxy_buffer_size 4k|8k;</span><br><span class="line">Context: http, server, location</span><br><span class="line">//proxy_buffers 缓冲区</span><br><span class="line">Syntax: proxy_buffers number size;</span><br><span class="line">Default: proxy_buffers 8 4k|8k;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>5.proxy代理网站常用配置<br>将配置写入新文件，调用时使用include引用即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]<span class="comment"># cat /etc/nginx/proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br></pre></td></tr></table></figure><p>6.代理配置location时调用，方便后面多个location重复使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nginx反向代理实战"><a href="#Nginx反向代理实战" class="headerlink" title="Nginx反向代理实战"></a>Nginx反向代理实战</h3><p>配置关系图：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_03.png"  alt=""></p><p>1.环境准备</p><table><thead><tr><th>主机名</th><th>IP</th><th>服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>web服务器</td></tr><tr><td>lb01</td><td>10.0.1.5</td><td>代理服务器</td></tr></tbody></table><p>2.web01服务器配置<br>配置一个网站，监听在 8080，此时网站仅 172 网段的用户能访问</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /etc/nginx/conf.d/</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /code/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.0/24;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 conf.d]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 conf.d]<span class="comment"># echo "web01-7" &gt;/code/index.html</span></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>3.配置lb01代理服务器<br>配置监听 eth0 的 80 端口，使 10.0.1.0 网段的用户，能够通过代理服务器访问到后端的172.16.1.7 的 8080 端口站点内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx]<span class="comment"># cat proxy_params </span></span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat www.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://172.16.1.7:8080;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h2 id="第2章-负载均衡"><a href="#第2章-负载均衡" class="headerlink" title="第2章 负载均衡"></a>第2章 负载均衡</h2><h3 id="Nginx负载均衡概述"><a href="#Nginx负载均衡概述" class="headerlink" title="Nginx负载均衡概述"></a>Nginx负载均衡概述</h3><h3 id="2-1-为什么需要负载均衡"><a href="#2-1-为什么需要负载均衡" class="headerlink" title="2.1 为什么需要负载均衡"></a>2.1 为什么需要负载均衡</h3><p>我们的 Web 服务器直接面向用户，往往要承载大量并发请求，单台服务器难以负荷，我使用多台 WEB 服务器组成集群，前端使用 Nginx 负载均衡，将请求分散的打到我们的后端服务器集群中，实现负载的分发。那么会大大提升系统的吞吐率、请求性能、高容灾</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai.png"  alt=""></p><p>往往我们接触的最多的是 SLB(Server Load Balance)负载均衡，实现最多的也是 SLB、那么 SLB 它的调度节点和服务节点通常是在一个地域里面。那么它在这个小的逻辑地域里面决定了他对部分服务的实时性、响应性是非常好的。<br>所以说当海量用户请求过来以后，它同样是请求调度节点，调度节点将用户的请求转发给后端对应的服务节点，服务节点处理完请求后在转发给调度节点，调度节点最后响应给用户节点。这样也能实现一个均衡的作用，那么Nginx 则是一个典型的 SLB</p><h3 id="2-2-Nginx负载均衡配置场景"><a href="#2-2-Nginx负载均衡配置场景" class="headerlink" title="2.2 Nginx负载均衡配置场景"></a>2.2 Nginx负载均衡配置场景</h3><h4 id="2-2-1-四层负载均衡"><a href="#2-2-1-四层负载均衡" class="headerlink" title="2.2.1 四层负载均衡"></a>2.2.1 四层负载均衡</h4><p>所谓四层负载均衡指的是 OSI 七层模型中的传输层，那么传输层 Nginx 已经能支持 TCP/IP 的控制，所以只需要对客户端的请求进行 TCP/IP 协议的包转发就可以实现负载均衡，那么它的好处是性能非常快、只需要底层进行应用处理，而不需要进行一些复杂的逻辑</p><h4 id="2-2-2-七层负载均衡"><a href="#2-2-2-七层负载均衡" class="headerlink" title="2.2.2 七层负载均衡"></a>2.2.2 七层负载均衡</h4><p>七层负载均衡它是在应用层，那么它可以完成很多应用方面的协议请求，比如我们说的 http 应用的负载均衡，它可以实现 http 信息的改写、头信息的改写、安全应用规则控制、 URL 匹配规则控制、以及转发、 rewrite 等等的规则，所以在应用层的服务里面，我们可以做的内容就更多，那么 Nginx 则是一个典型的七层负载均衡 SLB</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx_fuzai02.png"  alt=""></p><h4 id="2-2-3-四层负载均衡与七层负载均衡区别"><a href="#2-2-3-四层负载均衡与七层负载均衡区别" class="headerlink" title="2.2.3 四层负载均衡与七层负载均衡区别"></a>2.2.3 四层负载均衡与七层负载均衡区别</h4><p>四层负载均衡数据包在底层就进行了分发，而七层负载均衡数据包则是在最顶层进行分发、由此可以看出，七层负载均衡效率没有四负载均衡高。<br> 但七层负载均衡更贴近于服务，如:http 协议就是七层协议，我们可以用 Nginx 可以作会话保持， URL 路径规则匹配、 head 头改写等等，这些是四层负载均衡无法实现的</p><h4 id="Nginx负载均衡调度算法"><a href="#Nginx负载均衡调度算法" class="headerlink" title="Nginx负载均衡调度算法"></a>Nginx负载均衡调度算法</h4><table><thead><tr><th>调度算法</th><th>概述</th></tr></thead><tbody><tr><td>轮询</td><td>按时间顺序逐一分配到不同的后端服务器（默认）</td></tr><tr><td>weight</td><td>加权轮询，weight值越大，分配到的访问几率越高</td></tr><tr><td>ip_hash</td><td>每个请求按访问IP的hash结果分配，这样来自同一IP的固定访问一个后端服务器</td></tr><tr><td>url_hash</td><td>按照访问URL的hash结果来分配请求，是每个URL定向到同一个后端服务器</td></tr><tr><td>least_conn</td><td>z最少链接数，那个机器链接数少就分发</td></tr></tbody></table><h4 id="Nginx负载均衡配置参数"><a href="#Nginx负载均衡配置参数" class="headerlink" title="Nginx负载均衡配置参数"></a>Nginx负载均衡配置参数</h4><table><thead><tr><th>状态</th><th>概述</th></tr></thead><tbody><tr><td>down</td><td>当前的server暂时不参与负载均衡</td></tr><tr><td>backup</td><td>预留的备份服务器</td></tr><tr><td>max_fails</td><td>允许请求失败的次数</td></tr><tr><td>fail_timeout</td><td>经过max_fails失败后，服务暂停时间</td></tr><tr><td>max_conns</td><td>限制最大的接受链接数</td></tr></tbody></table><h3 id="2-3-Nginx负载均衡实战"><a href="#2-3-Nginx负载均衡实战" class="headerlink" title="2.3 Nginx负载均衡实战"></a>2.3 Nginx负载均衡实战</h3><p>1.部署准备    </p><table><thead><tr><th>/static</th><th>10.0.1.7:8080</th><th>static静态服务器</th></tr></thead><tbody><tr><td>/upload</td><td>10.0.1.8:8080</td><td>upload服务器</td></tr><tr><td>/</td><td>10.0.1.9:8080</td><td>默认服务器</td></tr></tbody></table><p>2.创建地址池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream upload_pools&#123;</span><br><span class="line">    server 10.0.0.8:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static_pools&#123;</span><br><span class="line">    server 10.0.0.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream defaule_pools&#123;</span><br><span class="line">    server 10.0.0.9:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.匹配条件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location /static/ &#123; </span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###将符合upload的请求交给上传服务器池upload_pools,配置如下</span></span><br><span class="line">location /upload/ &#123; </span><br><span class="line">    proxy_pass http://upload_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">###不符合上述规则的请求,默认全交给动态服务器池default_pools,配置如下:</span></span><br><span class="line">location / &#123; </span><br><span class="line">    proxy_pass http://default_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.组合在一起</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>5.创建代码环境</p><p>每个虚拟机存放的网页路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.oldboy.com/index.html</span><br><span class="line">www.oldboy.com/upload/index.html</span><br><span class="line">www.oldboy.com/static/index.html</span><br></pre></td></tr></table></figure><p>创建目录及测试页面命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /code/www/&#123;upload,static&#125;</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> default"</span> &gt;/code/www//index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> upload"</span> &gt;/code/www/upload/index.html </span><br><span class="line"><span class="built_in">echo</span>  <span class="string">"<span class="variable">$(hostname)</span> static"</span> &gt;/code/www/static/index.html </span><br><span class="line">chown -R www.www /code</span><br></pre></td></tr></table></figure><p>6.进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/index.html</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/static/</span></span><br><span class="line">web01 static</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com/upload/</span></span><br><span class="line">web02-8 upload</span><br></pre></td></tr></table></figure><h2 id="第3章-根据条件转发实战"><a href="#第3章-根据条件转发实战" class="headerlink" title="第3章 根据条件转发实战"></a>第3章 根据条件转发实战</h2><h3 id="3-1-根据文件类型转发"><a href="#3-1-根据文件类型转发" class="headerlink" title="3.1 根据文件类型转发"></a>3.1 根据文件类型转发</h3><p>转发需求</p><p>只需修改nginx.conf的配置文件中的loaction区块代码即可</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*.(gif|jpg|jpeg|png|bmp|swf|css|js)$ &#123;</span><br><span class="line">    proxy_pass http://static_pools;</span><br><span class="line">    proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$remote_addr</span>;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">    upstream server_pools &#123;</span><br><span class="line">        server 10.0.0.7 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.8 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">        server 10.0.0.9 weight=1 max_fails=3 fail_timeout=10s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-动静分离"><a href="#3-2-动静分离" class="headerlink" title="3.2 动静分离"></a>3.2 动静分离</h3><p>转发需求</p><p>动态资源转发到php服务器<br>静态资源转发到静态服务器</p><p>lb01配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-3-根据客户端转发"><a href="#3-3-根据客户端转发" class="headerlink" title="3.3 根据客户端转发"></a>3.3 根据客户端转发</h3><p>转发需求</p><p>手机和电脑 访问相同的网站—-结果不同</p><p>lb01代理服务器配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 172.16.1.9:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream iphone_pools &#123;</span><br><span class="line">    server 172.16.1.7:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream android_pools &#123;</span><br><span class="line">    server 172.16.1.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location /static/ &#123; </span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location /upload/ &#123; </span><br><span class="line">        proxy_pass http://upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123; </span><br><span class="line">        proxy_pass http://default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Iphone"</span>) &#123;</span><br><span class="line">            proxy_pass http://iphone_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"Android"</span>)&#123;</span><br><span class="line">            proxy_pass http://android_pools;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">"msie"</span>)&#123;</span><br><span class="line">         <span class="built_in">return</span> 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http://static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><p>访问测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/www]<span class="comment"># echo "web01 iphone" &gt; index.html </span></span><br><span class="line">[root@web02-8 /code/www]<span class="comment"># echo "web02 android" &gt; index.html</span></span><br><span class="line"></span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "chrome" www.oldboy.com</span></span><br><span class="line">web03 default</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "iphone" www.oldboy.com</span></span><br><span class="line">web01 iphone</span><br><span class="line">[root@lb01-5 /etc/nginx/conf.d]<span class="comment"># curl -A "android" www.oldboy.com</span></span><br><span class="line">web02 android</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="proxy" scheme="http://linuxwf.com/tags/proxy/"/>
    
      <category term="upstream" scheme="http://linuxwf.com/tags/upstream/"/>
    
      <category term="反向代理" scheme="http://linuxwf.com/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
      <category term="负载均衡" scheme="http://linuxwf.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
  </entry>
  
  <entry>
    <title>13.LNPM数据库拆分</title>
    <link href="http://linuxwf.com/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/"/>
    <id>http://linuxwf.com/2020/04/13/13-LNPM%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8B%86%E5%88%86/</id>
    <published>2020-04-13T06:56:00.000Z</published>
    <updated>2020-04-13T07:08:06.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNPM数据库拆分"><a href="#LNPM数据库拆分" class="headerlink" title="LNPM数据库拆分"></a>LNPM数据库拆分</h1><h2 id="第1章-环境搭建准备"><a href="#第1章-环境搭建准备" class="headerlink" title="第1章 环境搭建准备"></a>第1章 环境搭建准备</h2><table><thead><tr><th>主机名</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>nginx+php</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>mysql</td></tr></tbody></table><h2 id="第2章-数据库拆分详细步骤"><a href="#第2章-数据库拆分详细步骤" class="headerlink" title="第2章 数据库拆分详细步骤"></a>第2章 数据库拆分详细步骤</h2><h3 id="2-1-web01上备份数据库并拷贝到db01上"><a href="#2-1-web01上备份数据库并拷贝到db01上" class="headerlink" title="2.1 web01上备份数据库并拷贝到db01上"></a>2.1 web01上备份数据库并拷贝到db01上</h3><p>备份 web01 上的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqldump -uroot -p'oldboy' -A --single-transaction &gt; /tmp/web01.sql</span></span><br></pre></td></tr></table></figure><p>将 web01 上备份的数据库拷贝至 db01 服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># scp /tmp/web01.sql 172.16.1.51:/tmp</span></span><br></pre></td></tr></table></figure><h3 id="2-2-db01服务器恢复数据库"><a href="#2-2-db01服务器恢复数据库" class="headerlink" title="2.2 db01服务器恢复数据库"></a>2.2 db01服务器恢复数据库</h3><p>安装数据库，并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># yum install mariadb mariadb-server -y</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># systemctl enable mariadb</span></span><br><span class="line">[root@db01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br></pre></td></tr></table></figure><p>将web01.sql导入到db01的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]<span class="comment"># mysql -uroot -p'oldboy' &lt; /tmp/web01.sql</span></span><br><span class="line"></span><br><span class="line">[root@db01-51 /tmp]<span class="comment"># mysql -uroot -p'oldboy' -e "show databases;"</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="2-3-db01数据库进行授权"><a href="#2-3-db01数据库进行授权" class="headerlink" title="2.3 db01数据库进行授权"></a>2.3 db01数据库进行授权</h3><p>在新数据库上授权, 允许所有网段, 通过 all 账户连接并操作该数据库<br>授权所有权限 grant all privileges<br>授权所有库所有表 <em>.</em><br>将授权赋予给哪个用户，这个用户只能通过哪个网段过来(%所有) ‘all’@’%’<br>授权该用户登录的密码 identified by</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01-51 ~]<span class="comment"># mysql -uroot -p'oldboy'</span></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on *.* to <span class="string">'all'</span>@<span class="string">'%'</span> identified by <span class="string">'oldboy'</span>;</span><br><span class="line">&gt; flush privileges; </span><br><span class="line">&gt;<span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="2-4-测试使用IP地址能不能登陆"><a href="#2-4-测试使用IP地址能不能登陆" class="headerlink" title="2.4 测试使用IP地址能不能登陆"></a>2.4 测试使用IP地址能不能登陆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uall -poldboy -h 172.16.1.51</span></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="2-5-web01修改PHP代码连接到新数据库"><a href="#2-5-web01修改PHP代码连接到新数据库" class="headerlink" title="2.5 web01修改PHP代码连接到新数据库"></a>2.5 web01修改PHP代码连接到新数据库</h3><p>修改wordpress</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/ </span></span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># find . -type f|xargs grep oldboy   #查找密码所在文件</span></span><br><span class="line">./wp-config.php:define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">[root@web01 /code/wordpress]<span class="comment"># vim wp-config.php </span></span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'all'</span>);</span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'oldboy'</span>);</span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'172.16.1.51'</span>);</span><br></pre></td></tr></table></figure><p>修改wecenter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh/</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># find . -type f|xargs grep oldboy</span></span><br><span class="line">./system/config/database.php:  <span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br><span class="line">[root@web01 /code/zh]<span class="comment"># vim system/config/database.php</span></span><br><span class="line"><span class="string">'host'</span> =&gt; <span class="string">'172.16.1.51'</span>,</span><br><span class="line"><span class="string">'username'</span> =&gt; <span class="string">'all'</span>,</span><br><span class="line"><span class="string">'password'</span> =&gt; <span class="string">'oldboy'</span>,</span><br></pre></td></tr></table></figure><h3 id="2-6-停止web01上的数据库，测试网页是否正常"><a href="#2-6-停止web01上的数据库，测试网页是否正常" class="headerlink" title="2.6 停止web01上的数据库，测试网页是否正常"></a>2.6 停止web01上的数据库，测试网页是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code/zh]<span class="comment"># systemctl stop mariadb.service</span></span><br></pre></td></tr></table></figure><p>此时如果打开网页没有问题则表明数据库拆分完成</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第3章-拓展WEB服务器"><a href="#第3章-拓展WEB服务器" class="headerlink" title="第3章 拓展WEB服务器"></a>第3章 拓展WEB服务器</h2><h3 id="3-1-为什么要拓展多台web节点"><a href="#3-1-为什么要拓展多台web节点" class="headerlink" title="3.1 为什么要拓展多台web节点"></a>3.1 为什么要拓展多台web节点</h3><p>单台 web 服务器能抗住的访问量是有限的，配置多台 web 服务器能提升更高的访问速度</p><h3 id="3-2-拓展多台web解决了什么问题"><a href="#3-2-拓展多台web解决了什么问题" class="headerlink" title="3.2 拓展多台web解决了什么问题"></a>3.2 拓展多台web解决了什么问题</h3><p>1.单台 web 节点如果故障，会导致业务 down 机<br>2.多台 web 节点能保证业务的持续稳定，扩展性高<br>3.多台 web 节点能有效的提升用户访问网站的速度</p><h3 id="3-3-多台web服务器架构组成"><a href="#3-3-多台web服务器架构组成" class="headerlink" title="3.3 多台web服务器架构组成"></a>3.3 多台web服务器架构组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145927.png"  alt=""></p><h3 id="3-4-多台web服务器思路"><a href="#3-4-多台web服务器思路" class="headerlink" title="3.4 多台web服务器思路"></a>3.4 多台web服务器思路</h3><p>1.可以使用ansible批量部署多台web服务器<br>2.配置内网私有yum仓库<br>3 按照web01的步骤安装好nginx和php，然后远程拷贝代码到新机器</p><h3 id="3-5-部署步骤"><a href="#3-5-部署步骤" class="headerlink" title="3.5 部署步骤"></a>3.5 部署步骤</h3><h4 id="3-5-1-web02-创建用户名密码"><a href="#3-5-1-web02-创建用户名密码" class="headerlink" title="3.5.1 web02 创建用户名密码"></a>3.5.1 web02 创建用户名密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br></pre></td></tr></table></figure><h4 id="2-5-2-web02安装Nginx-PHP"><a href="#2-5-2-web02安装Nginx-PHP" class="headerlink" title="2.5.2 web02安装Nginx+PHP"></a>2.5.2 web02安装Nginx+PHP</h4><p>可以直接从web01上拷贝yum源到本机yum目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/yum.repos.d/* /etc/yum.repos.d/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/pki/rpm-gpg/* /etc/pki/rpm-gpg/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install nginx</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-拷贝web01的nginx和php配置文件到web02"><a href="#3-2-3-拷贝web01的nginx和php配置文件到web02" class="headerlink" title="3.2.3 拷贝web01的nginx和php配置文件到web02"></a>3.2.3 拷贝web01的nginx和php配置文件到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/nginx /etc/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># scp -rp root@172.16.1.7:/etc/php-fpm.d /etc/</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4-拷贝代码目录到web02"><a href="#3-2-4-拷贝代码目录到web02" class="headerlink" title="3.2.4 拷贝代码目录到web02"></a>3.2.4 拷贝代码目录到web02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tar zcf code.tar.gz /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># scp code.tar.gz root@172.16.1.8:/tmp</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-web02上将代码解压到相应目录"><a href="#3-2-5-web02上将代码解压到相应目录" class="headerlink" title="3.2.5 web02上将代码解压到相应目录"></a>3.2.5 web02上将代码解压到相应目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tar xf /tmp/code.tar.gz -C /</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># ll -d /code/</span></span><br><span class="line">drwxr-xr-x 4 www www 112 Aug  1 17:02 /code/</span><br></pre></td></tr></table></figure><h4 id="3-2-6-web02上启动nginx和php-fpm并加入开机自启动"><a href="#3-2-6-web02上启动nginx和php-fpm并加入开机自启动" class="headerlink" title="3.2.6 web02上启动nginx和php-fpm并加入开机自启动"></a>3.2.6 web02上启动nginx和php-fpm并加入开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># systemctl start nginx php-fpm.service </span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable nginx php-fpm.service</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-web访问测试"><a href="#3-2-7-web访问测试" class="headerlink" title="3.2.7 web访问测试"></a>3.2.7 web访问测试</h4><p>修改windows的hosts为web02的地址，然后浏览器访问测试</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145614.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413145850.png"  alt=""></p><h2 id="第4章-将静态资源挂载到共享存储"><a href="#第4章-将静态资源挂载到共享存储" class="headerlink" title="第4章 将静态资源挂载到共享存储"></a>第4章 将静态资源挂载到共享存储</h2><h3 id="4-1-为什么要拆分静态资源到独立服务器"><a href="#4-1-为什么要拆分静态资源到独立服务器" class="headerlink" title="4.1 为什么要拆分静态资源到独立服务器"></a>4.1 为什么要拆分静态资源到独立服务器</h3><p>当后端的 web 节点出现多台时，会导致用户上传的图片、视频附件等内容仅上传至一台 web 服务器，那么其他的web 服务器则无法访问到该图片</p><h3 id="4-2-新增一台nfs存储解决了什么问题"><a href="#4-2-新增一台nfs存储解决了什么问题" class="headerlink" title="4.2 新增一台nfs存储解决了什么问题"></a>4.2 新增一台nfs存储解决了什么问题</h3><p>1.保证了多台 web 节点静态资源一致。<br>2.有效节省多台 web 节点的存储空间。<br>3.统一管理静态资源，便于后期推送至 CDN 进行静态资源加速</p><h3 id="4-3-多台web节点架构环境准备"><a href="#4-3-多台web节点架构环境准备" class="headerlink" title="4.3 多台web节点架构环境准备"></a>4.3 多台web节点架构环境准备</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150124.png"  alt=""></p><table><thead><tr><th>服务器</th><th>IP地址</th><th>安装服务</th></tr></thead><tbody><tr><td>web01</td><td>172.16.1.7</td><td>Nginx+PHP</td></tr><tr><td>web02</td><td>172.16.1.8</td><td>Nginx+PHP</td></tr><tr><td>db01</td><td>172.16.1.51</td><td>MySQL</td></tr><tr><td>nfs</td><td>172.16.1.31</td><td>NFS</td></tr></tbody></table><h3 id="4-4-NFS服务器端配置"><a href="#4-4-NFS服务器端配置" class="headerlink" title="4.4 NFS服务器端配置"></a>4.4 NFS服务器端配置</h3><h4 id="4-4-1安装配置NFS"><a href="#4-4-1安装配置NFS" class="headerlink" title="4.4.1安装配置NFS"></a>4.4.1安装配置NFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum -y install nfs-utils</span></span><br><span class="line">[root@nfs ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data/blog 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/data/zh 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="4-4-2-创建共享目录并进行授权"><a href="#4-4-2-创建共享目录并进行授权" class="headerlink" title="4.4.2 创建共享目录并进行授权"></a>4.4.2 创建共享目录并进行授权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># mkdir /data/&#123;blog,zh&#125;</span></span><br><span class="line">[root@nfs ~]<span class="comment"># chown -R www.www /data/</span></span><br></pre></td></tr></table></figure><h4 id="4-4-3-启动nfs服务并加入开机自启"><a href="#4-4-3-启动nfs服务并加入开机自启" class="headerlink" title="4.4.3 启动nfs服务并加入开机自启"></a>4.4.3 启动nfs服务并加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># systemctl start nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl restart rpcbind nfs-server</span></span><br><span class="line">[root@nfs ~]<span class="comment"># showmount -e</span></span><br><span class="line">Export list <span class="keyword">for</span> nfs:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h3 id="4-5-web01端操作步骤如下"><a href="#4-5-web01端操作步骤如下" class="headerlink" title="4.5 web01端操作步骤如下"></a>4.5 web01端操作步骤如下</h3><h4 id="4-5-1-web01安装nfs"><a href="#4-5-1-web01安装nfs" class="headerlink" title="4.5.1 web01安装nfs"></a>4.5.1 web01安装nfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nfs-utils rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web01 ~]<span class="comment"># showmount -e 172.16.1.31   #查看nfs共享信息</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><h4 id="4-5-2-查找Wordpress-静态资源存放的位置"><a href="#4-5-2-查找Wordpress-静态资源存放的位置" class="headerlink" title="4.5.2 查找Wordpress 静态资源存放的位置"></a>4.5.2 查找Wordpress 静态资源存放的位置</h4><p>在wordpress的文章里添加一张图片，然后查看图片URL资源</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/20200413150201.png"  alt=""></p><p>或者</p><p>复制图片地址打开，查看静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-04-40.png"  alt=""></p><h4 id="4-5-3-备份web01服务器上Wordpress-的静态资源"><a href="#4-5-3-备份web01服务器上Wordpress-的静态资源" class="headerlink" title="4.5.3 备份web01服务器上Wordpress 的静态资源"></a>4.5.3 备份web01服务器上Wordpress 的静态资源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/wordpress/wp-content</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web01 /code/wordpress/wp-content]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 www www   28 Jan  9  2012 index.php</span><br><span class="line">drwxr-xr-x 4 www www 4096 Feb  8  2018 languages</span><br><span class="line">drwxr-xr-x 3 www www   55 Aug  2 10:59 plugins</span><br><span class="line">drwxr-xr-x 5 www www   88 Aug  2 10:59 themes</span><br><span class="line">drwxr-xr-x 2 www www    6 Aug  1 16:32 upgrade</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads</span><br><span class="line">drwxr-xr-x 3 www www   18 Aug  1 12:03 uploads.bak</span><br></pre></td></tr></table></figure><h4 id="4-5-4-备份web01服务器上zh的静态资源"><a href="#4-5-4-备份web01服务器上zh的静态资源" class="headerlink" title="4.5.4 备份web01服务器上zh的静态资源"></a>4.5.4 备份web01服务器上zh的静态资源</h4><p>复制图片地址，找到静态资源存放路径</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/Snipaste_2020-04-13_15-06-29.png"  alt=""></p><p>备份静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /code/zh</span></span><br><span class="line">[root@web01 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><h4 id="4-5-5-web01客户端执行挂载操作"><a href="#4-5-5-web01客户端执行挂载操作" class="headerlink" title="4.5.5 web01客户端执行挂载操作"></a>4.5.5 web01客户端执行挂载操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><h4 id="4-5-6-将挂载信息加入开机自启"><a href="#4-5-6-将挂载信息加入开机自启" class="headerlink" title="4.5.6 将挂载信息加入开机自启"></a>4.5.6 将挂载信息加入开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web01 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure><h3 id="4-6-web02端操作与web01一样"><a href="#4-6-web02端操作与web01一样" class="headerlink" title="4.6 web02端操作与web01一样"></a>4.6 web02端操作与web01一样</h3><p>安装配置NFS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># yum -y install rpcbind nfs-utils</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl restart rpcbind</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># systemctl enable rpcbind nfs-server</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data/zh   172.16.1.0/24</span><br><span class="line">/data/blog 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>备份web02服务器上Wordpress 的静态资源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 /code/wordpress/wp-content]<span class="comment"># cp -a uploads uploads.bak</span></span><br><span class="line">[root@web02-8 /code/zh]<span class="comment"># cp -a uploads uploads.bak</span></span><br></pre></td></tr></table></figure><p>web02客户端执行挂载操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data/blog   39G  1.8G   38G   5% /code/wordpress/wp-content/uploads</span><br><span class="line">172.16.1.31:/data/zh     39G  1.8G   38G   5% /code/zh/uploads</span><br></pre></td></tr></table></figure><p>拷贝备份的静态资源数据到挂载点目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/wordpress/wp-content/uploads.bak/* /code/wordpress/wp-content/uploads/</span></span><br><span class="line">[root@web02-8 ~]<span class="comment"># cp -rp /code/zh/uploads.bak/* /code/zh/uploads/</span></span><br></pre></td></tr></table></figure><p>将挂载信息加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02-8 ~]<span class="comment"># tail -2 /etc/rc.local </span></span><br><span class="line">mount -t nfs 172.16.1.31:/data/blog/ /code/wordpress/wp-content/uploads</span><br><span class="line">mount -t nfs 172.16.1.31:/data/zh/ /code/zh/uploads</span><br><span class="line">[root@web02-8 ~]<span class="comment"># chmod +x /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="lnmp" scheme="http://linuxwf.com/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>12.LNMP架构</title>
    <link href="http://linuxwf.com/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/"/>
    <id>http://linuxwf.com/2020/04/13/12-LNMP%E6%9E%B6%E6%9E%84/</id>
    <published>2020-04-13T06:27:00.000Z</published>
    <updated>2020-04-13T06:36:23.860Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="LNMP架构"><a href="#LNMP架构" class="headerlink" title="LNMP架构"></a>LNMP架构</h1><h2 id="第1章-LNMP架构概述"><a href="#第1章-LNMP架构概述" class="headerlink" title="第1章 LNMP架构概述"></a>第1章 LNMP架构概述</h2><h3 id="1-1-什么是LNMP"><a href="#1-1-什么是LNMP" class="headerlink" title="1.1 什么是LNMP"></a>1.1 什么是LNMP</h3><p><code>LNMP</code> 是一套技术的组合， L=Linux、 N=Nginx、 M<del>=MySQL、 P</del>=PHP</p><h3 id="1-2-LNMP架构是如何工作的"><a href="#1-2-LNMP架构是如何工作的" class="headerlink" title="1.2 LNMP架构是如何工作的"></a>1.2 LNMP架构是如何工作的</h3><p>首先 Nginx 服务是不能处理动态请求，那么当用户发起动态请求时, Nginx 又是如何进行处理的。<br>当用户发起 http 请求，请求会被 Nginx 处理，如果是静态资源请求 Nginx 则直接返回，如果是动态请求 Nginx 则通过 fastcgi 协议转交给后端的 PHP 程序处理，具体如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/lnmp.png"  alt=""></p><h3 id="1-3-Nginx与Fast-CGI工作流程"><a href="#1-3-Nginx与Fast-CGI工作流程" class="headerlink" title="1.3 Nginx与Fast-CGI工作流程"></a>1.3 Nginx与Fast-CGI工作流程</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx-fast-cgi.png"  alt=""></p><ul><li>1.用户通过 http 协议发起请求，请求会先抵达 LNMP 架构中的 Nginx</li><li>2.Nginx 会根据用户的请求进行判断，这个判断是有 Location 进行完成</li><li>3.判断用户请求的是静态页面， Nginx 直接进行处理</li><li>4.判断用户请求的是动态页面， Nginx 会将该请求交给 fastcgi 协议下发</li><li>5.fastgi 会将请求交给 php-fpm 管理进程, php-fpm 管理进程接收到后会调用具体的工作进程 warrap</li><li>6.warrap 进程会调用 php 程序进行解析,如果只是解析代码 php 直接返回</li><li>7.如果有查询数据库操作，则由 php 连接数据库(用户 密码 IP)发起查询的操作</li><li>8.最终数据由 mysql-&gt;php-&gt;php-fpm-&gt;fastcgi-&gt;nginx-&gt;http-&gt;user</li></ul><h2 id="第2章-LNMP安装部署"><a href="#第2章-LNMP安装部署" class="headerlink" title="第2章 LNMP安装部署"></a>第2章 LNMP安装部署</h2><h3 id="2-1-创建www统一用户"><a href="#2-1-创建www统一用户" class="headerlink" title="2.1 创建www统一用户"></a>2.1 创建www统一用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h3 id="2-2-使用官方仓库安装nginx"><a href="#2-2-使用官方仓库安装nginx" class="headerlink" title="2.2 使用官方仓库安装nginx"></a>2.2 使用官方仓库安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[root@web01 ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># ps -ef|grep nginx   #更改nginx工作用户为www</span></span><br><span class="line">root       1291      1  0 15:05 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class="line">www        1292   1291  0 15:05 ?        00:00:00 nginx: worker process</span><br><span class="line">root       1697   1517  0 15:20 pts/0    00:00:00 grep --color=auto nginx</span><br></pre></td></tr></table></figure><h3 id="2-3-启动Nginx并加入开机自启动"><a href="#2-3-启动Nginx并加入开机自启动" class="headerlink" title="2.3 启动Nginx并加入开机自启动"></a>2.3 启动Nginx并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h3 id="2-4-使用第三方拓展源安装php7-1"><a href="#2-4-使用第三方拓展源安装php7-1" class="headerlink" title="2.4  使用第三方拓展源安装php7.1"></a>2.4  使用第三方拓展源安装php7.1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum remove php-mysql-5.4 php php-fpm php-common</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line">[root@web01 /etc/yum.repos.d]<span class="comment"># rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb</span></span><br></pre></td></tr></table></figure><h3 id="2-5-配置php-fpm用户与nginx用户保持一致"><a href="#2-5-配置php-fpm用户与nginx用户保持一致" class="headerlink" title="2.5 配置php-fpm用户与nginx用户保持一致"></a>2.5 配置php-fpm用户与nginx用户保持一致</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^user/c user = www' /etc/php-fpm.d/www.conf</span></span><br><span class="line">[root@web01 ~]<span class="comment"># sed -i '/^group/c group = www' /etc/php-fpm.d/www.conf</span></span><br></pre></td></tr></table></figure><h3 id="2-6-启动php-fpm并加入开机自启动"><a href="#2-6-启动php-fpm并加入开机自启动" class="headerlink" title="2.6 启动php-fpm并加入开机自启动"></a>2.6 启动php-fpm并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start php-fpm</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable php-fpm</span></span><br></pre></td></tr></table></figure><h3 id="2-7-安装Mariadb数据库"><a href="#2-7-安装Mariadb数据库" class="headerlink" title="2.7 安装Mariadb数据库"></a>2.7 安装Mariadb数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install mariadb-server mariadb -y</span></span><br></pre></td></tr></table></figure><h3 id="2-8-启动Mariadb数据库并加入开机自启动"><a href="#2-8-启动Mariadb数据库并加入开机自启动" class="headerlink" title="2.8 启动Mariadb数据库并加入开机自启动"></a>2.8 启动Mariadb数据库并加入开机自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># systemctl start mariadb</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable mariadb</span></span><br></pre></td></tr></table></figure><h3 id="2-9-配置Mariadb账号密码"><a href="#2-9-配置Mariadb账号密码" class="headerlink" title="2.9 配置Mariadb账号密码"></a>2.9 配置Mariadb账号密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysqladmin password 'oldboy'</span></span><br><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><h3 id="2-10-mysql基础命令"><a href="#2-10-mysql基础命令" class="headerlink" title="2.10 mysql基础命令"></a>2.10 mysql基础命令</h3><p>#登录mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br></pre></td></tr></table></figure><p>#查看当前mysql有哪些用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">|      | localhost |</span><br><span class="line">| root | localhost |</span><br><span class="line">|      | web01     |</span><br><span class="line">| root | web01     |</span><br><span class="line">+------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><p>#使用指定IP登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy -h127.0.0.1</span></span><br></pre></td></tr></table></figure><p>#查看当前有哪些数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.10 sec)</span><br></pre></td></tr></table></figure><p>#查看库里面有哪些表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show tables from mysql;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>#退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="第3章-LNMP环境配置"><a href="#第3章-LNMP环境配置" class="headerlink" title="第3章 LNMP环境配置"></a>第3章 LNMP环境配置</h2><h3 id="3-1-Fastcgi语法"><a href="#3-1-Fastcgi语法" class="headerlink" title="3.1 Fastcgi语法"></a>3.1 Fastcgi语法</h3><p>设置 fastcgi 服务器的地址，该地址可以指定为域名或 IP 地址，以及端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_pass address;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, <span class="keyword">if</span> <span class="keyword">in</span> location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_pass localhost:9000;</span><br><span class="line">fastcgi_pass unix:/tmp/fastcgi.socket;</span><br></pre></td></tr></table></figure><p>设置 fastcgi 默认的首页文件，需要结合 fastcgi_param 一起设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_index name;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>通过 fastcgi_param 设置变量，并将设置的变量传递到后端的 fastcgi 服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_param parameter value [if_not_empty];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment">#语法示例</span></span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /code<span class="variable">$fastcgi_script_name</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-最终Nginx连接FastCGI服务器配置如下"><a href="#3-2-最终Nginx连接FastCGI服务器配置如下" class="headerlink" title="3.2 最终Nginx连接FastCGI服务器配置如下"></a>3.2 最终Nginx连接FastCGI服务器配置如下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/conf.d/php.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    server_name php.oldboy.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    root /code;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/php.access.log  main;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-在-code目录下创建index-php文件并访问测试"><a href="#3-3-在-code目录下创建index-php文件并访问测试" class="headerlink" title="3.3 在/code目录下创建index.php文件并访问测试"></a>3.3 在/code目录下创建index.php文件并访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># chown -R www:www /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># cat index.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-检查nginx语法并重加载"><a href="#3-4-检查nginx语法并重加载" class="headerlink" title="3.4 检查nginx语法并重加载"></a>3.4 检查nginx语法并重加载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /code]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="3-5-绑定hosts然后在浏览器访问"><a href="#3-5-绑定hosts然后在浏览器访问" class="headerlink" title="3.5 绑定hosts然后在浏览器访问"></a>3.5 绑定hosts然后在浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647768645.png"  alt=""></p><h3 id="3-6-测试php和数据库访问是否正常"><a href="#3-6-测试php和数据库访问是否正常" class="headerlink" title="3.6 测试php和数据库访问是否正常"></a>3.6 测试php和数据库访问是否正常</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># cat mysql.php </span></span><br><span class="line">&lt;?php</span><br><span class="line">    <span class="variable">$servername</span> = <span class="string">"localhost"</span>;</span><br><span class="line">    <span class="variable">$username</span> = <span class="string">"root"</span>;</span><br><span class="line">    <span class="variable">$password</span> = <span class="string">"oldboy"</span>;</span><br><span class="line"></span><br><span class="line">    // 创建连接</span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">    // // 检测连接</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">        die(<span class="string">"Connection failed: "</span> . mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"php 连接 MySQL 数据库成功"</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="3-7-通过浏览器访问数据库页面"><a href="#3-7-通过浏览器访问数据库页面" class="headerlink" title="3.7 通过浏览器访问数据库页面"></a>3.7 通过浏览器访问数据库页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564647969919.png"  alt=""></p><h2 id="第4章-部署博客Wordpress"><a href="#第4章-部署博客Wordpress" class="headerlink" title="第4章 部署博客Wordpress"></a>第4章 部署博客Wordpress</h2><h3 id="4-1-配置Nginx虚拟主机站点"><a href="#4-1-配置Nginx虚拟主机站点" class="headerlink" title="4.1 配置Nginx虚拟主机站点"></a>4.1 配置Nginx虚拟主机站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wordpress.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.oldboy.com;</span><br><span class="line">    root /code/wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-重启nginx"><a href="#4-2-重启nginx" class="headerlink" title="4.2 重启nginx"></a>4.2 重启nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="4-3-下载解压wordpress到代码目录"><a href="#4-3-下载解压wordpress到代码目录" class="headerlink" title="4.3 下载解压wordpress到代码目录"></a>4.3 下载解压wordpress到代码目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /code</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /code/</span></span><br><span class="line">[root@web01 /code]<span class="comment"># wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span></span><br><span class="line">[root@web01 /code]<span class="comment"># tar xf wordpress-4.9.4-zh_CN.tar.gz </span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www:www /code/wordpress</span></span><br></pre></td></tr></table></figure><h3 id="4-4-创建wordpress数据库"><a href="#4-4-创建wordpress数据库" class="headerlink" title="4.4 创建wordpress数据库"></a>4.4 创建wordpress数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database wordpress CHARSET utf8mb4;</span><br><span class="line">&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="4-5-浏览器访问wordpress并部署"><a href="#4-5-浏览器访问wordpress并部署" class="headerlink" title="4.5 浏览器访问wordpress并部署"></a>4.5 浏览器访问wordpress并部署</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649445731.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649478708.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649527536.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564649576779.png"  alt=""></p><h2 id="第5章-部署问答网站Wecenter"><a href="#第5章-部署问答网站Wecenter" class="headerlink" title="第5章 部署问答网站Wecenter"></a>第5章 部署问答网站Wecenter</h2><h3 id="5-1-配置Nginx虚拟站点"><a href="#5-1-配置Nginx虚拟站点" class="headerlink" title="5.1 配置Nginx虚拟站点"></a>5.1 配置Nginx虚拟站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat wecenter.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name zh.oldboy.com;</span><br><span class="line">    root /code/zh;</span><br><span class="line">    index index.php index.html;</span><br><span class="line">   access_log  /var/<span class="built_in">log</span>/nginx/zh.access.log  main;   </span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /code/zh;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-2-下载解压wecenter并授权"><a href="#5-2-下载解压wecenter并授权" class="headerlink" title="5.2 下载解压wecenter并授权"></a>5.2 下载解压wecenter并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /code]<span class="comment"># mkdir zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 10393660 Aug  1 11:57 WeCenter_3-3-2.zip</span><br><span class="line">[root@web01 /code]<span class="comment"># unzip WeCenter_3-3-2.zip -d /code/zh</span></span><br><span class="line">[root@web01 /code]<span class="comment"># chown -R www.www /code/</span></span><br></pre></td></tr></table></figure><h3 id="5-3-创建zh数据库"><a href="#5-3-创建zh数据库" class="headerlink" title="5.3 创建zh数据库"></a>5.3 创建zh数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mysql -uroot -poldboy</span></span><br><span class="line">&gt; create database zh;</span><br><span class="line">&gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h3 id="5-4-浏览器访问"><a href="#5-4-浏览器访问" class="headerlink" title="5.4 浏览器访问"></a>5.4 浏览器访问</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650838149.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650873995.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650919599.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564650968909.png"  alt=""></p><h3 id="5-5-清除首页安装文件"><a href="#5-5-清除首页安装文件" class="headerlink" title="5.5 清除首页安装文件"></a>5.5 清除首页安装文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rm -rf /code/zh/install</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="lnmp" scheme="http://linuxwf.com/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>11.Nginx常用模块</title>
    <link href="http://linuxwf.com/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
    <id>http://linuxwf.com/2020/04/13/11-Nginx%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</id>
    <published>2020-04-13T06:22:00.000Z</published>
    <updated>2020-04-13T06:26:09.745Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx常用模块"><a href="#Nginx常用模块" class="headerlink" title="Nginx常用模块"></a>Nginx常用模块</h1><h2 id="第1章-目录索引"><a href="#第1章-目录索引" class="headerlink" title="第1章 目录索引"></a>第1章 目录索引</h2><h3 id="1-1-应用场景"><a href="#1-1-应用场景" class="headerlink" title="1.1 应用场景"></a>1.1 应用场景</h3><p>可以使用nginx作为简易的文件下载服务器</p><h3 id="1-2-参数说明"><a href="#1-2-参数说明" class="headerlink" title="1.2 参数说明"></a>1.2 参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Syntax: autoindex on | off;</span><br><span class="line">Default: autoindex off;</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"><span class="comment"># autoindex 常用参数</span></span><br><span class="line">autoindex_exact_size off;</span><br><span class="line">默认为 on， 显示出文件的确切大小，单位是 bytes。</span><br><span class="line">修改为 off，显示出文件的大概大小，单位是 kB 或者 MB 或者 GB。</span><br><span class="line"></span><br><span class="line">autoindex_localtime on;</span><br><span class="line">默认为 off，显示的文件时间为 GMT 时间。</span><br><span class="line">修改为 on， 显示的文件时间为文件的服务器时间。</span><br><span class="line"></span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">默认中文目录乱码，添加上解决乱码</span><br></pre></td></tr></table></figure><h3 id="1-3-配置文件"><a href="#1-3-配置文件" class="headerlink" title="1.3 配置文件"></a>1.3 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat download.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name download.wufei.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/download;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        autoindex on;</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="1-4-创建测试数据"><a href="#1-4-创建测试数据" class="headerlink" title="1.4 创建测试数据"></a>1.4 创建测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /usr/share/nginx/html/download]<span class="comment"># ll</span></span><br><span class="line">total 948</span><br><span class="line">-rw-r--r-- 1 root root 763172 Jun  4 11:07 01.jpg</span><br><span class="line">-rw-r--r-- 1 root root 200027 Jun  4 00:29 02.jpg</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 10.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 1.txt</span><br><span class="line">-rw-r--r-- 1 root root     13 Jul 31 12:07 2.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 3.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 4.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 5.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 6.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 7.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 8.txt</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 09:56 9.txt</span><br><span class="line">drwxr-xr-x 2 root root     24 Jul 31 11:50 mdeia</span><br><span class="line">-rw-r--r-- 1 root root      0 Jul 31 11:56 天天.txt</span><br></pre></td></tr></table></figure><h3 id="1-5-访问页面"><a href="#1-5-访问页面" class="headerlink" title="1.5 访问页面"></a>1.5 访问页面</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564563327944.png"  alt=""></p><h2 id="第2章-状态监控"><a href="#第2章-状态监控" class="headerlink" title="第2章 状态监控"></a>第2章 状态监控</h2><h3 id="2-1-状态字段解释"><a href="#2-1-状态字段解释" class="headerlink" title="2.1 状态字段解释"></a>2.1 状态字段解释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Active connections <span class="comment"># 当前活动的连接数</span></span><br><span class="line">accepts <span class="comment"># 当前的总连接数 TCP</span></span><br><span class="line">handled <span class="comment"># 成功的连接数 TCP</span></span><br><span class="line">requests <span class="comment"># 总的 http 请求数</span></span><br><span class="line">Reading <span class="comment"># 请求</span></span><br><span class="line">Writing <span class="comment"># 响应</span></span><br><span class="line">Waiting <span class="comment"># 等待的请求数，开启了 keepalive</span></span><br><span class="line"><span class="comment"># 注意, 一次 TCP 的连接，可以发起多次 http 的请求, 如下参数可配置进行验证</span></span><br><span class="line">keepalive_timeout 0; <span class="comment"># 类似于关闭长连接</span></span><br><span class="line">keepalive_timeout 65; <span class="comment"># 65s 没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h3 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat /etc/nginx/conf.d/status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-访问测试"><a href="#2-3-访问测试" class="headerlink" title="2.3 访问测试"></a>2.3 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 32 32 31 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><h2 id="第3章-访问控制"><a href="#第3章-访问控制" class="headerlink" title="第3章 访问控制"></a>第3章 访问控制</h2><h3 id="3-1-基于IP的访问控制"><a href="#3-1-基于IP的访问控制" class="headerlink" title="3.1 基于IP的访问控制"></a>3.1 基于IP的访问控制</h3><h4 id="3-1-1-配置语法"><a href="#3-1-1-配置语法" class="headerlink" title="3.1.1 配置语法"></a>3.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许配置语法</span></span><br><span class="line">Syntax: allow address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝配置语法</span></span><br><span class="line">Syntax: deny address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-1-2-案例一：拒绝windwos访问www域名"><a href="#3-1-2-案例一：拒绝windwos访问www域名" class="headerlink" title="3.1.2 案例一：拒绝windwos访问www域名"></a>3.1.2 案例一：拒绝windwos访问www域名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        deny 10.0.1.1;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-windows访问测试403"><a href="#3-1-3-windows访问测试403" class="headerlink" title="3.1.3 windows访问测试403"></a>3.1.3 windows访问测试403</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559603770.png"  alt=""></p><h4 id="3-1-4-使用curl访问测试ok"><a href="#3-1-4-使用curl访问测试ok" class="headerlink" title="3.1.4 使用curl访问测试ok"></a>3.1.4 使用curl访问测试ok</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br></pre></td></tr></table></figure><h4 id="3-1-5-案例二：只允许windows访问，其他全部拒绝"><a href="#3-1-5-案例二：只允许windows访问，其他全部拒绝" class="headerlink" title="3.1.5 案例二：只允许windows访问，其他全部拒绝"></a>3.1.5 案例二：只允许windows访问，其他全部拒绝</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        allow 10.0.1.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="3-1-6-windows访问测试ok"><a href="#3-1-6-windows访问测试ok" class="headerlink" title="3.1.6 windows访问测试ok"></a>3.1.6 windows访问测试ok</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564559807100.png"  alt=""></p><h4 id="3-1-7-curl访问测试403"><a href="#3-1-7-curl访问测试403" class="headerlink" title="3.1.7 curl访问测试403"></a>3.1.7 curl访问测试403</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx/1.16.0&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-基于用户认证的访问控制"><a href="#3-2-基于用户认证的访问控制" class="headerlink" title="3.2 基于用户认证的访问控制"></a>3.2 基于用户认证的访问控制</h3><h4 id="3-2-1-配置语法"><a href="#3-2-1-配置语法" class="headerlink" title="3.2.1 配置语法"></a>3.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#访问提示字符串</span></span><br><span class="line">Syntax: auth_basic string| off;</span><br><span class="line">Default: auth_basic off;</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line"><span class="comment">#账户密码文件</span></span><br><span class="line">Syntax: auth_basic_user_file file;</span><br><span class="line">Default: -</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h4 id="3-2-2-配置文件"><a href="#3-2-2-配置文件" class="headerlink" title="3.2.2 配置文件"></a>3.2.2 配置文件</h4><p>安装httpd-tools,该包中携带了 htpasswd 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install httpd-tools</span></span><br></pre></td></tr></table></figure><p>创建新的密码文件, -c 创建新文件 -b 允许命令行输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># htpasswd -b -c /etc/nginx/auth_conf wufei 123456 </span></span><br><span class="line">Adding password <span class="keyword">for</span> user wufei</span><br></pre></td></tr></table></figure><p>nginx 配置调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        auth_basic <span class="string">"Auth access Blog Input your Passwd!"</span>;</span><br><span class="line">        auth_basic_user_file auth_conf;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx3.2.3 访问测试</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-访问测试"><a href="#3-2-3-访问测试" class="headerlink" title="3.2.3 访问测试"></a>3.2.3 访问测试</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564560409082.png"  alt=""></p><h2 id="第4章-访问限制"><a href="#第4章-访问限制" class="headerlink" title="第4章 访问限制"></a>第4章 访问限制</h2><p>经常会遇到这种情况，服务器流量异常，负载过大等等。对于大流量恶意的攻击访问， 会带来带宽的浪费，服务器压力，影响业务，往往考虑对同一个 ip 的连接数，请求数、进行限制。<br>ngx_http_limit_conn_module 模块可以根据定义的 key 来限制每个键值的连接数，如同一个 IP 来源的连接数。<br>limit_conn_module 连接频率限制<br>limit_req_module 请求频率限制</p><h3 id="4-1-连接限制"><a href="#4-1-连接限制" class="headerlink" title="4.1 连接限制"></a>4.1 连接限制</h3><h4 id="4-1-1-配置语法"><a href="#4-1-1-配置语法" class="headerlink" title="4.1.1 配置语法"></a>4.1.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_conn_module</span></span><br><span class="line">Syntax: limit_conn_zone key zone=name:size;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-1-2-配置文件"><a href="#4-1-2-配置文件" class="headerlink" title="4.1.2 配置文件"></a>4.1.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http 标签段定义连接限制</span></span><br><span class="line">http&#123;</span><br><span class="line">      limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># server标签里引用条件</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=conn_zone:10m;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    limit_conn conn_zone 1;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-1-3-访问测试"><a href="#4-1-3-访问测试" class="headerlink" title="4.1.3 访问测试"></a>4.1.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-1-4-查看日志"><a href="#4-1-4-查看日志" class="headerlink" title="4.1.4 查看日志"></a>4.1.4 查看日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:15:55 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h3 id="4-2请求限制"><a href="#4-2请求限制" class="headerlink" title="4.2请求限制"></a>4.2请求限制</h3><h4 id="4-2-1-配置语法"><a href="#4-2-1-配置语法" class="headerlink" title="4.2.1 配置语法"></a>4.2.1 配置语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模块名 ngx_http_limit_req_module</span></span><br><span class="line">Syntax: limit_req_zone key zone=name:size rate=rate;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number [burst=number] [nodelay];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h4 id="4-2-2-配置文件"><a href="#4-2-2-配置文件" class="headerlink" title="4.2.2 配置文件"></a>4.2.2 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">limit_req_zone <span class="variable">$binary_remote_addr</span> zone=req_zone:10m rate=1r/s;</span><br><span class="line"></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line"><span class="comment"># 同一时刻只允许一个客户端连接</span></span><br><span class="line">    <span class="comment">#limit_conn conn_zone 1;</span></span><br><span class="line"></span><br><span class="line">    limit_req zone=req_zone burst=3 nodelay;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        <span class="comment">#allow 10.0.1.1;</span></span><br><span class="line">        <span class="comment">#deny all;</span></span><br><span class="line">        <span class="comment">#auth_basic "Auth access Blog Input your Passwd!";</span></span><br><span class="line">        <span class="comment">#auth_basic_user_file auth_conf;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h4 id="4-2-3-访问测试"><a href="#4-2-3-访问测试" class="headerlink" title="4.2.3 访问测试"></a>4.2.3 访问测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># ab -n 50 -c 2 http://www.oldboy.com/</span></span><br></pre></td></tr></table></figure><h4 id="4-2-4-查看访问日志"><a href="#4-2-4-查看访问日志" class="headerlink" title="4.2.4 查看访问日志"></a>4.2.4 查看访问日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -f /var/log/nginx/www.access.log </span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 200 4 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br><span class="line">10.0.1.7 - - [31/Jul/2019:16:23:01 +0800] <span class="string">"GET / HTTP/1.0"</span> 503 197 <span class="string">"-"</span> <span class="string">"ApacheBench/2.3"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h5 id="4-2-5-查看错误日志"><a href="#4-2-5-查看错误日志" class="headerlink" title="4.2.5 查看错误日志"></a>4.2.5 查看错误日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail -5 /var/log/nginx/error.log</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *191 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *192 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *193 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *194 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br><span class="line">2019/07/31 16:23:01 [error] 2808<span class="comment">#2808: *195 limiting requests, excess: 3.995 by zone "req_zone", client: 10.0.1.7, server: www.oldboy.com, request: "GET / HTTP/1.0", host: "www.oldboy.com"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-为什么限制请求的效果更好"><a href="#4-3-为什么限制请求的效果更好" class="headerlink" title="4.3 为什么限制请求的效果更好"></a>4.3 为什么限制请求的效果更好</h3><p>我们先来回顾一下 http 协议的连接与请求</p><p>首先 HTTP 是建立在 TCP 基础之上, 在完成 HTTP 请求需要先建立TCP 三次握手（称为 TCP 连接） ,在连接的基础上在完成 HTTP 的请求。<br>所以多个 HTTP 请求可以建立在一次 TCP 连接之上, 那么我们对请求的精度限制，当然比对一个连接的限制会更加的有效，因为同一时刻只允许一个 TCP 连接进入, 但是同一时刻多个 HTTP 请求可以通过一个 TCP 连接进入。所以针对 HTTP 的请求限制才是比较优的解决方案。</p><h2 id="第5章-location"><a href="#第5章-location" class="headerlink" title="第5章 location"></a>第5章 location</h2><p>使用 Nginx Location 可以控制访问网站的路径, 但一个 server 可以有多个 location 配置, 多个 location 的优先级该如何区分</p><h3 id="5-1-location语法介绍"><a href="#5-1-location语法介绍" class="headerlink" title="5.1 location语法介绍"></a>5.1 location语法介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">location [=|^~|~|~*|!~|!~*|/] /uri/ &#123; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-location语法优先级"><a href="#5-2-location语法优先级" class="headerlink" title="5.2 location语法优先级"></a>5.2 location语法优先级</h3><table><thead><tr><th>匹配符</th><th>匹配规则</th><th>优先级</th></tr></thead><tbody><tr><td>=</td><td>精确匹配</td><td>1</td></tr><tr><td>^~</td><td>以某个字符串开头</td><td>2</td></tr><tr><td>~</td><td>区分大小写的正则匹配</td><td>3</td></tr><tr><td>~*</td><td>不区分大小写的正则匹配</td><td>4</td></tr><tr><td>!~</td><td>区分大小写不匹配的正则</td><td>5</td></tr><tr><td>!~*</td><td>不区分大小写不匹配的正则</td><td>6</td></tr><tr><td>/</td><td>通用匹配，任何请求都会匹配到</td><td>7</td></tr></tbody></table><h3 id="5-3-配置location匹配规则实战"><a href="#5-3-配置location匹配规则实战" class="headerlink" title="5.3 配置location匹配规则实战"></a>5.3 配置location匹配规则实战</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf</span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">           <span class="built_in">return</span> 200  <span class="string">"location / \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location = / &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location = \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /documents/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location /documents/ \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ /images/ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ^~ /images/ \n"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">        <span class="built_in">return</span> 200 <span class="string">"location ~* \.(gif|jpg|jpeg) \n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-4-测试location匹配规则"><a href="#5-4-测试location匹配规则" class="headerlink" title="5.4 测试location匹配规则"></a>5.4 测试location匹配规则</h3><p>#精确匹配=/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">location =</span><br></pre></td></tr></table></figure><p>#没有满足的请求，所以匹配了/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#匹配了/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.html</span></span><br><span class="line">location /documents/</span><br></pre></td></tr></table></figure><p>#没有满足的条件，匹配/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy/documents/oldboy.html</span></span><br><span class="line">location /</span><br></pre></td></tr></table></figure><p>#正则匹配了jpg文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#~*匹配正则不区分大小写优先于/documents</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/documents/oldboy.jpg</span></span><br><span class="line">location ~* \.(gif|jpg|jpeg)</span><br></pre></td></tr></table></figure><p>#^<del>优先匹配于</del>*</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># curl bbs.oldboy.com/images/oldboy.jpg</span></span><br><span class="line">location ^~ /images/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nginx" scheme="http://linuxwf.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>10.Nginx服务一</title>
    <link href="http://linuxwf.com/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/"/>
    <id>http://linuxwf.com/2020/04/13/10-Nginx%E6%9C%8D%E5%8A%A1%E4%B8%80/</id>
    <published>2020-04-13T06:11:00.000Z</published>
    <updated>2020-04-13T06:13:02.660Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Nginx服务一"><a href="#Nginx服务一" class="headerlink" title="Nginx服务一"></a>Nginx服务一</h1><h2 id="第1章-Nginx介绍"><a href="#第1章-Nginx介绍" class="headerlink" title="第1章 Nginx介绍"></a>第1章 Nginx介绍</h2><h3 id="1-1-什么是Nginx？"><a href="#1-1-什么是Nginx？" class="headerlink" title="1.1 什么是Nginx？"></a>1.1 什么是Nginx？</h3><p>Nginx 是一个开源且高性能、可靠的 Http Web 服务、代理服务。<br>开源: 直接获取源代码<br>高性能: 支持海量并发<br>可靠: 服务稳定</p><h3 id="1-2-为什么选择-Nginx-服务"><a href="#1-2-为什么选择-Nginx-服务" class="headerlink" title="1.2 为什么选择 Nginx 服务"></a>1.2 为什么选择 Nginx 服务</h3><p>Nginx 非常轻量<br>功能模块少 (源代码仅保留 http 与核心模块代码,其余不够核心代码会作为插件来安装)<br>代码模块化 (易读，便于二次开发，对于开发人员非常友好)<br>互联网公司都选择 Nginx</p><ul><li>1.Nginx 技术成熟，具备的功能是企业最常使用而且最需要的</li><li>2.适合当前主流架构趋势, 微服务、云架构、中间层</li><li>3.统一技术栈, 降低维护成本, 降低技术更新成本。</li></ul><h3 id="1-3-Nginx重要特性"><a href="#1-3-Nginx重要特性" class="headerlink" title="1.3 Nginx重要特性"></a>1.3 Nginx重要特性</h3><p>Nginx 采用 Epool 网络模型， Apache 采用 Select 模型<br>Select: 当用户发起一次请求， select 模型就会进行一次遍历扫描，从而导致性能低下。<br>Epool: 当用户发起请求， epool 模型会直接进行处理，效率高效，并无连接限制</p><h3 id="1-4-Nginx应用场景"><a href="#1-4-Nginx应用场景" class="headerlink" title="1.4 Nginx应用场景"></a>1.4 Nginx应用场景</h3><p>Nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；Nginx可以作为一个HTTP服务器进行网站的发布处理，另外Nginx可以作为反向代理进行负载均衡的实现。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nginx.webp.jpg"  alt=""></p><h2 id="第2章-Nginx安装部署"><a href="#第2章-Nginx安装部署" class="headerlink" title="第2章 Nginx安装部署"></a>第2章 Nginx安装部署</h2><p>Nginx分为几种</p><ul><li>1.源码编译(1.版本随意 2.安装复杂 3.升级繁琐)</li><li>2.epel仓库(1.版本较低 2.安装简单 3.配置不易读)</li><li>3.官方仓库(1.版本较新 2.安装简单 3.配置易读，(推荐)</li></ul><p>下面分别介绍编译安装和yum安装方法</p><h3 id="2-1-编译安装方法"><a href="#2-1-编译安装方法" class="headerlink" title="2.1 编译安装方法"></a>2.1 编译安装方法</h3><h4 id="创建www用户"><a href="#创建www用户" class="headerlink" title="创建www用户"></a>创建www用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># groupadd www -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># useradd www -s /sbin/nologin -M -u 666 -g 666</span></span><br><span class="line">[root@web01 ~]<span class="comment"># id www</span></span><br><span class="line">uid=666(www) gid=666(www) 组=666(www)</span><br></pre></td></tr></table></figure><h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel gcc gcc+ -y</span></span><br></pre></td></tr></table></figure><h4 id="下载解压软件包"><a href="#下载解压软件包" class="headerlink" title="下载解压软件包"></a>下载解压软件包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># mkdir /data/soft -p</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># wget http://nginx.org/download/nginx-1.16.0.tar.gz</span></span><br><span class="line">[root@web01 /data/soft]<span class="comment"># tar zxvf nginx-1.16.0.tar.gz</span></span><br></pre></td></tr></table></figure><h4 id="配置编译参数"><a href="#配置编译参数" class="headerlink" title="配置编译参数"></a>配置编译参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cd /data/soft/nginx-1.16.0/</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --help</span></span><br><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ./configure --user=www --group=www --prefix=/opt/nginx-1.16.0/ --with-http_stub_status_module --with-http_ssl_module --with-pcre</span></span><br></pre></td></tr></table></figure><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><h4 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /data/soft/nginx-1.16.0]<span class="comment"># ln -s /opt/nginx-1.16.0/ /opt/nginx</span></span><br><span class="line">[root@web01 /opt]<span class="comment"># ll</span></span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx  1 root root  12 Jul 30 10:13 nginx -&gt; nginx-1.16.0</span><br><span class="line">drwxr-xr-x 11 root root 151 Jul 30 10:14 nginx-1.16.0</span><br></pre></td></tr></table></figure><h4 id="检查语法"><a href="#检查语法" class="headerlink" title="检查语法"></a>检查语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx -t</span></span><br><span class="line">nginx: the configuration file /opt/nginx-1.16.0//conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /opt/nginx-1.16.0//conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># /opt/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure><h4 id="检查测试"><a href="#检查测试" class="headerlink" title="检查测试"></a>检查测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /opt/nginx]<span class="comment"># netstat -lntup|grep nginx</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      12828/nginx: master </span><br><span class="line">[root@web01 /opt/nginx]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h3 id="2-2-YUM安装方法"><a href="#2-2-YUM安装方法" class="headerlink" title="2.2 YUM安装方法"></a>2.2 YUM安装方法</h3><h4 id="安装依赖包-1"><a href="#安装依赖包-1" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum install openssl-devel pcre-devel -y</span></span><br></pre></td></tr></table></figure><h4 id="配置官方yum源"><a href="#配置官方yum源" class="headerlink" title="配置官方yum源"></a>配置官方yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># vim /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[root@web01 ~]<span class="comment"># cat /etc/yum.repos.d/nginx.repo</span></span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name=nginx mainline repo</span><br><span class="line">baseurl=http://nginx.org/packages/mainline/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br></pre></td></tr></table></figure><h4 id="安装nginx服务"><a href="#安装nginx服务" class="headerlink" title="安装nginx服务"></a>安装nginx服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># yum -y install nginx</span></span><br></pre></td></tr></table></figure><h4 id="启动服务并配置开机自启动"><a href="#启动服务并配置开机自启动" class="headerlink" title="启动服务并配置开机自启动"></a>启动服务并配置开机自启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl enable nginx</span></span><br></pre></td></tr></table></figure><h4 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl 10.0.1.7</span></span><br></pre></td></tr></table></figure><h4 id="Nginx启动方式说明"><a href="#Nginx启动方式说明" class="headerlink" title="Nginx启动方式说明"></a>Nginx启动方式说明</h4><p>编译安装启动管理方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx -t  <span class="comment">#检查语法</span></span><br><span class="line">nginx     <span class="comment">#启动服务</span></span><br><span class="line">nginx -s reload  <span class="comment">#重新加载服务</span></span><br><span class="line">nginx -s stop    <span class="comment">#关闭服务</span></span><br></pre></td></tr></table></figure><p>yum安装启动管理方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nginx -t                  <span class="comment">#检查语法</span></span><br><span class="line">systemctl start nginx     <span class="comment">#启动服务</span></span><br><span class="line">systemctl reload nginx    <span class="comment">#重新加载服务</span></span><br><span class="line">systemctl restart nginx   <span class="comment">#重启服务</span></span><br><span class="line">systemctl stop  nginx     <span class="comment">#停止服务</span></span><br></pre></td></tr></table></figure><h2 id="第3章-Nginx重要配置文件说明"><a href="#第3章-Nginx重要配置文件说明" class="headerlink" title="第3章 Nginx重要配置文件说明"></a>第3章 Nginx重要配置文件说明</h2><h3 id="3-1-查看配置文件"><a href="#3-1-查看配置文件" class="headerlink" title="3.1 查看配置文件"></a>3.1 查看配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># rpm -ql nginx </span></span><br><span class="line">...................................................                     </span><br><span class="line">/etc/logrotate.d/nginx                     <span class="comment">#nginx日志切割的配置文件</span></span><br><span class="line">/etc/nginx/nginx.conf                      <span class="comment">#nginx主配置文件 </span></span><br><span class="line">/etc/nginx/conf.d                          <span class="comment">#子配置文件</span></span><br><span class="line">/etc/nginx/conf.d/default.conf             <span class="comment">#默认展示的页面一样 </span></span><br><span class="line">/etc/nginx/mime.types                      <span class="comment">#媒体类型 （http协议中的文件类型）</span></span><br><span class="line">/etc/sysconfig/nginx                       <span class="comment">#systemctl 管理 nginx的使用的文件</span></span><br><span class="line">/usr/lib/systemd/system/nginx.service      <span class="comment">#systemctl 管理nginx（开 关 重启 reload)配置文件       </span></span><br><span class="line">/usr/sbin/nginx                            <span class="comment">#nginx命令</span></span><br><span class="line">/usr/share/nginx/html                      <span class="comment">#站点目录 网站的根目录 </span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx                             <span class="comment">#nginx日志 access.log 访问日志</span></span><br><span class="line">...................................................</span><br></pre></td></tr></table></figure><h3 id="3-2-查看已经编译的模块"><a href="#3-2-查看已经编译的模块" class="headerlink" title="3.2 查看已经编译的模块"></a>3.2 查看已经编译的模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -V</span></span><br></pre></td></tr></table></figure><h3 id="3-3-配置文件注解"><a href="#3-3-配置文件注解" class="headerlink" title="3.3 配置文件注解"></a>3.3 配置文件注解</h3><p>Nginx 主配置文件/etc/nginx/nginx.conf 是一个纯文本类型的文件，整个配置文件是以区块的形式组织的。一般，每个区块以一对大括号{}来表示开始与结束。<br>Nginx 主配置文件整体分为三块进行学习，分别是<br>CoreModule(核心模块)<br>EventModule(事件驱动模块)<br>HttpCoreModule(http 内核模块)</p><h4 id="3-3-1-第一部分：配置文件主区域配置"><a href="#3-3-1-第一部分：配置文件主区域配置" class="headerlink" title="3.3.1 第一部分：配置文件主区域配置"></a>3.3.1 第一部分：配置文件主区域配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;                    <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  1;            <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;             <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;                        <span class="comment">#nginx运行pid</span></span><br></pre></td></tr></table></figure><h4 id="3-3-2-第二部分：配置文件事件区域"><a href="#3-3-2-第二部分：配置文件事件区域" class="headerlink" title="3.3.2 第二部分：配置文件事件区域"></a>3.3.2 第二部分：配置文件事件区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;  <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-3-第三部分：配置http区域"><a href="#3-3-3-第三部分：配置http区域" class="headerlink" title="3.3.3 第三部分：配置http区域"></a>3.3.3 第三部分：配置http区域</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;          <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;       <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;                             <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;                       </span></span><br><span class="line">    keepalive_timeout  65;                          <span class="comment">#连接超时时间</span></span><br><span class="line">    <span class="comment">#gzip  on;                                      #开启压缩</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;               <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-4-第四部分：子配置文件内容"><a href="#3-3-4-第四部分：子配置文件内容" class="headerlink" title="3.3.4 第四部分：子配置文件内容"></a>3.3.4 第四部分：子配置文件内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># egrep -v "#|^$" /etc/nginx/conf.d/default.conf     </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;             <span class="comment">#指定监听端口</span></span><br><span class="line">    server_name  localhost;      <span class="comment">#指定监听的域名</span></span><br><span class="line">    location / &#123;              </span><br><span class="line">        root   /usr/share/nginx/html;     <span class="comment">#定义站点的目录</span></span><br><span class="line">        index  index.html index.htm;      <span class="comment">#定义首页文件</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;    <span class="comment">#优雅显示页面信息</span></span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http server location 扩展了解项<br>http{}层下允许有多个 Server{}层，一个 Server{}层下又允许有多个 Location<br>http{} 标签主要用来解决用户的请求与响应。<br>server{} 标签主要用来响应具体的某一个网站。<br>location{} 标签主要用于匹配网站具体 URL 路径</p><h2 id="第4章-Nginx虚拟主机配置实战"><a href="#第4章-Nginx虚拟主机配置实战" class="headerlink" title="第4章 Nginx虚拟主机配置实战"></a>第4章 Nginx虚拟主机配置实战</h2><h3 id="4-1-基于域名的虚拟主机"><a href="#4-1-基于域名的虚拟主机" class="headerlink" title="4.1 基于域名的虚拟主机"></a>4.1 基于域名的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-基于端口的虚拟主机"><a href="#4-2-基于端口的虚拟主机" class="headerlink" title="4.2 基于端口的虚拟主机"></a>4.2 基于端口的虚拟主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;    #包含子配置文件</span></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       81;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     server   &#123;</span><br><span class="line">        listen       82;</span><br><span class="line">        server_name  bbs.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/bbs;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-基于IP的虚拟主机"><a href="#4-3-基于IP的虚拟主机" class="headerlink" title="4.3 基于IP的虚拟主机"></a>4.3 基于IP的虚拟主机</h3><p>添加第二IP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.1.11/24 dev eth0</span><br></pre></td></tr></table></figure><p>配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/nginx/nginx.conf    </span></span><br><span class="line"></span><br><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.7:81;</span><br><span class="line">        server_name  www.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/www;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server   &#123;</span><br><span class="line">        listen       10.0.1.11:82;</span><br><span class="line">        server_name  blog.oldboy.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html/blog;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第5章-Nginx虚拟主机配置优化"><a href="#第5章-Nginx虚拟主机配置优化" class="headerlink" title="第5章 Nginx虚拟主机配置优化"></a>第5章 Nginx虚拟主机配置优化</h2><p>所有配置都写入一个配置文件维护起来比较麻烦，如果修改错了，影响整个服务起不来，所以我们应该拆分nginx的配置文件为各个子配置</p><h3 id="5-1-Nginx主配置文件"><a href="#5-1-Nginx主配置文件" class="headerlink" title="5.1 Nginx主配置文件"></a>5.1 Nginx主配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx]<span class="comment"># cat nginx.conf</span></span><br><span class="line"></span><br><span class="line">user  www;                   <span class="comment">#定义运行nginx进程的用户</span></span><br><span class="line">worker_processes  auto;      <span class="comment">#Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span></span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log warn;   <span class="comment">#nginx错误日志</span></span><br><span class="line">pid        /var/run/nginx.pid;              <span class="comment">#nginx运行pid</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;               <span class="comment">#每个 worker 进程支持的最大连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;      <span class="comment">#Nginx支持的媒体类型库文件</span></span><br><span class="line">    default_type  application/octet-stream;   <span class="comment">#默认的媒体类型 </span></span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">'$remote_addr - $remote_user [$time_local] "$request" '</span>   </span><br><span class="line">                      <span class="string">'$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">                      <span class="string">'"$http_user_agent" "$http_x_forwarded_for"'</span>;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/access.log  main;    <span class="comment">#访问日志保存路径</span></span><br><span class="line"></span><br><span class="line">    sendfile        on;        <span class="comment">#开启高效传输模式</span></span><br><span class="line">    <span class="comment">#tcp_nopush     on;        </span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;     <span class="comment">#连接超时时间</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;                #开启压缩</span></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;    <span class="comment">#包含子配置文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-编辑子配置文件www、blog、bbs"><a href="#5-2-编辑子配置文件www、blog、bbs" class="headerlink" title="5.2 编辑子配置文件www、blog、bbs"></a>5.2 编辑子配置文件www、blog、bbs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 01-www.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/www.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 02-blog.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  blog.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/blog.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/blog;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat 03-bbs.conf </span></span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  bbs.oldboy.com;</span><br><span class="line">    access_log  /var/<span class="built_in">log</span>/nginx/bbs.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html/bbs;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-3-创建代码目录及首页"><a href="#5-3-创建代码目录及首页" class="headerlink" title="5.3 创建代码目录及首页"></a>5.3 创建代码目录及首页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># mkdir /usr/share/nginx/html/&#123;www,blog,bbs&#125;</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "www" &gt; /usr/share/nginx/html/www/index.html</span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "blog" &gt; /usr/share/nginx/html/blog/index.html </span></span><br><span class="line">[root@web01 /etc/nginx/conf.d]<span class="comment"># echo "bbs" &gt; /usr/share/nginx/html/bbs/index.html</span></span><br></pre></td></tr></table></figure><h3 id="5-4-检查语法重启服务"><a href="#5-4-检查语法重启服务" class="headerlink" title="5.4 检查语法重启服务"></a>5.4 检查语法重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="5-5-配置-etc-hosts文件"><a href="#5-5-配置-etc-hosts文件" class="headerlink" title="5.5 配置/etc/hosts文件"></a>5.5 配置/etc/hosts文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># tail /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com</span><br></pre></td></tr></table></figure><h3 id="5-6-访问测试"><a href="#5-6-访问测试" class="headerlink" title="5.6 访问测试"></a>5.6 访问测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># curl www.oldboy.com</span></span><br><span class="line">www</span><br><span class="line">[root@web01 ~]<span class="comment"># curl blog.oldboy.com</span></span><br><span class="line">blog</span><br><span class="line">[root@web01 ~]<span class="comment"># curl bbs.oldboy.com</span></span><br><span class="line">bbs</span><br></pre></td></tr></table></figure><h2 id="第6章-Nginx状态模块"><a href="#第6章-Nginx状态模块" class="headerlink" title="第6章 Nginx状态模块"></a>第6章 Nginx状态模块</h2><p>nginx状态模块： –with-http_stub_status_module</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># cat status.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.oldboy.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># tail -1 /etc/hosts</span></span><br><span class="line">10.0.1.7 www.oldboy.com  blog.oldboy.com  bbs.oldboy.com  status.oldboy.com</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># systemctl reload nginx</span></span><br><span class="line">[root@wufei /etc/nginx/conf.d]<span class="comment"># curl status.oldboy.com</span></span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 25 25 22 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0</span><br></pre></td></tr></table></figure><p>nginx状态信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Active connections  <span class="comment">#当前活动的连接数</span></span><br><span class="line">accepts             <span class="comment">#当前连接总数TCP</span></span><br><span class="line">handled             <span class="comment">#成功的连接数TCP</span></span><br><span class="line">requests            <span class="comment">#总的HTTP请求数</span></span><br><span class="line"></span><br><span class="line">Reading             <span class="comment">#请求</span></span><br><span class="line">Writing             <span class="comment">#响应</span></span><br><span class="line">Waiting             <span class="comment">#等待的请求数，开启了keepalive</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：一次TCP的连接，可以发起多次的http请求，如下参数可配置验证</span></span><br><span class="line">keepalive——timeout 0;   <span class="comment">#类似与关闭长连接</span></span><br><span class="line">keepalive——timeout 65;  <span class="comment">#65s没有活动则断开连接</span></span><br></pre></td></tr></table></figure><h2 id="第7章-Nginx日志"><a href="#第7章-Nginx日志" class="headerlink" title="第7章 Nginx日志"></a>第7章 Nginx日志</h2><p>日志字段解释：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$remote_addr</span> <span class="comment"># 记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$remote_user</span> <span class="comment"># 记录客户端用户名</span></span><br><span class="line"><span class="variable">$time_local</span> <span class="comment"># 记录通用的本地时间</span></span><br><span class="line"><span class="variable">$time_iso8601</span> <span class="comment"># 记录 ISO8601 标准格式下的本地时间</span></span><br><span class="line"><span class="variable">$request</span> <span class="comment"># 记录请求的方法以及请求的 http 协议</span></span><br><span class="line"><span class="variable">$status</span> <span class="comment"># 记录请求状态码(用于定位错误信息)</span></span><br><span class="line"><span class="variable">$body_bytes_sent</span> <span class="comment"># 发送给客户端的资源字节数，不包括响应头的大小</span></span><br><span class="line"><span class="variable">$bytes_sent</span> <span class="comment"># 发送给客户端的总字节数</span></span><br><span class="line"><span class="variable">$msec</span> <span class="comment"># 日志写入时间。单位为秒，精度是毫秒。</span></span><br><span class="line"><span class="variable">$http_referer</span> <span class="comment"># 记录从哪个页面链接访问过来的</span></span><br><span class="line"><span class="variable">$http_user_agent</span> <span class="comment"># 记录客户端浏览器相关信息</span></span><br><span class="line"><span class="variable">$http_x_forwarded_for</span> <span class="comment">#记录客户端 IP 地址</span></span><br><span class="line"><span class="variable">$request_length</span> <span class="comment"># 请求的长度（包括请求行， 请求头和请求正文）。</span></span><br><span class="line"><span class="variable">$request_time</span> <span class="comment"># 请求花费的时间，单位为秒，精度毫秒</span></span><br><span class="line"><span class="comment"># 注:如果 Nginx 位于负载均衡器， nginx 反向代理之后， web 服务器无法直接获取到客 户端真实的 IP 地址。</span></span><br><span class="line"><span class="comment"># $remote_addr 获取的是反向代理的 IP 地址。 反向代理服务器在转发请求的 http 头信息中，</span></span><br><span class="line"><span class="comment"># 增加 X-Forwarded-For 信息，用来记录客户端 IP 地址和客户端请求的服务器地址。</span></span><br></pre></td></tr></table></figure><p>nginx不停服务进行切割日志：</p><ol><li><p>编辑切割日志脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># cat nginx_log.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#01.设置日志文件存放目录</span></span><br><span class="line">log_path=/var/<span class="built_in">log</span>/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.设置日志命令变量</span></span><br><span class="line">YESTERDAY=`date -d <span class="string">"yesterday"</span> +%Y-%m-%d_%S`</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.日志命令变量</span></span><br><span class="line">nginx_cmd=<span class="string">"/usr/sbin/nginx"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#04.重命令日志文件</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/access.log <span class="variable">$&#123;log_path&#125;</span>/access.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line">/bin/mv <span class="variable">$&#123;log_path&#125;</span>/error.log  <span class="variable">$&#123;log_path&#125;</span>/error.<span class="variable">$YESTERDAY</span>.<span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#05.重新打开一个新的日志文件</span></span><br><span class="line"><span class="variable">$&#123;nginx_cmd&#125;</span> -s reopen</span><br></pre></td></tr></table></figure></li><li><p>设置定时任务，每天晚12点切割</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 /server/scripts]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#定时切割nginx日志文件</span></span><br><span class="line">0 0 * * * /bin/bash /server/scripts/nginx_log.sh</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nginx" scheme="http://linuxwf.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>9.HTTP服务</title>
    <link href="http://linuxwf.com/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://linuxwf.com/2020/04/13/9-HTTP%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-04-13T06:02:00.000Z</published>
    <updated>2020-04-13T06:03:18.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="HTTP服务"><a href="#HTTP服务" class="headerlink" title="HTTP服务"></a>HTTP服务</h1><h2 id="第1章-用户访问流程"><a href="#第1章-用户访问流程" class="headerlink" title="第1章 用户访问流程"></a>第1章 用户访问流程</h2><p>在浏览器输入想要访问的<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名</a>之后，浏览器会进行<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">域名解析</a>获得IP地址，在经过TCP的连接，实现数据的传输就会有两种报文，及请求报文和响应报文。最终才能实现通信。因此想要实现通信，就得先弄懂DNS的解析原理以及TCP连接通道的流程。</p><p>访问网站流程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">00. 客户端  浏览器输入网址信息点击回车(www.oldboyedu.com)</span><br><span class="line">01. 客户端  完成域名的解析过程(DNS) </span><br><span class="line">02. 客户端  直接访问相应网站服务器  建立TCP三次握手过程</span><br><span class="line">03. 客户端  访问网站服务器         发送HTTP请求报文  多次</span><br><span class="line">04. 服务端  响应客户端请求         回复HTTP响应报文  多次</span><br><span class="line">05. 客户端  浏览器看到网站页面</span><br><span class="line">06. 客户端  结束访问网站过程       完成TCP四次挥手过程</span><br></pre></td></tr></table></figure><p>关键名词</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.域名</span><br><span class="line">2.DNS域名解析</span><br><span class="line">3.TCP三次握手</span><br><span class="line">4.TCP四次挥手</span><br><span class="line">5.HTTP请求报文</span><br><span class="line">6.HTTP响应报文</span><br></pre></td></tr></table></figure><h2 id="第2章-DNS域名解析"><a href="#第2章-DNS域名解析" class="headerlink" title="第2章 DNS域名解析"></a>第2章 DNS域名解析</h2><h3 id="2-1-DNS-介绍"><a href="#2-1-DNS-介绍" class="headerlink" title="2.1 DNS 介绍"></a>2.1 DNS 介绍</h3><p>​        域名系统 (Domain Name Server)。在Internet上域名与IP地址之间是一一对应的，域名虽然便于人们记忆，但机器之间只能互相认识IP地址，它们之间的转换工作称为域名解析，域名解析需要由专门的域名解析服务器来完成，DNS就是进行域名解析的服务器。</p><p>它的主要作用是负责把网站域名解析为对应的IP地址<br>例如:把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a>解析为对应的IP地址记录如1.1.1.1,这个从域名到IP的解析过程称为A记录,即Address Record<br>DNS常用记录类型主要有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@记录</span><br><span class="line">A记录</span><br><span class="line">CNAME记录</span><br></pre></td></tr></table></figure><p>阿里云的DNS解析界面</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-445161470b1607f5.webp.jpg"  alt=""></p><p>DNS解析流程图</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/DNS.webp.jpg"  alt=""></p><p>使用dig命令追踪DNS解析过程</p><p>安装dig命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="built_in">bind</span>-utils -y</span><br></pre></td></tr></table></figure><p>使用dig命令追踪：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@wufei ~]<span class="comment"># dig www.baidu.com</span></span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-74.el7_6.1 &lt;&lt;&gt;&gt; www.baidu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 61542</span><br><span class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 5, ADDITIONAL: 5</span><br><span class="line"></span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;www.baidu.com.INA</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">www.baidu.com.5INCNAMEwww.a.shifen.com.</span><br><span class="line">www.a.shifen.com.5INA14.215.177.38</span><br><span class="line">www.a.shifen.com.5INA14.215.177.39</span><br><span class="line"></span><br><span class="line">;; AUTHORITY SECTION:</span><br><span class="line">a.shifen.com.5INNSns3.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns4.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns2.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns5.a.shifen.com.</span><br><span class="line">a.shifen.com.5INNSns1.a.shifen.com.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">ns1.a.shifen.com.5INA61.135.165.224</span><br><span class="line">ns2.a.shifen.com.5INA220.181.33.32</span><br><span class="line">ns3.a.shifen.com.5INA112.80.255.253</span><br><span class="line">ns4.a.shifen.com.5INA14.215.177.229</span><br><span class="line">ns5.a.shifen.com.5INA180.76.76.95</span><br><span class="line"></span><br><span class="line">;; Query time: 2 msec</span><br><span class="line">;; SERVER: 10.0.1.254<span class="comment">#53(10.0.1.254)</span></span><br><span class="line">;; WHEN: Tue Jul 30 15:01:32 CST 2019</span><br><span class="line">;; MSG SIZE  rcvd: 260</span><br></pre></td></tr></table></figure><h3 id="2-2-DNS-解析流程"><a href="#2-2-DNS-解析流程" class="headerlink" title="2.2 DNS 解析流程"></a>2.2 DNS 解析流程</h3><p>1) 第一步:</p><p>客户端用户在浏览器里输入<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>网址后回车,系统首先会查找系统本地的DNS缓存及host文件信息,确定是否存在<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的IP解析记录,如果有就直接获取到IP地址,然后去访问这个IP地址对应的<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的服务器.一般第一次请求时,DNS缓存是没有解析记录的,而hosts多为内部临时测试使用.</p><p>2) 第二步:</p><p>如果客户端本地DNS缓存及本地hosts文件没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,那么,系统会把浏览器的解析请求发送给在客户端本地设置的DNS服务器地址解析,通常称次DNS为LDNS即local DNS,如果LDNS服务器的本地缓存存有对应的解析记录就会直接返回给IP地址给客户端:如果没有,则LDNS会负责继续请求其他的DNS服务器.</p><p>3) 第三步:</p><p>LDNS从DNS系统的(“.”)根开始请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,根DNS服务器在全球一共有13台,根服务器下面是没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名解析记录的,但是根下面有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的顶级域名.com的解析记录,因此,根会把.com对应的DNS服务器地址返回给LDNS.</p><p>4) 第四步:</p><p>LDNS获取到.com对应的DNS服务器地址后,就会去.com服务器请求<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,.而com服务器下面也没有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名对应的解析记录,但是有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名的解析记录,因此.com服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址返回给DNS.</p><p>5) 第五步:</p><p>同理,LDNS获取到<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>对应的DNS服务器地址后,就会去<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>服务器请求对<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>域名的解析,<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名对应的DNS服务器是该域名的授权DNS服务器,这个DNS服务器正是企业购买域名时用于管理解析的服务器,这个服务器会有<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的解析记录,如果此时没有,就表示企业还没有对这个域名做解析,即网站服务器还没有架设好.</p><p>6) 第六步:</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbaidu.com" target="_blank" rel="noopener">baidu.com</a>域名DNS服务器会把<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给LDNS.</p><p>7) 第七步:</p><p>LDNS把来自授权DNS服务器的与<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>对应的IP解析记录发给客户端浏览器,并且LDNS会在本地把域名和IP对应解析记录缓存起来,以便下一次更快的返回相同解析请求的记录.至此,整个DNS的解析流程就完成了.</p><h2 id="第3章-TCP-IP-协议"><a href="#第3章-TCP-IP-协议" class="headerlink" title="第3章 TCP/IP 协议"></a>第3章 TCP/IP 协议</h2><h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IP7.webp.jpg"  alt=""></p><h3 id="TCP-IP四层模型"><a href="#TCP-IP四层模型" class="headerlink" title="TCP/IP四层模型"></a>TCP/IP四层模型</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1564471603972.png"  alt=""></p><h3 id="TCP-IP每层包含的协议"><a href="#TCP-IP每层包含的协议" class="headerlink" title="TCP/IP每层包含的协议"></a>TCP/IP每层包含的协议</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_IPxieyi.webp.jpg"  alt=""></p><h3 id="TCP报文格式"><a href="#TCP报文格式" class="headerlink" title="TCP报文格式"></a>TCP报文格式</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCPbaowen.webp.jpg"  alt=""></p><h3 id="TCP-IP三次握手"><a href="#TCP-IP三次握手" class="headerlink" title="TCP/IP三次握手"></a>TCP/IP三次握手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_3woshou.webp.jpg"  alt=""></p><h3 id="TCP-IP四次挥手"><a href="#TCP-IP四次挥手" class="headerlink" title="TCP/IP四次挥手"></a>TCP/IP四次挥手</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/TCP_4huishou.webp.jpg"  alt=""></p><h2 id="第4章-HTTP协议"><a href="#第4章-HTTP协议" class="headerlink" title="第4章 HTTP协议"></a>第4章 HTTP协议</h2><p>URL：全称为Uniform Resource Location，中文翻译为统一资源定位符</p><p>URI：全称为Uniform Resource Identifier，中文翻译为统一资源标识符</p><p>URL和URI关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docs.ansible.com   / ansible/latest/user_guide/playbooks_reuse_roles.html</span><br><span class="line">URL                  URI</span><br></pre></td></tr></table></figure><h3 id="4-1-静态资源"><a href="#4-1-静态资源" class="headerlink" title="4.1 静态资源"></a>4.1 静态资源</h3><p>特点说明:</p><p>1)  网页内容是固定不变的，因此，容易被搜索引擎收录（容易被用户找到）（优点）。<br>2)  因为网页没有数据库的支持，所以在网站制作和维护方面的工作量较大，当网站信息量很大时，<br>完全依靠静态网页比较困难（缺点）。<br>3)  网页的交互性较差，在程序的功能实现方面有较大的限制（缺点）。<br>4)  当客户端向服务器请求数据时，服务器会直接从磁盘文件系统上返回数据（不做任何解析）。</p><h3 id="4-2-动态资源"><a href="#4-2-动态资源" class="headerlink" title="4.2 动态资源"></a>4.2 动态资源</h3><p>要什么信息,需要进行查询数据库进行解析后发送给客户端<br>查看班级人员信息表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">班级   人名   年龄   学历</span><br><span class="line">sz-01  张三   18     高中   ---&gt; 数据库中 oldboy=123  &lt;--- post </span><br><span class="line">sz-01  李四   20     大专   </span><br><span class="line"></span><br><span class="line">班级   人员   年龄   学历</span><br><span class="line">代码信息直接调用数据库的内容</span><br><span class="line">1) 采用动态网页技术的网站可以实现更多的功能，如用户注册、用户登录、在线调查、</span><br><span class="line">   投票、用户管理、订单处理、发博文等。</span><br><span class="line">2) 动态资源页面会出现 <span class="string">"?"</span> <span class="string">"&amp;"</span>, 不便于被搜索引擎收录</span><br><span class="line">3) 接收到用户请求,需要让动态服务和数据库服务进行处理</span><br></pre></td></tr></table></figure><h3 id="4-3-伪静态资源-动态页面"><a href="#4-3-伪静态资源-动态页面" class="headerlink" title="4.3 伪静态资源(动态页面)"></a>4.3 伪静态资源(动态页面)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 可以便于搜索引擎进行收录</span><br><span class="line">2. 有数据库服务支持,实现网页交互功能</span><br></pre></td></tr></table></figure><h2 id="第5章-HTTP请求方法"><a href="#第5章-HTTP请求方法" class="headerlink" title="第5章 HTTP请求方法"></a>第5章 HTTP请求方法</h2><table><thead><tr><th>HTTP 方法</th><th>作用描述</th></tr></thead><tbody><tr><td>GET</td><td>客户端请制定资源信息，服务器返回指定资源</td></tr><tr><td>HEAD</td><td>只请求响应报文中的HTTP首部</td></tr><tr><td>POST</td><td>将客户端的数据提交到服务器，例如：注册表单</td></tr><tr><td>PUT</td><td>用从客户端向服务器传送的数据取代指定的文档内容</td></tr><tr><td>DELETE</td><td>请求服务器删除Request-URL 所标识的资源</td></tr><tr><td>MOVE</td><td>请求服务器将指定的页面移至另一个网络地址</td></tr></tbody></table><h2 id="第6章HTTP响应状态码"><a href="#第6章HTTP响应状态码" class="headerlink" title="第6章HTTP响应状态码"></a>第6章HTTP响应状态码</h2><h3 id="6-1-响应状态码分类"><a href="#6-1-响应状态码分类" class="headerlink" title="6.1 响应状态码分类"></a>6.1 响应状态码分类</h3><table><thead><tr><th>状态码范围</th><th>作用描述</th></tr></thead><tbody><tr><td>100-199</td><td>用于指定客户端相应的某些动作</td></tr><tr><td>200-299</td><td>用于表示请求成功</td></tr><tr><td>300-399</td><td>用于已经移动的文件，并且常被包含在定位头信息中指定新的地址信息</td></tr><tr><td>400-499</td><td>用于指定客户端的错误</td></tr><tr><td>500-599</td><td>用于指定服务器的错误</td></tr></tbody></table><h3 id="6-2-常见响应状态码解释"><a href="#6-2-常见响应状态码解释" class="headerlink" title="6.2 常见响应状态码解释"></a>6.2 常见响应状态码解释</h3><table><thead><tr><th>状态代码</th><th>详细描述</th></tr></thead><tbody><tr><td>200-OK</td><td>服务器成功返回网页，这是成功的HTTP请求返回的标注状态码</td></tr><tr><td>301-Moved Permanently</td><td>永久跳转，请求的页面已永久移动到新位置。服务器返回此响应（对GET和HEAD请求的响应）时，会自动将请求者转到新位置</td></tr><tr><td>403-Forbidden</td><td>（禁止）服务器拒绝请求，一般为服务器或服务权限不足所致</td></tr><tr><td>404-Not Found</td><td>（未找到）服务器找不到请求的网页,可能是客户端了服务器上不存在的资源所致</td></tr><tr><td>500-Internal Server Error</td><td>（服务器内部错误）服务器遇到错误，无法完成请求</td></tr><tr><td>502-Bad Gateway</td><td>（错误网关）服务器作为网关和代理，从上游服务器收到无效响应</td></tr><tr><td>503-Server Unavailable</td><td>（服务器不可用）服务器目前无法使用（由于超载或者停机维护）。通常，这只是暂时状态</td></tr></tbody></table><p>使用curl查看状态码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s -w <span class="string">"%&#123;http_code&#125;\n"</span> -o /dev/null  www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="第7章-HTTP请求报文"><a href="#第7章-HTTP请求报文" class="headerlink" title="第7章 HTTP请求报文"></a>第7章 HTTP请求报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>请求行</td><td>请求方法 URL 协议版本</td></tr><tr><td>请求头</td><td>字段名 1：值 1<br />字段名 2：值 2<br />例如：<br />Accept:image/gif image/jpeg<br />Accept-Language:zh-cn</td></tr><tr><td>空行</td><td>空白无内容</td></tr><tr><td>请求报文主体</td><td>GET 方法没有请求报文主体，POST方法才有</td></tr></tbody></table><h3 id="7-1-请求行"><a href="#7-1-请求行" class="headerlink" title="7.1 请求行"></a>7.1 请求行</h3><table><thead><tr><th>请求方法字段示例</th><th>URL 字段示例</th><th>HTTP 协议版本</th></tr></thead><tbody><tr><td>GET</td><td>/index.html</td><td>HTTP/1.1</td></tr></tbody></table><h3 id="7-2-请求头"><a href="#7-2-请求头" class="headerlink" title="7.2 请求头"></a>7.2 请求头</h3><table><thead><tr><th>请求头部信息</th><th>说明</th></tr></thead><tbody><tr><td>Accpet:image/gif,image/jpeg</td><td>媒体类型</td></tr><tr><td>Accpet-Language:zh-ch</td><td>语言类型</td></tr><tr><td>Accpet-Encoding:gzip,deflate</td><td>支持压缩</td></tr><tr><td>User-Agent:Mozilla/4.0(comatible;MSIE6.0;Window NT)</td><td>客户端类型</td></tr><tr><td>Host:<a href="http://www.etiantian.org" target="_blank" rel="noopener">www.etiantian.org</a></td><td>主机名</td></tr></tbody></table><h3 id="7-3-空行"><a href="#7-3-空行" class="headerlink" title="7.3 空行"></a>7.3 空行</h3><p>无内容</p><h3 id="7-4-请求主体"><a href="#7-4-请求主体" class="headerlink" title="7.4 请求主体"></a>7.4 请求主体</h3><h2 id="第8章-HTTP响应报文"><a href="#第8章-HTTP响应报文" class="headerlink" title="第8章 HTTP响应报文"></a>第8章 HTTP响应报文</h2><table><thead><tr><th>报文格式</th><th>报文信息</th></tr></thead><tbody><tr><td>起始行</td><td>协议及版本号，数字状态码，状态信息</td></tr><tr><td>响应头部</td><td>字段名 1：值 1<br />字段名 2：值 2</td></tr><tr><td>空行</td><td>无内容</td></tr><tr><td>响应报文主体</td><td><html><br />……<br /></html></td></tr></tbody></table><h3 id="8-1-起始行"><a href="#8-1-起始行" class="headerlink" title="8.1 起始行"></a>8.1 起始行</h3><p>响应报文的起始行也叫状态行,用来说明服务器相应客户端请求的状态,一般为协议及版本号,数字状态码,状态情况,例如:HTTP/1.1 200 OK</p><h3 id="8-2-响应头部"><a href="#8-2-响应头部" class="headerlink" title="8.2 响应头部"></a>8.2 响应头部</h3><p>和请求报文类似,起始行的后面一般有若干个头部字段,每隔头部字段都包含一个名字和一个值,两者之间用冒号分隔.头部结尾也是以空行结束.常见的头部信息有</p><h3 id="8-3-空行"><a href="#8-3-空行" class="headerlink" title="8.3 空行"></a>8.3 空行</h3><p>无内容</p><h3 id="8-4-响应主体"><a href="#8-4-响应主体" class="headerlink" title="8.4 响应主体"></a>8.4 响应主体</h3><p>响应报文主体装载了要返回给客户端的数据,这些数据可以是文本,也可以使二进制的图片视频,下面是响应报文主体的html格式文本</p><h2 id="第9章-用户访问网站流程总结"><a href="#第9章-用户访问网站流程总结" class="headerlink" title="第9章 用户访问网站流程总结"></a>第9章 用户访问网站流程总结</h2><ol><li>用户输入域名-&gt;浏览器跳转-&gt;浏览器缓存-&gt;Hosts 文件-&gt;DNS 解析( 递归查询 | 迭代查询 )<br>客户端向服务端发起查询-&gt;递归查询<br>服务端向服务端发起查询-&gt;迭代查询</li><li>由浏览器向服务端发起 TCP 连接（三次握手）<br>客户端 –&gt;请求包连接-syn=1 seq=x 服务端<br>服务端 –&gt;向应客户端 syn=1 ack=x+1 seq=y 客户端<br>客户端 –&gt;建立连接 ack=y+1 seq=x+1 服务端</li><li>客户端发起 http 请求：<br>1）请求的方法是什么： Get 获取<br>2）请求的 Host 主机是： <a href="http://www.oldboyedu.com" target="_blank" rel="noopener">www.oldboyedu.com</a><br>3）请求的资源是什么： /index.html<br>4）请求的端口是什么： 默认 http 是 80 https 443<br>5）请求携带的参数是： 属性（请求的类型、压缩、认证、浏览器信息、等等）<br>6）请求最后的空行</li><li>服务端响应的内容是：<br>1）服务端响应使用的 WEB 服务软件<br>2）服务端响应请求文件的类型<br>3）服务端响应请求的文件是否进行压缩<br>4）服务端响应请求的主机是否进行长连接<br>5）客户端向服务端发起 TCP 断开（四次挥手）</li><li>客户端向服务端发起 TCP 断开（四次挥手）<br>客户端 –&gt; 断开请求 fin=1 seq=x –&gt; 服务端<br>服务端 –&gt; 响应断开 fin=1 ack=x+1 seq=y –&gt; 客户端<br>服务端 –&gt; 断开连接 fin=1 ack=x+1 seq=z –&gt; 客户端<br>客户端 –&gt; 确认断开 fin=1 ack=z+1 seq=sj –&gt; 服务端</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="http" scheme="http://linuxwf.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>8.Ansible roles 角色</title>
    <link href="http://linuxwf.com/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/"/>
    <id>http://linuxwf.com/2020/04/13/8-Ansible-roles-%E8%A7%92%E8%89%B2/</id>
    <published>2020-04-13T05:50:00.000Z</published>
    <updated>2020-04-13T05:51:25.618Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="第9课-Ansible-roles-角色（7-25）"><a href="#第9课-Ansible-roles-角色（7-25）" class="headerlink" title="第9课 Ansible roles 角色（7/25）"></a>第9课 Ansible roles 角色（7/25）</h1><h2 id="第1章-ansible-roles-介绍"><a href="#第1章-ansible-roles-介绍" class="headerlink" title="第1章 ansible roles 介绍"></a>第1章 ansible roles 介绍</h2><p>官方地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html</a></p><h2 id="第2章-角色目录结构"><a href="#第2章-角色目录结构" class="headerlink" title="第2章 角色目录结构"></a>第2章 角色目录结构</h2><h3 id="2-1-目录说明"><a href="#2-1-目录说明" class="headerlink" title="2.1 目录说明"></a>2.1 目录说明</h3><p>官方的目录结构定义：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment">#  cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── nfs                   <span class="comment">#角色名称</span></span><br><span class="line">│   ├── files             <span class="comment">#存放需要copy的文件</span></span><br><span class="line">│   ├── handlers          <span class="comment">#触发任务剧本</span></span><br><span class="line">│   ├── tasks             <span class="comment">#具体任务剧本</span></span><br><span class="line">│   ├── templates         <span class="comment">#模版文件</span></span><br><span class="line">│   └── vars              <span class="comment">#存放变量文件</span></span><br></pre></td></tr></table></figure><h3 id="2-2-创建项目目录"><a href="#2-2-创建项目目录" class="headerlink" title="2.2 创建项目目录"></a>2.2 创建项目目录</h3><p>因为每台服务器都需要创建用户组，用户，安装服务等，所以我们可以将这些相同的任务单独创建一个init初始化角色。</p><p>角色规划：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.init      <span class="comment">#初始化任务</span></span><br><span class="line">2.rsync     <span class="comment">#rsync服务</span></span><br><span class="line">3.nfs       <span class="comment">#nfs服务</span></span><br><span class="line">4.lsyncd    <span class="comment">#lsyncd服务</span></span><br></pre></td></tr></table></figure><p>创建角色目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># mkdir &#123;init,nfs,rsync,lsyncd&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p </span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── lsyncd</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── nfs</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">└── rsync</span><br><span class="line">    ├── files</span><br><span class="line">    ├── handlers</span><br><span class="line">    ├── tasks</span><br><span class="line">    ├── templates</span><br><span class="line">    └── vars</span><br><span class="line"></span><br><span class="line">24 directories, 0 files</span><br></pre></td></tr></table></figure><h2 id="第3章-编写init角色剧本"><a href="#第3章-编写init角色剧本" class="headerlink" title="第3章 编写init角色剧本"></a>第3章 编写init角色剧本</h2><h3 id="3-1-创建项目目录"><a href="#3-1-创建项目目录" class="headerlink" title="3.1 创建项目目录"></a>3.1 创建项目目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd /etc/ansible/roles/</span></span><br><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br></pre></td></tr></table></figure><h3 id="3-2-编写tasks任务剧本"><a href="#3-2-编写tasks任务剧本" class="headerlink" title="3.2 编写tasks任务剧本"></a>3.2 编写tasks任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.关闭SElinux</span></span><br><span class="line">- name: 01_disabled_selinux</span><br><span class="line">  selinux:</span><br><span class="line">    state: disabled</span><br><span class="line">  tags: 01_disabled_selinux</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.关闭防火墙</span></span><br><span class="line">- name: 02_disabled_firewalld</span><br><span class="line">  service: </span><br><span class="line">    name: firewalld</span><br><span class="line">    enabled: no</span><br><span class="line">  tags: 02_disabled_firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.优化yum源</span></span><br><span class="line">- name: 03_configure_yum</span><br><span class="line">  get_url:  </span><br><span class="line">    url: <span class="string">"&#123;&#123; item.url &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/Centos-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/CentOS-Base.repo'</span> &#125;</span><br><span class="line">    - &#123; url: <span class="string">'http://mirrors.aliyun.com/repo/epel-7.repo'</span>, dest: <span class="string">'/etc/yum.repos.d/epel.repo'</span> &#125;</span><br><span class="line"></span><br><span class="line">  tags: 03_configure_yum</span><br><span class="line">  </span><br><span class="line"><span class="comment">#04.安装常用软件</span></span><br><span class="line">- name: 04_install_service</span><br><span class="line">  yum: </span><br><span class="line">    name: <span class="string">"&#123;&#123; packages &#125;&#125;"</span></span><br><span class="line">  vars:</span><br><span class="line">    packages:</span><br><span class="line">    - wget</span><br><span class="line">    - tree</span><br><span class="line">    - ntpdate</span><br><span class="line">    - vim</span><br><span class="line">    - bash-completion</span><br><span class="line">    - bash-completion-extras</span><br><span class="line">    - lrzsz</span><br><span class="line">    - net-tools</span><br><span class="line">    - sysstat</span><br><span class="line">    - iotop</span><br><span class="line">    - iftop</span><br><span class="line">    - htop</span><br><span class="line">    - unzip</span><br><span class="line">    - telnet</span><br><span class="line">  tags: 04_install_service</span><br><span class="line"></span><br><span class="line"><span class="comment">#05.创建用户组</span></span><br><span class="line">- name: 05_create_group</span><br><span class="line">  group: </span><br><span class="line">    name: www</span><br><span class="line">    gid: 666</span><br><span class="line">  tags: 05_create_group</span><br><span class="line"></span><br><span class="line"><span class="comment">#06.创建用户</span></span><br><span class="line">- name: 06_create_user</span><br><span class="line">  user: </span><br><span class="line">    name: www</span><br><span class="line">    uid: 666</span><br><span class="line">    group: www</span><br><span class="line">    shell: /sbin/nologin</span><br><span class="line">    create_home: no</span><br><span class="line">  tags: 06_create_user</span><br><span class="line"></span><br><span class="line"><span class="comment">#07.创建目录</span></span><br><span class="line">- name: 07_create_dir</span><br><span class="line">  file:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    state: directory</span><br><span class="line">    mode: 0755</span><br><span class="line">    owner: www</span><br><span class="line">    group: www</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span> &#125;</span><br><span class="line">  tags: 07_create_dir</span><br><span class="line"></span><br><span class="line"><span class="comment">#08.创建时间同步任务</span></span><br><span class="line">- name: 08_cron_ntpdate</span><br><span class="line">  cron: </span><br><span class="line">    name: Time_Update</span><br><span class="line">    minute: <span class="string">"*/5"</span></span><br><span class="line">    job: <span class="string">'/sbin/ntpdate ntp1.aliyun.com &gt;/dev/null 2&gt;&amp;1'</span></span><br><span class="line">  tags: 08_cron_ntpdate    </span><br><span class="line"></span><br><span class="line"><span class="comment">#09.优化ssh</span></span><br><span class="line">- name: 09_copy_ssh</span><br><span class="line">  template: </span><br><span class="line">    src: sshd_config.j2</span><br><span class="line">    dest: /etc/ssh/sshd_config </span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart sshd</span><br><span class="line">  tags: 09_copy_ssh</span><br></pre></td></tr></table></figure><h3 id="3-3-编写jinja模版文件"><a href="#3-3-编写jinja模版文件" class="headerlink" title="3.3 编写jinja模版文件"></a>3.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">└── sshd_config.j2</span><br></pre></td></tr></table></figure><h3 id="3-4-编写handlers文件"><a href="#3-4-编写handlers文件" class="headerlink" title="3.4 编写handlers文件"></a>3.4 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/init/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart sshd </span><br><span class="line">  service: </span><br><span class="line">    name: sshd </span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="3-5-写主任务文件"><a href="#3-5-写主任务文件" class="headerlink" title="3.5 写主任务文件"></a>3.5 写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat init.yml </span></span><br><span class="line">- hosts: webserver </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br></pre></td></tr></table></figure><h3 id="3-6-最终目录"><a href="#3-6-最终目录" class="headerlink" title="3.6 最终目录"></a>3.6 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree init</span></span><br><span class="line">init</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── sshd_config.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 43 Jul 25 22:06 init.yml</span><br></pre></td></tr></table></figure><h2 id="第4章-编写rsync角色剧本"><a href="#第4章-编写rsync角色剧本" class="headerlink" title="第4章 编写rsync角色剧本"></a>第4章 编写rsync角色剧本</h2><h3 id="4-1-创建对应目录"><a href="#4-1-创建对应目录" class="headerlink" title="4.1 创建对应目录"></a>4.1 创建对应目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/rsync_server/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><p>服务器端</p><h3 id="4-2-编写任务剧本"><a href="#4-2-编写任务剧本" class="headerlink" title="4.2 编写任务剧本"></a>4.2 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.拷贝rsync配置文件和密码文件</span></span><br><span class="line">- name: 01_backup &amp; copy</span><br><span class="line">  template:</span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    dest: <span class="string">"/etc/&#123;&#123; item.dest &#125;&#125;"</span></span><br><span class="line">    mode: <span class="string">"&#123;&#123; item.mode &#125;&#125;"</span></span><br><span class="line">    backup: yes</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; src: <span class="string">'rsyncd.conf.j2'</span>,  dest: <span class="string">'rsyncd.conf'</span>,  mode: <span class="string">'0644'</span> &#125;</span><br><span class="line">    - &#123; src: <span class="string">'rsync.passwd.j2'</span>, dest: <span class="string">'rsync.passwd'</span>, mode: <span class="string">'0600'</span> &#125;</span><br><span class="line">  notify: </span><br><span class="line">    - restart rsyncd</span><br><span class="line">  tags: 01_copy_rsync.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rsyncd服务</span></span><br><span class="line">- name: 02_start_rsyncd</span><br><span class="line">  service:</span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rsyncd</span><br></pre></td></tr></table></figure><h3 id="4-3-编写jinja模版文件"><a href="#4-3-编写jinja模版文件" class="headerlink" title="4.3 编写jinja模版文件"></a>4.3 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── rsyncd.conf.j2</span><br><span class="line">└── rsync.passwd.j2</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsyncd.conf.j2 </span></span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/templates]<span class="comment"># cat rsync.passwd.j2 </span></span><br><span class="line">&#123;&#123; rsync_user &#125;&#125;:&#123;&#123; rsync_passwd &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-编写变量文件"><a href="#4-4-编写变量文件" class="headerlink" title="4.4 编写变量文件"></a>4.4 编写变量文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/vars]<span class="comment"># cat main.yml </span></span><br><span class="line">rsync_user: rsync_backup</span><br><span class="line">rsync_passwd: oldboy</span><br></pre></td></tr></table></figure><h3 id="4-5-编写handlers文件"><a href="#4-5-编写handlers文件" class="headerlink" title="4.5 编写handlers文件"></a>4.5 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/rsync_server/handlers]<span class="comment"># cat main.yml</span></span><br><span class="line">- name: restart rsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: rsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-6-编写主任务文件"><a href="#4-6-编写主任务文件" class="headerlink" title="4.6 编写主任务文件"></a>4.6 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat rsync_server.yml</span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - rsync_server</span><br></pre></td></tr></table></figure><h3 id="4-7-最终目录"><a href="#4-7-最终目录" class="headerlink" title="4.7 最终目录"></a>4.7 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 rsync_server</span></span><br><span class="line">rsync_server</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   ├── rsyncd.conf.j2</span><br><span class="line">│   └── rsync.passwd.j2</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 61 Jul 25 23:08 rsync_server.yml</span><br></pre></td></tr></table></figure><h2 id="第5章-编写nfs角色剧本"><a href="#第5章-编写nfs角色剧本" class="headerlink" title="第5章 编写nfs角色剧本"></a>第5章 编写nfs角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/&#123;nfs_server,nfs_client&#125;/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="5-1-nfs服务器端"><a href="#5-1-nfs服务器端" class="headerlink" title="5.1 nfs服务器端"></a>5.1 nfs服务器端</h3><h4 id="5-1-1-编写任务剧本"><a href="#5-1-1-编写任务剧本" class="headerlink" title="5.1.1 编写任务剧本"></a>5.1.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs服务</span></span><br><span class="line">- name: 01_install_nfs_utils</span><br><span class="line">  yum: </span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs_utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02. copy conf</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: exports.j2</span><br><span class="line">    dest: /etc/exports</span><br><span class="line">    mode: 0600</span><br><span class="line">  notify:</span><br><span class="line">    - reloaded nfs</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动rpc nfs服务</span></span><br><span class="line">- name: 03_start_rpc_nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  loop:</span><br><span class="line">    - rpcbind</span><br><span class="line">    - nfs-server</span><br><span class="line">  tags: 03_start_rpc_nfs</span><br></pre></td></tr></table></figure><h4 id="5-1-2-编写jinja模版文件"><a href="#5-1-2-编写jinja模版文件" class="headerlink" title="5.1.2 编写jinja模版文件"></a>5.1.2 编写jinja模版文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/templates]<span class="comment"># cat exports.j2 </span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/backup 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><h4 id="5-1-3-编写handlers文件"><a href="#5-1-3-编写handlers文件" class="headerlink" title="5.1.3 编写handlers文件"></a>5.1.3 编写handlers文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_server/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: reloaded nfs</span><br><span class="line">  service:</span><br><span class="line">    name: <span class="string">"&#123;&#123; item.name &#125;&#125;"</span></span><br><span class="line">    state: <span class="string">"&#123;&#123; item.state &#125;&#125;"</span></span><br><span class="line">  loop:</span><br><span class="line">    - &#123; name: <span class="string">'rpcbind'</span>, state: <span class="string">'restarted'</span> &#125;</span><br><span class="line">    - &#123; name: <span class="string">'nfs-server'</span>, state: <span class="string">'reloaded'</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-编写主任务文件"><a href="#5-1-4-编写主任务文件" class="headerlink" title="5.1.4 编写主任务文件"></a>5.1.4 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_server.yml</span></span><br><span class="line">- hosts: nfs_server </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - nfs_server</span><br></pre></td></tr></table></figure><h4 id="5-1-5-最终目录"><a href="#5-1-5-最终目录" class="headerlink" title="5.1.5 最终目录"></a>5.1.5 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_server/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_server/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">│   └── exports.j2</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 59 Jul 25 23:53 nfs_server.yml</span><br></pre></td></tr></table></figure><h3 id="5-2-nfs客户端"><a href="#5-2-nfs客户端" class="headerlink" title="5.2 nfs客户端"></a>5.2 nfs客户端</h3><h4 id="5-2-1-编写任务剧本"><a href="#5-2-1-编写任务剧本" class="headerlink" title="5.2.1 编写任务剧本"></a>5.2.1 编写任务剧本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/nfs_client/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装nfs</span></span><br><span class="line">- name: 01_install_nfs-utils</span><br><span class="line">  yum:</span><br><span class="line">    name: nfs-utils</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_nfs-utils</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.启动rpc服务</span></span><br><span class="line">- name: 02_start_rpc</span><br><span class="line">  service: </span><br><span class="line">    name: rpcbind</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">  tags: 02_start_rpc</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">- name: 03_mount_dir</span><br><span class="line">  mount:</span><br><span class="line">    path: <span class="string">"&#123;&#123; item.path &#125;&#125;"</span></span><br><span class="line">    src: <span class="string">"&#123;&#123; item.src &#125;&#125;"</span></span><br><span class="line">    fstype: nfs</span><br><span class="line">    opts: defaults</span><br><span class="line">    state: mounted</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; path: <span class="string">'/data'</span>,   src: <span class="string">'172.16.1.31:/data'</span> &#125;</span><br><span class="line">    - &#123; path: <span class="string">'/backup'</span>, src: <span class="string">'172.16.1.31:/backup'</span> &#125;</span><br><span class="line">  tags: 03_mount_dir</span><br></pre></td></tr></table></figure><h4 id="5-2-2-编写主任务文件"><a href="#5-2-2-编写主任务文件" class="headerlink" title="5.2.2 编写主任务文件"></a>5.2.2 编写主任务文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat nfs_client.yml</span></span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  roles:</span><br><span class="line">   <span class="comment"># - init</span></span><br><span class="line">    - nfs_client</span><br></pre></td></tr></table></figure><h4 id="5-2-3-最终目录"><a href="#5-2-3-最终目录" class="headerlink" title="5.2.3 最终目录"></a>5.2.3 最终目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -F 3 nfs_client/</span></span><br><span class="line">3 [error opening dir]</span><br><span class="line">nfs_client/</span><br><span class="line">├── files/</span><br><span class="line">├── handlers/</span><br><span class="line">├── tasks/</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates/</span><br><span class="line">└── vars/</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 58 Jul 26 00:33 nfs_client.yml</span><br></pre></td></tr></table></figure><h2 id="第6章-编写lsyncd角色剧本"><a href="#第6章-编写lsyncd角色剧本" class="headerlink" title="第6章 编写lsyncd角色剧本"></a>第6章 编写lsyncd角色剧本</h2><p>创建对应目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/lsyncd/&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><h3 id="6-1-编写任务剧本"><a href="#6-1-编写任务剧本" class="headerlink" title="6.1 编写任务剧本"></a>6.1 编写任务剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/tasks]<span class="comment"># cat main.yml </span></span><br><span class="line"><span class="comment">#01.安装lsyncd服务</span></span><br><span class="line">- name: 01_install_lsyncd</span><br><span class="line">  yum:</span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: installed</span><br><span class="line">  tags: 01_install_lsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#02.copy lsyncd的配置文件</span></span><br><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: lsyncd.conf.j2</span><br><span class="line">    dest: /etc/lsyncd.conf</span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart lsyncd</span><br><span class="line">  tags: 02_copy_conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#03.启动lsyncd服务</span></span><br><span class="line">- name: 03_start_lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: started</span><br><span class="line">  tags: 03_start_lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-2-编写jinja模版文件"><a href="#6-2-编写jinja模版文件" class="headerlink" title="6.2 编写jinja模版文件"></a>6.2 编写jinja模版文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd]<span class="comment"># tree templates/</span></span><br><span class="line">templates/</span><br><span class="line">└── lsyncd.conf.j2</span><br><span class="line"></span><br><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/templates]<span class="comment"># cat lsyncd.conf.j2 </span></span><br><span class="line">settings &#123;</span><br><span class="line">  logfile = <span class="string">"/var/log/lsyncd/lsyncd.log"</span>,</span><br><span class="line">  statusFile = <span class="string">"/var/log/lsyncd/lsyncd.status"</span>,</span><br><span class="line">  inotifyMode = <span class="string">"CloseWrite"</span>,</span><br><span class="line">  maxProcesses = 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/data"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::data"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/backup"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::backup"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3-编写handlers文件"><a href="#6-3-编写handlers文件" class="headerlink" title="6.3 编写handlers文件"></a>6.3 编写handlers文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/lsyncd/handlers]<span class="comment"># cat main.yml </span></span><br><span class="line">- name: restart lsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: lsyncd</span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h3 id="6-4-编写主任务文件"><a href="#6-4-编写主任务文件" class="headerlink" title="6.4 编写主任务文件"></a>6.4 编写主任务文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># cat lsyncd.yml </span></span><br><span class="line">- hosts: lsyncd_server</span><br><span class="line">  roles:</span><br><span class="line">    <span class="comment">#- init</span></span><br><span class="line">    - lsyncd</span><br></pre></td></tr></table></figure><h3 id="6-5-最终目录"><a href="#6-5-最终目录" class="headerlink" title="6.5 最终目录"></a>6.5 最终目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /etc/ansible/roles]<span class="comment"># tree -L 3 lsyncd</span></span><br><span class="line">lsyncd</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   └── lsyncd.conf.j2</span><br><span class="line">└── vars</span><br><span class="line">[root@ssh-61 /etc/ansible/roles/site]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r-- 1 root root 56 Jul 26 01:20 lsyncd.yml</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ansible" scheme="http://linuxwf.com/tags/ansible/"/>
    
      <category term="ansible roles" scheme="http://linuxwf.com/tags/ansible-roles/"/>
    
  </entry>
  
  <entry>
    <title>7.Ansible playbook 剧本</title>
    <link href="http://linuxwf.com/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/"/>
    <id>http://linuxwf.com/2020/04/13/7-Ansible-playbook-%E5%89%A7%E6%9C%AC/</id>
    <published>2020-04-13T04:52:00.000Z</published>
    <updated>2020-04-13T04:53:50.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Ansible-playbook-剧本"><a href="#Ansible-playbook-剧本" class="headerlink" title="Ansible playbook 剧本"></a>Ansible playbook 剧本</h1><h2 id="第1章-playbook剧本简介"><a href="#第1章-playbook剧本简介" class="headerlink" title="第1章 playbook剧本简介"></a>第1章 playbook剧本简介</h2><h3 id="1-1-什么是playbook剧本？"><a href="#1-1-什么是playbook剧本？" class="headerlink" title="1.1 什么是playbook剧本？"></a>1.1 什么是playbook剧本？</h3><p> <code>Playbooks</code>与Ad-Hoc相比，是一种完全不同的运用Ansible的方式，而且是非常之强大的；也是系统ansible命令的集合，其利用yaml语言编写，运行过程，<code>ansbile-playbook</code>命令根据自上而下的顺序依次执行。<br>简单来说，Playbooks 是一种简单的配置管理系统与多机器部署系统的基础。与现有的其他系统有不同之处，且非常适合于复杂应用的部署。</p><p><code>playbook</code>翻译过来就是“剧本”， 那 <code>playbook</code> 组成如下</p><ul><li>play: 定义的是主机的角色</li><li>task: 定义的是具体执行的任务</li><li>playbook: 由一个或多个 play 组成，一个 play 可以包含多个 task 任务。简单理解为: 使用不同的模块完成一件事情</li></ul><h3 id="1-2-playbook的优势"><a href="#1-2-playbook的优势" class="headerlink" title="1.2 playbook的优势"></a>1.2 playbook的优势</h3><ol><li>功能比ansible命令更强大</li><li>能很好的控制先后执行顺序, 以及依赖关系</li><li>语法展现更加的直观</li><li>ansible命令无法持久使用， playbook 可以持久使用</li></ol><h2 id="第2章-playbook剧本的书写格式"><a href="#第2章-playbook剧本的书写格式" class="headerlink" title="第2章 playbook剧本的书写格式"></a>第2章 playbook剧本的书写格式</h2><h3 id="2-1-剧本的组成"><a href="#2-1-剧本的组成" class="headerlink" title="2.1 剧本的组成"></a>2.1 剧本的组成</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-86ef95f63d01ed09.webp"  alt=""></p><h3 id="2-2-注意缩进"><a href="#2-2-注意缩进" class="headerlink" title="2.2 注意缩进"></a>2.2 注意缩进</h3><ol><li>合理的信息缩进，两个空格表示一个缩进关系</li><li>一定不要使用tab</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题一</span><br><span class="line">_ _ 标题二</span><br><span class="line">_ _ _ _ 标题三</span><br></pre></td></tr></table></figure><h3 id="2-3-冒号"><a href="#2-3-冒号" class="headerlink" title="2.3 冒号"></a>2.3 冒号</h3><p>所有冒号后面都要加上空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name=www gid=666</span><br></pre></td></tr></table></figure><h3 id="2-4-短横线-列表功能"><a href="#2-4-短横线-列表功能" class="headerlink" title="2.4 短横线 - 列表功能"></a>2.4 短横线 - 列表功能</h3><p>使用短横线构成列表信息,短横线后面需要有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 老张</span><br><span class="line">  男</span><br><span class="line">- 爱好</span><br><span class="line">  游泳</span><br></pre></td></tr></table></figure><h2 id="第3章-剧本书写"><a href="#第3章-剧本书写" class="headerlink" title="第3章 剧本书写"></a>第3章 剧本书写</h2><h3 id="3-1-剧本文件名格式"><a href="#3-1-剧本文件名格式" class="headerlink" title="3.1 剧本文件名格式"></a>3.1 剧本文件名格式</h3><p>剧本文件拓展名为xxx.yaml<br>1.方便识别文件是一个剧本文件<br>2.文件编写时会有颜色提示</p><h3 id="3-2-创建剧本"><a href="#3-2-创建剧本" class="headerlink" title="3.2 创建剧本"></a>3.2 创建剧本</h3><p>练习: 写一个剧本，使用yum/copy/service等模块安装部署启动rsync服务</p><h4 id="3-2-1-服务端操作步骤"><a href="#3-2-1-服务端操作步骤" class="headerlink" title="3.2.1 服务端操作步骤"></a>3.2.1 服务端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.备份/etc/rsyncd.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a <span class="string">"src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes"</span></span><br></pre></td></tr></table></figure><p>3.copy配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"src=/server/scripts/rsyncd.conf dest=/etc/"</span></span><br></pre></td></tr></table></figure><p>4.创建www组和www用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.41 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>5.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><p>6.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a <span class="string">"content='rsync_backup:oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>7.启动服务，加入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m service -a <span class="string">"name=rsyncd state=started enabled=yes"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-客户端操作步骤"><a href="#3-2-2-客户端操作步骤" class="headerlink" title="3.2.2 客户端操作步骤"></a>3.2.2 客户端操作步骤</h4><p>1.安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m yum -a <span class="string">"name=rsync state=installed"</span></span><br></pre></td></tr></table></figure><p>2.创建密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m copy -a <span class="string">"content='oldboy' dest=/etc/rsync.password mode=600"</span></span><br></pre></td></tr></table></figure><p>3.创建用户和组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m group -a <span class="string">"name=www gid=666"</span></span><br><span class="line">ansible 172.16.1.31 -m user -a <span class="string">"name=www create_home=no shell=/sbin/nologin group=www uid=666"</span></span><br></pre></td></tr></table></figure><p>4.创建备份目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.31 -m file -a <span class="string">"dest=/backup state=directory owner=www group=www"</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-rsync剧本"><a href="#3-2-3-rsync剧本" class="headerlink" title="3.2.3 rsync剧本"></a>3.2.3 rsync剧本</h4><p>服务端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br></pre></td></tr></table></figure><p>客户端剧本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinet.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">  - name: 02-create passwd</span><br><span class="line">    copy: content=<span class="string">'oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">  - name: 06-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br></pre></td></tr></table></figure><h4 id="3-2-4-NFS剧本"><a href="#3-2-4-NFS剧本" class="headerlink" title="3.2.4 NFS剧本"></a>3.2.4 NFS剧本</h4><p>NFS服务器端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_server.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-copy nfs exports</span><br><span class="line">    copy: src=/server/scripts/playbook/exports dest=/etc/</span><br><span class="line">  - name: 03-add group</span><br><span class="line">    group: name=www gid=<span class="string">'666'</span></span><br><span class="line">  - name: 04-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">  - name: 05-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 06-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started</span><br><span class="line">  - name: 07-start nfs</span><br><span class="line">    service: name=nfs state=started</span><br><span class="line">  - name: 08-enable rpcbind                                                                                                                                      </span><br><span class="line">    systemd: name=rpcbind enabled=yes</span><br><span class="line">  - name: 09-enable nfs </span><br><span class="line">    systemd: name=nfs enabled=yes</span><br></pre></td></tr></table></figure><p>NFS客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_client.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install nfs service</span><br><span class="line">    yum: name=nfs-utils state=latest</span><br><span class="line">  - name: 02-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">  - name: 03-add user</span><br><span class="line">    user: name=www create_home=no shell=/sbin/nologin group=www uid=666</span><br><span class="line">  - name: 04-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">  - name: 05-start rpcbind</span><br><span class="line">    service: name=rpcbind state=started enabled=yes</span><br><span class="line">  - name: 06-mount data</span><br><span class="line">    mount: path=/data src=172.16.1.31:/data fstype=nfs opts=defaults state=mounted</span><br></pre></td></tr></table></figure><h3 id="3-3-检查剧本语法"><a href="#3-3-检查剧本语法" class="headerlink" title="3.3 检查剧本语法"></a>3.3 检查剧本语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-4-模拟执行剧本（常用）"><a href="#3-4-模拟执行剧本（常用）" class="headerlink" title="3.4 模拟执行剧本（常用）"></a>3.4 模拟执行剧本（常用）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C nfs_client.yaml</span><br></pre></td></tr></table></figure><h3 id="3-5-执行剧本"><a href="#3-5-执行剧本" class="headerlink" title="3.5 执行剧本"></a>3.5 执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook nfs_client.yaml</span><br></pre></td></tr></table></figure><h2 id="第4章-剧本高级-特性"><a href="#第4章-剧本高级-特性" class="headerlink" title="第4章 剧本高级 特性"></a>第4章 剧本高级 特性</h2><p>我们已经体验了使用剧本来安装服务，但是上述的简单ansible剧本存在一定的局限性<br>1.全部写成一行虽然看起来整洁，但是有一些特性没办法使用<br>2.比如同时需要创建多个目录，启动多个服务，需要重复写多条语句<br>3.参数不直观，不好修改<br>4.剧本里写的是启动服务，如果配置文件发生变化，重复执行不会重启服务</p><p>不过没有关系，等学习了下面的高级特性，然后我们可以换一种写法</p><h3 id="4-1-循环"><a href="#4-1-循环" class="headerlink" title="4.1 循环"></a>4.1 循环</h3><p>官方网址: </p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html</a></p><p>使用情景：<br>1.需要创建多个目录<br>2.需要启动多个服务<br>具体实现：</p><p>1.同时创建2个目录/data和/backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat loops.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-create dir data and backuo</span><br><span class="line">    file:</span><br><span class="line">      path: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop: </span><br><span class="line">    - /data</span><br><span class="line">    - /backup</span><br></pre></td></tr></table></figure><p>2.同时启动2个服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat service.yaml </span></span><br><span class="line">- hosts: 172.16.1.31</span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-start rpcbind nfs service</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs</span><br></pre></td></tr></table></figure><h3 id="4-2-变量"><a href="#4-2-变量" class="headerlink" title="4.2 变量"></a>4.2 变量</h3><p>官方网址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html</a></p><p>使用情景：<br>1.自定义某个名称，在任务中会多次引用<br>2.从主机收集的系统信息中提取某个变量并引用，例如网卡信息</p><p>具体实现：</p><p>1.自定义一个文件名变量，创建文件时引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat vars.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  vars:</span><br><span class="line">    file_name: oldboy</span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-use vars create dir</span><br><span class="line">    file: </span><br><span class="line">      path: <span class="string">"/root/&#123;&#123; file_name &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br></pre></td></tr></table></figure><p>2.使用变量获取主机的eth1地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat ip.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-get ip address</span><br><span class="line">    shell: <span class="string">"echo &#123;&#123; ansible_facts.eth1.ipv4.address &#125;&#125; &gt; /root/ip_eth1.txt"</span></span><br></pre></td></tr></table></figure><p>3.在主机hosts中指定变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br><span class="line"></span><br><span class="line">[backup:vars]</span><br><span class="line">file_name=<span class="string">"oldzhang"</span></span><br></pre></td></tr></table></figure><h3 id="4-3-注册变量"><a href="#4-3-注册变量" class="headerlink" title="4.3 注册变量"></a>4.3 注册变量</h3><p>使用情景：将配置文件的状态注册成一个变量，方便其他任务引用</p><p>具体实现：<br>1.将配置文件的状态注册成一个服务变量并打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat register.yaml </span></span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-register rsync status</span><br><span class="line">    shell: netstat -lntp|grep rsync</span><br><span class="line">    register: rsync_port</span><br><span class="line"></span><br><span class="line">  - name: 02-out rsync status</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; rsync_port.stdout_lines &#125;&#125;"</span></span><br></pre></td></tr></table></figure><p>2.打印多个信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- hosts: nfs</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-echo hostname</span><br><span class="line">    shell: <span class="built_in">echo</span> $(hostname)</span><br><span class="line">    register: nfs_hostname    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">  - name: debug nfs_hostname</span><br><span class="line">    debug:</span><br><span class="line">      msg: <span class="string">"&#123;&#123; item &#125;&#125;"</span>      <span class="comment">#</span></span><br><span class="line">    loop:</span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.stdout &#125;&#125;"</span></span><br><span class="line">      - <span class="string">"&#123;&#123; nfs_hostname.cmd &#125;&#125;"</span></span><br></pre></td></tr></table></figure><h3 id="4-4-服务管理"><a href="#4-4-服务管理" class="headerlink" title="4.4 服务管理"></a>4.4 服务管理</h3><p>官网地址：</p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change</a></p><p>使用情景：如果配置文件发生了变化，就重启服务，否则什么都不操作<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># </span></span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><h3 id="4-5-标签"><a href="#4-5-标签" class="headerlink" title="4.5 标签"></a>4.5 标签</h3><p>使用情景：从我们指定的任务开始执行，而不是从头到尾执行一遍<br>具体实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_server2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: name=rsync state=installed</span><br><span class="line">    tags: 01-install-rsync</span><br><span class="line">  - name: 02-backup rsyncd.conf</span><br><span class="line">    copy: src=/etc/rsyncd.conf dest=/etc/rsyncd.conf.bak remote_src=yes</span><br><span class="line">    tags: 02-backup-rsyncd.conf</span><br><span class="line">  - name: 03-copy rsyncd.conf</span><br><span class="line">    copy: src=/server/scripts/playbook/rsyncd.conf dest=/etc/</span><br><span class="line">    tags: 03-copy-rsyncd.conf</span><br><span class="line">  - name: 04-create passwd</span><br><span class="line">    copy: content=<span class="string">'rsync_backup:oldboy'</span> dest=/etc/rsync.passwd mode=0600</span><br><span class="line">    tags: 04-create-passwd</span><br><span class="line">  - name: 05-add group</span><br><span class="line">    group: name=www gid=666</span><br><span class="line">    tags: 05-add-group</span><br><span class="line">  - name: 06-add user</span><br><span class="line">    user: name=www uid=666 group=www shell=/sbin/nologin create_home=no</span><br><span class="line">    tags: 06-add-user</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path=/backup state=directory owner=www group=www</span><br><span class="line">    tags: 07-create-backup-dir</span><br><span class="line">  - name: 08-create data dir</span><br><span class="line">    file: path=/data state=directory owner=www group=www</span><br><span class="line">    tags: 08-create-data-dir</span><br><span class="line">  - name: 09-start rsyncd</span><br><span class="line">    service: name=rsyncd state=started enabled=yes</span><br><span class="line">    tags: 09-start-rsyncd</span><br></pre></td></tr></table></figure><p>调用标签：<br>1.打印出playbook里要执行的所有标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --list-tags rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>2.指定运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>3.指定运行多个标签，使用逗号隔开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook -t 04-create-passwd,07-create-backup-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><p>4.指定不运行某个标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># ansible-playbook --skip-tags=08-create-data-dir rsync_server2.yaml</span></span><br></pre></td></tr></table></figure><h2 id="第5章-运行检查规范"><a href="#第5章-运行检查规范" class="headerlink" title="第5章 运行检查规范"></a>第5章 运行检查规范</h2><h3 id="5-1-检查剧本拼写规范"><a href="#5-1-检查剧本拼写规范" class="headerlink" title="5.1 检查剧本拼写规范"></a>5.1 检查剧本拼写规范</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check check.yam</span><br></pre></td></tr></table></figure><h3 id="5-2-检查这个任务执行的主机对象"><a href="#5-2-检查这个任务执行的主机对象" class="headerlink" title="5.2 检查这个任务执行的主机对象"></a>5.2 检查这个任务执行的主机对象</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-host check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-3-检查这个剧本需要执行哪些任务"><a href="#5-3-检查这个剧本需要执行哪些任务" class="headerlink" title="5.3 检查这个剧本需要执行哪些任务"></a>5.3 检查这个剧本需要执行哪些任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tasks check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-4-检查这个剧本执行哪些tag"><a href="#5-4-检查这个剧本执行哪些tag" class="headerlink" title="5.4 检查这个剧本执行哪些tag"></a>5.4 检查这个剧本执行哪些tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tags check.yaml</span><br></pre></td></tr></table></figure><h3 id="5-5-模拟执行剧本"><a href="#5-5-模拟执行剧本" class="headerlink" title="5.5 模拟执行剧本"></a>5.5 模拟执行剧本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C check.yaml</span><br></pre></td></tr></table></figure><h2 id="第6章-实战剧本部署rsync-nfs-lsyncd"><a href="#第6章-实战剧本部署rsync-nfs-lsyncd" class="headerlink" title="第6章 实战剧本部署rsync/nfs/lsyncd"></a>第6章 实战剧本部署rsync/nfs/lsyncd</h2><h3 id="6-1-rsync-脚本"><a href="#6-1-rsync-脚本" class="headerlink" title="6.1 rsync 脚本"></a>6.1 rsync 脚本</h3><p>rsync 服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_server</span><br><span class="line">  vars:</span><br><span class="line">    rsync_conf_path: <span class="string">'/server/scripts/playbook/rsyncd.conf'</span></span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; rsync_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line">    tags: 02-copy</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line">      </span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-create-passwd</span><br><span class="line">    copy: </span><br><span class="line">      content: <span class="string">'rsync_backup:oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 06-create-passwd</span><br><span class="line">  </span><br><span class="line">  - name: 07-start-rsynd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd </span><br><span class="line">      state: started </span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 07-start-rsynd</span><br><span class="line"></span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>rsync 客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat rsync_clinetV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: rsync_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-rsync</span><br><span class="line">    yum:</span><br><span class="line">      name: rsync</span><br><span class="line">      state: installed</span><br><span class="line">    tags: 01-yum</span><br><span class="line"></span><br><span class="line">  - name: 02-create-passwd</span><br><span class="line">    copy:</span><br><span class="line">      content: <span class="string">'oldboy'</span></span><br><span class="line">      dest: /etc/rsync.passwd</span><br><span class="line">      mode: 0600</span><br><span class="line">    tags: 02-create-passwd</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group: </span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user: </span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file: </span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br></pre></td></tr></table></figure><h3 id="6-2-NFS-脚本"><a href="#6-2-NFS-脚本" class="headerlink" title="6.2 NFS 脚本"></a>6.2 NFS 脚本</h3><p>NFS服务端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_serverV2.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  vars:</span><br><span class="line">    exports_path: <span class="string">'/server/scripts/playbook/exports'</span></span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum: </span><br><span class="line">      name: nfs-utils </span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-yum-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-nfs-exports</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; exports_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">    notify:</span><br><span class="line">      - restart rpcbind</span><br><span class="line">      - restart nfs-server</span><br><span class="line">    tags: 02-copy-nfs-exports</span><br><span class="line"></span><br><span class="line">  - name: 03-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 03-create-group</span><br><span class="line"></span><br><span class="line">  - name: 04-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 04-create-user</span><br><span class="line"></span><br><span class="line">  - name: 05-create-dir</span><br><span class="line">    file:</span><br><span class="line">      dest: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - /backup</span><br><span class="line">      - /data</span><br><span class="line">    tags: 05-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 06-start-rpc &amp; nfs</span><br><span class="line">    service: </span><br><span class="line">      name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs-server</span><br><span class="line">    tags: 06-start-rpc-nfs</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart rpcbind</span><br><span class="line">    service:</span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: restarted</span><br><span class="line">  - name: restart nfs-server</span><br><span class="line">    service:</span><br><span class="line">      name: nfs-server</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>NFS客户端脚本实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat nfs_clientV2.yaml</span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install-nfs</span><br><span class="line">    yum:</span><br><span class="line">      name: nfs-utils</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-nfs</span><br><span class="line"></span><br><span class="line">  - name: 02-create-group</span><br><span class="line">    group:</span><br><span class="line">      name: www</span><br><span class="line">      gid: 666</span><br><span class="line">    tags: 02-create-group</span><br><span class="line">  </span><br><span class="line">  - name: 03-create-user</span><br><span class="line">    user:</span><br><span class="line">      name: www</span><br><span class="line">      uid: 666</span><br><span class="line">      group: www</span><br><span class="line">      shell: /sbin/nologin</span><br><span class="line">      create_home: no</span><br><span class="line">    tags: 03-create-user</span><br><span class="line"></span><br><span class="line">  - name: 04-create-dir</span><br><span class="line">    file: </span><br><span class="line">      path: /data</span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    tags: 04-create-dir</span><br><span class="line"></span><br><span class="line">  - name: 05-start-rpcbind</span><br><span class="line">    service: </span><br><span class="line">      name: rpcbind</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 05-start-rpcbind</span><br><span class="line"></span><br><span class="line">  - name: 06-mount-data</span><br><span class="line">    mount:</span><br><span class="line">      path: /data</span><br><span class="line">      src: 172.16.1.31:/data</span><br><span class="line">      fstype: nfs</span><br><span class="line">      opts: defaults</span><br><span class="line">      state: mounted</span><br><span class="line">    tags: 06-mount-data</span><br></pre></td></tr></table></figure><h3 id="6-3-lsync-脚本"><a href="#6-3-lsync-脚本" class="headerlink" title="6.3 lsync 脚本"></a>6.3 lsync 脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 /server/scripts/playbook]<span class="comment"># cat lsyncd.yaml </span></span><br><span class="line">---</span><br><span class="line">- hosts: nfs</span><br><span class="line">  vars: </span><br><span class="line">    lsyncd_conf_path: <span class="string">'/server/scripts/playbook/lsyncd.conf'</span></span><br><span class="line">  tasks:</span><br><span class="line"></span><br><span class="line">  - name: 01-install-lsyncd</span><br><span class="line">    yum:</span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: latest</span><br><span class="line">    tags: 01-install-lsyncd</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-lsyncd.conf</span><br><span class="line">    copy:</span><br><span class="line">      src: <span class="string">"&#123;&#123; lsyncd_conf_path &#125;&#125;"</span></span><br><span class="line">      dest: /etc/</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart lsyncd</span><br><span class="line">    tags: 02-copy-lsyncd.conf</span><br><span class="line"></span><br><span class="line">  - name: 03-start-lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: started</span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 03-start-lsyncd</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: restart lsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: lsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ansible" scheme="http://linuxwf.com/tags/ansible/"/>
    
      <category term="ansible playbook" scheme="http://linuxwf.com/tags/ansible-playbook/"/>
    
  </entry>
  
  <entry>
    <title>6.ansible服务</title>
    <link href="http://linuxwf.com/2020/04/13/6-ansible%E6%9C%8D%E5%8A%A1/"/>
    <id>http://linuxwf.com/2020/04/13/6-ansible%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-04-13T04:23:00.000Z</published>
    <updated>2020-04-13T04:25:44.499Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Ansible服务"><a href="#Ansible服务" class="headerlink" title="Ansible服务"></a>Ansible服务</h1><h2 id="第1章-Ansible介绍"><a href="#第1章-Ansible介绍" class="headerlink" title="第1章 Ansible介绍"></a>第1章 Ansible介绍</h2><h3 id="1-1-什么是Ansible？"><a href="#1-1-什么是Ansible？" class="headerlink" title="1.1 什么是Ansible？"></a>1.1 什么是Ansible？</h3><p><code>ansible</code>是一种自动化运维工具，基于Python开发，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能，默认通过SSH协议管理机器。 </p><p>ansible是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架，不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。</p><h3 id="1-2-为什么需要Ansible？"><a href="#1-2-为什么需要Ansible？" class="headerlink" title="1.2 为什么需要Ansible？"></a>1.2 为什么需要Ansible？</h3><p><strong>批量管理功能：</strong></p><p>1）可以实现批量系统操作配置</p><p>2）可以实现批量软件服务部署</p><p>3）可以实现批量文件数据分发</p><p>4）可以实现批量系统信息收集</p><p><strong>管理服务意义：</strong></p><p>1）提高工作的效率（部署综合架构） </p><p>2）提高工作准确度</p><p>3）减少维护的成本</p><p>4）减少重复性工作 </p><p><strong>ansible 安装部署简单：</strong></p><p>1）没有配置文件（不需要配置）</p><p>2）不需要启动服务</p><p>3）客户端没有需要部署任务</p><h2 id="第2章-ansible-安装部署"><a href="#第2章-ansible-安装部署" class="headerlink" title="第2章 ansible 安装部署"></a>第2章 ansible 安装部署</h2><p>Ansible的安装部署十分简单，只需要在管理机yum安装就行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># yum -y install ansible</span></span><br></pre></td></tr></table></figure><h2 id="第3章-ansible-主机清单"><a href="#第3章-ansible-主机清单" class="headerlink" title="第3章 ansible 主机清单"></a>第3章 ansible 主机清单</h2><p>主机资产清单 <code>/etc/ansible/hosts</code> 文件，用于定义被管理主机的认证信息， 例如 ssh 登录用户名、密码以及 key相关信息。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.主机支持主机名通配以及正则表达式，例如 web[1:3].oldboy.com 代表三台主机</span><br><span class="line">2.主机支持基于非标准的 ssh 端口，例如 web1.oldboy.com:6666</span><br><span class="line">3.主机支持指定变量，可对个别主机的特殊配置，如登陆用户，密码</span><br><span class="line">4.主机组支持指定变量[group_name:vars]，同时支持嵌套[game:children]</span><br></pre></td></tr></table></figure><h3 id="3-1-指定主机组相关配置"><a href="#3-1-指定主机组相关配置" class="headerlink" title="3.1 指定主机组相关配置"></a>3.1 指定主机组相关配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主机组 第一种方式 (已经配置好ssh)</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.31 </span><br><span class="line">172.16.1.41</span><br><span class="line"><span class="comment">#主机+端口+密码 第二种方式（ssh未分发公钥）</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.31 ansible_ssh_port=9999 ansible_ssh_user=root ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line">172.16.1.41 ansible_ssh_port=9999 ansible_ssh_user=root ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line"><span class="comment">#对整个主机组都生效的变量 </span></span><br><span class="line">[webserver:vars]</span><br><span class="line">ansible_ssh_pass=<span class="string">'123456'</span></span><br></pre></td></tr></table></figure><p>我们一般使用，先配置好<code>ssh</code>服务，分发公钥后，再指定主机组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cat /etc/ansible/hosts</span></span><br><span class="line">[webserver]</span><br><span class="line">172.16.1.41 </span><br><span class="line">172.16.1.31 </span><br><span class="line"></span><br><span class="line">[webserver:vars]</span><br><span class="line">ansible_ssh_port=9999</span><br><span class="line">ansible_ssh_user=root</span><br><span class="line">ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line"></span><br><span class="line">[nfs]</span><br><span class="line">172.16.1.31</span><br><span class="line"></span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br></pre></td></tr></table></figure><h2 id="第4章-ansible-常用模块"><a href="#第4章-ansible-常用模块" class="headerlink" title="第4章 ansible 常用模块"></a>第4章 ansible 常用模块</h2><p>ansible 官方网站 ： <a href="https://docs.ansible.com" target="_blank" rel="noopener">https://docs.ansible.com</a></p><p>模块的应用语法格式:<br>ansible 主机名称/主机组名称/主机地址信息/all -m(指定应用的模块信息) 模块名称 -a(指定动作信息) “执行什么动作”</p><h3 id="4-1-ping"><a href="#4-1-ping" class="headerlink" title="4.1 ping"></a>4.1 ping</h3><p>应用场景：测试主机和ansible之间的连通性<br>举例：对webserver主机组测试是否连通</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m ping</span></span><br><span class="line">172.16.1.41 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br><span class="line">172.16.1.31 | SUCCESS =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">false</span>, </span><br><span class="line">    <span class="string">"ping"</span>: <span class="string">"pong"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-command-简单模块"><a href="#4-2-command-简单模块" class="headerlink" title="4.2 command 简单模块"></a>4.2 command 简单模块</h3><p>应用场景：<br>类似shell,但是只能执行简单的命令，复杂的命令和有些符号并不能识别，用的比较少<br>01.查看主机名，可以执行成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m command -a "hostname"</span></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">backup</span><br><span class="line"></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">nfs</span><br></pre></td></tr></table></figure><p>02.使用awk拼接查看主机IP执行失败</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m command -a "ifconfig eth1|awk 'NR==2&#123;print $2&#125;'"</span></span><br><span class="line">172.16.1.41 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">NR==2&#123;<span class="built_in">print</span> &#125;: Unknown host</span><br><span class="line">ifconfig: `--<span class="built_in">help</span><span class="string">' gives usage information.non-zero return code</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">172.16.1.31 | FAILED | rc=1 &gt;&gt;</span></span><br><span class="line"><span class="string">NR==2&#123;print &#125;: Unknown host</span></span><br><span class="line"><span class="string">ifconfig: `--help'</span> gives usage information.non-zero <span class="built_in">return</span> code</span><br></pre></td></tr></table></figure><h3 id="4-3-shell-万能模块"><a href="#4-3-shell-万能模块" class="headerlink" title="4.3 shell 万能模块"></a>4.3 shell 万能模块</h3><p>万能模块，所有命令都可以执行，和本地执行效果一样</p><h4 id="4-3-1-使用管道查询IP地址"><a href="#4-3-1-使用管道查询IP地址" class="headerlink" title="4.3.1 使用管道查询IP地址"></a>4.3.1 使用管道查询IP地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m shell -a "ifconfig eth1|awk 'NR==2'"</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">        inet 172.16.1.31  netmask 255.255.255.0  broadcast 172.16.1.255</span><br><span class="line"></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">        inet 172.16.1.41  netmask 255.255.255.0  broadcast 172.16.1.255</span><br></pre></td></tr></table></figure><h4 id="4-3-2-批量执行脚本"><a href="#4-3-2-批量执行脚本" class="headerlink" title="4.3.2 批量执行脚本"></a>4.3.2 批量执行脚本</h4><p>在其他主机上创建一个脚本，内容为打印主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; echo.sh &lt;&lt; EOF </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$(hostname)</span>"</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>然后使用ansible的shell模块批量执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m shell -a "/bin/bash /root/echo.sh"</span></span><br><span class="line">172.16.1.31 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">nfs</span><br><span class="line"></span><br><span class="line">172.16.1.41 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">backup</span><br></pre></td></tr></table></figure><h3 id="4-4-copy-拷贝文件"><a href="#4-4-copy-拷贝文件" class="headerlink" title="4.4 copy 拷贝文件"></a>4.4 copy 拷贝文件</h3><p>1.拷贝ssh-61的/etc/hostname文件到其他主机的/tmp目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"md5sum"</span>: <span class="string">"d61060d5859d1e67541238e8c296938e"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/.ansible/tmp/ansible-tmp-1563897217.78-184562543546238/source"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.在copy 文件时修改文件属主和属组信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp owner=oldboy group=oldboy"</span></span><br><span class="line">172.16.1.31 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在copy文件时修改文件的权限信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "src=/etc/hostname dest=/tmp mode=0666"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"c5b01b59eec249e998dd82c375b269fe10cff9d3"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0666"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/tmp/hostname"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 7, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll /tmp/hostname </span></span><br><span class="line">-rw-rw-rw- 1 oldboy oldboy 7 Jul 23 23:53 /tmp/hostname</span><br></pre></td></tr></table></figure><p>4.创建文件并直接写入内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m copy -a "content='oldboy' dest=/root/oldboy.txt"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"checksum"</span>: <span class="string">"da3a7ab3551120059810d0c7156a8150a0bc245a"</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/root/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"md5sum"</span>: <span class="string">"890b185727556f1be31d7fe5ee5ce4dc"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0644"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 6, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/.ansible/tmp/ansible-tmp-1563897755.59-265719354438343/source"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># cat oldboy.txt </span></span><br><span class="line">oldboy</span><br></pre></td></tr></table></figure><p>5.复制目录</p><p>src后面目录没有/: 将目录本身以及目录下面的内容都进行远程传输复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m copy -a <span class="string">"src=/data dest=/data"</span></span><br></pre></td></tr></table></figure><p>src后面目录有/: 只将目录下面的内容都进行远程传输复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m copy -a <span class="string">"src=/data/ dest=/data"</span></span><br></pre></td></tr></table></figure><h4 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src <span class="comment">#推送数据的源文件信息</span></span><br><span class="line">dest <span class="comment">#推送数据的目标路径</span></span><br><span class="line">backup <span class="comment">#对推送传输过去的文件，进行备份</span></span><br><span class="line">content <span class="comment">#直接批量在被管理端文件中添加内容</span></span><br><span class="line">group <span class="comment">#将本地文件推送到远端，指定文件属组信息</span></span><br><span class="line">owner <span class="comment">#将本地文件推送到远端，指定文件属主信息</span></span><br><span class="line">mode <span class="comment">#将本地文件推送到远端，指定文件权限信息</span></span><br></pre></td></tr></table></figure><h3 id="4-5-file-设置文件属性"><a href="#4-5-file-设置文件属性" class="headerlink" title="4.5 file 设置文件属性"></a>4.5 file 设置文件属性</h3><h4 id="4-5-1-创建文件夹"><a href="#4-5-1-创建文件夹" class="headerlink" title="4.5.1 创建文件夹"></a>4.5.1 创建文件夹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "path=/root/oldboy state=directory"</span></span><br><span class="line">172.16.1.31 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0755"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"path"</span>: <span class="string">"/root/oldboy"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 6, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"directory"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@nfs ~]<span class="comment"># ll -d oldboy</span></span><br><span class="line">drwxr-xr-x 2 root root 6 Jul 24 00:10 oldboy</span><br></pre></td></tr></table></figure><h4 id="4-5-2-创建文件并更改属性"><a href="#4-5-2-创建文件并更改属性" class="headerlink" title="4.5.2 创建文件并更改属性"></a>4.5.2 创建文件并更改属性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "path=/tmp/oldboy.txt state=touch mode=666 owner=oldboy group=oldboy"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/tmp/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 1000, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0666"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"oldboy"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 0, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"file"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 1000</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll /tmp/oldboy.txt </span></span><br><span class="line">-rw-rw-rw- 1 oldboy oldboy 0 Jul 24 00:12 /tmp/oldboy.txt</span><br></pre></td></tr></table></figure><h4 id="4-5-3-创建软链接"><a href="#4-5-3-创建软链接" class="headerlink" title="4.5.3 创建软链接"></a>4.5.3 创建软链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m file -a "src=/root/oldboy.txt path=/root/oldboy.txt_link state=link"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"ansible_facts"</span>: &#123;</span><br><span class="line">        <span class="string">"discovered_interpreter_python"</span>: <span class="string">"/usr/bin/python"</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"dest"</span>: <span class="string">"/root/oldboy.txt_link"</span>, </span><br><span class="line">    <span class="string">"gid"</span>: 0, </span><br><span class="line">    <span class="string">"group"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"mode"</span>: <span class="string">"0777"</span>, </span><br><span class="line">    <span class="string">"owner"</span>: <span class="string">"root"</span>, </span><br><span class="line">    <span class="string">"size"</span>: 16, </span><br><span class="line">    <span class="string">"src"</span>: <span class="string">"/root/oldboy.txt"</span>, </span><br><span class="line">    <span class="string">"state"</span>: <span class="string">"link"</span>, </span><br><span class="line">    <span class="string">"uid"</span>: 0</span><br><span class="line">&#125;</span><br><span class="line">[root@backup ~]<span class="comment"># ll</span></span><br><span class="line">lrwxrwxrwx  1 root root   16 Jul 24 00:19 oldboy.txt_link -&gt; /root/oldboy.txt</span><br></pre></td></tr></table></figure><h4 id="4-5-4-参数说明"><a href="#4-5-4-参数说明" class="headerlink" title="4.5.4 参数说明"></a>4.5.4 参数说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">path <span class="comment">#指定远程主机目录或文件信息</span></span><br><span class="line">recurse <span class="comment">#递归授权</span></span><br><span class="line">state</span><br><span class="line">directory <span class="comment">#在远端创建目录</span></span><br><span class="line">touch <span class="comment">#在远端创建文件</span></span><br><span class="line">link <span class="comment">#link 或 hard 表示创建链接文件</span></span><br><span class="line">absent <span class="comment">#表示删除文件或目录</span></span><br><span class="line">mode <span class="comment">#设置文件或目录权限</span></span><br><span class="line">owner <span class="comment">#设置文件或目录属主信息</span></span><br><span class="line">group <span class="comment">#设置文件或目录属组信息</span></span><br></pre></td></tr></table></figure><h3 id="4-6-script模块"><a href="#4-6-script模块" class="headerlink" title="4.6 script模块"></a>4.6 script模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编写脚本</span></span><br><span class="line">[root@m01 ~]<span class="comment"># mkdir -p /server/scripts</span></span><br><span class="line">[root@m01 ~]<span class="comment"># cat /server/scripts/echo.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">/usr/bin/<span class="built_in">echo</span> <span class="string">"<span class="variable">$(hostname)</span>"</span></span><br><span class="line"><span class="comment">#在本地运行模块，等同于在远程执行，不需要将脚本文件进行推送目标主机执行</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m script -a "/server/scripts/echo.sh"</span></span><br><span class="line">172.16.1.41 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"rc"</span>: 0, </span><br><span class="line">    <span class="string">"stderr"</span>: <span class="string">"Shared connection to 172.16.1.41 closed.\r\n"</span>, </span><br><span class="line">    <span class="string">"stderr_lines"</span>: [</span><br><span class="line">        <span class="string">"Shared connection to 172.16.1.41 closed."</span></span><br><span class="line">    ], </span><br><span class="line">    <span class="string">"stdout"</span>: <span class="string">"backup\r\n"</span>, </span><br><span class="line">    <span class="string">"stdout_lines"</span>: [</span><br><span class="line">        <span class="string">"backup"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-7-cron定时任务模块"><a href="#4-7-cron定时任务模块" class="headerlink" title="4.7 cron定时任务模块"></a>4.7 cron定时任务模块</h3><p>1.创建一条定时任务，添加定时任务时注释信息，防止重复，方便修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' job='/bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1'"</span></span><br><span class="line"></span><br><span class="line">[root@backup ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#Ansible: 主机名</span></span><br><span class="line">* * * * * /bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>2.删除相应定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' state=absent"</span></span><br></pre></td></tr></table></figure><p>3.注释相应定时任务，使定时任务失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m cron -a "name='主机名' job='/bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1' disabled=yes"</span></span><br><span class="line"></span><br><span class="line">[root@backup ~]<span class="comment"># crontab -l</span></span><br><span class="line"><span class="comment">#Ansible: 主机名</span></span><br><span class="line"><span class="comment">#* * * * * /bin/bash /root/echo.sh &gt;/dev/null 2&gt;&amp;1</span></span><br></pre></td></tr></table></figure><h3 id="4-8-user-和group"><a href="#4-8-user-和group" class="headerlink" title="4.8 user 和group"></a>4.8 user 和group</h3><p>创建用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m group -a "name=BBB gid=777 state=present"</span></span><br></pre></td></tr></table></figure><p>创建用户，并属于组BBB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m user -a "name=BBB uid=777 group=777 shell=/sbin/nologin create_home=no"</span></span><br><span class="line">[root@backup ~]<span class="comment"># id BBB</span></span><br><span class="line">uid=777(BBB) gid=777(BBB) groups=777(BBB)</span><br></pre></td></tr></table></figure><p>user参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uid <span class="comment">#指定用户的 uid</span></span><br><span class="line">group <span class="comment">#指定用户组名称</span></span><br><span class="line">groups <span class="comment">#指定附加组名称</span></span><br><span class="line">password <span class="comment">#给用户添加密码</span></span><br><span class="line">shell <span class="comment">#指定用户登录 shell</span></span><br><span class="line">create_home <span class="comment">#是否创建家目录</span></span><br></pre></td></tr></table></figure><p>group参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name <span class="comment">#指定创建的组名</span></span><br><span class="line">gid <span class="comment">#指定组的 gid</span></span><br><span class="line">state</span><br><span class="line">absent <span class="comment">#移除远端主机的组</span></span><br><span class="line">present <span class="comment">#创建远端主机的组（默认）</span></span><br></pre></td></tr></table></figure><h3 id="4-9-yum"><a href="#4-9-yum" class="headerlink" title="4.9 yum"></a>4.9 yum</h3><p>yum安装ntpdate服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m yum -a "name=ntpdate state=installed"</span></span><br><span class="line">[root@backup ~]<span class="comment"># rpm -qa |grep ntpdate</span></span><br><span class="line">ntpdate-4.2.6p5-28.el7.centos.x86_64</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name       <span class="comment">#指定要安装的软件包名称</span></span><br><span class="line">state      <span class="comment">#指定使用 yum 的方法</span></span><br><span class="line">installed， present <span class="comment">#安装软件包</span></span><br><span class="line">removed， absent <span class="comment">#移除软件包</span></span><br><span class="line">latest     <span class="comment">#安装最新软件包</span></span><br></pre></td></tr></table></figure><h3 id="4-10-service"><a href="#4-10-service" class="headerlink" title="4.10 service"></a>4.10 service</h3><p>启动或关闭服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m  service -a "name=nfs state=restarted enabled=yes"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name <span class="comment"># 定义要启动服务的名称</span></span><br><span class="line">state <span class="comment"># 指定服务状态</span></span><br><span class="line">started <span class="comment">#启动服务</span></span><br><span class="line">stopped <span class="comment">#停止服务</span></span><br><span class="line">restarted <span class="comment">#重启服务</span></span><br><span class="line">reloaded <span class="comment">#重载服务</span></span><br><span class="line">enabled <span class="comment">#开机自启</span></span><br></pre></td></tr></table></figure><h3 id="4-11-mount"><a href="#4-11-mount" class="headerlink" title="4.11 mount"></a>4.11 mount</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=present"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=mounted"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=unmounted"</span></span><br><span class="line">ansible webservser -m mount -a <span class="string">"src=172.16.1.31:/data path=/data fstype=nfs opts=defaults</span></span><br><span class="line"><span class="string">state=absent"</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">present <span class="comment"># 开机挂载，仅将挂载配置写入/etc/fstab</span></span><br><span class="line">mounted <span class="comment"># 挂载设备，并将配置写入/etc/fstab</span></span><br><span class="line">unmounted <span class="comment"># 卸载设备，不会清除/etc/fstab 写入的配置</span></span><br><span class="line">absent <span class="comment"># 卸载设备，会清理/etc/fstab 写入的配置</span></span><br></pre></td></tr></table></figure><h3 id="4-12-unarchive-解压"><a href="#4-12-unarchive-解压" class="headerlink" title="4.12 unarchive 解压"></a>4.12 unarchive 解压</h3><p>1.解压远程服务器的压缩包到指定目录</p><p>远程backup服务器创建压缩包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd / &amp;&amp; tar zcf /root/sys.tar.gz etc/fstab etc/hosts</span></span><br><span class="line">[root@ssh-61 /]<span class="comment"># cd </span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r--  1 root root  561 Jul 24 01:24 sys.tar.gz</span><br></pre></td></tr></table></figure><p>ansible本地执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible backup -m unarchive -a "src=/root/sys.tar.gz dest=/tmp/ remote_src=yes"</span></span><br><span class="line">[root@backup /tmp/etc]<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 595 Jul 18 17:33 fstab</span><br><span class="line">-rw-r--r-- 1 root root 423 Jul 16 04:43 hosts</span><br></pre></td></tr></table></figure><p>2.把本地文件解压到目标机器指定目录<br>创建命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># cd / &amp;&amp; tar zcf /root/sys.tar.gz etc/fstab etc/hosts</span></span><br></pre></td></tr></table></figure><p>执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible nfs -m unarchive -a "src=/root/sys.tar.gz dest=/backup/"</span></span><br><span class="line">[root@nfs /backup]<span class="comment"># tree etc/</span></span><br><span class="line">etc/</span><br><span class="line">├── fstab</span><br><span class="line">└── hosts</span><br></pre></td></tr></table></figure><h3 id="4-13-archive-压缩"><a href="#4-13-archive-压缩" class="headerlink" title="4.13 archive 压缩"></a>4.13 archive 压缩</h3><p>压缩单个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible nfs -m archive -a "path=/root/1.txt dest=/tmp/1.tar.gz format=gz force_archive=true"</span></span><br><span class="line">[root@nfs /tmp]<span class="comment"># ll</span></span><br><span class="line">-rw-r--r--  1 root   root       56 Jul 24 01:51 1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="4-14-setup"><a href="#4-14-setup" class="headerlink" title="4.14 setup"></a>4.14 setup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ansible webserver -m setup</span></span><br></pre></td></tr></table></figure><h2 id="第5章-查看帮助"><a href="#第5章-查看帮助" class="headerlink" title="第5章 查看帮助"></a>第5章 查看帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l  <span class="comment">#查看所有模块说明信息</span></span><br><span class="line">ansible-doc copy  <span class="comment">#查看copy模块信息</span></span><br></pre></td></tr></table></figure><h2 id="第6章-ansible输出信息颜色解释"><a href="#第6章-ansible输出信息颜色解释" class="headerlink" title="第6章 ansible输出信息颜色解释"></a>第6章 ansible输出信息颜色解释</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01. 绿色信息:  查看主机信息/对主机未做改动</span><br><span class="line">02. 黄色信息:  对主机数据信息做了修改</span><br><span class="line">03. 红色信息:  命令执行出错了</span><br><span class="line">04. 粉色信息:  忠告信息</span><br><span class="line">05. 蓝色信息:  显示ansible命令执行的过程</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ansible" scheme="http://linuxwf.com/tags/ansible/"/>
    
  </entry>
  
  <entry>
    <title>5.SSH服务</title>
    <link href="http://linuxwf.com/2020/04/13/5-SSH%E6%9C%8D%E5%8A%A1/"/>
    <id>http://linuxwf.com/2020/04/13/5-SSH%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-04-13T04:19:00.000Z</published>
    <updated>2020-04-13T04:43:01.894Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="SSH服务"><a href="#SSH服务" class="headerlink" title="SSH服务"></a>SSH服务</h1><h2 id="第1章-什么是ssh"><a href="#第1章-什么是ssh" class="headerlink" title="第1章 什么是ssh"></a>第1章 什么是ssh</h2><p>`SSH 为 Secure Shell 的缩写，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。<br>SSH是标准的网络协议，可用于大多数UNIX操作系统，能够实现字符界面的远程登录管理，它默认使用22号端口，采用密文的形式在网络中传输数据，相对于通过明文传输的Telnet，具有更高的安全性。<br>SSH提供了口令和密钥两种用户验证方式，这两者都是通过密文传输数据的。</p><p>SSH与Telnet的区别：</p><p>SSH: 系统默认配置 22 默认可以使用root用户进行登录 数据信息进行加密<br>telnet：网络设备默认开启 23 默认只能使用普通用户进行登录 数据信息显示明文</p><p>SSH的作用</p><p>1）对用户身份信息进行认证</p><p>2）利用公钥和私钥对数据信息进行加密处理</p><h2 id="第2章-ssh服务登录验证"><a href="#第2章-ssh服务登录验证" class="headerlink" title="第2章 ssh服务登录验证"></a>第2章 ssh服务登录验证</h2><h3 id="2-1-ssh服务登录验证方式："><a href="#2-1-ssh服务登录验证方式：" class="headerlink" title="2.1. ssh服务登录验证方式："></a>2.1. ssh服务登录验证方式：</h3><ul><li>用户/口令</li><li>基于密钥对</li></ul><h3 id="2-2-基于用户和口令登录验证"><a href="#2-2-基于用户和口令登录验证" class="headerlink" title="2.2 基于用户和口令登录验证"></a>2.2 基于用户和口令登录验证</h3><ul><li>1、客户端发起ssh请求，服务器会把自己的公钥发送给用户</li><li>2、用户会根据服务器发来的公钥对密码进行加密</li><li>3、加密后的信息回传给服务器，服务器用自己的私钥解密，如果密码正确，则用户登录成功</li></ul><h3 id="2-3-基于密钥的登录方式"><a href="#2-3-基于密钥的登录方式" class="headerlink" title="2.3 基于密钥的登录方式"></a>2.3 基于密钥的登录方式</h3><p>基于密钥的登录方式</p><ul><li>1、首先在客户端生成一对密钥（ssh-keygen）</li><li>2、并将客户端的公钥ssh-copy-id 拷贝到服务端</li><li>3、当客户端再次发送一个连接请求，包括ip、用户名</li><li>4、服务端得到客户端的请求后，会到authorized_keys中查找，如果有响应的IP和用户，就会随机生成一个字符串，例如：acdf</li><li>5、服务端将使用客户端拷贝过来的公钥进行加密，然后发送给客户端</li><li>6、得到服务端发来的消息后，客户端会使用私钥进行解密，然后将解密后的字符串发送给服务端</li><li>7、服务端接收到客户端发来的字符串后，跟之前的字符串进行对比，如果一致，就允许免密码登录</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14248468-af025c4191bb5a68.webp.jpg"  alt=""></p><p>原理总结：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">01. 客户端 - 服务端   请求建立ssh远程连接 </span><br><span class="line">02. 服务端 - 客户端   请求确认公钥信息</span><br><span class="line">03. 客户端 - 服务端   确认接收公钥信息，保存~/.ssh/authorized_keys     文件中  </span><br><span class="line">04. 服务端 - 客户端   询问用户密码信息</span><br><span class="line">05. 客户端 - 服务端   用户密码信息</span><br><span class="line">06. 服务端 - 客户端   确认密码信息正确 远程连接建立</span><br><span class="line">01 之后：不用反复确认公钥信息</span><br><span class="line">06 之后：所有传输的数据信息会进行加密处理</span><br></pre></td></tr></table></figure><h2 id="第3章-基于密钥方式实现远程连接步骤"><a href="#第3章-基于密钥方式实现远程连接步骤" class="headerlink" title="第3章 基于密钥方式实现远程连接步骤"></a>第3章 基于密钥方式实现远程连接步骤</h2><h3 id="3-1-管理端服务器"><a href="#3-1-管理端服务器" class="headerlink" title="3.1 管理端服务器"></a>3.1 管理端服务器</h3><h4 id="3-1-1创建密钥对信息"><a href="#3-1-1创建密钥对信息" class="headerlink" title="3.1.1创建密钥对信息"></a>3.1.1创建密钥对信息</h4><p>第一种方式：默认参数，一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~/.ssh]<span class="comment"># ssh-keygen</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:x+Xoxb/z59g68vS2DwPieixVCC01yXc83aJ6p/pYR+Y root@ssh-61</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|         +o. . ..|</span></span><br><span class="line"><span class="string">|        o +.. = o|</span></span><br><span class="line"><span class="string">|         o o.o o |</span></span><br><span class="line"><span class="string">|         ..=o    |</span></span><br><span class="line"><span class="string">|        S =o= o  |</span></span><br><span class="line"><span class="string">|         +oo.*.  |</span></span><br><span class="line"><span class="string">|         oo..oE  |</span></span><br><span class="line"><span class="string">|        ..oooooBo|</span></span><br><span class="line"><span class="string">|        .ooo.o=OX|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><p>第二种方式：指定加密算法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-keygen -t dsa</span></span><br><span class="line">Generating public/private dsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_dsa): </span><br><span class="line">Created directory <span class="string">'/root/.ssh'</span>.</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_dsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_dsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:fW5GHPjirQZoiZhX1tXwnvwWxdjRWgFnsAiLTsyo1Is root@ssh-61</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[DSA 1024]----+</span></span><br><span class="line"><span class="string">|         ..o oo=o|</span></span><br><span class="line"><span class="string">|    . + . +oo +++|</span></span><br><span class="line"><span class="string">|   . o * o..o..o+|</span></span><br><span class="line"><span class="string">|  . o * .. = o.. |</span></span><br><span class="line"><span class="string">|   E = +S o O .  |</span></span><br><span class="line"><span class="string">|  o o + .. * . . |</span></span><br><span class="line"><span class="string">|   . .   .. = o  |</span></span><br><span class="line"><span class="string">|          .+ .   |</span></span><br><span class="line"><span class="string">|         ..      |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-分发公钥"><a href="#3-1-2-分发公钥" class="headerlink" title="3.1.2 分发公钥"></a>3.1.2 分发公钥</h4><p>第一种方式：默认参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id 172.16.1.41</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/root/.ssh/id_rsa.pub"</span></span><br><span class="line">The authenticity of host <span class="string">'172.16.1.41 (172.16.1.41)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:wpba7z96j3rm+efG7Ior294sbdQ/qlFFdt+/WNuH3N0.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:66:39:31:20:fc:85:40:2d:d2:83:9c:eb:0b:ca:d2:5b.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class="line"><span class="string">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class="line"><span class="string">root@172.16.1.41'</span>s password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">"ssh '172.16.1.41'"</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p>第二种方式：指定传输的公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.41</span></span><br></pre></td></tr></table></figure><h4 id="3-1-3-测试远程连接"><a href="#3-1-3-测试远程连接" class="headerlink" title="3.1.3 测试远程连接"></a>3.1.3 测试远程连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41</span></span><br><span class="line">Last login: Mon Jul 22 23:35:45 2019 from 10.0.1.1</span><br><span class="line">[root@backup ~]<span class="comment"># logout</span></span><br><span class="line">Connection to 172.16.1.41 closed.</span><br><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41 hostname</span></span><br><span class="line">backup</span><br></pre></td></tr></table></figure><h3 id="3-2-被管理服务器"><a href="#3-2-被管理服务器" class="headerlink" title="3.2 被管理服务器"></a>3.2 被管理服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~/.ssh]<span class="comment"># ll</span></span><br><span class="line">total 4</span><br><span class="line">-rw------- 1 root root 601 Jul 22 23:33 authorized_keys</span><br></pre></td></tr></table></figure><h2 id="第4章-免交互分发密钥"><a href="#第4章-免交互分发密钥" class="headerlink" title="第4章 免交互分发密钥"></a>第4章 免交互分发密钥</h2><p>当被管理服务器有多台时，如何批量进行分发密钥</p><p>如何解决面交互问题：</p><h4 id="1）首次连接提示yes-no"><a href="#1）首次连接提示yes-no" class="headerlink" title="1）首次连接提示yes/no"></a>1）首次连接提示yes/no</h4><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh-copy-id 10.0.1.31 -o StrictHostKeyChecking=no</span></span><br></pre></td></tr></table></figure><h4 id="2）首次连接需要输入密码确认"><a href="#2）首次连接需要输入密码确认" class="headerlink" title="2）首次连接需要输入密码确认"></a>2）首次连接需要输入密码确认</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># yum -y install sshpass  #安装sshpass服务</span></span><br><span class="line">[root@ssh-61 ~]<span class="comment"># sshpass -p123456 ssh-copy-id -i .ssh/id_dsa.pub 172.16.1.31 -o StrictHostKeyChecking=no</span></span><br></pre></td></tr></table></figure><h4 id="3）写成脚本"><a href="#3）写成脚本" class="headerlink" title="3）写成脚本"></a>3）写成脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> &#123;31,41&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  sshpass -p123456 ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.<span class="variable">$ip</span> -o StrictHostKeyChecking=no &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">"===============pub_key fenfa ok with 172.16.1.<span class="variable">$ip</span>========================="</span></span><br><span class="line">     ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> hostname</span><br><span class="line">     <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">"===============pub_key fenfa failed with 172.16.1.<span class="variable">$ip</span>========================="</span></span><br><span class="line">     <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">  <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="第5章-ssh安全优化"><a href="#第5章-ssh安全优化" class="headerlink" title="第5章 ssh安全优化"></a>第5章 ssh安全优化</h2><h3 id="5-1-windows："><a href="#5-1-windows：" class="headerlink" title="5.1 windows："></a>5.1 windows：</h3><p>1）xshell生成密钥对</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201033.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201119.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201149.png"  alt=""></p><p>2）将xshell公钥上传到管理机ssh-61</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.使用rz命令上传公钥文件到管理机ssh-61</span><br><span class="line">2.[root@ssh-61 ~/.ssh]<span class="comment"># mv id_dsa_1024.pub authorized_keys</span></span><br><span class="line">3.[root@ssh-61 ~/.ssh]<span class="comment"># chmod 600 authorized_keys #更改公钥权限</span></span><br><span class="line">4.[root@ssh-61 ~/.ssh]<span class="comment"># ll</span></span><br><span class="line">-rw------- 1 root root  588 Jul 22 16:14 authorized_keys</span><br></pre></td></tr></table></figure><p>xshell测试</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201342.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201408.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_201432.png"  alt=""></p><h3 id="5-2-管理机"><a href="#5-2-管理机" class="headerlink" title="5.2 管理机"></a>5.2 管理机</h3><p>1）更改ssh默认端口号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">Port 9999</span><br></pre></td></tr></table></figure><p>2）关闭用户名密码登陆方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>3）开启通过密钥对方式连接</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2019-07-30_210756.png"  alt=""></p><h3 id="5-3-被管理机"><a href="#5-3-被管理机" class="headerlink" title="5.3 被管理机"></a>5.3 被管理机</h3><p>1）更改ssh默认端口号</p><p>2）关闭用户名密码登录方式</p><p>3）开启通过密钥对方式连接</p><p>4）指定监听内网地址</p><p>更改ssh相关配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ssh/sshd_config </span></span><br><span class="line">17 Port 9999</span><br><span class="line">19 ListenAddress 172.16.1.41</span><br><span class="line">65 PasswordAuthentication no</span><br><span class="line">[root@ssh-61 ~]<span class="comment"># systemctl restart sshd</span></span><br></pre></td></tr></table></figure><p>管理机ssh登录被管理机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ssh-61 ~]<span class="comment"># ssh 172.16.1.41 -p9999</span></span><br></pre></td></tr></table></figure><h2 id="第6章-作业"><a href="#第6章-作业" class="headerlink" title="第6章 作业"></a>第6章 作业</h2><p>一个脚本完成以下所有任务：</p><ul><li>1.管理机自动创建密钥对</li><li>2.管理机自动将公钥发送到被管理机</li><li>3.修改被管理机的SSH连接端口为9999</li><li>4.修改被管理机的SSH监听地址为172.16.1.X</li><li>5.修改被管理机不允许使用账号密码方式登陆，只允许使用密钥方式连接</li><li>6.修改完之后验证是否生效，验证方法为使用9999端口连接被管理机并打印出主机  信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ -f /root/.ssh/id_dsa ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"密钥已存在,将发送现有文件"</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    ssh-keygen -t dsa -P <span class="string">""</span> -f /root/.ssh/id_dsa &amp;&amp; <span class="built_in">echo</span> <span class="string">"密钥生成成功"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> &#123;31,41&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    sshpass -p123456 ssh-copy-id -i /root/.ssh/id_dsa.pub 172.16.1.<span class="variable">$&#123;ip&#125;</span> -o StrictHostKeyChecking=no &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    <span class="keyword">if</span> [ $?==0 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> key sent successful"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's/#Port 22/Port 9999/g' /etc/ssh/sshd_config &amp;&amp; echo 'port ok'"</span></span><br><span class="line">        ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 172.16.1.<span class="variable">$&#123;ip&#125;</span>/g' /etc/ssh/sshd_config &amp;&amp; echo 'ListenAddress ok'"</span></span><br><span class="line">ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"sed -i 's#^PasswordAuthentication yes#PasswordAuthentication no#g' /etc/ssh/sshd_config &amp;&amp; echo 'Password ok'"</span></span><br><span class="line">ssh 172.16.1.<span class="variable">$&#123;ip&#125;</span> <span class="string">"systemctl restart sshd"</span></span><br><span class="line">sleep 3</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"------------------"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> hostname is :<span class="variable">$(ssh -p 9999 172.16.1.$&#123;ip&#125; hostname)</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"------------------"</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.16.1.<span class="variable">$&#123;ip&#125;</span> key sent faild"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="ssh" scheme="http://linuxwf.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>4.NFS服务实时备份</title>
    <link href="http://linuxwf.com/2020/04/13/4-NFS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E5%A4%87%E4%BB%BD/"/>
    <id>http://linuxwf.com/2020/04/13/4-NFS%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%97%B6%E5%A4%87%E4%BB%BD/</id>
    <published>2020-04-13T04:14:00.000Z</published>
    <updated>2020-04-13T04:23:03.328Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="NFS服务实时备份"><a href="#NFS服务实时备份" class="headerlink" title="NFS服务实时备份"></a>NFS服务实时备份</h1><h2 id="第一章-NFS单点问题"><a href="#第一章-NFS单点问题" class="headerlink" title="第一章 NFS单点问题"></a>第一章 NFS单点问题</h2><h3 id="1-为什么需要解决NFS单点问题"><a href="#1-为什么需要解决NFS单点问题" class="headerlink" title="1.为什么需要解决NFS单点问题"></a>1.为什么需要解决NFS单点问题</h3><p>只有一个NFS服务器时，当出现故障时，数据没办法再实现共享，既不安全也不稳定</p><h3 id="2-解决思路"><a href="#2-解决思路" class="headerlink" title="2. 解决思路"></a>2. 解决思路</h3><p>1).监控文件是否发生变化</p><p>2)如果发生变化,就通过rsync传输到备份服务器,并且数据保持完全一致</p><p>3)备份服务器也需要提供NFS服务,以便NFS服务器故障的时候可以顶替,继续提供NFS服务</p><p>4)假如发生了故障,客户端需要先卸载原有已经挂载的目录,然后重新挂载到备份服务器的NFS共享目录</p><h3 id="3-需要用到的软件"><a href="#3-需要用到的软件" class="headerlink" title="3. 需要用到的软件"></a>3. 需要用到的软件</h3><p>1).监控文件是否发生变化    inotify-tools</p><p>2).实时备份  rsync+inotify-tools / sersync / lsyncd</p><p>3).提供NFS服务  NFS+RPC</p><h3 id="4-环境准备"><a href="#4-环境准备" class="headerlink" title="4. 环境准备"></a>4. 环境准备</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><h2 id="第二章-Inotify简介"><a href="#第二章-Inotify简介" class="headerlink" title="第二章 Inotify简介"></a>第二章 Inotify简介</h2><p>Inotify是一种强大的,细粒度的,异步的文件系统事件监视机制,Linux2.6.13起加入了inotify支持,通过inotify可以监控文件系统中添加,删除,修改,移动等各种事件,利用这个内核接口,第三方软件就可以监控文件系统下文件的各种变化情况,而inotify-tools正是实施这样监控的软件,另外一个这样效果的软件是中国人周洋在金山公司开发的sersync,还有一个配置更简单的软件叫lsyncd</p><h3 id="2-1-查看系统内核"><a href="#2-1-查看系统内核" class="headerlink" title="2.1 查看系统内核"></a>2.1 查看系统内核</h3><p>查看当前系统内核是否支持inotify</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br></pre></td></tr></table></figure><h3 id="2-2-安装Inotify"><a href="#2-2-安装Inotify" class="headerlink" title="2.2 安装Inotify"></a>2.2 安装Inotify</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum search inotify  #查找inotify包名</span></span><br><span class="line">[root@nfs ~]<span class="comment"># yum -y install inotify-tools</span></span><br></pre></td></tr></table></figure><h3 id="2-3-关键参数说明"><a href="#2-3-关键参数说明" class="headerlink" title="2.3 关键参数说明:"></a>2.3 关键参数说明:</h3><p>1)在/proc/sys/fs/inotify目录下有三个文件,对inotify机制有一定限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># ls -l /proc/sys/fs/inotify/</span></span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 11:37 max_queued_events</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 09:52 max_user_instances</span><br><span class="line">-rw-r--r-- 1 root root 0 Jul 19 11:37 max_user_watches</span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line">max_queued_events   =====&gt;设置inotify设置inotify实例事件(event)队列可容纳的事件数量</span><br><span class="line">max_user_instances  =====&gt;设置每个用户可以运行的inotify或者inotifywatch命令的进程数</span><br><span class="line">max_user_watches    =====&gt;设置inotifywait或者inotifywatch命令可以监视的文件数量(单进程)</span><br></pre></td></tr></table></figure><h3 id="2-4-inotifywait详细参数"><a href="#2-4-inotifywait详细参数" class="headerlink" title="2.4 inotifywait详细参数"></a>2.4 inotifywait详细参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># inotifywait --help</span></span><br><span class="line">inotifywait 3.14</span><br><span class="line">Wait <span class="keyword">for</span> a particular event on a file or <span class="built_in">set</span> of files.</span><br><span class="line">Usage: inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]</span><br><span class="line">Options:</span><br><span class="line">    -h|--<span class="built_in">help</span>       Show this <span class="built_in">help</span> text.</span><br><span class="line">    @&lt;file&gt;         Exclude the specified file from being watched.</span><br><span class="line">    --exclude &lt;pattern&gt;</span><br><span class="line">                    Exclude all events on files matching the</span><br><span class="line">                    extended regular expression &lt;pattern&gt;.</span><br><span class="line">    --excludei &lt;pattern&gt;</span><br><span class="line">                    Like --exclude but <span class="keyword">case</span> insensitive.</span><br><span class="line">                    <span class="comment">###排除文件或目录,不区分大小写</span></span><br><span class="line">    -m|--monitor    Keep listening <span class="keyword">for</span> events forever.  Without</span><br><span class="line">                    this option, inotifywait will <span class="built_in">exit</span> after one</span><br><span class="line">                    event is received.</span><br><span class="line">    -d|--daemon     Same as --monitor, except run <span class="keyword">in</span> the background</span><br><span class="line">                    logging events to a file specified by --outfile.</span><br><span class="line">                    Implies --syslog.</span><br><span class="line">    -r|--recursive  Watch directories recursively. </span><br><span class="line">    <span class="comment">###递归查询目录</span></span><br><span class="line">    --fromfile &lt;file&gt;</span><br><span class="line">                    Read files to watch from &lt;file&gt; or `-<span class="string">' for stdin.</span></span><br><span class="line"><span class="string">    -o|--outfile &lt;file&gt;</span></span><br><span class="line"><span class="string">                    Print events to &lt;file&gt; rather than stdout.</span></span><br><span class="line"><span class="string">    -s|--syslog     Send errors to syslog rather than stderr.</span></span><br><span class="line"><span class="string">    -q|--quiet      Print less (only print events). </span></span><br><span class="line"><span class="string">    ###打印很少的信息,仅仅打印监控事件的信息,安静的</span></span><br><span class="line"><span class="string">    -qq             Print nothing (not even events).</span></span><br><span class="line"><span class="string">    --format &lt;fmt&gt;  Print using a specified printf-like format ###打印指定输出类似格式字符串</span></span><br><span class="line"><span class="string">                    string; read the man page for more details.</span></span><br><span class="line"><span class="string">    --timefmt &lt;fmt&gt; strftime-compatible format string for use with</span></span><br><span class="line"><span class="string">                    %T in --format string.  ###指定时间输出的格式</span></span><br><span class="line"><span class="string">    -c|--csv        Print events in CSV format.</span></span><br><span class="line"><span class="string">    -t|--timeout &lt;seconds&gt;</span></span><br><span class="line"><span class="string">                    When listening for a single event, time out after</span></span><br><span class="line"><span class="string">                    waiting for an event for &lt;seconds&gt; seconds.</span></span><br><span class="line"><span class="string">                    If &lt;seconds&gt; is 0, inotifywait will never time out.</span></span><br><span class="line"><span class="string">    -e|--event &lt;event1&gt; [ -e|--event &lt;event2&gt; ... ]</span></span><br><span class="line"><span class="string">        Listen for specific event(s).  If omitted, all events are </span></span><br><span class="line"><span class="string">        listened for. ###通过次参数可以指定需要监控的事件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Exit status:</span></span><br><span class="line"><span class="string">    0  -  An event you asked to watch for was received.</span></span><br><span class="line"><span class="string">    1  -  An event you did not ask to watch for was received</span></span><br><span class="line"><span class="string">          (usually delete_self or unmount), or some error occurred.</span></span><br><span class="line"><span class="string">    2  -  The --timeout option was given and no events occurred</span></span><br><span class="line"><span class="string">          in the specified interval of time.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Events:</span></span><br><span class="line"><span class="string">    access      file or directory contents were read </span></span><br><span class="line"><span class="string">    ###文件或目录被读取</span></span><br><span class="line"><span class="string">    modify      file or directory contents were written </span></span><br><span class="line"><span class="string">    ###文件或目录被修改</span></span><br><span class="line"><span class="string">    attrib      file or directory attributes changed </span></span><br><span class="line"><span class="string">    ###文件或目录属性被改变</span></span><br><span class="line"><span class="string">    close_write file or directory closed, after being opened in </span></span><br><span class="line"><span class="string">                writeable mode ###文件或目录封闭,无论读/写模式</span></span><br><span class="line"><span class="string">    close_nowrite   file or directory closed, after being opened in</span></span><br><span class="line"><span class="string">                read-only mode</span></span><br><span class="line"><span class="string">    close       file or directory closed, regardless of read/write mode</span></span><br><span class="line"><span class="string">    open        file or directory opened ###文件目录被打开</span></span><br><span class="line"><span class="string">    moved_to    file or directory moved to watched directory ###文件或目录被移动到另一个目录</span></span><br><span class="line"><span class="string">    moved_from  file or directory moved from watched directory</span></span><br><span class="line"><span class="string">    move        file or directory moved to or from watched directory</span></span><br><span class="line"><span class="string">    create      file or directory created within watched directory ###文件或目录被创建在当前目录</span></span><br><span class="line"><span class="string">    delete      file or directory deleted within watched directory ###文件或目录被删除</span></span><br><span class="line"><span class="string">    delete_self file or directory was deleted</span></span><br><span class="line"><span class="string">    unmount     file system containing file or directory unmounted ###文件系统被卸载</span></span><br></pre></td></tr></table></figure><h3 id="2-5-参数说明"><a href="#2-5-参数说明" class="headerlink" title="2.5 参数说明"></a>2.5 参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">inotifywait参数说明</span><br><span class="line">参数名称            参数说明</span><br><span class="line">-m ,-monitor       始终保持事件监听状态</span><br><span class="line">-r,-recursive      递归查询目录</span><br><span class="line">-q,-quiet          只打印监控事件的信息</span><br><span class="line">-exclude           排除文件或目录时,不区分大小写</span><br><span class="line">-t,-timeout        超时时间</span><br><span class="line">-timefmt           指定时间输出格式</span><br><span class="line">-format            指定时间输出格式</span><br><span class="line">-e,event           后面指定增,删,改等事件</span><br><span class="line">inotifywait events 事件说明</span><br><span class="line">access             读取文件或目录内容</span><br><span class="line">modify             修改文件或目录内容</span><br><span class="line">attrib             文件或目录的属性改变</span><br><span class="line">close_write        修改真实文件内容</span><br><span class="line">close_nowrite   </span><br><span class="line">close   </span><br><span class="line">open               文件或目录被打开</span><br><span class="line">moved_to           文件或目录移动到</span><br><span class="line">moved_from         文件或目录从...移动到</span><br><span class="line">move               移动文件或目录移动到监视目录</span><br><span class="line">create             在监视目录下创建文件或目录</span><br><span class="line">delete             删除监视目录下的文件或目录</span><br><span class="line">delete_self </span><br><span class="line">umount             卸载文件系统</span><br></pre></td></tr></table></figure><h3 id="2-6-查看inotify默认参数"><a href="#2-6-查看inotify默认参数" class="headerlink" title="2.6 查看inotify默认参数"></a>2.6 查看inotify默认参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># sysctl -a|grep max_queued_events</span></span><br><span class="line">fs.inotify.max_queued_events = 327679</span><br><span class="line">[root@nfs ~]<span class="comment"># sysctl -a |egrep max_user_watches</span></span><br><span class="line">fs.epoll.max_user_watches = 412098</span><br><span class="line">fs.inotify.max_user_watches = 50000000</span><br><span class="line">[root@nfs ~]<span class="comment"># sysctl -a |egrep max_user_instances</span></span><br><span class="line">fs.inotify.max_user_instances = 128</span><br></pre></td></tr></table></figure><h3 id="2-7-测试"><a href="#2-7-测试" class="headerlink" title="2.7 测试"></a>2.7 测试</h3><p>测试inotify-tools监控文件发生变化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --timefmt <span class="string">'%d/%m/%y %H:%M'</span> --format <span class="string">'%T %w%f'</span> -e delete,create /backup</span><br><span class="line">inotifywait -mrq --timefmt <span class="string">'%d/%m/%y %H:%M'</span> --format <span class="string">'%T %w%f'</span> -e close_write /backup</span><br></pre></td></tr></table></figure><p>监控脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat inotify_push.sh </span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">Path=/data</span><br><span class="line">backup_Server=172.16.1.41</span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line"></span><br><span class="line">/usr/bin/inotifywait -mrq --format <span class="string">'%w%f'</span> -e create,close_write,delete /data | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;line&#125;</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$line</span> ];<span class="keyword">then</span></span><br><span class="line">    rsync -azvP <span class="variable">$line</span> --delete rsync_backup@<span class="variable">$backup_Server</span>::data</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$Path</span> &amp;&amp;\</span><br><span class="line">    rsync -azvP ./ --delete rsync_backup@<span class="variable">$backup_Server</span>::data</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="2-8-inotify优缺点"><a href="#2-8-inotify优缺点" class="headerlink" title="2.8 inotify优缺点"></a>2.8 inotify优缺点</h3><p>inotify优点<br>1)监控文件系统事件变化,通过同步工具实现实时数据同步<br>inotify缺点<br>1)并发如果大于200个文(10-100k),同步就会由延迟<br>2)我们前面的脚本,每次都是全部推送一次,但是确实是增量的,也可以只同步变化的文件<br>3)监控到事件后,调用rsync同步是单进程(加&amp;并发)sersync多进程同步<br>既然有了inotify-tools,为什么还需要sersync呢?</p><p>sersync功能多:(inotify+rsync命令)</p><p>1)支持通过配置文件管理<br>2)真正的守护进程socket<br>3)可以对失败文件定时重传(定时任务功能)<br>4)第三方的HTTP接口(例如:更新cdn缓存)<br>5)默认多线程rsync同步</p><h2 id="第三章sersync安装部署"><a href="#第三章sersync安装部署" class="headerlink" title="第三章sersync安装部署"></a>第三章sersync安装部署</h2><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><h3 id="3-1-下载sersync"><a href="#3-1-下载sersync" class="headerlink" title="3.1 下载sersync"></a>3.1 下载sersync</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># wget https://github.com/wsgzao/sersync/blob/master/sersync2.5.4_64bit_binary_stable_final.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="3-2-解压"><a href="#3-2-解压" class="headerlink" title="3.2 解压"></a>3.2 解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt]<span class="comment"># tree server/</span></span><br><span class="line">server/</span><br><span class="line">├── confxml.xml</span><br><span class="line">├── confxml.xml.bak</span><br><span class="line">└── sersync2</span><br></pre></td></tr></table></figure><h3 id="3-3修改配置文件"><a href="#3-3修改配置文件" class="headerlink" title="3.3修改配置文件"></a>3.3修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;sersync&gt;</span><br><span class="line">   24&lt;localpath watch=<span class="string">"/data"</span>&gt;</span><br><span class="line">   25    &lt;remote ip=<span class="string">"172.16.1.42"</span> name=<span class="string">"/data"</span>/&gt;</span><br><span class="line">   26    &lt;!--&lt;remote ip=<span class="string">"192.168.8.39"</span> name=<span class="string">"tongbu"</span>/&gt;--&gt;</span><br><span class="line">   27    &lt;!--&lt;remote ip=<span class="string">"192.168.8.40"</span> name=<span class="string">"tongbu"</span>/&gt;--&gt;</span><br><span class="line">   28&lt;/localpath&gt;</span><br><span class="line">   29&lt;rsync&gt;</span><br><span class="line">   30    &lt;commonParams params=<span class="string">"-az"</span>/&gt;</span><br><span class="line">   31    &lt;auth start=<span class="string">"true"</span> users=<span class="string">"rsynd_backup"</span> passwordfile=<span class="string">"/etc/rsyncd.conf"</span>/&gt;</span><br><span class="line">   32    &lt;userDefinedPort start=<span class="string">"false"</span> port=<span class="string">"874"</span>/&gt;&lt;!-- port=874 --&gt;</span><br><span class="line">   33    &lt;timeout start=<span class="string">"true"</span> time=<span class="string">"100"</span>/&gt;&lt;!-- timeout=100 --&gt;</span><br><span class="line">   34    &lt;ssh start=<span class="string">"false"</span>/&gt;</span><br><span class="line">   35&lt;/rsync&gt;</span><br><span class="line">   36&lt;failLog path=<span class="string">"/tmp/rsync_fail_log.sh"</span> timeToExecute=<span class="string">"60"</span>/&gt;&lt;!--default every 60mins execute once--&gt;</span><br><span class="line">   37&lt;crontab start=<span class="string">"false"</span> schedule=<span class="string">"600"</span>&gt;&lt;!--600mins--&gt;</span><br><span class="line">   38    &lt;crontabfilter start=<span class="string">"false"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="3-4-查看帮助说明"><a href="#3-4-查看帮助说明" class="headerlink" title="3.4 查看帮助说明"></a>3.4 查看帮助说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt/server]<span class="comment">#  ./sersync2 -h</span></span><br><span class="line"><span class="built_in">set</span> the system param</span><br><span class="line">execute：<span class="built_in">echo</span> 50000000 &gt; /proc/sys/fs/inotify/max_user_watches</span><br><span class="line">execute：<span class="built_in">echo</span> 327679 &gt; /proc/sys/fs/inotify/max_queued_events</span><br><span class="line">parse the <span class="built_in">command</span> param</span><br><span class="line">_______________________________________________________</span><br><span class="line">参数-d:启用守护进程模式</span><br><span class="line">参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍</span><br><span class="line">c参数-n: 指定开启守护线程的数量，默认为10个</span><br><span class="line">参数-o:指定配置文件，默认使用confxml.xml文件</span><br><span class="line">参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m socket 开启socket模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m http 开启http模块</span><br><span class="line">不加-m参数，则默认执行同步程序</span><br></pre></td></tr></table></figure><h3 id="3-5-启动服务"><a href="#3-5-启动服务" class="headerlink" title="3.5 启动服务"></a>3.5 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /opt/server]<span class="comment"># ./sersync2 -n 20 -dro confxml.xml</span></span><br><span class="line"><span class="built_in">set</span> the system param</span><br><span class="line">execute：<span class="built_in">echo</span> 50000000 &gt; /proc/sys/fs/inotify/max_user_watches</span><br><span class="line">execute：<span class="built_in">echo</span> 327679 &gt; /proc/sys/fs/inotify/max_queued_events</span><br><span class="line">parse the <span class="built_in">command</span> param</span><br><span class="line">option: -n thread num is：  20</span><br><span class="line">option: -d run as a daemon</span><br><span class="line">option: -r rsync all the <span class="built_in">local</span> files to the remote servers before the sersync work</span><br><span class="line">option: -o config xml name：  confxml.xml</span><br><span class="line">parse xml config file</span><br><span class="line">host ip : localhosthost port: 8008</span><br><span class="line">daemon start，sersync run behind the console </span><br><span class="line">use rsync password-file :</span><br><span class="line">user isrsynd_backup</span><br><span class="line">passwordfile is /etc/rsyncd.conf</span><br><span class="line">config xml parse success</span><br><span class="line">please <span class="built_in">set</span> /etc/rsyncd.conf max connections=0 Manually</span><br><span class="line">sersync working thread 22  = 1(primary thread) + 1(fail retry thread) + 20(daemon sub threads) </span><br><span class="line">Max threads numbers is: 42 = 22(Thread pool nums) + 20(Sub threads)</span><br><span class="line">please according your cpu ，use -n param to adjust the cpu rate</span><br><span class="line">------------------------------------------</span><br><span class="line">rsync the directory recursivly to the remote servers once</span><br><span class="line">working please <span class="built_in">wait</span>...</span><br><span class="line">execute <span class="built_in">command</span>: <span class="built_in">cd</span> /data &amp;&amp; rsync -az -R --delete ./  --timeout=100 rsynd_backup@172.16.1.42::/data --password-file=/etc/rsyncd.conf &gt;/dev/null 2&gt;&amp;1 </span><br><span class="line">run the sersync: </span><br><span class="line">watch path is: /data</span><br></pre></td></tr></table></figure><h3 id="3-6-测试数据同步传输"><a href="#3-6-测试数据同步传输" class="headerlink" title="3.6 测试数据同步传输"></a>3.6 测试数据同步传输</h3><p>nfs服务器生成数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@nfs /data]<span class="comment"># for i in &#123;1..1000&#125;;do echo "$&#123;i&#125;"; echo "$&#123;i&#125;" &gt; $&#123;i&#125;.txt;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><p>backup备份服务器查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@backup /data]<span class="comment"># while true ;do ls |wc -l;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><h2 id="第四章-lsyncd-服务"><a href="#第四章-lsyncd-服务" class="headerlink" title="第四章 lsyncd 服务"></a>第四章 lsyncd 服务</h2><p>官网地址：<a href="https://github.com/axkibe/lsyncd" target="_blank" rel="noopener">https://github.com/axkibe/lsyncd</a></p><p>Lysncd 实际上是lua语言封装了 inotify 和 rsync 工具，采用了 Linux 内核（2.6.13 及以后）里的 inotify 触发机制，然后通过rsync去差异同步，达到实时的效果。我认为它最令人称道的特性是，完美解决了 <code>inotify + rsync</code>海量文件同步带来的文件频繁发送文件列表的问题 —— 通过时间延迟或累计触发事件次数实现。另外，它的配置方式很简单，lua本身就是一种配置语言，可读性非常强。lsyncd也有多种工作模式可以选择，本地目录cp，本地目录rsync，远程目录rsyncssh。实现简单高效的本地目录同步备份（网络存储挂载也当作本地目录），一个命令搞定。</p><h3 id="4-1-安装lsyncd"><a href="#4-1-安装lsyncd" class="headerlink" title="4.1 安装lsyncd"></a>4.1 安装lsyncd</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>172.16.1.31</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS备份服务器（backup-server）</td><td>172.16.1.41</td></tr></tbody></table><p>查看包名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum provides lsyncd</span></span><br><span class="line">lsyncd-2.2.2-1.el7.x86_64 : File change monitoring and synchronization daemon</span><br><span class="line">Repo        : epel</span><br></pre></td></tr></table></figure><p>安装lsyncd服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># yum -y install lsyncd</span></span><br></pre></td></tr></table></figure><h3 id="4-2-创建配置文件"><a href="#4-2-创建配置文件" class="headerlink" title="4.2 创建配置文件"></a>4.2 创建配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># rpm -qc lsyncd</span></span><br><span class="line">/etc/lsyncd.conf</span><br><span class="line">[root@nfs /data]<span class="comment"># cat /etc/lsyncd.conf</span></span><br><span class="line">settings &#123;</span><br><span class="line">  logfile = <span class="string">"/var/log/lsyncd/lsyncd.log"</span>,</span><br><span class="line">  statusFile = <span class="string">"/var/log/lsyncd/lsyncd.status"</span>,</span><br><span class="line">  inotifyMode = <span class="string">"CloseWrite"</span>,</span><br><span class="line">  maxProcesses = 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/data"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::data"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  <span class="built_in">source</span> = <span class="string">"/backup"</span>,</span><br><span class="line">  target = <span class="string">"rsync_backup@172.16.1.41::backup"</span>,</span><br><span class="line">  delete= <span class="literal">true</span>,</span><br><span class="line">  exclude = &#123; <span class="string">".*"</span> &#125;,</span><br><span class="line">  delay = 1,</span><br><span class="line">  rsync = &#123;</span><br><span class="line">    binary = <span class="string">"/usr/bin/rsync"</span>,</span><br><span class="line">    archive = <span class="literal">true</span>,</span><br><span class="line">    compress = <span class="literal">true</span>,</span><br><span class="line">    verbose = <span class="literal">true</span>,</span><br><span class="line">    password_file = <span class="string">"/etc/rsync.passwd"</span>,</span><br><span class="line">    _extra = &#123;<span class="string">"--bwlimit=200"</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-配置文件说明"><a href="#4-3-配置文件说明" class="headerlink" title="4.3 配置文件说明"></a>4.3 配置文件说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">settings</span><br><span class="line"></span><br><span class="line">里面是全局设置，--开头表示注释，下面是几个常用选项说明：</span><br><span class="line"></span><br><span class="line">logfile <span class="comment">#定义日志文件</span></span><br><span class="line">stausFile <span class="comment">#定义状态文件</span></span><br><span class="line">nodaemon=<span class="literal">true</span> <span class="comment">#表示不启用守护模式，默认</span></span><br><span class="line">statusInterval <span class="comment">#将lsyncd的状态写入上面的statusFile的间隔，默认10秒</span></span><br><span class="line">inotifyMode <span class="comment">#指定inotify监控的事件，默认是CloseWrite，还可以是Modify或CloseWrite or Modify</span></span><br><span class="line">maxProcesses <span class="comment">#同步进程的最大个数。假如同时有20个文件需要同步，而maxProcesses = 8，则最大能看到有8个rysnc进程</span></span><br><span class="line">maxDelays <span class="comment">#累计到多少所监控的事件激活一次同步，即使后面的delay延迟时间还未到</span></span><br><span class="line">sync</span><br><span class="line"></span><br><span class="line">里面是定义同步参数，可以继续使用maxDelays来重写settings的全局变量。一般第一个参数指定lsyncd以什么模式运行：rsync、rsyncssh、direct三种模式：</span><br><span class="line"></span><br><span class="line">default.rsync <span class="comment">#本地目录间同步，使用rsync，也可以达到使用ssh形式的远程rsync效果，或daemon方式连接远程rsyncd进程；</span></span><br><span class="line">default.direct <span class="comment">#本地目录间同步，使用cp、rm等命令完成差异文件备份；</span></span><br><span class="line">default.rsyncssh <span class="comment">#同步到远程主机目录，rsync的ssh模式，需要使用key来认证</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> 同步的源目录，使用绝对路径。</span><br><span class="line"></span><br><span class="line">target 定义目的地址.对应不同的模式有几种写法：</span><br><span class="line">/tmp/dest <span class="comment">#本地目录同步，可用于direct和rsync模式</span></span><br><span class="line">172.16.1.41:/data <span class="comment">#同步到远程服务器目录，可用于rsync和rsyncssh模式，拼接的命令类似于/usr/bin/rsync -ltsd --delete --include-from=- --exclude=* SOURCE TARGET，剩下的就是rsync的内容了，比如指定username，免密码同步</span></span><br><span class="line">172.16.1.41::data <span class="comment">#同步到远程服务器目录，用于rsync模式</span></span><br><span class="line">三种模式的示例会在后面给出。</span><br><span class="line"></span><br><span class="line">init 这是一个优化选项，当init = <span class="literal">false</span>，只同步进程启动以后发生改动事件的文件，原有的目录即使有差异也不会同步。默认是<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">delay 累计事件，等待rsync同步延时时间，默认15秒（最大累计到1000个不可合并的事件）。也就是15s内监控目录下发生的改动，会累积到一次rsync同步，避免过于频繁的同步。（可合并的意思是，15s内两次修改了同一文件，最后只同步最新的文件）</span><br><span class="line"></span><br><span class="line">excludeFrom 排除选项，后面指定排除的列表文件，如excludeFrom = <span class="string">"/etc/lsyncd.exclude"</span>，如果是简单的排除，可以使用exclude = LIST。</span><br><span class="line">这里的排除规则写法与原生rsync有点不同，更为简单：</span><br><span class="line">监控路径里的任何部分匹配到一个文本，都会被排除，例如/bin/foo/bar可以匹配规则foo</span><br><span class="line">如果规则以斜线/开头，则从头开始要匹配全部</span><br><span class="line">如果规则以/结尾，则要匹配监控路径的末尾</span><br><span class="line">?匹配任何字符，但不包括/</span><br><span class="line">*匹配0或多个字符，但不包括/</span><br><span class="line">**匹配0或多个字符，可以是/</span><br><span class="line">delete 为了保持target与souce完全同步，Lsyncd默认会delete = <span class="literal">true</span>来允许同步删除。它除了<span class="literal">false</span>，还有startup、running值，请参考 Lsyncd 2.1.x ‖ Layer 4 Config ‖ Default Behavior。</span><br></pre></td></tr></table></figure><h3 id="4-4-启动服务"><a href="#4-4-启动服务" class="headerlink" title="4.4 启动服务"></a>4.4 启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]<span class="comment"># systemctl start lsyncd.service</span></span><br><span class="line">[root@nfs ~]<span class="comment"># systemctl status lsyncd.service</span></span><br></pre></td></tr></table></figure><h3 id="4-5-查看日志"><a href="#4-5-查看日志" class="headerlink" title="4.5 查看日志"></a>4.5 查看日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># tail -f /var/log/lsyncd/lsyncd.log </span></span><br><span class="line">[root@nfs /data]<span class="comment"># tail -f /var/log/lsyncd/lsyncd.status</span></span><br></pre></td></tr></table></figure><h3 id="4-6-测试数据"><a href="#4-6-测试数据" class="headerlink" title="4.6 测试数据"></a>4.6 测试数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># for i in &#123;1..1000&#125;;do echo "$&#123;i&#125;"; echo "$&#123;i&#125;" &gt; $&#123;i&#125;.txt;sleep 0.1;done</span></span><br></pre></td></tr></table></figure><p>backup备份服务器查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]<span class="comment"># cd /data</span></span><br><span class="line">[root@backup /data]<span class="comment"># while true ;do ls |wc -l;sleep 0.1;done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nfs" scheme="http://linuxwf.com/tags/nfs/"/>
    
      <category term="backup" scheme="http://linuxwf.com/tags/backup/"/>
    
      <category term="lsyncd" scheme="http://linuxwf.com/tags/lsyncd/"/>
    
  </entry>
  
  <entry>
    <title>3.NFS文件系统</title>
    <link href="http://linuxwf.com/2020/04/13/3-NFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>http://linuxwf.com/2020/04/13/3-NFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-04-13T04:10:00.000Z</published>
    <updated>2020-04-13T04:13:17.796Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="NFS文件系统"><a href="#NFS文件系统" class="headerlink" title="NFS文件系统"></a>NFS文件系统</h1><h2 id="第1章-NFS简介"><a href="#第1章-NFS简介" class="headerlink" title="第1章 NFS简介"></a>第1章 NFS简介</h2><p><code>NFS</code> 是Network File System的缩写，中文称为网络文件系统，它的主要功能是通过网络（一个局域网）让不同的主机系统之间可以共享文件或目录，NFS的客户端（一般为应用服务器，例如web）可以通过挂载（mount）的方式将NFS服务器共享的数据目录挂载到NFS客户端本地系统中（就是某一个关在点下），从客户端本地看，NFS服务器端共享目录就好像是客户端自己的磁盘分区或者目录一样，而实际上却是远端的NFS服务器的目录。<br>NFS网络文件系统很像Windows系统的网络共享、安全功能、网络驱动器映射，这也和linux的samba服务类似，只不过一般情况下，Windows网络共享服务或samba服务用户办公局域网共享，而互联网中小型网站集群架构后端常用NFS进行数据共享，若是大型网站，那么有可能还会用到更复杂的分布式文件系统FastDFS,glusterfs,HDFS</p><p>缺点：</p><p>1：nfs属于本地文件系统，在高并发场景和大存储量下，需要使用分布式存储FastDFS,glusterfs,HDFS等。</p><p>2：客户端的数据都是通过明文传送。客户端没有用户认证机制，安全性能一般，所以建议一般在局域网内使用。</p><p>3：容易发生单点故障，即server服务器宕机所有的客户端都不能访问。</p><h3 id="1-1-NFS应用场景"><a href="#1-1-NFS应用场景" class="headerlink" title="1.1 NFS应用场景"></a>1.1 NFS应用场景</h3><p>使用场景：web集群中NFS服务器主要用于存储用户上传的信息，方便集群中机器获取用户数据。如图片 附件 头像 视频 音频。</p><p>下面我将通过图解给大家展示集群需要共享存储服务的理由。</p><p> 1.A 用户上传图片经过负载均衡，负载均衡将上传请求调度至 WEB1 服务器上。</p><p> 2.B 用户访问 A 用户上传的图片，此时 B 用户被负载均衡调度至 WEB2 上，因为 WEB2 上没有这张图片，所以 B用户无法看到 A 用户传的图片</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.webp.jpg"  alt=""></p><p>如果有共享存储的情况</p><p>1.A 用户上传图片无论被负载均衡调度至 WEB1 还是 WEB2, 最终数据都被写入至共享存储</p><p>2.B 用户访问 A 用户上传图片时，无论调度至 WEB1 还是 WEB2，最终都会上共享存储访问对应的文件，这样就可以访问到资源了</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.webp.jpg"  alt=""></p><h3 id="1-2-nfs存储工作原理实现"><a href="#1-2-nfs存储工作原理实现" class="headerlink" title="1.2 nfs存储工作原理实现"></a>1.2 nfs存储工作原理实现</h3><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/nfs.png"  alt=""></p><p>NFS工作原理</p><p>1.用户进程访问 NFS 客户端，使用不同的函数对数据进行处理</p><p>2.NFS 客户端通过 TCP/IP 的方式传递给 NFS 服务端</p><p>3.NFS 服务端接收到请求后，会先调用 portmap 进程进行端口映射。</p><p>4.nfsd 进程用于判断 NFS 客户端是否拥有权限连接 NFS 服务端。</p><p>5.Rpc.mount 进程判断客户端是否有对应的权限进行验证。</p><p>6.idmap 进程实现用户映射和压缩</p><p>7.最后 NFS 服务端会将对应请求的函数转换为本地能识别的命令，传递至内核，由内核驱动硬件。</p><p>注意: rpc 是一个远程过程调用，那么使用 nfs 必须有 rpc 服务</p><p>前提条件</p><p>1.nfs依赖于RPC服务来传递消息</p><p>2.NFS服务启动的端口号是随机的,启动之后会向本地的RCP注册</p><p>3.先启动RPC服务,再启动NFS服务</p><p>4.NFS和RPC之间的通讯是他们自己内部完成的,对于用户来说无感知</p><p>5.NFS客户端和服务端不会直接沟通,必须通过RPC服务传递消息</p><p>6.防火墙要开放RPC服务的端口</p><h2 id="第2章-NFS服务的搭建"><a href="#第2章-NFS服务的搭建" class="headerlink" title="第2章 NFS服务的搭建"></a>第2章 NFS服务的搭建</h2><h3 id="2-1部署前准备"><a href="#2-1部署前准备" class="headerlink" title="2.1部署前准备"></a>2.1部署前准备</h3><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>内网：172.16.1.31/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client1）</td><td>内网：172.16.1.41/24</td></tr></tbody></table><h3 id="2-2-NFS服务端部署"><a href="#2-2-NFS服务端部署" class="headerlink" title="2.2 NFS服务端部署"></a>2.2 NFS服务端部署</h3><h4 id="2-2-1-服务端安装NFS"><a href="#2-2-1-服务端安装NFS" class="headerlink" title="2.2.1 服务端安装NFS"></a>2.2.1 服务端安装NFS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum search nfs  <span class="comment">#查看nfs服务的包名</span></span><br><span class="line">yum -y install nfs-utils  <span class="comment">#安装nfs服务</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-配置参数"><a href="#2-2-2-配置参数" class="headerlink" title="2.2.2 配置参数"></a>2.2.2 配置参数</h4><p>​     <code>nfs</code> 服务程序的配置文件为/etc/exports，需要严格按照共享目录的路径 允许访问的 NFS 客户端（共享权限参数）格式书写，定义要共享的目录与相应的权限，具体书写方式如下图所示</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/canshu.webp.jpg"  alt=""></p><p>配置文件参数解释：<br>执行 man exports 命令，然后切换到文件结尾，可以快速查看如下样例格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nfs共享参数 参数作用</span><br><span class="line">rw         <span class="comment">#读写权限</span></span><br><span class="line">ro         <span class="comment">#只读权限</span></span><br><span class="line">root_squash   <span class="comment">#当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的匿名用户(不常用)</span></span><br><span class="line">no_root_squash   <span class="comment">#当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的 root 管理员(不常用)</span></span><br><span class="line">all_squash   <span class="comment">#无论 NFS 客户端使用什么账户访问，均映射为 NFS 服务器的匿名用户(常用)</span></span><br><span class="line">no_all_squash   <span class="comment">#无论 NFS 客户端使用什么账户访问，都不进行压缩</span></span><br><span class="line">sync   <span class="comment">#同时将数据写入到内存与硬盘中，保证不丢失数据</span></span><br><span class="line">async  <span class="comment">#优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据</span></span><br><span class="line">anonuid   <span class="comment">#配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span></span><br><span class="line">anongid   <span class="comment">#配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-配置NFS服务端"><a href="#2-2-3-配置NFS服务端" class="headerlink" title="2.2.3 配置NFS服务端"></a>2.2.3 配置NFS服务端</h4><p>写入配置文件：注意！IP地址和后面的小括号没有空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/exports &lt;&lt;EOF</span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash)  <span class="comment">#这里是172.16.1.0网段</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建要共享的数据目录，并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">chown -R nfsnobody:nfsnobody /data/</span><br></pre></td></tr></table></figure><h4 id="2-2-4-启动NFS服务"><a href="#2-2-4-启动NFS服务" class="headerlink" title="2.2.4 启动NFS服务"></a>2.2.4 启动NFS服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rpcbind nfs-server <span class="comment">#注意先启动rpc服务</span></span><br><span class="line">systemctl status rpcbind nfs-server <span class="comment">#查看服务</span></span><br></pre></td></tr></table></figure><h4 id="2-2-5-检查nfs命令"><a href="#2-2-5-检查nfs命令" class="headerlink" title="2.2.5 检查nfs命令"></a>2.2.5 检查nfs命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><h4 id="2-2-6-加入开机自启动"><a href="#2-2-6-加入开机自启动" class="headerlink" title="2.2.6 加入开机自启动"></a>2.2.6 加入开机自启动</h4><p>​        在使用 NFS 服务进行文件共享之前，需要使用 RPC（Remote Procedure Call 远程过程调用服务将 NFS 服务器的IP 地址和端口号信息发送给客户端。因此，在启动 NFS 服务之前，需要先重启并启用 rpcbind 服务程序,同时都加入开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rpcbind nfs-server</span><br><span class="line">systemctl restart rpcbind nfs-server</span><br></pre></td></tr></table></figure><h3 id="2-3-客户端挂载"><a href="#2-3-客户端挂载" class="headerlink" title="2.3 客户端挂载"></a>2.3 客户端挂载</h3><p>客户端安装nfs服务十分简单，只需要安装nfs软件包即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils rpcbind</span><br></pre></td></tr></table></figure><p>客户端安装完成后只需要启动rpcbind，不需要启动nfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br></pre></td></tr></table></figure><p>客户端使用命令查看nfs共享信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>客户端挂载 ： 创建挂载目录<br>        在 NFS 客户端创建一个挂载目录, 使用 mount 命令并结合-t 参数, 指定要挂载的文件系统的类型, 并在命令后面写上服务器的 IP 地址, 以及服务器上的共享目录, 最后需要写上要挂载到本地系统(客户端)的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">mount -t nfs 172.16.1.31:/data /data/</span><br></pre></td></tr></table></figure><p>挂载完成后查看是否挂载成功？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>卸载命令：注意!卸载的时候如果提示”umount.nfs: /nfsdir: device is busy”先切换到其他目录再卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># umount /data/</span></span><br><span class="line"><span class="comment"># umount -rl /data/  #强制卸载</span></span><br></pre></td></tr></table></figure><h3 id="2-4-测试NFS"><a href="#2-4-测试NFS" class="headerlink" title="2.4 测试NFS"></a>2.4 测试NFS</h3><p>客户端41在挂载目录创建文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># touch oldboy.txt &amp;&amp; echo 123 &gt;oldboy.txt </span></span><br><span class="line"><span class="comment"># cat oldboy.txt </span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>NFS服务器端查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs /data]<span class="comment"># ls -l</span></span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 nfsnobody nfsnobody 4 Jul 18 16:56 oldboy.txt</span><br></pre></td></tr></table></figure><p>客户端41写入开机自动挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/fstab</span></span><br><span class="line"><span class="comment"># tail -1 /etc/fstab </span></span><br><span class="line">  172.16.1.31:/data    /data     nfs     defaults   0 0</span><br><span class="line"><span class="comment"># mount -a</span></span><br></pre></td></tr></table></figure><h3 id="2-5-NFS-权限验证"><a href="#2-5-NFS-权限验证" class="headerlink" title="2.5 NFS 权限验证"></a>2.5 NFS 权限验证</h3><h4 id="2-5-1-验证ro权限"><a href="#2-5-1-验证ro权限" class="headerlink" title="2.5.1 验证ro权限"></a>2.5.1 验证ro权限</h4><p>服务器端配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(ro,sync,all_squash)</span><br><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server</span></span><br><span class="line"><span class="comment"># showmount -e 172.16.1.31</span></span><br><span class="line">Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">/data 172.16.1.0/24</span><br></pre></td></tr></table></figure><p>客户端挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>客户端测试读取权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /data/oldboy.txt </span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>客户端测试写入权限：(没有权限)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 456 &gt;&gt; /data/oldboy.txt </span></span><br><span class="line">-bash: /data/oldboy.txt: Read-only file system</span><br></pre></td></tr></table></figure><h4 id="2-5-2-验证all-squash、-anonuid、-anongid-权限"><a href="#2-5-2-验证all-squash、-anonuid、-anongid-权限" class="headerlink" title="2.5.2 验证all_squash、 anonuid、 anongid 权限"></a>2.5.2 验证all_squash、 anonuid、 anongid 权限</h4><p>服务器端配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><p>服务端创建用户及授权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>重启NFS服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server</span></span><br></pre></td></tr></table></figure><p>服务器端更改目录属主、属组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 24 Jul 18 11:52 /data/</span><br></pre></td></tr></table></figure><p>客户端创建用户www</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>客户端挂载测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># ll -d /data</span></span><br><span class="line">drwxr-xr-x 2 www www 24 Jul 18 11:52 /data</span><br></pre></td></tr></table></figure><p>注意：创建用户前，先创建组（666），然后再创建用户www（666），否则会出现属主、属组不同的情况</p><h2 id="第3章查看nfs端口"><a href="#第3章查看nfs端口" class="headerlink" title="第3章查看nfs端口"></a>第3章查看nfs端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpcinfo -p</span></span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100005    1   udp  20048  mountd</span><br><span class="line">    100005    1   tcp  20048  mountd</span><br><span class="line">    100005    2   udp  20048  mountd</span><br><span class="line">    100005    2   tcp  20048  mountd</span><br><span class="line">    100005    3   udp  20048  mountd</span><br><span class="line">    100005    3   tcp  20048  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  37349  nlockmgr</span><br><span class="line">    100021    3   udp  37349  nlockmgr</span><br><span class="line">    100021    4   udp  37349  nlockmgr</span><br><span class="line">    100021    1   tcp  39255  nlockmgr</span><br><span class="line">    100021    3   tcp  39255  nlockmgr</span><br><span class="line">    100021    4   tcp  39255  nlockmgr</span><br></pre></td></tr></table></figure><h3 id="工作中防火墙配置"><a href="#工作中防火墙配置" class="headerlink" title="工作中防火墙配置"></a>工作中防火墙配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=nfs --permanent</span><br><span class="line">firewall-cmd --add-service=mountd --permanent</span><br><span class="line">firewall-cmd --add-service=rpc-bind --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="NFS故障案例"><a href="#NFS故障案例" class="headerlink" title="NFS故障案例"></a>NFS故障案例</h3><p>​        在生产环境中，对于共享的NFS目录，一般不会配置到/etc/fstab里。因为在客户端主机重启时如果由于网络等原因连接不上nfs server时，就会导致客户机无法启动的厄运发生。一般是通过把mount -t nfs 172.16.1.31:/data /data命令放到rc.local中来实现开机自动挂载NFS。</p><p>如果设置了开机自启动，但是系统启动的时候NFS并没有提供服务，就会导致开机自检的时候卡在挂在那一步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开机启动时添加rd.break</span><br><span class="line">ctrl+x</span><br><span class="line">mount -o remount,rw /sysroot/</span><br><span class="line">chroot /sysroot/</span><br></pre></td></tr></table></figure><h2 id="第4章-NFS小结"><a href="#第4章-NFS小结" class="headerlink" title="第4章 NFS小结"></a>第4章 NFS小结</h2><p>NFS 存储优点<br>1.NFS 文件系统简单易用、方便部署、数据可靠、服务稳定、满足中小企业需求。<br>2.NFS 文件系统内存放的数据都在文件系统之上，所有数据都是能看得见<br>NFS 存储局限<br>1.存在单点故障, 如果构建高可用维护麻烦 web-&gt;nfs()-&gt;backup<br>2.NFS 数据明文, 并不对数据做任何校验。<br>3.客户端挂载 NFS 服务没有密码验证, 安全性一般(内网使用)<br>NFS 应用建议<br>1.生产场景应将静态数据尽可能往前端推, 减少后端存储压力<br>2.必须将存储里的静态资源通过 CDN 缓存 jpg\png\mp4\avi\css\js<br>3.如果没有缓存或架构本身历史遗留问题太大, 在多存储也无用</p><h2 id="第5章-项目实战"><a href="#第5章-项目实战" class="headerlink" title="第5章 项目实战"></a>第5章 项目实战</h2><h3 id="5-1-项目需求"><a href="#5-1-项目需求" class="headerlink" title="5.1 项目需求"></a>5.1 项目需求</h3><p>准备 3 台虚拟机服务器，并且请按照要求搭建配置 NFS 服务。<br> NFS 服务端（A nfs-31）<br> NFS 客户端（B backup-41）<br> NFS 客户端（C nfs-42）<br> 1.在 NFS 服务端(A)上共享/data/rw(读写)给客户端B及/data/r(只读)给客户端C<br> 2.在 NFS 客户端(B/C)上进行挂载测试</p><p>环境准备</p><table><thead><tr><th>操作系统</th><th>服务器角色</th><th>IP地址</th></tr></thead><tbody><tr><td>CentOS  7.4 x86_64</td><td>NFS服务端（nfs-server）</td><td>内网：172.16.1.31/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client1）</td><td>内网：172.16.1.41/24</td></tr><tr><td>CentOS  7.4 x86_64</td><td>NFS客户端（nfs-client2）</td><td>内网：172.16.1.42/24</td></tr></tbody></table><h3 id="5-2-服务端配置"><a href="#5-2-服务端配置" class="headerlink" title="5.2 服务端配置"></a>5.2 服务端配置</h3><p>服务器端创建www用户和组，并指定/data目录的属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 24 Jul 18 11:52 /data/</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/exports</span></span><br><span class="line">/data 172.16.1.0/24(rw,sync,all_squash) <span class="comment">#注意：这里不指定用户uid和gid，否则权限会失效</span></span><br><span class="line">/data 172.16.1.41/24(rw,sync,all_squash,anonuid=666,anongid=666)</span><br><span class="line">/data 172.16.1.42/24(ro,sync,all_squash,anonuid=666,anongid=666)</span><br></pre></td></tr></table></figure><p>重启服务及查看nfs信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind nfs-server  #重启服务</span></span><br><span class="line"><span class="comment"># showmount -e 172.16.1.31  #查看nfs共享信息</span></span><br><span class="line">  Export list <span class="keyword">for</span> 172.16.1.31:</span><br><span class="line">  /data 172.16.1.42/24,172.16.1.41/24,172.16.1.0/24</span><br></pre></td></tr></table></figure><h3 id="5-3-客户端挂载测试"><a href="#5-3-客户端挂载测试" class="headerlink" title="5.3 客户端挂载测试"></a>5.3 客户端挂载测试</h3><h4 id="5-3-1-客户端B-（backup-41）"><a href="#5-3-1-客户端B-（backup-41）" class="headerlink" title="5.3.1 客户端B （backup-41）"></a>5.3.1 客户端B （backup-41）</h4><p>重启rpc服务，并写入开机自启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br></pre></td></tr></table></figure><p>创建挂载目录，并挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line">172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>测试读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo 123456 &gt;test.txt   #客户端B写入文件，并读取</span></span><br><span class="line"><span class="comment"># cat test.txt </span></span><br><span class="line">123456</span><br><span class="line"><span class="comment"># ll /data/   #服务器端可以看到文件</span></span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 www www 4 Jul 18 16:56 oldboy.txt</span><br><span class="line">-rw-r--r-- 1 www www 7 Jul 18 18:29 test.txt</span><br></pre></td></tr></table></figure><h4 id="5-3-2-客户端B（nfs-42）"><a href="#5-3-2-客户端B（nfs-42）" class="headerlink" title="5.3.2 客户端B（nfs-42）"></a>5.3.2 客户端B（nfs-42）</h4><p>安装nfs服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install nfs-utils</span></span><br></pre></td></tr></table></figure><p>重启rpc命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl restart rpcbind</span></span><br><span class="line"><span class="comment"># systemctl enable rpcbind  #写入开机自启</span></span><br></pre></td></tr></table></figure><p>创建用户www和组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># groupadd -g 666 www</span></span><br><span class="line"><span class="comment"># useradd -u 666 -g 666 -s /sbin/nologin -M www</span></span><br><span class="line"><span class="comment"># id www</span></span><br><span class="line">  uid=666(www) gid=666(www) groups=666(www)</span><br></pre></td></tr></table></figure><p>创建挂载目录，并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># chown -R www.www /data</span></span><br><span class="line"><span class="comment"># ll -d /data/</span></span><br><span class="line">  drwxr-xr-x 2 www www 6 Jul 19 02:41 /data/</span><br></pre></td></tr></table></figure><p>挂载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -t nfs 172.16.1.31:/data /data</span></span><br><span class="line"><span class="comment"># df -h</span></span><br><span class="line"> 172.16.1.31:/data   39G  2.8G   37G   8% /data</span><br></pre></td></tr></table></figure><p>测试只读权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat test.txt  #可以查看文件内容</span></span><br><span class="line"> 123456</span><br><span class="line"><span class="comment"># echo abc &gt;&gt;test.txt  #不能写入内容到文件</span></span><br><span class="line"> -bash: test.txt: Permission denied</span><br><span class="line"><span class="comment"># touch nfs.txt  #不能创建文件</span></span><br><span class="line"> touch: cannot touch ‘nfs.txt’: Permission denied</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="nfs" scheme="http://linuxwf.com/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>2.Rsync备份服务器</title>
    <link href="http://linuxwf.com/2020/04/13/2-Rsync%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://linuxwf.com/2020/04/13/2-Rsync%E5%A4%87%E4%BB%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-04-13T03:57:00.000Z</published>
    <updated>2020-04-13T04:04:21.411Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="Rsync-备份服务器"><a href="#Rsync-备份服务器" class="headerlink" title="Rsync 备份服务器"></a>Rsync 备份服务器</h1><h2 id="第一章-Rsync基本概述"><a href="#第一章-Rsync基本概述" class="headerlink" title="第一章 Rsync基本概述"></a>第一章 Rsync基本概述</h2><p>rsync 是一款开源的备份工具，可以在不同主机之间进行同步，可实现全量备份与增量备份，因此非常适合用于架构集中式备份或异地备份等应用。<br> rsync 官方地址： 传送门 <a href="https://links.jianshu.com/go?to=http%3A%2F%2Frsync.samba.org" target="_blank" rel="noopener">http://rsync.samba.org</a><br> rsync 监听端口： 873<br> rsync 运行模式： C/S（Client/Server）</p><p>安装rsync服务命令：本地与远程均需安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h2 id="第二章-Rsync应用场景"><a href="#第二章-Rsync应用场景" class="headerlink" title="第二章 Rsync应用场景"></a>第二章 Rsync应用场景</h2><h3 id="2-1-备份方式："><a href="#2-1-备份方式：" class="headerlink" title="2.1 备份方式："></a>2.1 备份方式：</h3><p>既然需要备份，那么我们应该了解备份的方式<br> 完全备份<br> 增量备份<br>假设客户端上有 file1 file2 file3 文件，服务端上有 file1 文件，现要将客户端上的数据备份至服务端<br> 完全备份方式：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/wqbf.webp.jpg"  alt=""></p><p>增量备份方式：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/zlbf.webp.jpg"  alt=""></p><h3 id="2-2-备份架构："><a href="#2-2-备份架构：" class="headerlink" title="2.2 备份架构："></a>2.2 备份架构：</h3><p>1推（上传）    </p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/1tui.png"  alt=""></p><p>2拉 （下载）</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/2la.webp.jpg"  alt=""></p><p>3.大量服务器备份</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/3duo-backup.webp.jpg"  alt=""></p><p>4.异地备份</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/4yidi.webp.jpg"  alt=""></p><h2 id="第三章-Rsync三种模式"><a href="#第三章-Rsync三种模式" class="headerlink" title="第三章 Rsync三种模式"></a>第三章 Rsync三种模式</h2><h3 id="3-1-本地模式"><a href="#3-1-本地模式" class="headerlink" title="3.1 本地模式"></a>3.1 本地模式</h3><p>相当于cp</p><p>创建测试目录及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.mkdir /data</span><br><span class="line">  <span class="built_in">cd</span> /data/</span><br><span class="line">2.dd <span class="keyword">if</span>=/dev/zero of=/data/500M.txt bs=10M count=50<span class="comment">#创建大文件</span></span><br><span class="line">  50+0 records <span class="keyword">in</span></span><br><span class="line">  50+0 records out</span><br><span class="line">  524288000 bytes (524 MB) copied, 18.1737 s, 28.8 MB/s</span><br><span class="line">3.ll -h</span><br><span class="line">  total 500M</span><br><span class="line">  -rw-r--r-- 1 root root 500M Jul 16 21:58 500M.txt</span><br></pre></td></tr></table></figure><p>测试本地模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.mkdir /tmp/<span class="built_in">test</span></span><br><span class="line">2.rsync -avz /data/500M.txt /tmp/<span class="built_in">test</span>/</span><br><span class="line">  sending incremental file list</span><br><span class="line">  500M.txt</span><br><span class="line"></span><br><span class="line">  sent 509,968 bytes  received 35 bytes  27,567.73 bytes/sec</span><br><span class="line">  total size is 524,288,000  speedup is 1,028.01</span><br><span class="line">3.ll /tmp/<span class="built_in">test</span>/</span><br><span class="line">  total 512000</span><br><span class="line">  -rw-r--r-- 1 root root 524288000 Jul 16 21:58 500M.txt</span><br></pre></td></tr></table></figure><h3 id="3-2-远程模式"><a href="#3-2-远程模式" class="headerlink" title="3.2 远程模式"></a>3.2 远程模式</h3><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz root@172.16.1.31:/tmp/data/ /data/  </span><br><span class="line"><span class="comment">#拉取远程服务器目录下所有文件到本地</span></span><br><span class="line">rsync -avz root@172.16.1.31:/tmp/data /data/    </span><br><span class="line"><span class="comment">#拉取远程服务器目录到本地</span></span><br></pre></td></tr></table></figure><p>上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz 1G.txt  root@172.16.1.31:/tmp/data</span><br></pre></td></tr></table></figure><h3 id="3-3-后台服务模式"><a href="#3-3-后台服务模式" class="headerlink" title="3.3 后台服务模式"></a>3.3 后台服务模式</h3><p>Rsync 借助 SSH 协议同步数据存在的缺陷</p><p>1.使用系统用户（不安全）,需要知道root密码</p><p>2.使用普通用户（会导致权限不足情况）需要修改用户属主、属组信息（uid gid）</p><p>3.守护进程传输方式: rsync 自身非常重要的功能(不使用系统用户，更加安全)</p><h3 id="3-4-命令参数解释"><a href="#3-4-命令参数解释" class="headerlink" title="3.4 命令参数解释"></a>3.4 命令参数解释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">rsync <span class="comment">#命令</span></span><br><span class="line">[OPTION...] <span class="comment">#选项</span></span><br><span class="line">SRC... <span class="comment">#远程主机模块(不是目录)</span></span><br><span class="line">[USER@] <span class="comment">#远程主机用户(虚拟用户)</span></span><br><span class="line">HOST:: <span class="comment">#远程主机地址</span></span><br><span class="line">[DEST] <span class="comment">#将远程主机模块备份至本地什么位置</span></span><br><span class="line">-a <span class="comment">#归档模式传输, 等于-tropgDl</span></span><br><span class="line">-v <span class="comment">#详细模式输出, 打印速率, 文件数量等</span></span><br><span class="line">-z <span class="comment">#传输时进行压缩以提高效率</span></span><br><span class="line">-r <span class="comment">#递归传输目录及子目录，即目录下得所有目录都同样传输。</span></span><br><span class="line">-t <span class="comment">#保持文件时间信息</span></span><br><span class="line">-o <span class="comment">#保持文件属主信息</span></span><br><span class="line">-p <span class="comment">#保持文件权限</span></span><br><span class="line">-g <span class="comment">#保持文件属组信息</span></span><br><span class="line">-l <span class="comment">#保留软连接</span></span><br><span class="line">-P <span class="comment">#显示同步的过程及传输时的进度等信息</span></span><br><span class="line">-D <span class="comment">#保持设备文件信息</span></span><br><span class="line">-L <span class="comment">#保留软连接指向的目标文件</span></span><br><span class="line">-e <span class="comment">#使用的信道协议,指定替代 rsh 的 shell 程序</span></span><br><span class="line">--exclude=PATTERN <span class="comment">#指定排除不需要传输的文件模式</span></span><br><span class="line">--exclude-from=file <span class="comment">#文件名所在的目录文件</span></span><br><span class="line">--bwlimit=100 <span class="comment">#限速传输</span></span><br><span class="line">--partial <span class="comment">#断点续传</span></span><br><span class="line">--delete <span class="comment">#让目标目录和源目录数据保持一致</span></span><br></pre></td></tr></table></figure><p>我们一般使用： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz 本地上传文件 目标地址(IP):/路径    <span class="comment">#上传数据</span></span><br><span class="line">rsync -avz 目标地址(IP):/路径/目录(文件) 本地路径   <span class="comment">#下载数据</span></span><br></pre></td></tr></table></figure><h2 id="第四章-后台服务模式-服务端配置"><a href="#第四章-后台服务模式-服务端配置" class="headerlink" title="第四章 后台服务模式-服务端配置"></a>第四章 后台服务模式-服务端配置</h2><h3 id="4-1-安装rsync服务"><a href="#4-1-安装rsync服务" class="headerlink" title="4.1 安装rsync服务"></a>4.1 安装rsync服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h3 id="4-2-修改配置文件"><a href="#4-2-修改配置文件" class="headerlink" title="4.2 修改配置文件"></a>4.2 修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@backup /backup]<span class="comment"># cat /etc/rsyncd.conf</span></span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line">ignore errors</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br></pre></td></tr></table></figure><h3 id="4-3-配置文件解释"><a href="#4-3-配置文件解释" class="headerlink" title="4.3 配置文件解释"></a>4.3 配置文件解释</h3><p>注意！以下配置只是为了理解rsync配置参数，配置文件中不要带有#或者中文，不然启动会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">uid = www <span class="comment"># 运行进程的用户</span></span><br><span class="line">gid = www <span class="comment"># 运行进程的用户组</span></span><br><span class="line">port = 873 <span class="comment"># 监听端口</span></span><br><span class="line">fake super = yes <span class="comment"># 无需让 rsync 以 root 身份运行，允许接收文件的完整属性</span></span><br><span class="line">use chroot = no <span class="comment"># 禁锢推送的数据至某个目录, 不允许跳出该目录</span></span><br><span class="line">max connections = 200 <span class="comment"># 最大连接数</span></span><br><span class="line">timeout = 600 <span class="comment"># 超时时间</span></span><br><span class="line">ignore errors <span class="comment"># 忽略错误信息</span></span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span> <span class="comment"># 对备份数据可读写</span></span><br><span class="line">list = <span class="literal">false</span> <span class="comment"># 不允许查看模块信息</span></span><br><span class="line">auth users = rsync_backup <span class="comment"># 定义虚拟用户，作为连接认证用户</span></span><br><span class="line">secrets file = /etc/rsync.passwd <span class="comment"># 定义 rsync 服务用户连接认证密码文件路径</span></span><br><span class="line">[backup] <span class="comment"># 定义模块信息</span></span><br><span class="line">comment = commit <span class="comment"># 模块注释信息</span></span><br><span class="line">path = /backup <span class="comment"># 定义接收备份数据目录</span></span><br></pre></td></tr></table></figure><h3 id="4-4-创建用户以及数据目录-并更改属主"><a href="#4-4-创建用户以及数据目录-并更改属主" class="headerlink" title="4.4 创建用户以及数据目录 并更改属主"></a>4.4 创建用户以及数据目录 并更改属主</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin -u 666 www </span><br><span class="line">mkdir /backup /data</span><br><span class="line">chown -R www.www /backup</span><br><span class="line">chown -R www.www /data</span><br></pre></td></tr></table></figure><h3 id="4-5-创建虚拟用户密码文件并授权"><a href="#4-5-创建虚拟用户密码文件并授权" class="headerlink" title="4.5 创建虚拟用户密码文件并授权"></a>4.5 创建虚拟用户密码文件并授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"rsync_backup:oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br></pre></td></tr></table></figure><h3 id="4-6-加入开机启动"><a href="#4-6-加入开机启动" class="headerlink" title="4.6 加入开机启动"></a>4.6 加入开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rsyncd  <span class="comment">#启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd <span class="comment">#开机自启动</span></span><br></pre></td></tr></table></figure><h3 id="4-7-检查端口和服务"><a href="#4-7-检查端口和服务" class="headerlink" title="4.7 检查端口和服务"></a>4.7 检查端口和服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntup|grep 873 <span class="comment">#查看端口</span></span><br><span class="line">systemctl status rsyncd <span class="comment">#查看服务</span></span><br></pre></td></tr></table></figure><h2 id="第五章-后台服务模式-客户端配置"><a href="#第五章-后台服务模式-客户端配置" class="headerlink" title="第五章 后台服务模式-客户端配置"></a>第五章 后台服务模式-客户端配置</h2><h3 id="5-1-安装rsync服务"><a href="#5-1-安装rsync服务" class="headerlink" title="5.1 安装rsync服务"></a>5.1 安装rsync服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install rsync</span><br></pre></td></tr></table></figure><h3 id="5-2-配置密码文件及授权"><a href="#5-2-配置密码文件及授权" class="headerlink" title="5.2 配置密码文件及授权"></a>5.2 配置密码文件及授权</h3><p>两种方式：<br>1.使用密码文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br><span class="line">rsync -avzP linux2NB.txt rsync_backup@172.16.1.41::backup --passwordfile=/etc/rsync.passwd</span><br></pre></td></tr></table></figure><p>2.使用rsync变量-脚本中使用-推荐这种</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br></pre></td></tr></table></figure><h2 id="第六章-实战内容"><a href="#第六章-实战内容" class="headerlink" title="第六章 实战内容"></a>第六章 实战内容</h2><h3 id="6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端"><a href="#6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端" class="headerlink" title="6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端"></a>6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP /backup/ rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h3 id="6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录"><a href="#6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录" class="headerlink" title="6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录"></a>6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP rsync_backup@172.16.1.41::backup /backup/</span><br></pre></td></tr></table></figure><h3 id="6-3-Rsync-实现数据无差异同步"><a href="#6-3-Rsync-实现数据无差异同步" class="headerlink" title="6.3 Rsync 实现数据无差异同步"></a>6.3 Rsync 实现数据无差异同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取远端数据：远端与本地保持一致,远端没有本地有会被删除, 造成客户端数据丢失</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP --delete rsync_backup@172.16.1.41::backup /data/</span><br><span class="line"><span class="comment">#推送数据至远端：本地与远端保持一致, 本地没有远端会被删除, 造成服务器端数据丢失</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP --delete /data/ rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h3 id="6-4-Rsync-的-Limit-限速"><a href="#6-4-Rsync-的-Limit-限速" class="headerlink" title="6.4 Rsync 的 Limit 限速"></a>6.4 Rsync 的 Limit 限速</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#企业案例：防止备份时带宽不够用，影响其他业务</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avz --bwlimit=10 rsync_backup@172.16.1.41::backup /data/  <span class="comment">#限制为10M/S传输数据</span></span><br></pre></td></tr></table></figure><h2 id="第七章-全网备份案例"><a href="#第七章-全网备份案例" class="headerlink" title="第七章 全网备份案例"></a>第七章 全网备份案例</h2><h3 id="7-1-客户端需求："><a href="#7-1-客户端需求：" class="headerlink" title="7.1 客户端需求："></a>7.1 客户端需求：</h3><p>1.客户端 每天凌晨1点在服务器本地打包备份(系统配置文件\日志文件\其他目录\应用配置等文件)<br>2.客户端备份的数据必须存放至以主机名<em>ip地址</em>当前时间命名的目录中<br>3.客户端最后通过rsync推送本地已经打包好的备份文件至backup服务器<br>4.客户端服务器本地保留最近7天的数据，避免浪费磁盘空间</p><h3 id="7-2-客户端实现步骤："><a href="#7-2-客户端实现步骤：" class="headerlink" title="7.2 客户端实现步骤："></a>7.2 客户端实现步骤：</h3><h4 id="7-2-1-创建脚本目录"><a href="#7-2-1-创建脚本目录" class="headerlink" title="7.2.1.创建脚本目录"></a>7.2.1.创建脚本目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /server/scripts</span><br></pre></td></tr></table></figure><h4 id="7-2-2-取主机名"><a href="#7-2-2-取主机名" class="headerlink" title="7.2.2. 取主机名"></a>7.2.2. 取主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><h4 id="7-2-3-取IP地址"><a href="#7-2-3-取IP地址" class="headerlink" title="7.2.3 取IP地址"></a>7.2.3 取IP地址</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure><h4 id="7-2-4-取时间"><a href="#7-2-4-取时间" class="headerlink" title="7.2.4 取时间"></a>7.2.4 取时间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date +%F</span><br></pre></td></tr></table></figure><h4 id="7-2-5-拼接在一起"><a href="#7-2-5-拼接在一起" class="headerlink" title="7.2.5 拼接在一起"></a>7.2.5 拼接在一起</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)</span><br></pre></td></tr></table></figure><h4 id="7-2-6-创建测试"><a href="#7-2-6-创建测试" class="headerlink" title="7.2.6 创建测试"></a>7.2.6 创建测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /backup/$(hostname)_$(ifconfig eth1|awk<span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)</span><br></pre></td></tr></table></figure><h4 id="7-2-7-打包并查看压缩包内容"><a href="#7-2-7-打包并查看压缩包内容" class="headerlink" title="7.2.7 打包并查看压缩包内容"></a>7.2.7 打包并查看压缩包内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcvf sys.tar.gz etc/fstab etc/passwd </span><br><span class="line">tar tf sys.tar.gz</span><br></pre></td></tr></table></figure><h4 id="7-2-8-拼接命令"><a href="#7-2-8-拼接命令" class="headerlink" title="7.2.8 拼接命令"></a>7.2.8 拼接命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/sys.tar.gz etc/fstab etc/passwd</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br></pre></td></tr></table></figure><h4 id="7-2-9-创建数据"><a href="#7-2-9-创建数据" class="headerlink" title="7.2.9 创建数据"></a>7.2.9 创建数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat date.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#生成1-31天的系统和日志压缩包</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..31&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">backup=<span class="string">"/backup/<span class="variable">$(hostname)</span>_<span class="variable">$(ifconfig eth1|awk 'NR==2&#123;print $2&#125;')</span>_<span class="variable">$(date +%F)</span>"</span></span><br><span class="line">date -s 2017/07/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;backup&#125;</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf <span class="variable">$&#123;backup&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf <span class="variable">$&#123;backup&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="7-2-10-客户端给压缩文件打上指纹"><a href="#7-2-10-客户端给压缩文件打上指纹" class="headerlink" title="7.2.10 客户端给压缩文件打上指纹"></a>7.2.10 客户端给压缩文件打上指纹</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum /backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/*.tar.gz &gt;/backup/$(hostname)_$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)_$(date +%F)/$(date +%F)_md5.txt</span><br></pre></td></tr></table></figure><h4 id="7-2-11-删除7天的前文件"><a href="#7-2-11-删除7天的前文件" class="headerlink" title="7.2.11 删除7天的前文件"></a>7.2.11 删除7天的前文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /backup/ -<span class="built_in">type</span> d -mtime +7|xargs rm -rf</span><br></pre></td></tr></table></figure><h4 id="7-2-12-将路径、IP地址、时间命令替换成变量"><a href="#7-2-12-将路径、IP地址、时间命令替换成变量" class="headerlink" title="7.2.12 将路径、IP地址、时间命令替换成变量"></a>7.2.12 将路径、IP地址、时间命令替换成变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br></pre></td></tr></table></figure><h4 id="7-2-13-注意要点："><a href="#7-2-13-注意要点：" class="headerlink" title="7.2.13 注意要点："></a>7.2.13 注意要点：</h4><p>注意踩坑<br>我们的备份脚本最终会以定时任务的形式实现，而定时任务能识别的PATH变量有限，所以最好在脚本里添加PATH变量，或者脚本里命令写绝对路径。</p><h3 id="7-3-服务端需求："><a href="#7-3-服务端需求：" class="headerlink" title="7.3 服务端需求："></a>7.3 服务端需求：</h3><p>1.服务端部署 rsync，用于接收客户端推送过来的备份数据<br>2.服务端需要每天校验客户端推送过来的数据是否完整<br>3.服务端需要每天校验的结果通知给管理员<br>4.服务端仅保留 6 个月的备份数据,其余的全部删除<br>注意：所有服务器的备份目录必须都为/backup</p><h3 id="7-4-服务端实现步骤"><a href="#7-4-服务端实现步骤" class="headerlink" title="7.4 服务端实现步骤"></a>7.4 服务端实现步骤</h3><h4 id="7-4-1-校验客户端发送来的数据文件"><a href="#7-4-1-校验客户端发送来的数据文件" class="headerlink" title="7.4.1 校验客户端发送来的数据文件"></a>7.4.1 校验客户端发送来的数据文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -name <span class="string">"md5.txt"</span> -<span class="built_in">type</span> f|xargs md5sum -c &gt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br></pre></td></tr></table></figure><h4 id="7-4-2-发送邮件cd"><a href="#7-4-2-发送邮件cd" class="headerlink" title="7.4.2 发送邮件cd"></a>7.4.2 发送邮件cd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail -s <span class="string">"rsync_check_<span class="variable">$&#123;DATE&#125;</span>"</span> wufei008@qq.com &lt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br></pre></td></tr></table></figure><h4 id="7-4-3-删除文件"><a href="#7-4-3-删除文件" class="headerlink" title="7.4.3 删除文件"></a>7.4.3 删除文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除超过 7 天的校验结果文件, 删除超过 180 天的备份数据文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> f -name <span class="string">"check*"</span> -mtime +7|xargs rm -rf</span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +180|xargs rm -rf</span><br></pre></td></tr></table></figure><h4 id="7-4-4-安装配置mailx"><a href="#7-4-4-安装配置mailx" class="headerlink" title="7.4.4  安装配置mailx"></a>7.4.4  安装配置mailx</h4><p>安装mailx服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mailx</span><br></pre></td></tr></table></figure><p>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/mail.rc</span></span><br><span class="line"><span class="built_in">set</span> from=xxxxxx  <span class="comment">#邮箱地址</span></span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.qq.com:465</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=xxxxxx  <span class="comment">#邮箱地址</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=xxxxxx  <span class="comment">#邮箱授权码</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb/</span><br></pre></td></tr></table></figure><h2 id="第八章-配置文件汇总"><a href="#第八章-配置文件汇总" class="headerlink" title="第八章 配置文件汇总"></a>第八章 配置文件汇总</h2><h3 id="8-1-客户端生成数据脚本"><a href="#8-1-客户端生成数据脚本" class="headerlink" title="8.1 客户端生成数据脚本"></a>8.1 客户端生成数据脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat date.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成1-31天的系统和日志压缩包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..31&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">backup=<span class="string">"/backup/<span class="variable">$(hostname)</span>_<span class="variable">$(ifconfig eth1|awk 'NR==2&#123;print $2&#125;')</span>_<span class="variable">$(date +%F)</span>"</span></span><br><span class="line">date -s 2017/07/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;backup&#125;</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;backup&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;backup&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="8-2-客户端上传脚本"><a href="#8-2-客户端上传脚本" class="headerlink" title="8.2 客户端上传脚本"></a>8.2 客户端上传脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat push_rsync.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.创建目录</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.打包数据</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/sys.tar.gz etc/passwd etc/fstab</span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar -zcf <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/log.tar.gz var/<span class="built_in">log</span>/messages var/<span class="built_in">log</span>/secure</span><br><span class="line">md5sum <span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/*.tar.gz &gt;<span class="variable">$&#123;BACKUP&#125;</span>/<span class="variable">$&#123;DEST&#125;</span>/<span class="variable">$&#123;DATE&#125;</span>_md5.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.推送</span></span><br><span class="line"><span class="built_in">export</span> RSYNC_PASSWORD=oldboy</span><br><span class="line">rsync -avzP <span class="variable">$&#123;BACKUP&#125;</span>/ rsync_backup@172.16.1.41::backup</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.删除7天以前的文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +7 |xargs rm -rf</span><br></pre></td></tr></table></figure><h3 id="8-3-服务器端校验并发送到邮箱脚本"><a href="#8-3-服务器端校验并发送到邮箱脚本" class="headerlink" title="8.3 服务器端校验并发送到邮箱脚本"></a>8.3 服务器端校验并发送到邮箱脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat check_rsync.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="string">"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin"</span></span><br><span class="line">BACKUP=/backup</span><br><span class="line">HOST=$(hostname)</span><br><span class="line">IP=$(ifconfig eth1|awk <span class="string">'NR==2&#123;print $2&#125;'</span>)</span><br><span class="line">DATE=$(date +%F)</span><br><span class="line">DEST=<span class="variable">$&#123;HOST&#125;</span>_<span class="variable">$&#123;IP&#125;</span>_<span class="variable">$&#123;DATE&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.检验客户端发送过来的数据</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -name <span class="string">"md5.txt"</span> -<span class="built_in">type</span> f|xargs md5sum -c &gt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.邮件发送</span></span><br><span class="line">mail -s <span class="string">"rsync_check_<span class="variable">$&#123;DATE&#125;</span>"</span> wufei008@qq.com &lt;<span class="variable">$&#123;BACKUP&#125;</span>/check_<span class="variable">$&#123;DATE&#125;</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.删除超过 7 天的校验结果文件, 删除超过 180 天的备份数据文件</span></span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> f -name <span class="string">"check*"</span> -mtime +7|xargs rm -rf</span><br><span class="line">find <span class="variable">$&#123;BACKUP&#125;</span>/ -<span class="built_in">type</span> d -mtime +180|xargs rm -rf</span><br></pre></td></tr></table></figure><h3 id="8-4-服务器rsync安装配置脚本"><a href="#8-4-服务器rsync安装配置脚本" class="headerlink" title="8.4 服务器rsync安装配置脚本"></a>8.4 服务器rsync安装配置脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat rsync_install.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装rsync</span></span><br><span class="line">yum install rsync -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建用户</span></span><br><span class="line">useradd -s /sbin/nologin -M -u 666 www</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.配置文件</span></span><br><span class="line">cat &gt; /etc/rsyncd.conf &lt;&lt;EOF</span><br><span class="line">uid = www </span><br><span class="line">gid = www </span><br><span class="line">port = 873</span><br><span class="line">fake super = yes</span><br><span class="line">use chroot = no</span><br><span class="line">max connections = 200</span><br><span class="line">timeout = 600</span><br><span class="line"><span class="built_in">read</span> only = <span class="literal">false</span></span><br><span class="line">list = <span class="literal">false</span></span><br><span class="line">ignore errors</span><br><span class="line">auth users = rsync_backup</span><br><span class="line">secrets file = /etc/rsync.passwd</span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsyncd.log</span><br><span class="line">[backup]</span><br><span class="line">comment = welcome to oldboyedu backup!</span><br><span class="line">path = /backup</span><br><span class="line">[data]</span><br><span class="line">path = /data</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.创建密码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rsync_backup:oldboy"</span> &gt;/etc/rsync.passwd</span><br><span class="line">chmod 600 /etc/rsync.passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.创建目录</span></span><br><span class="line">mkdir -p /&#123;data,backup&#125;  </span><br><span class="line">chown -R www:www /&#123;data,backup&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.启动</span></span><br><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.检查</span></span><br><span class="line">ps -ef|grep rsync</span><br><span class="line">ss -lntup|grep 873</span><br><span class="line">netstat -lntup|grep rsync</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="rsync" scheme="http://linuxwf.com/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>1.综合架构环境准备</title>
    <link href="http://linuxwf.com/2020/04/13/1-%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://linuxwf.com/2020/04/13/1-%E7%BB%BC%E5%90%88%E6%9E%B6%E6%9E%84%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2020-04-13T03:45:00.000Z</published>
    <updated>2020-04-13T03:53:49.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="综合架构环境准备"><a href="#综合架构环境准备" class="headerlink" title="综合架构环境准备"></a>综合架构环境准备</h1><h2 id="1-创建一台全新虚拟机做模板机"><a href="#1-创建一台全新虚拟机做模板机" class="headerlink" title="1.创建一台全新虚拟机做模板机"></a>1.创建一台全新虚拟机做模板机</h2><p>系统：CentOS 7</p><p>内存：2G</p><p>网卡eth0：NAT模式 10.0.1.200   — 外网</p><p>网卡eth1：LAN局域网 172.16.1.200</p><p>硬盘：40G </p><h2 id="2-安装CentOS-7-系统"><a href="#2-安装CentOS-7-系统" class="headerlink" title="2.安装CentOS 7 系统"></a>2.安装CentOS 7 系统</h2><p>添加网卡eth1:</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/01.jpg"  alt=""></p><p>修改网卡名称:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ifnames=0 biosdevname=0</span><br></pre></td></tr></table></figure><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/02.jpg"  alt=""></p><h2 id="3-优化模板机"><a href="#3-优化模板机" class="headerlink" title="3.优化模板机"></a>3.优化模板机</h2><h3 id="3-1精简网卡配置文件"><a href="#3-1精简网卡配置文件" class="headerlink" title="3.1精简网卡配置文件"></a>3.1精简网卡配置文件</h3><p>如果不删除，重新克隆虚拟机会导致上不了网<br>删除网卡里面包含UUID 的行（centos7），删除UUID和HWADDR（CentOS5和6）<br>清空/etc/udev/rules.d/70-persistent-net.rules(centos 5 和6)</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/03.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/04.jpg"  alt=""></p><h3 id="3-2关闭防火墙和Selinux"><a href="#3-2关闭防火墙和Selinux" class="headerlink" title="3.2关闭防火墙和Selinux"></a>3.2关闭防火墙和Selinux</h3><p>关闭防火墙：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>关闭selinux：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">vim /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure><h3 id="3-3优化SSH连接速度慢"><a href="#3-3优化SSH连接速度慢" class="headerlink" title="3.3优化SSH连接速度慢"></a>3.3优化SSH连接速度慢</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">79 GSSAPIAuthentication no</span><br><span class="line">115 UseDNS no</span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h3 id="3-4优化命令行显示"><a href="#3-4优化命令行显示" class="headerlink" title="3.4优化命令行显示"></a>3.4优化命令行显示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">"[\[\e[34;1m\]\u@\[\e[0m\]\[\e[32;1m\]\H\[\e[0m\] \[\e[31;1m\]\w\[\e[0m\]]\\$ "</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="3-5优化yum源为阿里源"><a href="#3-5优化yum源为阿里源" class="headerlink" title="3.5优化yum源为阿里源"></a>3.5优化yum源为阿里源</h3><p>查看yum 库信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>打开阿里源网址<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a></p><p>选择对应版本，帮助：</p><h4 id="1、备份"><a href="#1、备份" class="headerlink" title="1、备份"></a>1、备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure><h4 id="2、下载新的CentOS-Base-repo-到-etc-yum-repos-d"><a href="#2、下载新的CentOS-Base-repo-到-etc-yum-repos-d" class="headerlink" title="2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/"></a>2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br></pre></td></tr></table></figure><h4 id="3、之后运行yum-makecache-fast生成缓存"><a href="#3、之后运行yum-makecache-fast生成缓存" class="headerlink" title="3、之后运行yum makecache fast生成缓存"></a>3、之后运行yum makecache fast生成缓存</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/05.jpg"  alt=""></p><h4 id="4-安装额外包epel-，选择帮助："><a href="#4-安装额外包epel-，选择帮助：" class="headerlink" title="4.安装额外包epel ，选择帮助："></a>4.安装额外包epel ，选择帮助：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br></pre></td></tr></table></figure><h3 id="3-6安装常用软件"><a href="#3-6安装常用软件" class="headerlink" title="3.6安装常用软件"></a>3.6安装常用软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tree vim wget bash-completion bash-completion-extras lrzsz net-tools sysstat iotop iftop htop unzip telnet ntpdate</span><br></pre></td></tr></table></figure><h3 id="3-7配置普通用户sudo权限"><a href="#3-7配置普通用户sudo权限" class="headerlink" title="3.7配置普通用户sudo权限"></a>3.7配置普通用户sudo权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># grep oldboy &#x2F;etc&#x2F;sudoers</span><br><span class="line">oldboy  ALL&#x3D;(ALL)       NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h3 id="3-8配置-etc-hosts解析"><a href="#3-8配置-etc-hosts解析" class="headerlink" title="3.8配置/etc/hosts解析"></a>3.8配置/etc/hosts解析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"></span><br><span class="line">10.0.1.5 172.16.1.5 lb01</span><br><span class="line">10.0.1.6 172.16.1.6 lb02</span><br><span class="line">10.0.1.7 172.16.1.7 web01</span><br><span class="line">10.0.1.8 172.16.1.8 web02</span><br><span class="line">10.0.1.9 172.16.1.9 web03</span><br><span class="line">10.0.1.31 172.16.1.31 nfs</span><br><span class="line">10.0.1.41 172.16.1.41 backup</span><br><span class="line">10.0.1.51 172.16.1.51 db01</span><br><span class="line">10.0.1.61 172.16.1.61 m01</span><br><span class="line">10.0.1.71 172.16.1.71 zabbix</span><br></pre></td></tr></table></figure><h2 id="4-修改模板机IP、主机名，拍摄快照"><a href="#4-修改模板机IP、主机名，拍摄快照" class="headerlink" title="4.修改模板机IP、主机名，拍摄快照"></a>4.修改模板机IP、主机名，拍摄快照</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/06.jpg"  alt=""></p><h2 id="5-克隆backup服务器"><a href="#5-克隆backup服务器" class="headerlink" title="5.克隆backup服务器"></a>5.克隆backup服务器</h2><h4 id="5-1-backup-41备份服务器"><a href="#5-1-backup-41备份服务器" class="headerlink" title="5.1. backup 41备份服务器"></a>5.1. backup 41备份服务器</h4><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/07.jpg"  alt=""></p><p>设置backup-41</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/08.jpg"  alt=""></p><p>修改backup-41的网卡信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/09.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/10.jpg"  alt=""></p><p>重启网卡服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>修改主机名为backup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname backup</span><br></pre></td></tr></table></figure><h4 id="5-2-NFS-31-服务器克隆"><a href="#5-2-NFS-31-服务器克隆" class="headerlink" title="5.2 NFS 31 服务器克隆"></a>5.2 NFS 31 服务器克隆</h4><p>安装nfs -31服务器</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/11.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/12.jpg"  alt=""></p><p>修改nfs -31网卡信息</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/13.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/14.jpg"  alt=""></p><p>重启网卡服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>修改主机名为nfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname nfs</span><br></pre></td></tr></table></figure><h2 id="6-部署完成给backup和nfs做好快照"><a href="#6-部署完成给backup和nfs做好快照" class="headerlink" title="6.部署完成给backup和nfs做好快照"></a>6.部署完成给backup和nfs做好快照</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/15.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/16.jpg"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/lnmp/17.jpg"  alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="LNMP" scheme="http://linuxwf.com/categories/LNMP/"/>
    
    
      <category term="lnmp" scheme="http://linuxwf.com/tags/lnmp/"/>
    
  </entry>
  
  <entry>
    <title>hexo-tag-dplayer 视频插件</title>
    <link href="http://linuxwf.com/2020/04/11/hexo-tag-dplayer-%E8%A7%86%E9%A2%91%E6%8F%92%E4%BB%B6/"/>
    <id>http://linuxwf.com/2020/04/11/hexo-tag-dplayer-%E8%A7%86%E9%A2%91%E6%8F%92%E4%BB%B6/</id>
    <published>2020-04-11T07:03:00.000Z</published>
    <updated>2020-04-11T07:03:37.287Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 是 <a href="https://github.com/MoePlayer/DPlayer" target="_blank" rel="noopener">APlayer</a> 播放器的 Hexo 标签插件，可以十分方便地在文章内插入视频播放器。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 hexo-tag-dplayer 插件十分简单，只需要在博客目录执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure><p>修改 Hexo 的站点配置文件 <code>_config.yml</code> ，增加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hexo-tag-dplayer:</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.css</span></span><br><span class="line">  <span class="attr">default:</span> </span><br><span class="line">    <span class="attr">api:</span> <span class="string">https://api.prprpr.me/dplayer/</span></span><br><span class="line">    <span class="attr">loop:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="attr">screenshot:</span> <span class="literal">yes</span></span><br><span class="line">    <span class="comment"># 后面还可以接着写其他默认配置</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用 hexo-tag-dplayer 非常简单，只需要在 MarkDown 文件中插入正确的标记就可以了。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer "url=视频地址" %&#125;</span><br></pre></td></tr></table></figure><p>如果还需要其他配置，尽管在上面写就好，详情可以看 [这里] (<a href="https://github.com/MoePlayer/hexo-tag-dplayer)，下面有一个简单的示例可以看一下：" target="_blank" rel="noopener">https://github.com/MoePlayer/hexo-tag-dplayer)，下面有一个简单的示例可以看一下：</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer "url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4" "addition=https://dplayer.daoapp.io/bilibili?aid=4157142" "api=https://api.prprpr.me/dplayer/" "pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg" "id=9E2E3368B56CDBB4" "loop=yes" "theme=#FADFA3" "autoplay=false" "token=tokendemo" %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% dplayer 'url=some.mp4' "id=someid" "api=https://api.prprpr.me/dplayer/" "addition=/some.json" 'code=player.on("loadstart",function()&#123;console.log("loadstart")&#125;)' "autoplay" %&#125;</span><br></pre></td></tr></table></figure><p>附 Dplayer 一些简单的参数列表，注意， Dplayer 的参数仅作为参考，具体请以 <a href="https://github.com/MoePlayer/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a> 为准</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>DPlayer 有丰富的参数可以自定义你的播放器实例</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>container</td><td>document.querySelector(‘.dplayer’)</td><td>播放器容器元素</td></tr><tr><td>live</td><td>false</td><td>开启直播模式, 见<a href="http://dplayer.js.org/zh/guide.html#直播" target="_blank" rel="noopener">#直播</a></td></tr><tr><td>autoplay</td><td>false</td><td>视频自动播放</td></tr><tr><td>theme</td><td>‘#b7daff’</td><td>主题色</td></tr><tr><td>loop</td><td>false</td><td>视频循环播放</td></tr><tr><td>lang</td><td>navigator.language.toLowerCase()</td><td>可选值: ‘en’, ‘zh-cn’, ‘zh-tw’</td></tr><tr><td>screenshot</td><td>false</td><td>开启截图，如果开启，视频和视频封面需要允许跨域</td></tr><tr><td>hotkey</td><td>true</td><td>开启热键，支持快进、快退、音量控制、播放暂停</td></tr><tr><td>preload</td><td>‘auto’</td><td>视频预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>volume</td><td>0.7</td><td>默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td>logo</td><td>-</td><td>在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置</td></tr><tr><td>apiBackend</td><td>-</td><td>自定义获取和发送弹幕行为，见<a href="http://dplayer.js.org/zh/guide.html#直播" target="_blank" rel="noopener">#直播</a></td></tr><tr><td>video</td><td>-</td><td>视频信息</td></tr><tr><td>video.quality</td><td>-</td><td>见<a href="http://dplayer.js.org/zh/guide.html#清晰度切换" target="_blank" rel="noopener">#清晰度切换</a></td></tr><tr><td>video.defaultQuality</td><td>-</td><td>见<a href="http://dplayer.js.org/zh/guide.html#清晰度切换" target="_blank" rel="noopener">#清晰度切换</a></td></tr><tr><td>video.url</td><td>-</td><td>视频链接</td></tr><tr><td>video.pic</td><td>-</td><td>视频封面</td></tr><tr><td>video.thumbnails</td><td>-</td><td>视频缩略图，可以使用 <a href="https://github.com/MoePlayer/DPlayer-thumbnails" target="_blank" rel="noopener">DPlayer-thumbnails</a> 生成</td></tr><tr><td>video.type</td><td>‘auto’</td><td>可选值: ‘auto’, ‘hls’, ‘flv’, ‘dash’, ‘webtorrent’, ‘normal’ 或其他自定义类型, 见<a href="http://dplayer.js.org/zh/guide.html#mse-支持" target="_blank" rel="noopener">#MSE 支持</a></td></tr><tr><td>video.customType</td><td>-</td><td>自定义类型, 见<a href="http://dplayer.js.org/zh/guide.html#mse-支持" target="_blank" rel="noopener">#MSE 支持</a></td></tr><tr><td>subtitle</td><td>-</td><td>外挂字幕</td></tr><tr><td>subtitle.url</td><td><code>required</code></td><td>字幕链接</td></tr><tr><td>subtitle.type</td><td>‘webvtt’</td><td>字幕类型，可选值: ‘webvtt’, ‘ass’，目前只支持 webvtt</td></tr><tr><td>subtitle.fontSize</td><td>‘20px’</td><td>字幕字号</td></tr><tr><td>subtitle.bottom</td><td>‘40px’</td><td>字幕距离播放器底部的距离，取值形如: ‘10px’ ‘10%’</td></tr><tr><td>subtitle.color</td><td>‘#fff’</td><td>字幕颜色</td></tr><tr><td>danmaku</td><td>-</td><td>显示弹幕</td></tr><tr><td>danmaku.id</td><td><code>required</code></td><td>弹幕池 id，必须唯一</td></tr><tr><td>danmaku.api</td><td><code>required</code></td><td>见<a href="http://dplayer.js.org/zh/guide.html#弹幕接口" target="_blank" rel="noopener">#弹幕接口</a></td></tr><tr><td>danmaku.token</td><td>-</td><td>弹幕后端验证 token</td></tr><tr><td>danmaku.maximum</td><td>-</td><td>弹幕最大数量</td></tr><tr><td>danmaku.addition</td><td>-</td><td>额外外挂弹幕，见<a href="http://dplayer.js.org/zh/guide.html#bilibili-弹幕" target="_blank" rel="noopener">#bilibili 弹幕</a></td></tr><tr><td>danmaku.user</td><td>‘DIYgod’</td><td>弹幕用户名</td></tr><tr><td>danmaku.bottom</td><td>-</td><td>弹幕距离播放器底部的距离，防止遮挡字幕，取值形如: ‘10px’ ‘10%’</td></tr><tr><td>danmaku.unlimited</td><td>false</td><td>海量弹幕模式，即使重叠也展示全部弹幕，请注意播放器会记忆用户设置，用户手动设置后即失效</td></tr><tr><td>contextmenu</td><td>[]</td><td>自定义右键菜单</td></tr><tr><td>highlight</td><td>[]</td><td>自定义进度条提示点</td></tr><tr><td>mutex</td><td>true</td><td>互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td></tr></tbody></table><h2 id="使用弹幕"><a href="#使用弹幕" class="headerlink" title="使用弹幕"></a>使用弹幕</h2><p>上面的示例中已经写了怎么使用弹幕了，使用弹幕首先需要有一个 ID ，建议使用视频的哈希值作为 ID，这样可以尽可能保证 ID 唯一，防止重复，接下来要配置弹幕接口，官方免费的弹幕接口能用，但是不稳定，如果有特殊需求，推荐个人自己搭建弹幕服务器。</p><p>解析 BiliBiLi 弹幕，这个上面的示例也已经有了，同样，免费的服务不一定稳定，有特殊需求的请自己搭建弹幕服务器。</p><p>增加外部弹幕列表，同解析 BiliBiLi 弹幕一样，只要将外部弹幕的地址写进 <code>addition</code> 就可以了。</p><h3 id="bilibili-弹幕"><a href="#bilibili-弹幕" class="headerlink" title="bilibili 弹幕"></a>bilibili 弹幕</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">danmaku.addition</span><br></pre></td></tr></table></figure><p>API: <a href="https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]" target="_blank" rel="noopener">https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const option = &#123;</span><br><span class="line">    danmaku: &#123;</span><br><span class="line">        // ...</span><br><span class="line">        addition: [<span class="string">'https://api.prprpr.me/dplayer/v3/bilibili?aid=[aid]'</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="使用字幕"><a href="#使用字幕" class="headerlink" title="使用字幕"></a>使用字幕</h2><p>增加参数 <code>&quot;subtitle=字幕文件地址&quot;</code> 就可以了，如需修改字幕颜色或者字体大小，仿照其他参数写就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo教程" scheme="http://linuxwf.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://linuxwf.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Trojan一键安装脚本</title>
    <link href="http://linuxwf.com/2020/04/10/rojan%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
    <id>http://linuxwf.com/2020/04/10/rojan%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</id>
    <published>2020-04-10T06:03:00.000Z</published>
    <updated>2020-04-10T06:06:07.216Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最简单的 Trojan 一键脚本，效率高/速度快/延迟低，系统支持 centos7 /debian9 /ubuntu16 ，完美支持 tls1.3，个人体验速度和延迟都优于 v2ray ws tls1.3，本次的 trojan 一键脚本使用了官方编译的二进制文件，搭建非常快速和简单。脚本中集成了 Trojan 的 Windows 客户端，自动配置证书及启动脚本，安装完成直接下载客户端即可。</p><p><strong>Trojan 面板（Panel）的一键安装脚本已经发布，详情请访问 ：<a href="https://www.v2rayssr.com/trojan-panel-aoto.html" target="_blank" rel="noopener">https://www.v2rayssr.com/trojan-panel-aoto.html</a></strong></p><h2 id="脚本准备及功能"><a href="#脚本准备及功能" class="headerlink" title="脚本准备及功能"></a>脚本准备及功能</h2><ol><li>系统支持 centos7 /debian9 /ubuntu16</li><li>域名解析到 VPS 并生效。</li><li>脚本自动续签 SSL 证书</li><li>自动配置伪装网站，位于/usr/share/nginx/html/目录下，可自行替换其中内容</li><li>请不要在任何<strong>生产环境</strong>使用一键脚本，此条适用于本站所有脚本，专门用来科学上网的 VPS 可以随意使用。</li></ol><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135451.png"  alt=""></p><h2 id="Trojan-和-v2ray-ws-tls-对比"><a href="#Trojan-和-v2ray-ws-tls-对比" class="headerlink" title="Trojan 和 v2ray ws tls 对比"></a>Trojan 和 v2ray ws tls 对比</h2><p>下面有两张图，可以看出 Trojan 和 v2ray ws tls 还有有一些区别的。但是，由于 Trojan 还算是新兴产物，一些客户端的匹配还没有那么完善，所以，选择哪种方式，就萝卜青菜了。</p><p>下面的图片来源 YouTube 洋葱</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135527.png"  alt=""></p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135548.png"  alt=""></p><h2 id="一键脚本代码"><a href="#一键脚本代码" class="headerlink" title="一键脚本代码"></a>一键脚本代码</h2><p>此脚本感谢 atrandys</p><p>Github 项目地址：<a href="https://www.v2rayssr.com/go?url=https://github.com/atrandys/trojan" target="_blank" rel="noopener">点击访问</a></p><p>波仔在 atrandys 的基础之上，合成了 4 IN 1 的一个 BBRPLUS 加速脚本，方便大家使用</p><p>安装好 curl，若是有此环境，请跳过</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y    <span class="comment">##Ubuntu/Debian 系统安装 Curl 方法</span></span><br><span class="line">yum update -y &amp;&amp; yum install curl -y            <span class="comment">##Centos 系统安装 Curl 方法</span></span><br></pre></td></tr></table></figure><p>有些 VPS 需要安装 <code>XZ</code> 压缩工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install xz-utils   <span class="comment">#Debian/Ubuntu 安装 XZ 压缩工具命令</span></span><br><span class="line">yum install xz    <span class="comment">#CentOS 安装 XZ 压缩工具</span></span><br></pre></td></tr></table></figure><p>Trojan 一键脚本代码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://github.com/V2RaySSR/Trojan/raw/master/Trojan.sh)</span><br></pre></td></tr></table></figure><h2 id="下载-Trojan-Windows-Mac-客户端"><a href="#下载-Trojan-Windows-Mac-客户端" class="headerlink" title="下载 Trojan Windows/Mac 客户端"></a>下载 Trojan Windows/Mac 客户端</h2><p>安装完成后，会展示一条下载地址，复制地址，并下载下来即可。</p><p>Trojan Windows 客户端：<a href="https://www.v2rayssr.com/go?url=https://github.com/V2RaySSR/Trojan/raw/master/trojan-client.zip" target="_blank" rel="noopener">点击下载</a></p><h2 id="搭配-Chrome-浏览器插件使用"><a href="#搭配-Chrome-浏览器插件使用" class="headerlink" title="搭配 Chrome 浏览器插件使用"></a>搭配 Chrome 浏览器插件使用</h2><blockquote><p>chrome socks5 插件：<a href="https://www.v2rayssr.com/go?url=https://github.com/V2RaySSR/Trojan/raw/master/SwitchyOmega_Chromium.zip" target="_blank" rel="noopener">SwitchyOmega_Chromium</a> 不要解压 直接拖放这个插件到 chrome 扩展程序页面</p></blockquote><p>安装插件，打开 chrome，打开扩展程序，将下载的插件拖动到扩展程序页面，添加到扩展。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135748.png"  alt=""></p><p>完成添加，会跳转到 switchyomega 页面，点跳过教程，然后点击 proxy，如图填写，最后点击应用选项。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135828.png"  alt=""></p><p>然后进入 auto switch，删除最上方两条规则，然后点击添加规则列表。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135907.png"  alt=""></p><p>然后，在规则列表规则中，情景模式改为 proxy，规则列表网站复制下面的网址，然后点击立即更新情景模式，保存即可。</p><blockquote><p><a href="https://www.v2rayssr.com/go?url=http://$" target="_blank" rel="noopener">http://$</a>{your_domain}/trojan.txt  服务器为你生成的网络地址</p></blockquote><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410135941.png"  alt=""></p><p>点击 chrome 右上角 switchyomega 图标，选择 auto switch 模式即可。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410140029.png"  alt=""></p><p>之后你便可以自由上网，教程到此结束。</p><h2 id="电脑上其他软件如何使用-Trojan"><a href="#电脑上其他软件如何使用-Trojan" class="headerlink" title="电脑上其他软件如何使用 Trojan"></a><strong>电脑上其他软件如何使用 Trojan</strong></h2><blockquote><p>1、如果软件支持配置 socks5，直接指向 <code>127.0.0.1：1080</code> 即可。</p><p>2、如果软件不支持配置 socks5，可选择 <code>sstap/sockscap64/supercap</code>等软件，曲线实现代理。</p></blockquote><h2 id="服务端怎么修改密码"><a href="#服务端怎么修改密码" class="headerlink" title="服务端怎么修改密码"></a>服务端怎么修改密码</h2><p><code>trojan</code> 服务端配置文件路径如下，如需修改内容，修改以下文件即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/src/trojan/server.conf</span><br></pre></td></tr></table></figure><p>修改完成后，重启 trojan 服务端即可，同时客户端的密码也要同步修改哦。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart trojan</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="科学上网" scheme="http://linuxwf.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="vpn" scheme="http://linuxwf.com/tags/vpn/"/>
    
      <category term="trojan" scheme="http://linuxwf.com/tags/trojan/"/>
    
  </entry>
  
  <entry>
    <title>BBR PLUS一键安装实现Shadowsocks暴力加速</title>
    <link href="http://linuxwf.com/2020/04/10/BBR-PLUS%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%AE%9E%E7%8E%B0Shadowsocks%E6%9A%B4%E5%8A%9B%E5%8A%A0%E9%80%9F/"/>
    <id>http://linuxwf.com/2020/04/10/BBR-PLUS%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%AE%9E%E7%8E%B0Shadowsocks%E6%9A%B4%E5%8A%9B%E5%8A%A0%E9%80%9F/</id>
    <published>2020-04-10T05:50:00.000Z</published>
    <updated>2020-04-10T05:51:01.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>魔改版BBR可以使VPS实现加速，但是原版(v1.1.7)偶尔会出现高丢包率下易失速以及bbr收敛慢的问题。最新版BBR PLUS修正版可以更好的实现加速效果。下面就是魔改BBR PLUS修正版一键安装步骤。</p><p>安装环境：</p><ul><li>CentOS 7.5 x64</li><li>网络：联通、电信环境测试；</li></ul><h2 id="安装Shadowsocks"><a href="#安装Shadowsocks" class="headerlink" title="安装Shadowsocks"></a>安装Shadowsocks</h2><p>在部署BBR之前，我们先安装一下Shadowsocks，安装过程请参考之前的文章：<a href="https://www.gz1903.club/2019/11/09/Linux科学上网搭建/" target="_blank" rel="noopener">在CENTOS 7上搭建Shadowsocks图文教程</a>；</p><h2 id="一键安装BBR-PLUS修正版"><a href="#一键安装BBR-PLUS修正版" class="headerlink" title="一键安装BBR PLUS修正版"></a>一键安装BBR PLUS修正版</h2><p>依次执行下面的命令：</p><h3 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a>安装wget</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure><h3 id="执行BBR-PLUS修正版一键脚本"><a href="#执行BBR-PLUS修正版一键脚本" class="headerlink" title="执行BBR PLUS修正版一键脚本"></a>执行BBR PLUS修正版一键脚本</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>如下图所示，先输入<code>2</code>，安装 BBRplus版内核，安装完之后重启系统，再运行脚本，输入<code>7</code>，使用BBRplus版加速，一键安装：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134529.png"  alt=""></p><p>安装之后的效果：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134619.png"  alt=""></p><blockquote><p>Openvz 的机子装不了锐速</p></blockquote><h2 id="确定虚拟化技术"><a href="#确定虚拟化技术" class="headerlink" title="确定虚拟化技术"></a>确定虚拟化技术</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh &amp;&amp; bash vm_check.sh</span><br></pre></td></tr></table></figure><p>代码运行结束就会在最后一行显示虚拟化技术： kvm 还是 openv 或者是 xen 一目了然。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410134743.png"  alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="科学上网" scheme="http://linuxwf.com/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
      <category term="bbr加速" scheme="http://linuxwf.com/tags/bbr%E5%8A%A0%E9%80%9F/"/>
    
      <category term="vpn" scheme="http://linuxwf.com/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>PicGo  一款免费高效的图床管理工具</title>
    <link href="http://linuxwf.com/2020/04/10/PicGo-%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E9%AB%98%E6%95%88%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    <id>http://linuxwf.com/2020/04/10/PicGo-%E4%B8%80%E6%AC%BE%E5%85%8D%E8%B4%B9%E9%AB%98%E6%95%88%E7%9A%84%E5%9B%BE%E5%BA%8A%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</id>
    <published>2020-04-10T05:30:00.000Z</published>
    <updated>2020-04-10T05:33:11.690Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="PicGo介绍"><a href="#PicGo介绍" class="headerlink" title="PicGo介绍"></a>PicGo介绍</h1><h2 id="应用概述"><a href="#应用概述" class="headerlink" title="#应用概述"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#应用概述" target="_blank" rel="noopener">#</a>应用概述</h2><p><strong>PicGo: 一个用于快速上传图片并获取图片URL链接的工具</strong></p><p>PicGo 本体支持如下图床：</p><ul><li><code>微博图床</code> v1.0 <strong>微博图床从 2019 年 4 月开始进行防盗链，不建议继续使用</strong></li><li><code>七牛图床</code> v1.0</li><li><code>腾讯云 COS v4\v5版本</code> v1.1 &amp; v1.5.0</li><li><code>又拍云</code> v1.2.0</li><li><code>GitHub</code> v1.5.0</li><li><code>SM.MS</code> v1.5.1 <strong>由于官方不再支持V1版本，暂时请使用<a href="https://github.com/xlzy520/picgo-plugin-smms-user" target="_blank" rel="noopener">smms-user</a>插件</strong></li><li><code>阿里云 OSS</code> v1.6.0</li><li><code>Imgur</code> v1.6.0</li></ul><p><strong>本体不再增加默认的图床支持。你可以自行开发第三方图床插件。详见 <a href="https://picgo.github.io/PicGo-Core-Doc/" target="_blank" rel="noopener">PicGo-Core</a></strong>。</p><h2 id="特色功能"><a href="#特色功能" class="headerlink" title="#特色功能"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#特色功能" target="_blank" rel="noopener">#</a>特色功能</h2><ul><li>支持拖拽图片上传</li><li>支持快捷键上传剪贴板里第一张图片</li><li>Windows和macOS支持右键图片文件通过菜单上传 (v2.1.0+)</li><li>上传图片后自动复制链接到剪贴板</li><li>支持自定义复制到剪贴板的链接格式</li><li>支持修改快捷键，默认快速上传快捷键：<code>command+shift+p</code>（macOS）| <code>control+shift+p</code>（Windows\Linux)</li><li>支持插件系统，已有插件支持Gitee、青云等第三方图床<ul><li>更多第三方插件以及使用了 PicGo 底层的应用可以在 <a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">Awesome-PicGo</a> 找到。欢迎贡献！</li></ul></li><li>支持通过发送HTTP请求调用 PicGo 上传（v2.2.0+)</li><li>更多功能等你自己去发现，同时也会不断开发新功能<ul><li>开发进度可以查看 <a href="https://github.com/Molunerfinn/PicGo/projects" target="_blank" rel="noopener">Projects</a>，会同步更新开发进度</li><li>欢迎加入<a href="https://gitter.im/picgo-all/PicGo?utm_source=share-link&utm_medium=link&utm_campaign=share-link" target="_blank" rel="noopener">官方Gitter频道</a>与我交流</li></ul></li></ul><p><strong>如果第一次使用，请参考应用<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html" target="_blank" rel="noopener">使用文档</a>。遇到问题了还可以看看 <a href="https://github.com/Molunerfinn/PicGo/blob/dev/FAQ.md" target="_blank" rel="noopener">FAQ</a> 以及被关闭的 <a href="https://github.com/Molunerfinn/PicGo/issues?q=is%3Aissue+is%3Aclosed" target="_blank" rel="noopener">issues</a>。</strong></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="#下载安装"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#下载安装" target="_blank" rel="noopener">#</a>下载安装</h2><p>点击此处下载<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">应用</a>。</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="#Windows"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#windows" target="_blank" rel="noopener">#</a>Windows</h3><p>Windows 用户请下载最新版本的 <code>exe</code> 文件。</p><p><strong>还可以使用 <a href="https://scoop.sh/" target="_blank" rel="noopener">Scoop</a> 来安装 PicGo: <code>scoop bucket add helbing https://github.com/helbing/scoop-bucket</code> &amp; <code>scoop install picgo</code>。 感谢 @helbing 的贡献！</strong></p><p><strong>还可以使用 <a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a> 来安装 PicGo: <code>choco install picgo</code>。 感谢 @iYato 的贡献！</strong></p><h3 id="macOS"><a href="#macOS" class="headerlink" title="#macOS"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#macos" target="_blank" rel="noopener">#</a>macOS</h3><p>macOS 用户请下载最新版本的 <code>dmg</code> 文件。</p><p><strong>还可以使用 <code>brew cask</code> 来安装 PicGo: <code>brew cask install picgo</code>。感谢 @womeimingzi11 的贡献！</strong></p><h3 id="Linux"><a href="#Linux" class="headerlink" title="#Linux"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#linux" target="_blank" rel="noopener">#</a>Linux</h3><p>Linux用户请下载 <code>AppImage</code> 文件。</p><p><strong>如果你是 Arch 类的 Linux 用户，可以直接通过 <code>aurman -S picgo-appimage</code> 来安装 PicGo。感谢 @houbaron 的贡献！</strong></p><h2 id="应用截图"><a href="#应用截图" class="headerlink" title="#应用截图"></a><a href="https://picgo.github.io/PicGo-Doc/zh/guide/#应用截图" target="_blank" rel="noopener">#</a>应用截图</h2><p><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/Molunerfinn/test/master/picgo/picgo-2.0.gif"  alt="img"></p><p><img src="/" class="lazyload" data-src="https://user-images.githubusercontent.com/12621342/34242310-b5056510-e655-11e7-8568-60ffd4f71910.gif"  alt="picgo-menubar"></p><h1 id="七牛图床"><a href="#七牛图床" class="headerlink" title="七牛图床"></a>七牛图床</h1><p>官网地址：<a href="https://link.zhihu.com/?target=https%3A//portal.qiniu.com/signup%3Fcode%3D1h9fi8kw6w0nm">https://portal.qiniu.com</a></p><p>简介：注册认证后有10G永久免费空间，每月10G国内和10G国外流量，速度相当快，七牛云是国内专业CDN服务商，插件支持比较多，有免费ssl证书，但https流量收费</p><p><strong>注意：七牛云30天后会回收测试域名，因此你必须要绑定自己的已备案的域名</strong></p><p>图片上传限制：无</p><h4 id="注册七牛"><a href="#注册七牛" class="headerlink" title="注册七牛"></a>注册七牛</h4><ul><li>打开七牛首页，点击右上角“注册有礼”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410094652881.png"  alt=""></p><ul><li>选择“申请个人认证”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410094841789.png"  alt=""></p><ul><li>填写基本信息（注意：个人网站可以填你的域名，没有就随便填一个；请填写真实姓名，因为后面要实名认证）</li><li>按要求完成实名认证（这里我选择支付宝）</li></ul><h2 id="新建图床Bucket"><a href="#新建图床Bucket" class="headerlink" title="新建图床Bucket"></a>新建图床Bucket</h2><ul><li>新建图床：点击“资源主页”，在对象存储下点“立即添加”</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410095411823.png"  alt=""></p><ul><li>设置存储空间名，存储服务器（选一个离你最近的），访问控制设置为公开</li></ul><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410100009396.png"  alt=""></p><ul><li>添加自己的域名</li></ul><p>默认有个七牛云CDN加速域名，我这里就使用了自己的域名，也可以使用七牛云给的CDN测试域名，不过就是一个月的时间，到期了会回收的，所以这里还是建议使用自己的，以免用了以后图片啥的地址就没了。</p><p>步骤：也是在自己的域名厂商解析个CNAME，根据七牛给的记录来解析即可。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410131513.png"  alt=""></p><ul><li>登陆自己的服务器厂商，添加对应的CNAME解析记录</li></ul><h1 id="使用PicGo添加图片"><a href="#使用PicGo添加图片" class="headerlink" title="使用PicGo添加图片"></a>使用PicGo添加图片</h1><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/20200410131649.png"  alt=""></p><p>其中<code>accesskey</code>和<code>secretkey</code>可以从“个人中心”-“密钥管理”里面找到</p><p>在配置文件里，存储区域对应的键是<code>area</code>，值是下图所示（如果你是用PicGo-Core或者其他非electron版本的PicGo请注意此项），比如华东的话就是<code>z0</code>。</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410103456888.png"  alt=""></p><p>在配置文件里，存储空间需要</p><p>设定上传地址是指七牛云 自动分配给你的网址，或者 是你自己绑定的域名（<strong>注意要加<code>http://</code>或者<code>https://</code></strong>）：</p><p>网址后缀通常是你用到了七牛的图片处理工具的时候会用到的一些处理参数，比如图片瘦身。</p><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><p>图片上传前可以先使用在线压缩工具 <a href="https://tinypng.com/" target="_blank" rel="noopener">https://tinypng.com/</a> 进行压缩大小</p><p>这里我选择<code>markdown</code>模式</p><p>拖拽上传图片：点开上传区，拖进来就可以上传了（可以批量上传），上传完后自动生成markdown格式的网址到剪切板，可以直接粘贴到博文：</p><p><img src="/" class="lazyload" data-src="http://cdn.linuxwf.com/img/image-20200410105706598.png"  alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo教程" scheme="http://linuxwf.com/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="picgo" scheme="http://linuxwf.com/tags/picgo/"/>
    
      <category term="七牛云图床" scheme="http://linuxwf.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
</feed>
